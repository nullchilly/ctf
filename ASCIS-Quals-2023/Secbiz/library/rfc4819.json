{"draft":"draft-ietf-secsh-publickey-subsystem-08","doc_id":"RFC4819","title":"Secure Shell Public Key Subsystem","authors":["J. Galbraith","J. Van Dyke","J. Bright"],"format":["ASCII","HTML"],"page_count":"17","pub_status":"PROPOSED STANDARD","status":"PROPOSED STANDARD","source":"Secure Shell","abstract":"Secure Shell defines a user authentication mechanism that is based on\r\npublic keys, but does not define any mechanism for key distribution.\r\nNo common key management solution exists in current implementations.\r\nThis document describes a protocol that can be used to configure\r\npublic keys in an implementation-independent fashion, allowing client\r\nsoftware to take on the burden of this configuration.\r\n\r\nThe Public Key Subsystem provides a server-independent mechanism for\r\nclients to add public keys, remove public keys, and list the current\r\npublic keys known by the server.  Rights to manage public keys are\r\nspecific and limited to the authenticated user.\r\n\r\nA public key may also be associated with various restrictions,\r\nincluding a mandatory command or subsystem.  [STANDARDS-TRACK]","pub_date":"March 2007","keywords":["[--------|p]","ssh","ssh2"],"obsoletes":[],"obsoleted_by":[],"updates":[],"updated_by":[],"see_also":[],"doi":"10.17487\/RFC4819","errata_url":null}