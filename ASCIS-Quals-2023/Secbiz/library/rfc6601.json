{"draft":"draft-ash-gcac-algorithm-spec-04","doc_id":"RFC6601","title":"Generic Connection Admission Control (GCAC) Algorithm Specification for IP\/MPLS Networks","authors":["G. Ash, Ed.","D. McDysan"],"format":["ASCII","HTML"],"page_count":"34","pub_status":"EXPERIMENTAL","status":"EXPERIMENTAL","source":"IETF - NON WORKING GROUP","abstract":"This document presents a generic connection admission control (GCAC)\r\nreference model and algorithm for IP-\/MPLS-based networks.  Service\r\nprovider (SP) IP\/MPLS networks need an MPLS GCAC mechanism, as\r\none motivational example, to reject Voice over IP\r\n(VoIP) calls when additional calls would adversely affect calls\r\nalready in progress.  Without MPLS GCAC, connections on congested\r\nlinks will suffer degraded quality.  The MPLS GCAC algorithm can be\r\noptionally implemented in vendor equipment and deployed by service\r\nproviders.  MPLS GCAC interoperates between vendor equipment and\r\nacross multiple service provider domains.  The MPLS GCAC algorithm\r\nuses available standard mechanisms for MPLS-based networks, such as\r\nRSVP, Diffserv-aware MPLS Traffic Engineering (DS-TE), Path Computation\r\nElement (PCE), Next Steps in Signaling (NSIS), Diffserv, and OSPF.\r\nThe MPLS GCAC algorithm does not include aspects of CAC that might be\r\nconsidered vendor proprietary implementations, such as detailed path selection\r\nmechanisms.  MPLS GCAC functions are implemented in a distributed\r\nmanner to deliver the objective Quality of Service (QoS) for specified\r\nQoS constraints.  The objective is that the source is\r\nable to compute a source route with high likelihood that via-elements\r\nalong the selected path will in fact admit the request.\r\nIn some cases (e.g., multiple Autonomous Systems (ASes)), this objective\r\ncannot always be met, but this document summarizes methods that partially meet\r\nthis objective.  MPLS GCAC is applicable to any service or flow that must meet\r\nan objective QoS (delay, jitter, packet loss rate) for a specified quantity of\r\ntraffic.  This document defines an Experimental Protocol for the Internet\r\ncommunity.","pub_date":"April 2012","keywords":[],"obsoletes":[],"obsoleted_by":[],"updates":[],"updated_by":[],"see_also":[],"doi":"10.17487\/RFC6601","errata_url":null}