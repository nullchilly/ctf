<?xml version='1.0' encoding='utf-8'?>
<rfc xmlns:xi="http://www.w3.org/2001/XInclude" version="3" category="std" consensus="true" docName="draft-ietf-isis-yang-isis-cfg-42" indexInclude="true" ipr="trust200902" number="9130" prepTime="2022-10-19T16:18:06" scripts="Common,Latin" sortRefs="true" submissionType="IETF" symRefs="true" tocDepth="3" tocInclude="true" xml:lang="en">
  <link href="https://datatracker.ietf.org/doc/draft-ietf-isis-yang-isis-cfg-42" rel="prev"/>
  <link href="https://dx.doi.org/10.17487/rfc9130" rel="alternate"/>
  <link href="urn:issn:2070-1721" rel="alternate"/>
  <front>
    <title abbrev="IS-IS YANG Data Model">YANG Data Model for the IS-IS Protocol</title>
    <seriesInfo name="RFC" value="9130" stream="IETF"/>
    <author fullname="Stephane Litkowski" initials="S" surname="Litkowski" role="editor">
      <organization showOnFrontPage="true">Cisco Systems</organization>
      <address>
        <email>slitkows.ietf@gmail.com</email>
      </address>
    </author>
    <author fullname="Derek Yeung" initials="D" surname="Yeung">
      <organization showOnFrontPage="true">Arrcus, Inc.</organization>
      <address>
        <postal>
          <street>2077 Gateway Place, Suite 400</street>
          <city>San Jose</city>
          <region>CA</region>
          <code>95110</code>
          <country>United States of America</country>
        </postal>
        <email>derek@arrcus.com</email>
      </address>
    </author>
    <author fullname="Acee Lindem" initials="A." surname="Lindem">
      <organization showOnFrontPage="true">Cisco Systems</organization>
      <address>
        <postal>
          <street>301 Midenhall Way</street>
          <city>Cary</city>
          <region>NC</region>
          <code>27513</code>
          <country>United States of America</country>
        </postal>
        <email>acee@cisco.com</email>
      </address>
    </author>
    <author fullname="Jeffrey Zhang" initials="J" surname="Zhang">
      <organization showOnFrontPage="true">Juniper Networks</organization>
      <address>
        <postal>
          <street>10 Technology Park Drive</street>
          <city>Westford</city>
          <region>MA</region>
          <code>01886</code>
          <country>United States of America</country>
        </postal>
        <email>zzhang@juniper.net</email>
      </address>
    </author>
    <author fullname="Ladislav Lhotka" initials="L" surname="Lhotka">
      <organization showOnFrontPage="true">CZ.NIC</organization>
      <address>
        <email>ladislav.lhotka@nic.cz</email>
      </address>
    </author>
    <date month="10" year="2022"/>
    <area>rtg</area>
    <workgroup>lsr</workgroup>
    <abstract pn="section-abstract">
      <t indent="0" pn="section-abstract-1">This document defines a YANG data model that can be used to
      configure and manage the IS-IS protocol on network elements.
      </t>
    </abstract>
    <boilerplate>
      <section anchor="status-of-memo" numbered="false" removeInRFC="false" toc="exclude" pn="section-boilerplate.1">
        <name slugifiedName="name-status-of-this-memo">Status of This Memo</name>
        <t indent="0" pn="section-boilerplate.1-1">
            This is an Internet Standards Track document.
        </t>
        <t indent="0" pn="section-boilerplate.1-2">
            This document is a product of the Internet Engineering Task Force
            (IETF).  It represents the consensus of the IETF community.  It has
            received public review and has been approved for publication by
            the Internet Engineering Steering Group (IESG).  Further
            information on Internet Standards is available in Section 2 of 
            RFC 7841.
        </t>
        <t indent="0" pn="section-boilerplate.1-3">
            Information about the current status of this document, any
            errata, and how to provide feedback on it may be obtained at
            <eref target="https://www.rfc-editor.org/info/rfc9130" brackets="none"/>.
        </t>
      </section>
      <section anchor="copyright" numbered="false" removeInRFC="false" toc="exclude" pn="section-boilerplate.2">
        <name slugifiedName="name-copyright-notice">Copyright Notice</name>
        <t indent="0" pn="section-boilerplate.2-1">
            Copyright (c) 2022 IETF Trust and the persons identified as the
            document authors. All rights reserved.
        </t>
        <t indent="0" pn="section-boilerplate.2-2">
            This document is subject to BCP 78 and the IETF Trust's Legal
            Provisions Relating to IETF Documents
            (<eref target="https://trustee.ietf.org/license-info" brackets="none"/>) in effect on the date of
            publication of this document. Please review these documents
            carefully, as they describe your rights and restrictions with
            respect to this document. Code Components extracted from this
            document must include Revised BSD License text as described in
            Section 4.e of the Trust Legal Provisions and are provided without
            warranty as described in the Revised BSD License.
        </t>
      </section>
    </boilerplate>
    <toc>
      <section anchor="toc" numbered="false" removeInRFC="false" toc="exclude" pn="section-toc.1">
        <name slugifiedName="name-table-of-contents">Table of Contents</name>
        <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1">
          <li pn="section-toc.1-1.1">
            <t indent="0" keepWithNext="true" pn="section-toc.1-1.1.1"><xref derivedContent="1" format="counter" sectionFormat="of" target="section-1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-introduction">Introduction</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.1.2">
              <li pn="section-toc.1-1.1.2.1">
                <t indent="0" keepWithNext="true" pn="section-toc.1-1.1.2.1.1"><xref derivedContent="1.1" format="counter" sectionFormat="of" target="section-1.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-requirements-language">Requirements Language</xref></t>
              </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.2">
            <t indent="0" pn="section-toc.1-1.2.1"><xref derivedContent="2" format="counter" sectionFormat="of" target="section-2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-design-of-the-data-model">Design of the Data Model</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.2.2">
              <li pn="section-toc.1-1.2.2.1">
                <t indent="0" keepWithNext="true" pn="section-toc.1-1.2.2.1.1"><xref derivedContent="2.1" format="counter" sectionFormat="of" target="section-2.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-is-is-configuration">IS-IS Configuration</xref></t>
              </li>
              <li pn="section-toc.1-1.2.2.2">
                <t indent="0" pn="section-toc.1-1.2.2.2.1"><xref derivedContent="2.2" format="counter" sectionFormat="of" target="section-2.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-multi-topology-parameters">Multi-Topology Parameters</xref></t>
              </li>
              <li pn="section-toc.1-1.2.2.3">
                <t indent="0" pn="section-toc.1-1.2.2.3.1"><xref derivedContent="2.3" format="counter" sectionFormat="of" target="section-2.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-per-level-parameters">Per-Level Parameters</xref></t>
              </li>
              <li pn="section-toc.1-1.2.2.4">
                <t indent="0" pn="section-toc.1-1.2.2.4.1"><xref derivedContent="2.4" format="counter" sectionFormat="of" target="section-2.4"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-per-interface-parameters">Per-Interface Parameters</xref></t>
              </li>
              <li pn="section-toc.1-1.2.2.5">
                <t indent="0" pn="section-toc.1-1.2.2.5.1"><xref derivedContent="2.5" format="counter" sectionFormat="of" target="section-2.5"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-authentication-parameters">Authentication Parameters</xref></t>
              </li>
              <li pn="section-toc.1-1.2.2.6">
                <t indent="0" pn="section-toc.1-1.2.2.6.1"><xref derivedContent="2.6" format="counter" sectionFormat="of" target="section-2.6"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-igp-ldp-synchronization">IGP/LDP Synchronization</xref></t>
              </li>
              <li pn="section-toc.1-1.2.2.7">
                <t indent="0" pn="section-toc.1-1.2.2.7.1"><xref derivedContent="2.7" format="counter" sectionFormat="of" target="section-2.7"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-iso-parameters">ISO Parameters</xref></t>
              </li>
              <li pn="section-toc.1-1.2.2.8">
                <t indent="0" pn="section-toc.1-1.2.2.8.1"><xref derivedContent="2.8" format="counter" sectionFormat="of" target="section-2.8"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-ip-frr">IP FRR</xref></t>
              </li>
              <li pn="section-toc.1-1.2.2.9">
                <t indent="0" pn="section-toc.1-1.2.2.9.1"><xref derivedContent="2.9" format="counter" sectionFormat="of" target="section-2.9"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-operational-states">Operational States</xref></t>
              </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.3">
            <t indent="0" pn="section-toc.1-1.3.1"><xref derivedContent="3" format="counter" sectionFormat="of" target="section-3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-rpc-operations">RPC Operations</xref></t>
          </li>
          <li pn="section-toc.1-1.4">
            <t indent="0" pn="section-toc.1-1.4.1"><xref derivedContent="4" format="counter" sectionFormat="of" target="section-4"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-notifications">Notifications</xref></t>
          </li>
          <li pn="section-toc.1-1.5">
            <t indent="0" pn="section-toc.1-1.5.1"><xref derivedContent="5" format="counter" sectionFormat="of" target="section-5"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-interactions-with-other-yan">Interactions with Other YANG Modules</xref></t>
          </li>
          <li pn="section-toc.1-1.6">
            <t indent="0" pn="section-toc.1-1.6.1"><xref derivedContent="6" format="counter" sectionFormat="of" target="section-6"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-is-is-yang-module">IS-IS YANG Module</xref></t>
          </li>
          <li pn="section-toc.1-1.7">
            <t indent="0" pn="section-toc.1-1.7.1"><xref derivedContent="7" format="counter" sectionFormat="of" target="section-7"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-security-considerations">Security Considerations</xref></t>
          </li>
          <li pn="section-toc.1-1.8">
            <t indent="0" pn="section-toc.1-1.8.1"><xref derivedContent="8" format="counter" sectionFormat="of" target="section-8"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-iana-considerations">IANA Considerations</xref></t>
          </li>
          <li pn="section-toc.1-1.9">
            <t indent="0" pn="section-toc.1-1.9.1"><xref derivedContent="9" format="counter" sectionFormat="of" target="section-9"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-references">References</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.9.2">
              <li pn="section-toc.1-1.9.2.1">
                <t indent="0" pn="section-toc.1-1.9.2.1.1"><xref derivedContent="9.1" format="counter" sectionFormat="of" target="section-9.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-normative-references">Normative References</xref></t>
              </li>
              <li pn="section-toc.1-1.9.2.2">
                <t indent="0" pn="section-toc.1-1.9.2.2.1"><xref derivedContent="9.2" format="counter" sectionFormat="of" target="section-9.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-informative-references">Informative References</xref></t>
              </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.10">
            <t indent="0" pn="section-toc.1-1.10.1"><xref derivedContent="Appendix A" format="default" sectionFormat="of" target="section-appendix.a"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-example-of-is-is-configurat">Example of IS-IS Configuration in XML</xref></t>
          </li>
          <li pn="section-toc.1-1.11">
            <t indent="0" pn="section-toc.1-1.11.1"><xref derivedContent="" format="none" sectionFormat="of" target="section-appendix.b"/><xref derivedContent="" format="title" sectionFormat="of" target="name-acknowledgments">Acknowledgments</xref></t>
          </li>
          <li pn="section-toc.1-1.12">
            <t indent="0" pn="section-toc.1-1.12.1"><xref derivedContent="" format="none" sectionFormat="of" target="section-appendix.c"/><xref derivedContent="" format="title" sectionFormat="of" target="name-contributors">Contributors</xref></t>
          </li>
          <li pn="section-toc.1-1.13">
            <t indent="0" pn="section-toc.1-1.13.1"><xref derivedContent="" format="none" sectionFormat="of" target="section-appendix.d"/><xref derivedContent="" format="title" sectionFormat="of" target="name-authors-addresses">Authors' Addresses</xref></t>
          </li>
        </ul>
      </section>
    </toc>
  </front>
  <middle>
    <section anchor="introduction" toc="include" numbered="true" removeInRFC="false" pn="section-1">
      <name slugifiedName="name-introduction">Introduction</name>
      <t indent="0" pn="section-1-1">
      This document defines a YANG data model <xref target="RFC7950" format="default" sectionFormat="of" derivedContent="RFC7950"/> for the IS-IS routing
      protocol.</t>
      <t indent="0" pn="section-1-2">The data model covers the configuration of an IS-IS routing
      protocol instance, as well as the retrieval of IS-IS operational states.</t>
      <t indent="0" pn="section-1-3">A simplified tree representation of the data model is
        presented in <xref target="design" format="default" sectionFormat="of" derivedContent="Section 2"/>.
        Tree diagrams used in this document follow the notation defined in <xref target="RFC8340" format="default" sectionFormat="of" derivedContent="RFC8340"/>.</t>
      <t indent="0" pn="section-1-4">The module defined in this document is designed as per the Network Management Datastore
      Architecture (NMDA) <xref target="RFC8342" format="default" sectionFormat="of" derivedContent="RFC8342"/>.</t>
      <section numbered="true" removeInRFC="false" toc="include" pn="section-1.1">
        <name slugifiedName="name-requirements-language">Requirements Language</name>
        <t indent="0" pn="section-1.1-1">
    The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>",
    "<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>", "<bcp14>SHALL NOT</bcp14>", "<bcp14>SHOULD</bcp14>", "<bcp14>SHOULD NOT</bcp14>",
    "<bcp14>RECOMMENDED</bcp14>", "<bcp14>NOT RECOMMENDED</bcp14>", 
    "<bcp14>MAY</bcp14>", and "<bcp14>OPTIONAL</bcp14>" in this document are
    to be interpreted as 
    described in BCP 14 <xref target="RFC2119" format="default" sectionFormat="of" derivedContent="RFC2119"/> <xref target="RFC8174" format="default" sectionFormat="of" derivedContent="RFC8174"/> 
    when, and only when, they appear in all capitals, as shown here.
        </t>
      </section>
    </section>
    <section anchor="design" toc="include" numbered="true" removeInRFC="false" pn="section-2">
      <name slugifiedName="name-design-of-the-data-model">Design of the Data Model</name>
      <t indent="0" pn="section-2-1">The IS-IS YANG module augments the
      "control-plane-protocol" list in the "ietf-routing" module <xref target="RFC8349" format="default" sectionFormat="of" derivedContent="RFC8349"/> with specific
      IS-IS parameters.</t>
      <t indent="0" pn="section-2-2">The diagram below shows the overall structure of the "ietf-isis"
      YANG module defined in this document.  NOTE: '\' line wrapping is per
      <xref target="RFC8792" format="default" sectionFormat="of" derivedContent="RFC8792"/>.</t>
      <sourcecode type="yangtree" markers="false" pn="section-2-3">
module: ietf-isis
  augment /rt:routing/rt:ribs/rt:rib/rt:routes/rt:route:
    +--ro metric?       uint32
    +--ro tag*          uint64
    +--ro route-type?   enumeration
  augment /if:interfaces/if:interface:
    +--rw clns-mtu?   uint16 {osi-interface}?
  augment /rt:routing/rt:control-plane-protocols/rt:
              control-plane-protocol:
    +--rw isis
       +--rw enabled?                  boolean {admin-control}?
       +--rw level-type?               level
       +--rw system-id?                system-id
       +--rw maximum-area-addresses? \
          uint8 {maximum-area-addresses}?
       +--rw area-address*             area-address
       +--rw lsp-mtu?                  uint16
       +--rw lsp-lifetime?             uint16
       +--rw lsp-refresh?              rt-types:timer-value-seconds16
       |                                   {lsp-refresh}?
       +--rw poi-tlv?                  boolean {poi-tlv}?
       +--rw graceful-restart {graceful-restart}?
       |  +--rw enabled?            boolean
       |  +--rw restart-interval?   rt-types:timer-value-seconds16
       |  +--rw helper-enabled?     boolean
       +--rw nsr {nsr}?
       |  +--rw enabled?  boolean
       +--rw node-tags {node-tag}?
       |  +--rw node-tag* [tag]
       |        ...
       +--rw metric-type
       |  +--rw value?     enumeration
       |  +--rw level-1
       |  |     ...
       |  +--rw level-2
       |        ...
       +--rw default-metric
       |  +--rw value?     wide-metric
       |  +--rw level-1
       |  |     ...
       |  +--rw level-2
       |        ...
       +--rw auto-cost {auto-cost}?
       |  +--rw enabled?               boolean
       |  +--rw reference-bandwidth?   uint32
       +--rw authentication
       |  +--rw (authentication-type)?
       |  |     ...
       |  +--rw level-1
       |  |     ...
       |  +--rw level-2
       |        ...
       +--rw address-families {nlpid-control}?
       |  +--rw address-family-list* [address-family]
       |        ...
       +--rw mpls
       |  +--rw te-rid {te-rid}?
       |  |     ...
       |  +--rw ldp
       |        ...
       +--rw spf-control
       |  +--rw paths?            uint16 {max-ecmp}?
       |  +--rw ietf-spf-delay {ietf-spf-delay}?
       |        ...
       +--rw fast-reroute {fast-reroute}?
       |  +--rw lfa {lfa}?
       +--rw preference
       |  +--rw (granularity)?
       |        ...
       +--rw overload
       |  +--rw status?   boolean
       +--rw overload-max-metric {overload-max-metric}?
       |  +--rw timeout?   rt-types:timer-value-seconds16
       +--ro spf-log
       |  +--ro event* [id]
       |        ...
       +--ro lsp-log
       |  +--ro event* [id]
       |        ...
       +--ro hostnames
       |  +--ro hostname* [system-id]
       |        ...
       +--ro database
       |  +--ro levels* [level]
       |        ...
       +--ro local-rib
       |  +--ro route* [prefix]
       |        ...
       +--ro system-counters
       |  +--ro level* [level]
       |        ...
       +--ro protected-routes
       |  +--ro address-family-stats* \
       |     [address-family prefix alternate]
       |        ...
       +--ro unprotected-routes
       |  +--ro prefixes* [address-family prefix]
       |        ...
       +--ro protection-statistics* [frr-protection-method]
       |  +--ro frr-protection-method    identityref
       |  +--ro address-family-stats* [address-family]
       |        ...
       +--rw discontinuity-time?       yang:date-and-time
       +--rw topologies {multi-topology}?
       |  +--rw topology* [name]
       |        ...
       +--rw interfaces
          +--rw interface* [name]
                ...

  rpcs:
    +---x clear-adjacency
    |  +---w input
    |     +---w routing-protocol-instance-name -&gt; /rt:routing/
    |     |                                    control-plane-\
    |     |                                       protocols/
    |     |                                    control-plane-\
    |     |                                       protocol/name
    |     +---w level?                            level
    |     +---w interface?                        if:interface-ref
    +---x clear-database
       +---w input
          +---w routing-protocol-instance-name -&gt; /rt:routing/
          |                                    control-plane-\
          |                                       protocols/
          |                                    control-plane-\
          |                                       protocol/name
          +---w level?                            level

  notifications:
    +---n database-overload
    |  +--ro routing-protocol-name?   -&gt; /rt:routing/
    |  |                                 control-plane-protocols/
    |  |                                 control-plane-protocol/name
    |  +--ro isis-level?              level
    |  +--ro overload?                enumeration
    +---n lsp-too-large
    |  +--ro routing-protocol-name?   -&gt; /rt:routing/
    |  |                                 control-plane-protocols/
    |  |                                 control-plane-protocol/name
    |  +--ro isis-level?              level
    |  +--ro interface-name?          if:interface-ref
    |  +--ro interface-level?         level
    |  +--ro extended-circuit-id?     extended-circuit-id
    |  +--ro pdu-size?                uint32
    |  +--ro lsp-id?                  lsp-id
    +---n if-state-change
    |  +--ro routing-protocol-name?   -&gt; /rt:routing/
    |  |                                 control-plane-protocols/
    |  |                                 control-plane-protocol/name
    |  +--ro isis-level?              level
    |  +--ro interface-name?          if:interface-ref
    |  +--ro interface-level?         level
    |  +--ro extended-circuit-id?     extended-circuit-id
    |  +--ro state?                   if-state-type
    +---n corrupted-lsp-detected
    |  +--ro routing-protocol-name?   -&gt; /rt:routing/
    |  |                                 control-plane-protocols/
    |  |                                 control-plane-protocol/name
    |  +--ro isis-level?              level
    |  +--ro lsp-id?                  lsp-id
    +---n attempt-to-exceed-max-sequence
    |  +--ro routing-protocol-name?   -&gt; /rt:routing/
    |  |                                 control-plane-protocols/
    |  |                                 control-plane-protocol/name
    |  +--ro isis-level?              level
    |  +--ro lsp-id?                  lsp-id
    +---n id-len-mismatch
    |  +--ro routing-protocol-name?   -&gt; /rt:routing/
    |  |                                 control-plane-protocols/
    |  |                                 control-plane-protocol/name
    |  +--ro isis-level?              level
    |  +--ro interface-name?          if:interface-ref
    |  +--ro interface-level?         level
    |  +--ro extended-circuit-id?     extended-circuit-id
    |  +--ro pdu-field-len?           uint8
    |  +--ro raw-pdu?                 binary
    +---n max-area-addresses-mismatch
    |  +--ro routing-protocol-name?   -&gt; /rt:routing/
    |  |                                 control-plane-protocols/
    |  |                                 control-plane-protocol/name
    |  +--ro isis-level?              level
    |  +--ro interface-name?          if:interface-ref
    |  +--ro interface-level?         level
    |  +--ro extended-circuit-id?     extended-circuit-id
    |  +--ro max-area-addresses?      uint8
    |  +--ro raw-pdu?                 binary
    +---n own-lsp-purge
    |  +--ro routing-protocol-name?   -&gt; /rt:routing/
    |  |                                 control-plane-protocols/
    |  |                                 control-plane-protocol/name
    |  +--ro isis-level?              level
    |  +--ro interface-name?          if:interface-ref
    |  +--ro interface-level?         level
    |  +--ro extended-circuit-id?     extended-circuit-id
    |  +--ro lsp-id?                  lsp-id
    +---n sequence-number-skipped
    |  +--ro routing-protocol-name?   -&gt; /rt:routing/
    |  |                                 control-plane-protocols/
    |  |                                 control-plane-protocol/name
    |  +--ro isis-level?              level
    |  +--ro interface-name?          if:interface-ref
    |  +--ro interface-level?         level
    |  +--ro extended-circuit-id?     extended-circuit-id
    |  +--ro lsp-id?                  lsp-id
    +---n authentication-type-failure
    |  +--ro routing-protocol-name?   -&gt; /rt:routing/
    |  |                                 control-plane-protocols/
    |  |                                 control-plane-protocol/name
    |  +--ro isis-level?              level
    |  +--ro interface-name?          if:interface-ref
    |  +--ro interface-level?         level
    |  +--ro extended-circuit-id?     extended-circuit-id
    |  +--ro raw-pdu?                 binary
    +---n authentication-failure
    |  +--ro routing-protocol-name?   -&gt; /rt:routing/
    |  |                                 control-plane-protocols/
    |  |                                 control-plane-protocol/name
    |  +--ro isis-level?              level
    |  +--ro interface-name?          if:interface-ref
    |  +--ro interface-level?         level
    |  +--ro extended-circuit-id?     extended-circuit-id
    |  +--ro raw-pdu?                 binary
    +---n version-skew
    |  +--ro routing-protocol-name?   -&gt; /rt:routing/
    |  |                                 control-plane-protocols/
    |  |                                 control-plane-protocol/name
    |  +--ro isis-level?              level
    |  +--ro interface-name?          if:interface-ref
    |  +--ro interface-level?         level
    |  +--ro extended-circuit-id?     extended-circuit-id
    |  +--ro protocol-version?        uint8
    |  +--ro raw-pdu?                 binary
    +---n area-mismatch
    |  +--ro routing-protocol-name?   -&gt; /rt:routing/
    |  |                                 control-plane-protocols/
    |  |                                 control-plane-protocol/name
    |  +--ro isis-level?              level
    |  +--ro interface-name?          if:interface-ref
    |  +--ro interface-level?         level
    |  +--ro extended-circuit-id?     extended-circuit-id
    |  +--ro raw-pdu?                 binary
    +---n rejected-adjacency
    |  +--ro routing-protocol-name?   -&gt; /rt:routing/
    |  |                                 control-plane-protocols/
    |  |                                 control-plane-protocol/name
    |  +--ro isis-level?              level
    |  +--ro interface-name?          if:interface-ref
    |  +--ro interface-level?         level
    |  +--ro extended-circuit-id?     extended-circuit-id
    |  +--ro raw-pdu?                 binary
    |  +--ro reason?                  string
    +---n protocols-supported-mismatch
    |  +--ro routing-protocol-name?   -&gt; /rt:routing/
    |  |                                 control-plane-protocols/
    |  |                                 control-plane-protocol/name
    |  +--ro isis-level?              level
    |  +--ro interface-name?          if:interface-ref
    |  +--ro interface-level?         level
    |  +--ro extended-circuit-id?     extended-circuit-id
    |  +--ro raw-pdu?                 binary
    |  +--ro protocols*               uint8
    +---n lsp-error-detected
    |  +--ro routing-protocol-name?   -&gt; /rt:routing/
    |  |                                 control-plane-protocols/
    |  |                                 control-plane-protocol/name
    |  +--ro isis-level?              level
    |  +--ro interface-name?          if:interface-ref
    |  +--ro interface-level?         level
    |  +--ro extended-circuit-id?     extended-circuit-id
    |  +--ro lsp-id?                  lsp-id
    |  +--ro raw-pdu?                 binary
    |  +--ro error-offset?            uint32
    |  +--ro tlv-type?                uint8
    +---n adjacency-state-change
    |  +--ro routing-protocol-name?   -&gt; /rt:routing/
    |  |                                 control-plane-protocols/
    |  |                                 control-plane-protocol/name
    |  +--ro isis-level?              level
    |  +--ro interface-name?          if:interface-ref
    |  +--ro interface-level?         level
    |  +--ro extended-circuit-id?     extended-circuit-id
    |  +--ro neighbor?                string
    |  +--ro neighbor-system-id?      system-id
    |  +--ro state?                   adj-state-type
    |  +--ro reason?                  string
    +---n lsp-received
    |  +--ro routing-protocol-name?   -&gt; /rt:routing/
    |  |                                 control-plane-protocols/
    |  |                                 control-plane-protocol/name
    |  +--ro isis-level?              level
    |  +--ro interface-name?          if:interface-ref
    |  +--ro interface-level?         level
    |  +--ro extended-circuit-id?     extended-circuit-id
    |  +--ro lsp-id?                  lsp-id
    |  +--ro sequence?                uint32
    |  +--ro received-timestamp?      yang:timestamp
    |  +--ro neighbor-system-id?      system-id
    +---n lsp-generation
       +--ro routing-protocol-name?   -&gt; /rt:routing/
       |                                 control-plane-protocols/
       |                                 control-plane-protocol/name
       +--ro isis-level?              level
       +--ro lsp-id?                  lsp-id
       +--ro sequence?                uint32
       +--ro send-timestamp?          yang:timestamp
</sourcecode>
      <section anchor="yang-isis-global" toc="include" numbered="true" removeInRFC="false" pn="section-2.1">
        <name slugifiedName="name-is-is-configuration">IS-IS Configuration</name>
        <t indent="0" pn="section-2.1-1">The IS-IS configuration is divided into two areas:</t>
        <ul spacing="normal" bare="false" empty="false" indent="3" pn="section-2.1-2">
          <li pn="section-2.1-2.1">Global parameters</li>
          <li pn="section-2.1-2.2">Per-interface configuration (see <xref target="yang-interface" format="default" sectionFormat="of" derivedContent="Section 2.4"/>)</li>
        </ul>
        <t indent="0" pn="section-2.1-3">Additional modules may be created to support additional
        parameters. These additional modules <bcp14>MUST</bcp14> augment the
        "ietf-isis" module.</t>
        <t indent="0" pn="section-2.1-4">The model includes optional features for which the corresponding
        configuration data nodes are also optional. As an example, the ability
        to control the administrative state of a particular IS-IS instance is
        optional. By advertising the feature "admin-control", a device
        communicates to the client that it supports the ability to shut down a
        particular IS-IS instance.</t>
        <t indent="0" pn="section-2.1-5">The global configuration contains the usual IS-IS parameters, e.g.,
        "lsp-mtu", "lsp-lifetime", "lsp-refresh", "default-metric".</t>
      </section>
      <section anchor="yang-multitopology" toc="include" numbered="true" removeInRFC="false" pn="section-2.2">
        <name slugifiedName="name-multi-topology-parameters">Multi-Topology Parameters</name>
        <t indent="0" pn="section-2.2-1">The model supports Multi-Topology (MT) IS-IS as defined in <xref target="RFC5120" format="default" sectionFormat="of" derivedContent="RFC5120"/>.</t>
        <t indent="0" pn="section-2.2-2">The "topologies" container is used to enable support of the MT
        extensions.</t>
        <t indent="0" pn="section-2.2-3">The "name" used in the topology list should refer to an existing
        Routing Information Base (RIB) defined for the device <xref target="RFC8349" format="default" sectionFormat="of" derivedContent="RFC8349"/>.</t>
        <t indent="0" pn="section-2.2-4">Some specific parameters can be defined on a per-topology basis,
        at both the global level and the interface level: for example, an
        interface metric can be defined per topology.</t>
        <t indent="0" pn="section-2.2-5">Multiple address families (such as IPv4 or IPv6) can also be
        enabled within the default topology. This can be achieved using the
        "address-families" container (requiring the "nlpid-control" feature to
        be supported).</t>
      </section>
      <section anchor="yang-level" toc="include" numbered="true" removeInRFC="false" pn="section-2.3">
        <name slugifiedName="name-per-level-parameters">Per-Level Parameters</name>
        <t indent="0" pn="section-2.3-1">Some parameters allow per-level configuration. For such
        parameters, the parameter is modeled as a container with three
        configuration locations: 
        </t>
        <dl newline="true" spacing="normal" indent="3" pn="section-2.3-2">
          <dt pn="section-2.3-2.1">A top-level container:</dt>
          <dd pn="section-2.3-2.2">Corresponds to "level-all", so the
          configuration applies to both levels.</dd>
          <dt pn="section-2.3-2.3">A level-1 container:</dt>
          <dd pn="section-2.3-2.4">Corresponds to parameters specific to level 1.</dd>
          <dt pn="section-2.3-2.5">A level-2 container:</dt>
          <dd pn="section-2.3-2.6">Corresponds to parameters specific to level 2.</dd>
        </dl>
        <sourcecode type="yangtree" markers="false" pn="section-2.3-3">
            +--rw priority
            |  +--rw value?     uint8
            |  +--rw level-1
            |  |  +--rw value?   uint8
            |  +--rw level-2
            |     +--rw value?   uint8
</sourcecode>
        <t indent="0" pn="section-2.3-4">Example:</t>
        <sourcecode type="xml" markers="false" pn="section-2.3-5">
        &lt;priority&gt;
            &lt;value&gt;250&lt;/value&gt;
            &lt;level-1&gt;
                &lt;value&gt;100&lt;/value&gt;
            &lt;/level-1&gt;
        &lt;/priority&gt;
</sourcecode>
        <t indent="0" pn="section-2.3-6">An implementation <bcp14>MUST</bcp14> prefer a level-specific
        parameter over a top-level parameter. For example, if the priority is
        100 for the level-1 configuration and 250 for the top-level configuration, the
        implementation must use 100 for the level-1 priority and 250 for the
        level-2 priority.</t>
        <t indent="0" pn="section-2.3-7">Some parameters, such as "overload bit" and "route preference",
        are not modeled to support per-level configuration. If an
        implementation supports per-level configuration for such parameters,
        this implementation <bcp14>MUST</bcp14> augment the current model by
        adding both level-1 and level-2 containers and <bcp14>MUST</bcp14>
        reuse existing configuration groupings.</t>
        <t indent="0" pn="section-2.3-8">Example of augmentation:</t>
        <sourcecode type="yang" markers="false" pn="section-2.3-9">
augment "/rt:routing/" +
        "rt:control-plane-protocols/rt:control-plane-protocol"+
        "/isis:isis/isis:overload" {
        when "rt:type = 'isis:isis'" {
          description
            "This augments the IS-IS routing protocol when used.";
        }
        description
          "This augments the IS-IS overload configuration
           with per-level configuration.";

        container level-1 {
          uses isis:overload-global-cfg;
          description
            "Level-1 configuration.";
        }
        container level-2 {
          uses isis:overload-global-cfg;
          description
            "Level-2 configuration.";
        }
}
</sourcecode>
        <t indent="0" pn="section-2.3-10">If an implementation does not support per-level configuration for a
        parameter modeled with per-level configuration, the implementation
        should advertise a deviation to announce that it does not support the
        configuration of level-1 and level-2 containers.</t>
        <t indent="0" pn="section-2.3-11">Finally, if an implementation supports per-level configuration but
        does not support the "level-all" configuration, it should also advertise
        a deviation.</t>
      </section>
      <section anchor="yang-interface" toc="include" numbered="true" removeInRFC="false" pn="section-2.4">
        <name slugifiedName="name-per-interface-parameters">Per-Interface Parameters</name>
        <t indent="0" pn="section-2.4-1">The per-interface section of the IS-IS instance describes
        the interface-specific parameters.</t>
        <t indent="0" pn="section-2.4-2">The interface is modeled as a reference to an existing interface
        as defined in the "ietf-interfaces" YANG module <xref target="RFC8343" format="default" sectionFormat="of" derivedContent="RFC8343"/>.</t>
        <t indent="0" pn="section-2.4-3">Each interface has some interface-specific parameters that may have
        a different per-level value as described in the previous section. An
        interface-specific parameter <bcp14>MUST</bcp14> be preferred over an
        IS-IS global parameter.</t>
        <t indent="0" pn="section-2.4-4">Some parameters, such as "hello-padding", are defined as containers
        to allow easy extension by vendor-specific modules.</t>
        <sourcecode type="yangtree" markers="false" pn="section-2.4-5">
    +--rw interfaces
       +--rw interface* [name]
          +--rw name                       if:interface-ref
          +--rw enabled?                   boolean {admin-control}?
          +--rw level-type?                level
          +--rw lsp-pacing-interval?       rt-types:
          |                                   timer-value-\
          |                                      milliseconds
          +--rw lsp-retransmit-interval?   rt-types:
          |                                   timer-value-seconds16
          +--rw passive?                   boolean
          +--rw csnp-interval?             rt-types:
          |                                   timer-value-seconds16
          +--rw hello-padding
          |  +--rw enabled?  boolean
          +--rw mesh-group-enabled?        mesh-group-state
          +--rw mesh-group?                uint8
          +--rw interface-type?            interface-type
          +--rw tag*                       uint32 {prefix-tag}?
          +--rw tag64*                     uint64 {prefix-tag64}?
          +--rw node-flag?                 boolean {node-flag}?
          +--rw hello-authentication
          |  +--rw (authentication-type)?
          |  |  +--:(key-chain) {key-chain}?
          |  |  |  +--rw key-chain?          key-chain:key-chain-ref
          |  |  +--:(password)
          |  |     +--rw key?                string
          |  |     +--rw crypto-algorithm?   identityref
          |  +--rw level-1
          |  |  +--rw (authentication-type)?
          |  |     +--:(key-chain) {key-chain}?
          |  |     |  +--rw key-chain?          key-chain:\
          |  |     |                               key-chain-ref
          |  |     +--:(password)
          |  |        +--rw key?                string
          |  |        +--rw crypto-algorithm?   identityref
          |  +--rw level-2
          |     +--rw (authentication-type)?
          |        +--:(key-chain) {key-chain}?
          |        |  +--rw key-chain?          key-chain:\
          |        |                               key-chain-ref
          |        +--:(password)
          |           +--rw key?                string
          |           +--rw crypto-algorithm?   identityref
          +--rw hello-interval
          |  +--rw value?     rt-types:timer-value-seconds16
          |  +--rw level-1
          |  |  +--rw value?   rt-types:timer-value-seconds16
          |  +--rw level-2
          |     +--rw value?   rt-types:timer-value-seconds16
          +--rw hello-multiplier
          |  +--rw value?     uint16
          |  +--rw level-1
          |  |  +--rw value?   uint16
          |  +--rw level-2
          |     +--rw value?   uint16
          +--rw priority
          |  +--rw value?     uint8
          |  +--rw level-1
          |  |  +--rw value?   uint8
          |  +--rw level-2
          |     +--rw value?   uint8
          +--rw metric
          |  +--rw value?     wide-metric
          |  +--rw level-1
          |  |  +--rw value?   wide-metric
          |  +--rw level-2
          |     +--rw value?   wide-metric
          +--rw bfd {bfd}?
          |  +--rw enabled?                          boolean
          |  +--rw local-multiplier?                 multiplier
          |  |      {client-base-cfg-parms}?
          |  +--rw (interval-config-type)? {client-base-cfg-parms}?
          |     +--:(tx-rx-intervals)
          |     |  +--rw desired-min-tx-interval?   uint32
          |     |  +--rw required-min-rx-interval?  uint32
          |     +--:(single-interval) {single-minimum-interval}?
          |        +--rw min-interval?              uint32
          +--rw address-families {nlpid-control}?
          |  +--rw address-family-list* [address-family]
          |     +--rw address-family    iana-rt-types:address-family
          +--rw mpls
          |  +--rw ldp
          |     +--rw igp-sync?   boolean {ldp-igp-sync}?
          +--rw fast-reroute {fast-reroute}?
          |  +--rw lfa {lfa}?
          |     +--rw candidate-enabled?  boolean
          |     +--rw enabled?            boolean
          |     +--rw remote-lfa {remote-lfa}?
          |     |  +--rw enabled?  boolean
          |     +--rw level-1
          |     |  +--rw candidate-enabled?  boolean
          |     |  +--rw enabled?            boolean
          |     |  +--rw remote-lfa {remote-lfa}?
          |     |     +--rw enabled?  boolean
          |     +--rw level-2
          |        +--rw candidate-enabled?  boolean
          |        +--rw enabled?            boolean
          |        +--rw remote-lfa {remote-lfa}?
          |           +--rw enabled?  boolean
          +--ro adjacencies
          |  +--ro adjacency* []
          |     +--ro neighbor-sys-type?             level
          |     +--ro neighbor-sysid?                system-id
          |     +--ro neighbor-extended-circuit-id?  extended-\
          |     |                                       circuit-id
          |     +--ro neighbor-snpa?                 snpa
          |     +--ro usage?                         level
          |     +--ro hold-timer?                    rt-types:
          |     |                                       timer-value-\
          |     |                                          seconds16
          |     +--ro neighbor-priority?             uint8
          |     +--ro lastuptime?                    yang:timestamp
          |     +--ro state?                         adj-state-type
          +--ro event-counters
          |  +--ro adjacency-changes?             uint32
          |  +--ro adjacency-number?              uint32
          |  +--ro init-fails?                    uint32
          |  +--ro adjacency-rejects?             uint32
          |  +--ro id-len-mismatch?               uint32
          |  +--ro max-area-addresses-mismatch?   uint32
          |  +--ro authentication-type-fails?     uint32
          |  +--ro authentication-fails?          uint32
          |  +--ro lan-dis-changes?               uint32
          +--ro packet-counters
          |  +--ro level* [level]
          |     +--ro level      level-number
          |     +--ro iih
          |     |  +--ro in?    uint32
          |     |  +--ro out?   uint32
          |     +--ro ish
          |     |  +--ro in?    uint32
          |     |  +--ro out?   uint32
          |     +--ro esh
          |     |  +--ro in?    uint32
          |     |  +--ro out?   uint32
          |     +--ro lsp
          |     |  +--ro in?    uint32
          |     |  +--ro out?   uint32
          |     +--ro psnp
          |     |  +--ro in?    uint32
          |     |  +--ro out?   uint32
          |     +--ro csnp
          |     |  +--ro in?    uint32
          |     |  +--ro out?   uint32
          |     +--ro unknown
          |        +--ro in?   uint32
          +--rw discontinuity-time?        yang:date-and-time
          +--rw topologies {multi-topology}?
             +--rw topology* [name]
                +--rw name      -&gt;
                |              ../../../../../../../../rt:\
                |                 ribs/rib/name
                +--rw metric
                   +--rw value?     wide-metric
                   +--rw level-1
                   |  +--rw value?   wide-metric
                   +--rw level-2
                      +--rw value?   wide-metric
</sourcecode>
      </section>
      <section anchor="yang-authentication" toc="include" numbered="true" removeInRFC="false" pn="section-2.5">
        <name slugifiedName="name-authentication-parameters">Authentication Parameters</name>
        <t indent="0" pn="section-2.5-1">The module defined in this document enables authentication configuration through the
        "ietf-key-chain" module <xref target="RFC8177" format="default" sectionFormat="of" derivedContent="RFC8177"/>. 
           The IS-IS module imports the "ietf-key-chain" module and reuses
           some groupings to allow global and per-interface configuration of
           authentication. 
           If global authentication is configured, an implementation
           <bcp14>SHOULD</bcp14> authenticate PSNPs (Partial Sequence Number
           PDUs), CSNPs (Complete Sequence Number PDUs), and LSPs (Link
           State PDUs) with the authentication parameters supplied. 
           The authentication of Hello PDUs (Protocol Data Units) can be
           activated on a per-interface basis. 
        </t>
      </section>
      <section anchor="yang-igp-ldp" toc="include" numbered="true" removeInRFC="false" pn="section-2.6">
        <name slugifiedName="name-igp-ldp-synchronization">IGP/LDP Synchronization</name>
        <t indent="0" pn="section-2.6-1">
           <xref target="RFC5443" format="default" sectionFormat="of" derivedContent="RFC5443"/> defines a mechanism where
           IGP (the Interior Gateway Protocol) needs to be synchronized with LDP
           (the Label Distribution Protocol). 
           An "ldp-igp-sync" feature has been defined in the model to support
           this functionality. 
           The "mpls/ldp/igp-sync" leaf under "interface" allows activation of
           the functionality on a per-interface basis. 
           The "mpls/ldp/igp-sync" container in the global configuration is
           intentionally empty and is not required for feature activation. 
           The goal of this empty container is to facilitate augmentation with
           additional parameters, e.g., timers. 
        </t>
      </section>
      <section anchor="yang-iso" toc="include" numbered="true" removeInRFC="false" pn="section-2.7">
        <name slugifiedName="name-iso-parameters">ISO Parameters</name>
        <t indent="0" pn="section-2.7-1">As the IS-IS protocol is based on the ISO protocol suite, some ISO
        parameters may be required.</t>
        <t indent="0" pn="section-2.7-2">This module augments the "ietf-interfaces" module configuration to support
        selected ISO configuration parameters.</t>
        <t indent="0" pn="section-2.7-3">The "clns-mtu" parameter can be configured for an interface.</t>
      </section>
      <section anchor="yang-frr" toc="include" numbered="true" removeInRFC="false" pn="section-2.8">
        <name slugifiedName="name-ip-frr">IP FRR</name>
        <t indent="0" pn="section-2.8-1">
          The YANG module defined in this document supports LFAs (Loop-Free Alternates) <xref target="RFC5286" format="default" sectionFormat="of" derivedContent="RFC5286"/> and remote LFAs <xref target="RFC7490" format="default" sectionFormat="of" derivedContent="RFC7490"/> as IP Fast Reroute (FRR)
          techniques. 
          The "fast-reroute" container may be augmented by other models to
          support other IP FRR flavors (Maximally Redundant Trees (MRTs)
          as defined in <xref target="RFC7812" format="default" sectionFormat="of" derivedContent="RFC7812"/>, Topology Independent LFA
          (TI-LFA) FRR as defined in <xref target="I-D.ietf-rtgwg-segment-routing-ti-lfa" format="default" sectionFormat="of" derivedContent="SR-TI-LFA"/>,
          etc.). 
        </t>
        <t indent="0" pn="section-2.8-2">
          The current version of the model supports activation of LFAs and
          remote LFAs at the interface level only. 
          The global "lfa" container is present but kept empty to allow
          augmentation with vendor-specific properties, e.g., policies. 
        </t>
        <t indent="0" pn="section-2.8-3">Remote LFAs are considered an extension of LFAs. Remote LFAs cannot
        be enabled if LFAs are not enabled.</t>
        <t indent="0" pn="section-2.8-4">The "candidate-enabled" data leaf designates that an interface can
        be used as a backup.</t>
      </section>
      <section anchor="yang-op" toc="include" numbered="true" removeInRFC="false" pn="section-2.9">
        <name slugifiedName="name-operational-states">Operational States</name>
        <t indent="0" pn="section-2.9-1">Operational states are defined in the "ietf-isis" module in various containers at various levels:
        </t>
        <dl newline="true" spacing="normal" indent="3" pn="section-2.9-2">
          <dt pn="section-2.9-2.1">system-counters:</dt>
          <dd pn="section-2.9-2.2">Provides statistical information about
                the global system.</dd>
          <dt pn="section-2.9-2.3">interface:</dt>
          <dd pn="section-2.9-2.4">Provides configuration state information for
                each interface.</dd>
          <dt pn="section-2.9-2.5">adjacencies:</dt>
          <dd pn="section-2.9-2.6">Provides state information about current
          IS-IS adjacencies.</dd>
          <dt pn="section-2.9-2.7">spf-log:</dt>
          <dd pn="section-2.9-2.8">Provides information about Shortest Path First (SPF) events for an IS-IS instance.
          This <bcp14>SHOULD</bcp14> be implemented as a wrapping buffer.</dd>
          <dt pn="section-2.9-2.9">lsp-log:</dt>
          <dd pn="section-2.9-2.10">Provides information about LSP events for an IS-IS instance
          (reception of an LSP or modification of a local LSP).
          This <bcp14>SHOULD</bcp14> be implemented as a wrapping buffer. The implementation <bcp14>MAY</bcp14> optionally log LSP refreshes.</dd>
          <dt pn="section-2.9-2.11">local-rib:</dt>
          <dd pn="section-2.9-2.12">Provides the IS-IS internal routing table.</dd>
          <dt pn="section-2.9-2.13">database:</dt>
          <dd pn="section-2.9-2.14">Provides the contents of the current Link State Database (LSDB).</dd>
          <dt pn="section-2.9-2.15">hostnames:</dt>
          <dd pn="section-2.9-2.16">Provides the system-ID-to-hostname mappings <xref target="RFC5301" format="default" sectionFormat="of" derivedContent="RFC5301"/>.</dd>
          <dt pn="section-2.9-2.17">fast-reroute:</dt>
          <dd pn="section-2.9-2.18">Provides IP FRR state information.</dd>
        </dl>
      </section>
    </section>
    <section anchor="RPC" toc="include" numbered="true" removeInRFC="false" pn="section-3">
      <name slugifiedName="name-rpc-operations">RPC Operations</name>
      <t indent="0" pn="section-3-1">The "ietf-isis" module defines two RPC operations:
      </t>
      <dl newline="true" spacing="normal" indent="3" pn="section-3-2">
        <dt pn="section-3-2.1">clear-database:</dt>
        <dd pn="section-3-2.2">Resets the contents of a particular IS-IS
        database and restarts database synchronization with all
        neighbors.</dd>
        <dt pn="section-3-2.3">clear-adjacency:</dt>
        <dd pn="section-3-2.4">Restarts a particular set of IS-IS
        adjacencies.</dd>
      </dl>
    </section>
    <section anchor="notif" toc="include" numbered="true" removeInRFC="false" pn="section-4">
      <name slugifiedName="name-notifications">Notifications</name>
      <t indent="0" pn="section-4-1">The "ietf-isis" module defines the following notifications:
      </t>
      <dl newline="true" spacing="normal" indent="3" pn="section-4-2">
        <dt pn="section-4-2.1">database-overload:</dt>
        <dd pn="section-4-2.2">This notification is sent when the IS-IS node's overload condition changes.</dd>
        <dt pn="section-4-2.3">lsp-too-large:</dt>
        <dd pn="section-4-2.4">This notification is sent when the system tries to propagate a PDU
        that is too large.</dd>
        <dt pn="section-4-2.5">if-state-change:</dt>
        <dd pn="section-4-2.6">This notification is sent when an interface's state changes.</dd>
        <dt pn="section-4-2.7">corrupted-lsp-detected:</dt>
        <dd pn="section-4-2.8">This notification is sent when the IS-IS node discovers
                   that an LSP that was previously stored in the LSDB, i.e., local memory, has
                   become corrupted.</dd>
        <dt pn="section-4-2.9">attempt-to-exceed-max-sequence:</dt>
        <dd pn="section-4-2.10">This notification is sent when the system
                  wraps the 32-bit sequence counter of an LSP.</dd>
        <dt pn="section-4-2.11">id-len-mismatch:</dt>
        <dd pn="section-4-2.12">This notification is sent when a PDU
                  with a different value for the system ID length is received.</dd>
        <dt pn="section-4-2.13">max-area-addresses-mismatch:</dt>
        <dd pn="section-4-2.14">This notification is sent when a PDU
                  with a different value for the Maximum Area Addresses is received.</dd>
        <dt pn="section-4-2.15">own-lsp-purge:</dt>
        <dd pn="section-4-2.16">This notification is sent when the system
                  receives a PDU with its own system ID and zero age.</dd>
        <dt pn="section-4-2.17">sequence-number-skipped:</dt>
        <dd pn="section-4-2.18">This notification is sent when the system
                  receives a PDU with its own system ID and
                  different contents. The system has to reissue
                  the LSP with a higher sequence number.</dd>
        <dt pn="section-4-2.19">authentication-type-failure:</dt>
        <dd pn="section-4-2.20">This notification is sent when the system
                  receives a PDU with the wrong authentication type
                  field.</dd>
        <dt pn="section-4-2.21">authentication-failure:</dt>
        <dd pn="section-4-2.22">This notification is sent when the system
                  receives a PDU with the wrong authentication
                  information.</dd>
        <dt pn="section-4-2.23">version-skew:</dt>
        <dd pn="section-4-2.24">This notification is sent when the system
                  receives a PDU with a different protocol version
                  number.</dd>
        <dt pn="section-4-2.25">area-mismatch:</dt>
        <dd pn="section-4-2.26">This notification is sent when the system
                  receives a Hello PDU from an IS that does
                  not share any area address.</dd>
        <dt pn="section-4-2.27">rejected-adjacency:</dt>
        <dd pn="section-4-2.28">This notification is sent when the system
                  receives a Hello PDU from an IS but does not
                  establish an adjacency for some reason.</dd>
        <dt pn="section-4-2.29">protocols-supported-mismatch:</dt>
        <dd pn="section-4-2.30">This notification is sent when the system
                  receives a non-pseudonode LSP that has no matching
                  protocol supported.</dd>
        <dt pn="section-4-2.31">lsp-error-detected:</dt>
        <dd pn="section-4-2.32">This notification is sent when the system
                  receives an LSP with a parse error.</dd>
        <dt pn="section-4-2.33">adjacency-state-change:</dt>
        <dd pn="section-4-2.34">This notification is sent when an IS-IS adjacency
                   moves to the "up" state or the "down" state.</dd>
        <dt pn="section-4-2.35">lsp-received:</dt>
        <dd pn="section-4-2.36">This notification is sent when an LSP
                  is received.</dd>
        <dt pn="section-4-2.37">lsp-generation:</dt>
        <dd pn="section-4-2.38">This notification is sent when an LSP
                  is regenerated.</dd>
      </dl>
    </section>
    <section anchor="interactions" toc="include" numbered="true" removeInRFC="false" pn="section-5">
      <name slugifiedName="name-interactions-with-other-yan">Interactions with Other YANG Modules</name>
      <t indent="0" pn="section-5-1">The "isis" container augments the
      "/rt:routing/rt:control-plane-protocols/control-plane-protocol"
      container of the "ietf-routing" module <xref target="RFC8349" format="default" sectionFormat="of" derivedContent="RFC8349"/> with IS-IS-specific
      parameters.</t>
      <t indent="0" pn="section-5-2">The "ietf-isis" module augments
      "/if:interfaces/if:interface" as defined by <xref target="RFC8343" format="default" sectionFormat="of" derivedContent="RFC8343"/>
      with ISO-specific parameters.</t>
      <t indent="0" pn="section-5-3">Some IS-IS-specific route attributes are added to route
      objects in the "ietf-routing" module by augmenting
      "/rt:routing-state/rt:ribs/rt:rib/rt:routes/rt:route".</t>
      <t indent="0" pn="section-5-4">The module defined in this document uses some groupings from "ietf-keychain" <xref target="RFC8177" format="default" sectionFormat="of" derivedContent="RFC8177"/>.</t>
      <t indent="0" pn="section-5-5">The module reuses types from <xref target="RFC6991" format="default" sectionFormat="of" derivedContent="RFC6991"/> and <xref target="RFC8294" format="default" sectionFormat="of" derivedContent="RFC8294"/>.</t>
      <t indent="0" pn="section-5-6">To support Bidirectional Forwarding Detection (BFD) for fast detection, the module relies on <xref target="RFC9314" format="default" sectionFormat="of" derivedContent="RFC9314"/>.</t>
    </section>
    <section anchor="isis-yang" toc="include" numbered="true" removeInRFC="false" pn="section-6">
      <name slugifiedName="name-is-is-yang-module">IS-IS YANG Module</name>
      <t indent="0" pn="section-6-1">The following specifications are referenced in this module: <xref target="ISO-10589" format="default" sectionFormat="of" derivedContent="ISO-10589"/>, <xref target="RFC1195" format="default" sectionFormat="of" derivedContent="RFC1195"/>, <xref target="RFC4090" format="default" sectionFormat="of" derivedContent="RFC4090"/>, <xref target="RFC5029" format="default" sectionFormat="of" derivedContent="RFC5029"/>,
 <xref target="RFC5120" format="default" sectionFormat="of" derivedContent="RFC5120"/>,
 <xref target="RFC5130" format="default" sectionFormat="of" derivedContent="RFC5130"/>,
 <xref target="RFC5286" format="default" sectionFormat="of" derivedContent="RFC5286"/>,
 <xref target="RFC5301" format="default" sectionFormat="of" derivedContent="RFC5301"/>,
 <xref target="RFC5302" format="default" sectionFormat="of" derivedContent="RFC5302"/>, <xref target="RFC5305" format="default" sectionFormat="of" derivedContent="RFC5305"/>, <xref target="RFC5307" format="default" sectionFormat="of" derivedContent="RFC5307"/>, <xref target="RFC5308" format="default" sectionFormat="of" derivedContent="RFC5308"/>,
 <xref target="RFC5443" format="default" sectionFormat="of" derivedContent="RFC5443"/>,
 <xref target="RFC5880" format="default" sectionFormat="of" derivedContent="RFC5880"/>,
 <xref target="RFC5881" format="default" sectionFormat="of" derivedContent="RFC5881"/>, <xref target="RFC6119" format="default" sectionFormat="of" derivedContent="RFC6119"/>, <xref target="RFC6232" format="default" sectionFormat="of" derivedContent="RFC6232"/>, 
 <xref target="RFC6241" format="default" sectionFormat="of" derivedContent="RFC6241"/>,
 <xref target="RFC6991" format="default" sectionFormat="of" derivedContent="RFC6991"/>,
 <xref target="RFC7490" format="default" sectionFormat="of" derivedContent="RFC7490"/>,
 <xref target="RFC7794" format="default" sectionFormat="of" derivedContent="RFC7794"/>,
 <xref target="RFC7917" format="default" sectionFormat="of" derivedContent="RFC7917"/>,
 <xref target="RFC7981" format="default" sectionFormat="of" derivedContent="RFC7981"/>,
 <xref target="RFC8177" format="default" sectionFormat="of" derivedContent="RFC8177"/>,
 <xref target="RFC8294" format="default" sectionFormat="of" derivedContent="RFC8294"/>,
 <xref target="RFC8342" format="default" sectionFormat="of" derivedContent="RFC8342"/>,
 <xref target="RFC8343" format="default" sectionFormat="of" derivedContent="RFC8343"/>,
 <xref target="RFC8349" format="default" sectionFormat="of" derivedContent="RFC8349"/>,
 <xref target="RFC8405" format="default" sectionFormat="of" derivedContent="RFC8405"/>,
 <xref target="RFC8570" format="default" sectionFormat="of" derivedContent="RFC8570"/>,
 <xref target="RFC8706" format="default" sectionFormat="of" derivedContent="RFC8706"/>, and
 <xref target="RFC9314" format="default" sectionFormat="of" derivedContent="RFC9314"/>.</t>
      <sourcecode name="ietf-isis@2022-10-19.yang" type="yang" markers="true" pn="section-6-2">
module ietf-isis {
  yang-version 1.1;
  namespace "urn:ietf:params:xml:ns:yang:ietf-isis";
  prefix isis;

  import ietf-routing {
    prefix rt;
    reference
      "RFC 8349: A YANG Data Model for Routing Management
       (NMDA Version)";
  }
  import ietf-inet-types {
    prefix inet;
    reference
      "RFC 6991: Common YANG Data Types";
  }
  import ietf-yang-types {
    prefix yang;
    reference
      "RFC 6991: Common YANG Data Types";
  }
  import ietf-interfaces {
    prefix if;
    reference
      "RFC 8343: A YANG Data Model for Interface Management";
  }
  import ietf-key-chain {
    prefix key-chain;
    reference
      "RFC 8177: YANG Data Model for Key Chains";
  }
  import ietf-routing-types {
    prefix rt-types;
    reference
      "RFC 8294: Common YANG Data Types for the Routing Area";
  }
  import iana-routing-types {
    prefix iana-rt-types;
    reference
      "RFC 8294: Common YANG Data Types for the Routing Area";
  }
  import ietf-bfd-types {
    prefix bfd-types;
    reference
      "RFC 9314: YANG Data Model for Bidirectional Forwarding
       Detection (BFD)";
  }

  organization
    "IETF LSR Working Group";
  contact
    "WG Web:   &lt;https://datatracker.ietf.org/wg/lsr/&gt;
     WG List:  &lt;mailto:lsr@ietf.org&gt;

     Editor:   Stephane Litkowski
               &lt;mailto:slitkows.ietf@gmail.com&gt;

     Author:   Derek Yeung
               &lt;mailto:derek@arrcus.com&gt;

     Author:   Acee Lindem
               &lt;mailto:acee@cisco.com&gt;

     Author:   Jeffrey Zhang
               &lt;mailto:zzhang@juniper.net&gt;

     Author:   Ladislav Lhotka
               &lt;mailto:ladislav.lhotka@nic.cz&gt;";
  description
    "This YANG module defines the generic configuration and
     operational states for the IS-IS protocol common to all
     vendor implementations.  It is intended that the module
     will be extended by vendors to define vendor-specific
     IS-IS configuration parameters and policies -
     for example, route maps or route policies.

     This YANG data model conforms to the Network Management
     Datastore Architecture (NMDA) as described in RFC 8342.

     The key words 'MUST', 'MUST NOT', 'REQUIRED', 'SHALL', 'SHALL
     NOT', 'SHOULD', 'SHOULD NOT', 'RECOMMENDED', 'NOT RECOMMENDED',
     'MAY', and 'OPTIONAL' in this document are to be interpreted as
     described in BCP 14 (RFC 2119) (RFC 8174) when, and only when,
     they appear in all capitals, as shown here.

     Copyright (c) 2022 IETF Trust and the persons identified as
     authors of the code.  All rights reserved.

     Redistribution and use in source and binary forms, with or
     without modification, is permitted pursuant to, and subject to
     the license terms contained in, the Revised BSD License set
     forth in Section 4.c of the IETF Trust's Legal Provisions
     Relating to IETF Documents
     (https://trustee.ietf.org/license-info).

     This version of this YANG module is part of RFC 9130; see the
     RFC itself for full legal notices.";
  reference
    "RFC 8342: Network Management Datastore Architecture (NMDA)";

  revision 2022-10-19 {
    description
      "Initial revision.";
    reference
      "RFC 9130: YANG Data Model for the IS-IS Protocol";
  }

  /* Identities */

  identity isis {
    base rt:routing-protocol;
    description
      "Identity for the IS-IS routing protocol.";
  }

  identity lsp-log-reason {
    description
      "Base identity for a Link State PDU (LSP)
       change log reason.";
  }

  identity refresh {
    base lsp-log-reason;
    description
      "Identity used when the LSP log reason is that an LSP
       refresh was received.";
  }

  identity content-change {
    base lsp-log-reason;
    description
      "Identity used when the LSP log reason is
       a change in the contents of the LSP.";
  }

  identity frr-protection-method {
    description
      "Base identity for a Fast Reroute protection method.";
  }

  identity frr-protection-method-lfa {
    base frr-protection-method;
    description
      "Loop-Free Alternate as defined in RFC 5286.";
    reference
      "RFC 5286: Basic Specification for IP Fast Reroute:
       Loop-Free Alternates";
  }

  identity frr-protection-method-rlfa {
    base frr-protection-method;
    description
      "Remote Loop-Free Alternate as defined in RFC 7490.";
    reference
      "RFC 7490: Remote Loop-Free Alternate (LFA)
       Fast Reroute (FRR)";
  }

  identity frr-protection-method-rsvpte {
    base frr-protection-method;
    description
      "RSVP-TE as defined in RFC 4090.";
    reference
      "RFC 4090: Fast Reroute Extensions to RSVP-TE for
       LSP Tunnels";
  }

  identity frr-protection-available-type {
    description
      "Base identity for Fast Reroute protection types
       provided by an alternate path.";
  }

  identity frr-protection-available-node-type {
    base frr-protection-available-type;
    description
      "Node protection is provided by the alternate.";
  }

  identity frr-protection-available-link-type {
    base frr-protection-available-type;
    description
      "Link protection is provided by the alternate.";
  }

  identity frr-protection-available-srlg-type {
    base frr-protection-available-type;
    description
      "Shared Risk Link Group (SRLG) protection is provided by
       the alternate.";
  }

  identity frr-protection-available-downstream-type {
    base frr-protection-available-type;
    description
      "The alternate is downstream of the node in the path.";
  }

  identity frr-protection-available-other-type {
    base frr-protection-available-type;
    description
      "The level of protection is unknown.";
  }

  identity frr-alternate-type {
    description
      "Base identity for the IP Fast Reroute alternate type.";
  }

  identity frr-alternate-type-equal-cost {
    base frr-alternate-type;
    description
      "ECMP-based alternate.";
  }

  identity frr-alternate-type-lfa {
    base frr-alternate-type;
    description
      "LFA-based alternate.";
  }

  identity frr-alternate-type-remote-lfa {
    base frr-alternate-type;
    description
      "Remote-LFA-based alternate.";
  }

  identity frr-alternate-type-tunnel {
    base frr-alternate-type;
    description
      "Tunnel-based alternate (such as RSVP-TE or GRE).";
  }

  identity frr-alternate-mrt {
    base frr-alternate-type;
    description
      "MRT-based alternate.";
  }

  identity frr-alternate-tilfa {
    base frr-alternate-type;
    description
      "TI-LFA-based alternate.";
  }

  identity frr-alternate-other {
    base frr-alternate-type;
    description
      "Other type of alternate.";
  }

  identity unidirectional-link-delay-subtlv-flag {
    description
      "Base identity for the flag corresponding to the
       Unidirectional Link Delay sub-TLV as defined in RFC 8570.";
    reference
      "RFC 8570: IS-IS Traffic Engineering (TE) Metric Extensions";
  }

  identity unidirectional-link-delay-subtlv-a-flag {
    base unidirectional-link-delay-subtlv-flag;
    description
      "The 'A' bit field represents the Anomalous (A) bit.
       The A bit is set when the measured value of
       this parameter exceeds its configured
       maximum threshold.
       The A bit is cleared when the measured value
       falls below its configured reuse threshold.
       If the A bit is clear,
       the value represents steady-state link performance.";
  }

  identity min-max-unidirectional-link-delay-subtlv-flag {
    description
      "Base identity for the flag corresponding to the Min/Max
       Unidirectional Link Delay sub-TLV as defined in RFC 8570.";
    reference
      "RFC 8570: IS-IS Traffic Engineering (TE) Metric Extensions";
  }

  identity min-max-unidirectional-link-delay-subtlv-a-flag {
    base min-max-unidirectional-link-delay-subtlv-flag;
    description
      "The 'A' bit field represents the Anomalous (A) bit.
       The A bit is set when the measured value of
       this parameter exceeds its configured
       maximum threshold.
       The A bit is cleared when the measured value
       falls below its configured reuse threshold.
       If the A bit is clear,
       the value represents steady-state link performance.";
  }

  identity unidirectional-link-loss-subtlv-flag {
    description
      "Base identity for the flag corresponding to the
       Unidirectional Link Loss sub-TLV as defined in RFC 8570.";
    reference
      "RFC 8570: IS-IS Traffic Engineering (TE) Metric Extensions";
  }

  identity unidirectional-link-loss-subtlv-a-flag {
    base unidirectional-link-loss-subtlv-flag;
    description
      "The 'A' bit field represents the Anomalous (A) bit.
       The A bit is set when the measured value of
       this parameter exceeds its configured
       maximum threshold.
       The A bit is cleared when the measured value
       falls below its configured reuse threshold.
       If the A bit is clear,
       the value represents steady-state link performance.";
  }

  identity tlv229-flag {
    description
      "Base identity for the flag corresponding to TLV 229
       (M-Topologies) as defined in RFC 5120.";
    reference
      "RFC 5120: M-ISIS: Multi Topology (MT) Routing in
       Intermediate System to Intermediate Systems (IS-ISs)";
  }

  identity tlv229-overload-flag {
    base tlv229-flag;
    description
      "If set, the originator is overloaded
       and must be avoided in the path calculation.";
  }

  identity tlv229-attached-flag {
    base tlv229-flag;
    description
      "If set, the originator is attached to
       another area using the referred metric.";
  }

  identity router-capability-flag {
    description
      "Base identity for the flag corresponding to the
       Router Capability TLV as defined in RFC 7981.";
    reference
      "RFC 7981: IS-IS Extensions for Advertising Router
       Information";
  }

  identity router-capability-flooding-flag {
    base router-capability-flag;
    description
      "Quote from RFC 7981:
       'If the S bit is set(1), the IS-IS Router CAPABILITY TLV
       MUST be flooded across the entire routing domain.  If the
       S bit is not set(0), the TLV MUST NOT be leaked between
       levels.  This bit MUST NOT be altered during the TLV
       leaking.'";
  }

  identity router-capability-down-flag {
    base router-capability-flag;
    description
      "Quote from RFC 7981:
       'When the IS-IS Router CAPABILITY TLV is leaked from
       Level 2 (L2) to Level 1 (L1), the D bit MUST be set.
       Otherwise, this bit MUST be clear.  IS-IS Router
       CAPABILITY TLVs with the D bit set MUST NOT be leaked from
       Level 1 to Level 2.  This is to prevent TLV looping.'";
  }

  identity lsp-flag {
    description
      "Base identity for LSP attributes as defined in ISO 10589.";
    reference
      "ISO 10589: Intermediate System to Intermediate System
       intra-domain routeing information exchange protocol
       for use in conjunction with the protocol for providing
       the connectionless-mode network service (ISO 8473)";
  }

  identity lsp-partitioned-flag {
    base lsp-flag;
    description
      "Originator partition repair supported.";
  }

  identity lsp-attached-error-metric-flag {
    base lsp-flag;
    description
      "Set when the originator is attached to
       another area using the error metric.";
  }

  identity lsp-attached-delay-metric-flag {
    base lsp-flag;
    description
      "Set when the originator is attached to
       another area using the delay metric.";
  }

  identity lsp-attached-expense-metric-flag {
    base lsp-flag;
    description
      "Set when the originator is attached to
       another area using the expense metric.";
  }

  identity lsp-attached-default-metric-flag {
    base lsp-flag;
    description
      "Set when the originator is attached to
       another area using the default metric.";
  }

  identity lsp-overload-flag {
    base lsp-flag;
    description
      "If set, the originator is overloaded
       and must be avoided in the path calculation.";
  }

  identity lsp-l1-system-flag {
    base lsp-flag;
    description
      "Set when the Intermediate System has an L1 type.";
  }

  identity lsp-l2-system-flag {
    base lsp-flag;
    description
      "Set when the Intermediate System has an L2 type.";
  }

  /* Feature definitions */

  feature osi-interface {
    description
      "Support of OSI-specific parameters on an interface.";
  }

  feature poi-tlv {
    description
      "Support of the Purge Originator Identification (POI) TLV.";
    reference
      "RFC 6232: Purge Originator Identification TLV for IS-IS";
  }

  feature ietf-spf-delay {
    description
      "Support for the IETF SPF delay algorithm.";
    reference
      "RFC 8405: Shortest Path First (SPF) Back-Off Delay Algorithm
       for Link-State IGPs";
  }

  feature bfd {
    description
      "Support for detection of IS-IS neighbor reachability
       via BFD.";
    reference
      "RFC 5880: Bidirectional Forwarding Detection (BFD)
       RFC 5881: Bidirectional Forwarding Detection (BFD)
       for IPv4 and IPv6 (Single Hop)";
  }

  feature key-chain {
    description
      "Support of key chains for authentication.";
    reference
      "RFC 8177: YANG Data Model for Key Chains";
  }

  feature node-flag {
    description
      "Support for node flags for IS-IS prefixes.";
    reference
      "RFC 7794: IS-IS Prefix Attributes for Extended IPv4 and IPv6
       Reachability";
  }

  feature node-tag {
    description
      "Support for node administrative tags for IS-IS
       routing instances.";
    reference
      "RFC 7917: Advertising Node Administrative Tags in IS-IS";
  }

  feature ldp-igp-sync {
    description
      "Support for LDP IGP synchronization.";
    reference
      "RFC 5443: LDP IGP Synchronization";
  }

  feature fast-reroute {
    description
      "Support for IP Fast Reroute (IP FRR).";
  }

  feature nsr {
    description
      "Support for Non-Stop-Routing (NSR).  The IS-IS NSR feature
       allows a router with redundant control-plane capability
       (e.g., dual Route Processor (RP) cards) to maintain its
       state and adjacencies during planned and unplanned
       IS-IS instance restarts.  It differs from graceful restart
       or Non-Stop Forwarding (NSF) in that no protocol signaling
       or assistance from adjacent IS-IS neighbors is required to
       recover control-plane state.";
  }

  feature lfa {
    description
      "Support for Loop-Free Alternates (LFAs).";
    reference
      "RFC 5286: Basic Specification for IP Fast Reroute:
       Loop-Free Alternates";
  }

  feature remote-lfa {
    description
      "Support for remote LFAs (R-LFAs).";
    reference
      "RFC 7490: Remote Loop-Free Alternate (LFA)
       Fast Reroute (FRR)";
  }

  feature overload-max-metric {
    description
      "Support of overload by setting all links to the maximum
       link metric.  In IS-IS, the overload bit is usually used to
       signal that a node cannot be used as a transit node.  The
       'overload-max-metric' feature provides similar behavior,
       also setting all the link metrics to MAX_METRIC.";
  }

  feature prefix-tag {
    description
      "Support for 32-bit prefix tags.";
    reference
      "RFC 5130: A Policy Control Mechanism in IS-IS Using
       Administrative Tags";
  }

  feature prefix-tag64 {
    description
      "Support for 64-bit prefix tags.";
    reference
      "RFC 5130: A Policy Control Mechanism in IS-IS Using
       Administrative Tags";
  }

  feature auto-cost {
    description
      "Support for an IS-IS interface metric computation
       according to a reference bandwidth.";
  }

  feature te-rid {
    description
      "Traffic Engineering router ID.";
    reference
      "RFC 5305: IS-IS Extensions for Traffic Engineering
       RFC 6119: IPv6 Traffic Engineering in IS-IS";
  }

  feature max-ecmp {
    description
      "Sets the maximum number of ECMP paths.";
  }

  feature multi-topology {
    description
      "Support for Multi-Topology (MT) Routing.";
    reference
      "RFC 5120: M-ISIS: Multi Topology (MT) Routing in
       Intermediate System to Intermediate Systems (IS-ISs)";
  }

  feature nlpid-control {
    description
      "Support for the advertisement of a Network Layer
       Protocol Identifier within an IS-IS configuration.";
  }

  feature graceful-restart {
    description
      "Support for IS-IS graceful restart.";
    reference
      "RFC 8706: Restart Signaling for IS-IS";
  }

  feature lsp-refresh {
    description
      "Configuration of the LSP refresh interval.";
  }

  feature maximum-area-addresses {
    description
      "Support for 'maximum-area-addresses' configuration.";
  }

  feature admin-control {
    description
      "Administrative control of the protocol state.";
  }

  /* Type definitions */

  typedef circuit-id {
    type uint8;
    description
      "This type defines the circuit ID
       associated with an interface.";
  }

  typedef extended-circuit-id {
    type uint32;
    description
      "This type defines the extended circuit ID
       associated with an interface.";
  }

  typedef interface-type {
    type enumeration {
      enum broadcast {
        description
          "Broadcast interface type.";
      }
      enum point-to-point {
        description
          "Point-to-point interface type.";
      }
    }
    description
      "This type defines the type of adjacency
       to be established for the interface.
       'interface-type' determines the type
       of Hello message that is used.";
  }

  typedef level {
    type enumeration {
      enum level-1 {
        description
          "This enum indicates L1-only capability.";
      }
      enum level-2 {
        description
          "This enum indicates L2-only capability.";
      }
      enum level-all {
        description
          "This enum indicates capability for both levels.";
      }
    }
    default "level-all";
    description
      "This type defines the IS-IS level of an object.";
  }

  typedef adj-state-type {
    type enumeration {
      enum up {
        description
          "This state indicates that the adjacency is established.";
      }
      enum down {
        description
          "This state indicates that the adjacency is
           NOT established.";
      }
      enum init {
        description
          "This state indicates that the adjacency is being
           established.";
      }
      enum failed {
        description
          "This state indicates that the adjacency has failed.";
      }
    }
    description
      "This type defines the states of an adjacency.";
  }

  typedef if-state-type {
    type enumeration {
      enum up {
        description
          "'up' state.";
      }
      enum down {
        description
          "'down' state.";
      }
    }
    description
      "This type defines the state of an interface.";
  }

  typedef level-number {
    type uint8 {
      range "1 .. 2";
    }
    description
      "This type defines the current IS-IS level.";
  }

  typedef lsp-id {
    type string {
      pattern '[0-9A-Fa-f]{4}\.[0-9A-Fa-f]{4}\.[0-9A-Fa-f]'
            + '{4}\.[0-9][0-9]-[0-9][0-9]';
    }
    description
      "This type defines the IS-IS LSP ID format using a
       pattern.  An example LSP ID is '0143.0438.AEF0.02-01'.";
  }

  typedef area-address {
    type string {
      pattern '[0-9A-Fa-f]{2}(\.[0-9A-Fa-f]{4}){0,6}';
    }
    description
      "This type defines the area address format.";
  }

  typedef snpa {
    type string {
      length "0 .. 20";
    }
    description
      "This type defines the Subnetwork Point of Attachment (SNPA)
       format.  The SNPA should be encoded according to the rules
       specified for the particular type of subnetwork being used.
       As an example, for an Ethernet subnetwork, the SNPA is
       encoded as a Media Access Control (MAC) address, such as
       '00aa.bbcc.ddee'.";
  }

  typedef system-id {
    type string {
      pattern '[0-9A-Fa-f]{4}\.[0-9A-Fa-f]{4}\.[0-9A-Fa-f]{4}';
    }
    description
      "This type defines the IS-IS system ID by using a pattern.
       An example system ID is '0143.0438.AEF0'.";
  }

  typedef extended-system-id {
    type string {
      pattern '[0-9A-Fa-f]{4}\.[0-9A-Fa-f]{4}\.[0-9A-Fa-f]{4}\.'
            + '[0-9][0-9]';
    }
    description
      "This type defines the IS-IS system ID using a pattern.
       'extended-system-id' contains the pseudonode number
       in addition to the system ID.
       An example extended system ID is '0143.0438.AEF0.00'.";
  }

  typedef wide-metric {
    type uint32 {
      range "0 .. 16777215";
    }
    description
      "This type defines the wide-style format of an IS-IS metric.";
  }

  typedef std-metric {
    type uint8 {
      range "0 .. 63";
    }
    description
      "This type defines the old-style format of the IS-IS metric.";
  }

  typedef mesh-group-state {
    type enumeration {
      enum mesh-inactive {
        description
          "The interface is not part of a mesh group.";
      }
      enum mesh-set {
        description
          "The interface is part of a mesh group.";
      }
      enum mesh-blocked {
        description
          "LSPs must not be flooded over this interface.";
      }
    }
    description
      "This type describes the mesh group state of an interface.";
  }

  /* Grouping for notifications */

  grouping notification-instance-hdr {
    description
      "Instance-specific IS-IS notification data grouping.";
    leaf routing-protocol-name {
      type leafref {
        path "/rt:routing/rt:control-plane-protocols/"
           + "rt:control-plane-protocol/rt:name";
      }
      description
        "Name of the IS-IS instance.";
    }
    leaf isis-level {
      type level;
      description
        "IS-IS level of the instance.";
    }
  }

  grouping notification-interface-hdr {
    description
      "Interface-specific IS-IS notification data grouping.";
    leaf interface-name {
      type if:interface-ref;
      description
        "IS-IS interface name.";
    }
    leaf interface-level {
      type level;
      description
        "IS-IS level of the interface.";
    }
    leaf extended-circuit-id {
      type extended-circuit-id;
      description
        "Extended circuit ID of the interface.";
    }
  }

  /* Groupings for IP Fast Reroute */

  grouping instance-fast-reroute-config {
    description
      "This group defines the global configuration of IP
       Fast Reroute (FRR).";
    container fast-reroute {
      if-feature "fast-reroute";
      description
        "This container may be augmented with global
         parameters for IP FRR.";
      container lfa {
        if-feature "lfa";
        description
          "This container may be augmented with
           global parameters for Loop-Free Alternates (LFAs).
           The creation of this container has no effect on
           LFA activation.";
      }
    }
  }

  grouping interface-lfa-config {
    leaf candidate-enabled {
      type boolean;
      default "true";
      description
        "Enables the interface to be used as a backup.";
    }
    leaf enabled {
      type boolean;
      default "false";
      description
        "Activates the LFA.  Per-prefix LFA computation is assumed.";
    }
    container remote-lfa {
      if-feature "remote-lfa";
      leaf enabled {
        type boolean;
        default "false";
        description
          "Activates the remote LFA (R-LFA).";
      }
      description
        "Remote LFA configuration.";
    }
    description
      "Grouping for LFA interface configuration.";
  }

  grouping interface-fast-reroute-config {
    description
      "This group defines the interface configuration of IP FRR.";
    container fast-reroute {
      if-feature "fast-reroute";
      container lfa {
        if-feature "lfa";
        uses interface-lfa-config;
        container level-1 {
          uses interface-lfa-config;
          description
            "LFA level-1 configuration.";
        }
        container level-2 {
          uses interface-lfa-config;
          description
            "LFA level-2 configuration.";
        }
        description
          "LFA configuration.";
      }
      description
        "Interface IP FRR configuration.";
    }
  }

  grouping instance-fast-reroute-state {
    description
      "IP FRR state data grouping.";
    container protected-routes {
      config false;
      list address-family-stats {
        key "address-family prefix alternate";
        leaf address-family {
          type iana-rt-types:address-family;
          description
            "Address family.";
        }
        leaf prefix {
          type inet:ip-prefix;
          description
            "Protected prefix.";
        }
        leaf alternate {
          type inet:ip-address;
          description
            "Alternate next hop for the prefix.";
        }
        leaf alternate-type {
          type identityref {
            base frr-alternate-type;
          }
          description
            "Type of alternate.";
        }
        leaf best {
          type boolean;
          description
            "Set when the alternate is the preferred alternate;
             clear otherwise.";
        }
        leaf non-best-reason {
          type string {
            length "1..255";
          }
          description
            "Information field that explains why the alternate
             is not the best alternate.  The length should be
             limited to 255 Unicode characters.  The expected format
             is a single line of text.";
        }
        container protection-available {
          leaf-list protection-types {
            type identityref {
              base frr-protection-available-type;
            }
            description
              "This list contains a set of protection
               types defined as identities.
               An identity must be added for each type of
               protection provided by the alternate.
               As an example, if an alternate provides
               SRLG, node, and link protection, three
               identities must be added in this list:
               one for SRLG protection, one for node
               protection, and one for link protection.";
          }
          description
            "Protection types provided by the alternate.";
        }
        leaf alternate-metric-1 {
          type uint32;
          description
            "Metric from the Point of Local Repair (PLR) to the
             destination through the alternate path.";
        }
        leaf alternate-metric-2 {
          type uint32;
          description
            "Metric from the PLR to the alternate node.";
        }
        leaf alternate-metric-3 {
          type uint32;
          description
            "Metric from the alternate node to the destination.";
        }
        description
          "Per-address-family protected prefix statistics.";
      }
      description
        "List of prefixes that are protected.";
    }
    container unprotected-routes {
      config false;
      list prefixes {
        key "address-family prefix";
        leaf address-family {
          type iana-rt-types:address-family;
          description
            "Address family.";
        }
        leaf prefix {
          type inet:ip-prefix;
          description
            "Unprotected prefix.";
        }
        description
          "Per-address-family unprotected prefix statistics.";
      }
      description
        "List of prefixes that are not protected.";
    }
    list protection-statistics {
      key "frr-protection-method";
      config false;
      leaf frr-protection-method {
        type identityref {
          base frr-protection-method;
        }
        description
          "Protection method used.";
      }
      list address-family-stats {
        key "address-family";
        leaf address-family {
          type iana-rt-types:address-family;
          description
            "Address family.";
        }
        leaf total-routes {
          type yang:gauge32;
          description
            "Total prefixes.";
        }
        leaf unprotected-routes {
          type yang:gauge32;
          description
            "Total prefixes that are not protected.";
        }
        leaf protected-routes {
          type yang:gauge32;
          description
            "Total prefixes that are protected.";
        }
        leaf link-protected-routes {
          type yang:gauge32;
          description
            "Total prefixes that are link protected.";
        }
        leaf node-protected-routes {
          type yang:gauge32;
          description
            "Total prefixes that are node protected.";
        }
        description
          "Per-address-family protected prefix statistics.";
      }
      description
        "Global protection statistics.";
    }
  }

  /* Routing table and local Routing Information Base (RIB)
     groupings */

  grouping local-rib {
    description
      "Local RIB: RIB for routes computed by the local IS-IS
       routing instance.";
    container local-rib {
      config false;
      description
        "Local RIB.";
      list route {
        key "prefix";
        description
          "Routes.";
        leaf prefix {
          type inet:ip-prefix;
          description
            "Destination prefix.";
        }
        container next-hops {
          description
            "Next hops for the route.";
          list next-hop {
            key "next-hop";
            description
              "List of next hops for the route.";
            leaf outgoing-interface {
              type if:interface-ref;
              description
                "Name of the outgoing interface.";
            }
            leaf next-hop {
              type inet:ip-address;
              description
                "Next-hop address.";
            }
          }
        }
        leaf metric {
          type uint32;
          description
            "Metric for this route.";
        }
        leaf level {
          type level-number;
          description
            "Level number for this route.";
        }
        leaf route-tag {
          type uint32;
          description
            "Route tag for this route.";
        }
      }
    }
  }

  grouping route-content {
    description
      "IS-IS protocol-specific route properties grouping.";
    leaf metric {
      type uint32;
      description
        "IS-IS metric of a route.";
    }
    leaf-list tag {
      type uint64;
      description
        "List of tags associated with the route.  This list
         provides a consolidated view of both 32-bit and 64-bit
         tags (RFC 5130) available for the prefix.";
      reference
        "RFC 5130: A Policy Control Mechanism in IS-IS Using
         Administrative Tags";
    }
    leaf route-type {
      type enumeration {
        enum l2-intra-area {
          description
            "Level-2 internal route.  As per RFC 5302,
             the prefix is directly connected to the
             advertising router.  It cannot be
             distinguished from an L1-&gt;L2 inter-area
             route.";
          reference
            "RFC 5302: Domain-Wide Prefix Distribution with
             Two-Level IS-IS";
        }
        enum l1-intra-area {
          description
            "Level-1 internal route.  As per RFC 5302,
             the prefix is directly connected to the
             advertising router.";
        }
        enum l2-external {
          description
            "Level-2 external route.  As per RFC 5302,
             such a route is learned from other IGPs.
             It cannot be distinguished from an L1-&gt;L2
             inter-area external route.";
        }
        enum l1-external {
          description
            "Level-1 external route.  As per RFC 5302,
             such a route is learned from other IGPs.";
        }
        enum l1-inter-area {
          description
            "These prefixes are learned via L2 routing.";
        }
        enum l1-inter-area-external {
          description
            "These prefixes are learned via L2 routing
             towards a level-2 external route.";
        }
      }
      description
        "IS-IS route type.";
    }
  }

  /* Grouping definitions for configuration and operational states */

  grouping adjacency-state {
    container adjacencies {
      config false;
      list adjacency {
        leaf neighbor-sys-type {
          type level;
          description
            "Level capability of the neighboring system.";
        }
        leaf neighbor-sysid {
          type system-id;
          description
            "The system ID of the neighbor.";
        }
        leaf neighbor-extended-circuit-id {
          type extended-circuit-id;
          description
            "The circuit ID of the neighbor.";
        }
        leaf neighbor-snpa {
          type snpa;
          description
            "The SNPA of the neighbor.";
        }
        leaf usage {
          type level;
          description
            "Defines the level(s) activated for the adjacency.
             On a point-to-point link, this might be level 1 and
             level 2, but on a LAN, the usage will be level 1
             between neighbors at level 1 or level 2 between
             neighbors at level 2.";
        }
        leaf hold-timer {
          type rt-types:timer-value-seconds16;
          units "seconds";
          description
            "The holding time (in seconds) for this adjacency.
             This value is based on received Hello PDUs and the
             elapsed time since receipt.";
        }
        leaf neighbor-priority {
          type uint8 {
            range "0 .. 127";
          }
          description
            "Priority of the neighboring IS for becoming the
             Designated Intermediate System (DIS).";
        }
        leaf lastuptime {
          type yang:timestamp;
          description
            "When the adjacency most recently entered the
             'up' state, measured in hundredths of a
             second since the last reinitialization of
             the network management subsystem.
             The value is 0 if the adjacency has never
             been in the 'up' state.";
        }
        leaf state {
          type adj-state-type;
          description
            "This leaf describes the state of the interface.";
        }
        description
          "List of operational adjacencies.";
      }
      description
        "This container lists the adjacencies of
         the local node.";
    }
    description
      "Adjacency state.";
  }

  grouping admin-control {
    leaf enabled {
      if-feature "admin-control";
      type boolean;
      default "true";
      description
        "Enables or disables the protocol.";
    }
    description
      "Grouping for administrative control.";
  }

  grouping ietf-spf-delay {
    leaf initial-delay {
      type rt-types:timer-value-milliseconds;
      units "msec";
      default "50";
      description
        "Delay used while in the QUIET state (milliseconds).";
    }
    leaf short-delay {
      type rt-types:timer-value-milliseconds;
      units "msec";
      default "200";
      description
        "Delay used while in the SHORT_WAIT state (milliseconds).";
    }
    leaf long-delay {
      type rt-types:timer-value-milliseconds;
      units "msec";
      default "5000";
      description
        "Delay used while in the LONG_WAIT state (milliseconds).";
    }
    leaf hold-down {
      type rt-types:timer-value-milliseconds;
      units "msec";
      default "10000";
      description
        "This timer value defines the period without any changes
         for the IGP to be considered stable (in milliseconds).";
    }
    leaf time-to-learn {
      type rt-types:timer-value-milliseconds;
      units "msec";
      default "500";
      description
        "Duration used to learn all the IGP events
         related to a single network event (milliseconds).";
    }
    leaf current-state {
      type enumeration {
        enum quiet {
          description
            "QUIET state.";
        }
        enum short-wait {
          description
            "SHORT_WAIT state.";
        }
        enum long-wait {
          description
            "LONG_WAIT state.";
        }
      }
      config false;
      description
        "Current SPF Back-Off algorithm state.";
    }
    leaf remaining-time-to-learn {
      type rt-types:timer-value-milliseconds;
      units "msec";
      config false;
      description
        "Remaining time until the time-to-learn timer fires.";
    }
    leaf remaining-hold-down {
      type rt-types:timer-value-milliseconds;
      units "msec";
      config false;
      description
        "Remaining time until the hold-down timer fires.";
    }
    leaf last-event-received {
      type yang:timestamp;
      config false;
      description
        "Time of the last IGP event received.";
    }
    leaf next-spf-time {
      type yang:timestamp;
      config false;
      description
        "Time when the next SPF has been scheduled.";
    }
    leaf last-spf-time {
      type yang:timestamp;
      config false;
      description
        "Time of the last SPF computation.";
    }
    description
      "Grouping for IETF SPF delay configuration and state.";
    reference
      "RFC 8405: Shortest Path First (SPF) Back-Off Delay Algorithm
       for Link-State IGPs";
  }

  grouping node-tag-config {
    description
      "IS-IS node tag configuration state.";
    container node-tags {
      if-feature "node-tag";
      list node-tag {
        key "tag";
        leaf tag {
          type uint32;
          description
            "Node tag value.";
        }
        description
          "List of tags.";
      }
      description
        "Container for node administrative tags.";
    }
  }

  grouping authentication-global-cfg {
    choice authentication-type {
      case key-chain {
        if-feature "key-chain";
        leaf key-chain {
          type key-chain:key-chain-ref;
          description
            "Reference to a key chain.";
        }
      }
      case password {
        leaf key {
          type string;
          description
            "This leaf specifies the authentication key.  The
             length of the key may be dependent on the
             cryptographic algorithm.";
        }
        leaf crypto-algorithm {
          type identityref {
            base key-chain:crypto-algorithm;
          }
          description
            "Cryptographic algorithm associated with a key.";
        }
      }
      description
        "Choice of authentication.";
    }
    description
      "Grouping for global authentication configuration.";
  }

  grouping metric-type-global-cfg {
    leaf value {
      type enumeration {
        enum wide-only {
          description
            "Advertises the new metric style only (RFC 5305).";
          reference
            "RFC 5305: IS-IS Extensions for Traffic Engineering";
        }
        enum old-only {
          description
            "Advertises the old metric style only (RFC 1195).";
          reference
            "RFC 1195: Use of OSI IS-IS for routing in TCP/IP and
             dual environments";
        }
        enum both {
          description
            "Advertises both metric styles.";
        }
      }
      description
        "Type of metric to be generated:

         -  'wide-only' means that only a new metric style
            is generated.
         -  'old-only' means that only an old metric style
            is generated.
         -  'both' means that both are advertised.

         This leaf only affects IPv4 metrics.";
    }
    description
      "Grouping for global metric style configuration.";
  }

  grouping metric-type-global-cfg-with-default {
    leaf value {
      type enumeration {
        enum wide-only {
          description
            "Advertises the new metric style only (RFC 5305).";
          reference
            "RFC 5305: IS-IS Extensions for Traffic Engineering";
        }
        enum old-only {
          description
            "Advertises the old metric style only (RFC 1195).";
          reference
            "RFC 1195: Use of OSI IS-IS for routing in TCP/IP and
             dual environments";
        }
        enum both {
          description
            "Advertises both metric styles.";
        }
      }
      default "wide-only";
      description
        "Type of metric to be generated:

         -  'wide-only' means that only a new metric style
            is generated.
         -  'old-only' means that only an old metric style
            is generated.
         -  'both' means that both are advertised.

         This leaf only affects IPv4 metrics.";
    }
    description
      "Grouping for global metric style configuration.";
  }

  grouping default-metric-global-cfg {
    leaf value {
      type wide-metric;
      description
        "Value of the metric.";
    }
    description
      "Global default metric configuration grouping.";
  }

  grouping default-metric-global-cfg-with-default {
    leaf value {
      type wide-metric;
      default "10";
      description
        "Value of the metric.";
    }
    description
      "Global default metric configuration grouping.";
  }

  grouping overload-global-cfg {
    leaf status {
      type boolean;
      default "false";
      description
        "This leaf specifies the overload status.";
    }
    description
      "Grouping for overload bit configuration.";
  }

  grouping overload-max-metric-global-cfg {
    leaf timeout {
      type rt-types:timer-value-seconds16;
      units "seconds";
      description
        "Timeout (in seconds) of the overload condition.";
    }
    description
      "Overload maximum metric configuration grouping.";
  }

  grouping route-preference-global-cfg {
    choice granularity {
      case detail {
        leaf internal {
          type uint8;
          description
            "Protocol preference for internal routes.";
        }
        leaf external {
          type uint8;
          description
            "Protocol preference for external routes.";
        }
      }
      case coarse {
        leaf default {
          type uint8;
          description
            "Protocol preference for all IS-IS routes.";
        }
      }
      description
        "Choice for implementation of route preference.";
    }
    description
      "Global route preference grouping.";
  }

  grouping hello-authentication-cfg {
    choice authentication-type {
      case key-chain {
        if-feature "key-chain";
        leaf key-chain {
          type key-chain:key-chain-ref;
          description
            "Reference to a key chain.";
        }
      }
      case password {
        leaf key {
          type string;
          description
            "Authentication key specification.  The length of the
             key may be dependent on the cryptographic algorithm.";
        }
        leaf crypto-algorithm {
          type identityref {
            base key-chain:crypto-algorithm;
          }
          description
            "Cryptographic algorithm associated with a key.";
        }
      }
      description
        "Choice of authentication.";
    }
    description
      "Grouping for Hello authentication.";
  }

  grouping hello-interval-cfg {
    leaf value {
      type rt-types:timer-value-seconds16;
      units "seconds";
      description
        "Interval (in seconds) between successive Hello
         messages.";
    }
    description
      "Interval between Hello messages.";
  }

  grouping hello-interval-cfg-with-default {
    leaf value {
      type rt-types:timer-value-seconds16;
      units "seconds";
      default "10";
      description
        "Interval (in seconds) between successive Hello
         messages.";
    }
    description
      "Interval between Hello messages.";
  }

  grouping hello-multiplier-cfg {
    leaf value {
      type uint16;
      description
        "Number of missed Hello messages prior to
         declaring the adjacency down.";
    }
    description
      "Grouping for the number of missed Hello messages prior to
       declaring the adjacency down.";
  }

  grouping hello-multiplier-cfg-with-default {
    leaf value {
      type uint16;
      default "3";
      description
        "Number of missed Hello messages prior to
         declaring the adjacency down.";
    }
    description
      "Grouping for the number of missed Hello messages prior to
       declaring the adjacency down.";
  }

  grouping priority-cfg {
    leaf value {
      type uint8 {
        range "0 .. 127";
      }
      description
        "Priority of the interface for DIS election.";
    }
    description
      "Interface DIS election priority grouping.";
  }

  grouping priority-cfg-with-default {
    leaf value {
      type uint8 {
        range "0 .. 127";
      }
      default "64";
      description
        "Priority of the interface for DIS election.";
    }
    description
      "Interface DIS election priority grouping.";
  }

  grouping metric-cfg {
    leaf value {
      type wide-metric;
      description
        "Metric value.";
    }
    description
      "Interface metric grouping.";
  }

  grouping metric-cfg-with-default {
    leaf value {
      type wide-metric;
      default "10";
      description
        "Metric value.";
    }
    description
      "Interface metric grouping.";
  }

  grouping metric-parameters {
    container metric-type {
      uses metric-type-global-cfg-with-default;
      container level-1 {
        uses metric-type-global-cfg;
        description
          "Configuration specific to level 1.";
      }
      container level-2 {
        uses metric-type-global-cfg;
        description
          "Configuration specific to level 2.";
      }
      description
        "Metric style global configuration.";
    }
    container default-metric {
      uses default-metric-global-cfg-with-default;
      container level-1 {
        uses default-metric-global-cfg;
        description
          "Configuration specific to level 1.";
      }
      container level-2 {
        uses default-metric-global-cfg;
        description
          "Configuration specific to level 2.";
      }
      description
        "Default metric global configuration.";
    }
    container auto-cost {
      if-feature "auto-cost";
      description
        "Interface auto-cost configuration state.";
      leaf enabled {
        type boolean;
        description
          "Enables or disables interface auto-cost.";
      }
      leaf reference-bandwidth {
        when "../enabled = 'true'" {
          description
            "Only when auto-cost is enabled.";
        }
        type uint32 {
          range "1..4294967";
        }
        units "Mbits";
        description
          "Configures the reference bandwidth used to automatically
           determine the interface cost (Mbits).  The cost is the
           reference bandwidth divided by the interface speed,
           with 1 being the minimum cost.";
      }
    }
    description
      "Grouping for global metric parameters.";
  }

  grouping high-availability-parameters {
    container graceful-restart {
      if-feature "graceful-restart";
      leaf enabled {
        type boolean;
        default "false";
        description
          "Enables graceful restart.";
      }
      leaf restart-interval {
        type rt-types:timer-value-seconds16;
        units "seconds";
        description
          "Interval (in seconds) to attempt graceful restart prior
           to failure.";
      }
      leaf helper-enabled {
        type boolean;
        default "true";
        description
          "Enables a local IS-IS router as a graceful restart
           helper.";
      }
      description
        "Configuration of graceful restart.";
    }
    container nsr {
      if-feature "nsr";
      description
        "Non-Stop Routing (NSR) configuration.";
      leaf enabled {
        type boolean;
        default "false";
        description
          "Enables or disables NSR.";
      }
    }
    description
      "Grouping for high-availability parameters.";
  }

  grouping authentication-parameters {
    container authentication {
      uses authentication-global-cfg;
      container level-1 {
        uses authentication-global-cfg;
        description
          "Configuration specific to level 1.";
      }
      container level-2 {
        uses authentication-global-cfg;
        description
          "Configuration specific to level 2.";
      }
      description
        "Authentication global configuration for
         both LSPs and Sequence Number PDUs (SNPs).";
    }
    description
      "Grouping for authentication parameters.";
  }

  grouping address-family-parameters {
    container address-families {
      if-feature "nlpid-control";
      list address-family-list {
        key "address-family";
        leaf address-family {
          type iana-rt-types:address-family;
          description
            "Address family.";
        }
        leaf enabled {
          type boolean;
          description
            "Activates the address family.";
        }
        description
          "List of address families and whether or not they
           are activated.";
      }
      description
        "Address family configuration.";
    }
    description
      "Grouping for address family parameters.";
  }

  grouping mpls-parameters {
    container mpls {
      container te-rid {
        if-feature "te-rid";
        description
          "Stable IS-IS router IP address used for Traffic
           Engineering.";
        leaf ipv4-router-id {
          type inet:ipv4-address;
          description
            "Router ID value that would be used in TLV 134.";
        }
        leaf ipv6-router-id {
          type inet:ipv6-address;
          description
            "Router ID value that would be used in TLV 140.";
        }
      }
      container ldp {
        container igp-sync {
          if-feature "ldp-igp-sync";
          description
            "This container may be augmented with global
             parameters for LDP IGP synchronization.";
        }
        description
          "LDP configuration.";
      }
      description
        "MPLS configuration.";
    }
    description
      "Grouping for MPLS global parameters.";
  }

  grouping lsp-parameters {
    leaf lsp-mtu {
      type uint16;
      units "bytes";
      default "1492";
      description
        "Maximum size of an LSP PDU in bytes.";
    }
    leaf lsp-lifetime {
      type uint16 {
        range "1..65535";
      }
      units "seconds";
      description
        "Lifetime of the router's LSPs in seconds.";
    }
    leaf lsp-refresh {
      if-feature "lsp-refresh";
      type rt-types:timer-value-seconds16;
      units "seconds";
      description
        "Refresh interval of the router's LSPs in seconds.";
    }
    leaf poi-tlv {
      if-feature "poi-tlv";
      type boolean;
      default "false";
      description
        "Enables the advertisement of the IS-IS Purge Originator
         Identification TLV.";
    }
    description
      "Grouping for LSP global parameters.";
  }

  grouping spf-parameters {
    container spf-control {
      leaf paths {
        if-feature "max-ecmp";
        type uint16 {
          range "1..65535";
        }
        description
          "Maximum number of Equal-Cost Multi-Path (ECMP) paths.";
      }
      container ietf-spf-delay {
        if-feature "ietf-spf-delay";
        uses ietf-spf-delay;
        description
          "IETF SPF delay algorithm configuration.";
      }
      description
        "SPF calculation control.";
    }
    description
      "Grouping for SPF global parameters.";
  }

  grouping instance-config {
    description
      "IS-IS global configuration grouping.";
    uses admin-control;
    leaf level-type {
      type level;
      default "level-all";
      description
        "Level of an IS-IS node.  Can be 'level-1', 'level-2', or
         'level-all'.";
    }
    leaf system-id {
      type system-id;
      description
        "System ID of the node.";
    }
    leaf maximum-area-addresses {
      if-feature "maximum-area-addresses";
      type uint8;
      default "3";
      description
        "Maximum areas supported.";
    }
    leaf-list area-address {
      type area-address;
      description
        "List of areas supported by the protocol instance.";
    }
    uses lsp-parameters;
    uses high-availability-parameters;
    uses node-tag-config;
    uses metric-parameters;
    uses authentication-parameters;
    uses address-family-parameters;
    uses mpls-parameters;
    uses spf-parameters;
    uses instance-fast-reroute-config;
    container preference {
      uses route-preference-global-cfg;
      description
        "Router preference configuration for IS-IS
         protocol instance route installation.";
    }
    container overload {
      uses overload-global-cfg;
      description
        "Router protocol instance overload state configuration.";
    }
    container overload-max-metric {
      if-feature "overload-max-metric";
      uses overload-max-metric-global-cfg;
      description
        "Router protocol instance overload maximum
         metric advertisement configuration.";
    }
  }

  grouping instance-state {
    description
      "IS-IS instance operational state.";
    uses spf-log;
    uses lsp-log;
    uses hostname-db;
    uses lsdb;
    uses local-rib;
    uses system-counters;
    uses instance-fast-reroute-state;
    leaf discontinuity-time {
      type yang:date-and-time;
      description
        "The time of the most recent occasion at which any one
         or more of this IS-IS instance's counters suffered a
         discontinuity.  If no such discontinuities have occurred
         since the IS-IS instance was last reinitialized, then
         this node contains the time the IS-IS instance was
         reinitialized, which normally occurs when it was
         created.";
    }
  }

  grouping multi-topology-config {
    description
      "Per-topology configuration.";
    container default-metric {
      uses default-metric-global-cfg;
      container level-1 {
        uses default-metric-global-cfg;
        description
          "Configuration specific to level 1.";
      }
      container level-2 {
        uses default-metric-global-cfg;
        description
          "Configuration specific to level 2.";
      }
      description
        "Default metric per-topology configuration.";
    }
    uses node-tag-config;
  }

  grouping interface-config {
    description
      "Interface configuration grouping.";
    uses admin-control;
    leaf level-type {
      type level;
      default "level-all";
      description
        "IS-IS level of the interface.";
    }
    leaf lsp-pacing-interval {
      type rt-types:timer-value-milliseconds;
      units "milliseconds";
      default "33";
      description
        "Interval (in milliseconds) between LSP transmissions.";
    }
    leaf lsp-retransmit-interval {
      type rt-types:timer-value-seconds16;
      units "seconds";
      description
        "Interval (in seconds) between LSP retransmissions.";
    }
    leaf passive {
      type boolean;
      default "false";
      description
        "Indicates whether the interface is in passive mode (IS-IS
         is not running, but the network is advertised).";
    }
    leaf csnp-interval {
      type rt-types:timer-value-seconds16;
      units "seconds";
      default "10";
      description
        "Interval (in seconds) between Complete Sequence Number
         Packet (CSNP) messages.";
    }
    container hello-padding {
      leaf enabled {
        type boolean;
        default "true";
        description
          "IS-IS Hello padding activation.  Enabled by default.";
      }
      description
        "IS-IS Hello padding configuration.";
    }
    leaf mesh-group-enabled {
      type mesh-group-state;
      description
        "IS-IS interface mesh group state.";
    }
    leaf mesh-group {
      when "../mesh-group-enabled = 'mesh-set'" {
        description
          "Only valid when 'mesh-group-enabled' equals 'mesh-set'.";
      }
      type uint8;
      description
        "IS-IS interface mesh group ID.";
    }
    leaf interface-type {
      type interface-type;
      default "broadcast";
      description
        "Type of adjacency to be established for the interface.
         This dictates the type of Hello messages that are used.";
    }
    leaf-list tag {
      if-feature "prefix-tag";
      type uint32;
      description
        "List of tags associated with the interface.";
    }
    leaf-list tag64 {
      if-feature "prefix-tag64";
      type uint64;
      description
        "List of 64-bit tags associated with the interface.";
    }
    leaf node-flag {
      if-feature "node-flag";
      type boolean;
      default "false";
      description
        "Sets the prefix as a node representative prefix.";
    }
    container hello-authentication {
      uses hello-authentication-cfg;
      container level-1 {
        uses hello-authentication-cfg;
        description
          "Configuration specific to level 1.";
      }
      container level-2 {
        uses hello-authentication-cfg;
        description
          "Configuration specific to level 2.";
      }
      description
        "Authentication type to be used in Hello messages.";
    }
    container hello-interval {
      uses hello-interval-cfg-with-default;
      container level-1 {
        uses hello-interval-cfg;
        description
          "Configuration specific to level 1.";
      }
      container level-2 {
        uses hello-interval-cfg;
        description
          "Configuration specific to level 2.";
      }
      description
        "Interval between Hello messages.";
    }
    container hello-multiplier {
      uses hello-multiplier-cfg-with-default;
      container level-1 {
        uses hello-multiplier-cfg;
        description
          "Configuration specific to level 1.";
      }
      container level-2 {
        uses hello-multiplier-cfg;
        description
          "Configuration specific to level 2.";
      }
      description
        "Hello multiplier configuration.";
    }
    container priority {
      must '../interface-type = "broadcast"' {
        error-message "Priority only applies to broadcast "
                    + "interfaces.";
        description
          "Checks for a broadcast interface.";
      }
      uses priority-cfg-with-default;
      container level-1 {
        uses priority-cfg;
        description
          "Configuration specific to level 1.";
      }
      container level-2 {
        uses priority-cfg;
        description
          "Configuration specific to level 2.";
      }
      description
        "Priority for DIS election.";
    }
    container metric {
      uses metric-cfg-with-default;
      container level-1 {
        uses metric-cfg;
        description
          "Configuration specific to level 1.";
      }
      container level-2 {
        uses metric-cfg;
        description
          "Configuration specific to level 2.";
      }
      description
        "Metric configuration.";
    }
    container bfd {
      if-feature "bfd";
      description
        "BFD interface configuration.";
      uses bfd-types:client-cfg-parms;
      reference
        "RFC 5880: Bidirectional Forwarding Detection (BFD)
         RFC 5881: Bidirectional Forwarding Detection
         (BFD) for IPv4 and IPv6 (Single Hop)
         RFC 9314: YANG Data Model for Bidirectional Forwarding
         Detection (BFD)";
    }
    container address-families {
      if-feature "nlpid-control";
      list address-family-list {
        key "address-family";
        leaf address-family {
          type iana-rt-types:address-family;
          description
            "Address family.";
        }
        description
          "List of address families.";
      }
      description
        "Interface address families.";
    }
    container mpls {
      container ldp {
        leaf igp-sync {
          if-feature "ldp-igp-sync";
          type boolean;
          default "false";
          description
            "Enables IGP/LDP synchronization.";
        }
        description
          "Configuration related to LDP.";
      }
      description
        "MPLS configuration for IS-IS interfaces.";
    }
    uses interface-fast-reroute-config;
  }

  grouping multi-topology-interface-config {
    description
      "IS-IS interface topology configuration.";
    container metric {
      uses metric-cfg;
      container level-1 {
        uses metric-cfg;
        description
          "Configuration specific to level 1.";
      }
      container level-2 {
        uses metric-cfg;
        description
          "Configuration specific to level 2.";
      }
      description
        "Metric IS-IS interface configuration.";
    }
  }

  grouping interface-state {
    description
      "IS-IS interface operational state.";
    uses adjacency-state;
    uses event-counters;
    uses packet-counters;
    leaf discontinuity-time {
      type yang:date-and-time;
      description
        "The time of the most recent occasion at which any one
         or more of this IS-IS interface's counters suffered a
         discontinuity.  If no such discontinuities have occurred
         since the IS-IS interface was last reinitialized, then
         this node contains the time the IS-IS interface was
         reinitialized, which normally occurs when it was
         created.";
    }
  }

  /* Grouping for the hostname database */

  grouping hostname-db {
    container hostnames {
      config false;
      list hostname {
        key "system-id";
        leaf system-id {
          type system-id;
          description
            "System ID associated with the hostname.";
        }
        leaf hostname {
          type string {
            length "1..255";
          }
          description
            "Hostname associated with the system ID
             as defined in RFC 5301.";
          reference
            "RFC 5301: Dynamic Hostname Exchange Mechanism
             for IS-IS";
        }
        description
          "List of system ID / hostname associations.";
      }
      description
        "Hostname-to-system-ID mapping database.";
    }
    description
      "Grouping for hostname-to-system-ID mapping database.";
  }

  /* Groupings for counters */

  grouping system-counters {
    container system-counters {
      config false;
      list level {
        key "level";
        leaf level {
          type level-number;
          description
            "IS-IS level.";
        }
        leaf corrupted-lsps {
          type uint32;
          description
            "Number of corrupted in-memory LSPs detected.
             LSPs received from the wire with a bad
             checksum are silently dropped and not counted.
             LSPs received from the wire with parse errors
             are counted by 'lsp-errors'.";
        }
        leaf authentication-type-fails {
          type uint32;
          description
            "Number of authentication type mismatches.";
        }
        leaf authentication-fails {
          type uint32;
          description
            "Number of authentication key failures.";
        }
        leaf database-overload {
          type uint32;
          description
            "Number of times the database has become
             overloaded.";
        }
        leaf own-lsp-purge {
          type uint32;
          description
            "Number of times a zero-aged copy of the system's
             own LSP is received from some other IS-IS node.";
        }
        leaf manual-address-drop-from-area {
          type uint32;
          description
            "Number of times a manual address
             has been dropped from the area.";
        }
        leaf max-sequence {
          type uint32;
          description
            "Number of times the system has attempted
             to exceed the maximum sequence number.";
        }
        leaf sequence-number-skipped {
          type uint32;
          description
            "Number of times a sequence number skip has
             occurred.";
        }
        leaf id-len-mismatch {
          type uint32;
          description
            "Number of times a PDU is received with a
             different value for the ID field length
             than that of the receiving system.";
        }
        leaf partition-changes {
          type uint32;
          description
            "Number of partition changes detected.";
        }
        leaf lsp-errors {
          type uint32;
          description
            "Number of LSPs received with errors.";
        }
        leaf spf-runs {
          type uint32;
          description
            "Number of times SPF was run at this level.";
        }
        description
          "List of supported levels.";
      }
      description
        "List of counters for the IS-IS protocol instance.";
    }
    description
      "Grouping for IS-IS system counters.";
  }

  grouping event-counters {
    container event-counters {
      config false;
      leaf adjacency-changes {
        type uint32;
        description
          "The number of times an adjacency state change has
           occurred on this interface.";
      }
      leaf adjacency-number {
        type uint32;
        description
          "The number of adjacencies on this interface.";
      }
      leaf init-fails {
        type uint32;
        description
          "The number of times initialization of this interface has
           failed.  This counts events such as Point-to-Point
           Protocol (PPP) Network Control Protocol (NCP) failures.
           Failures to form an adjacency are counted by
           'adjacency-rejects'.";
      }
      leaf adjacency-rejects {
        type uint32;
        description
          "The number of times an adjacency has been
           rejected on this interface.";
      }
      leaf id-len-mismatch {
        type uint32;
        description
          "The number of times an IS-IS PDU with an ID
           field length different from that for this
           system has been received on this interface.";
      }
      leaf max-area-addresses-mismatch {
        type uint32;
        description
          "The number of times an IS-IS PDU has been
           received on this interface with the
           max area address field differing from that of
           this system.";
      }
      leaf authentication-type-fails {
        type uint32;
        description
          "Number of authentication type mismatches.";
      }
      leaf authentication-fails {
        type uint32;
        description
          "Number of authentication key failures.";
      }
      leaf lan-dis-changes {
        type uint32;
        description
          "The number of times the DIS has changed on this
           interface at this level.  If the interface type is
           'point-to-point', the count is zero.";
      }
      description
        "IS-IS interface event counters.";
    }
    description
      "Grouping for IS-IS interface event counters.";
  }

  grouping packet-counters {
    container packet-counters {
      config false;
      list level {
        key "level";
        leaf level {
          type level-number;
          description
            "IS-IS level.";
        }
        container iih {
          leaf in {
            type uint32;
            description
              "Received IS-IS Hello (IIH) PDUs.";
          }
          leaf out {
            type uint32;
            description
              "Sent IIH PDUs.";
          }
          description
            "Number of IIH PDUs received/sent.";
        }
        container ish {
          leaf in {
            type uint32;
            description
              "Received Intermediate System Hello (ISH) PDUs.";
          }
          leaf out {
            type uint32;
            description
              "Sent ISH PDUs.";
          }
          description
            "ISH PDUs received/sent.";
        }
        container esh {
          leaf in {
            type uint32;
            description
              "Received End System Hello (ESH) PDUs.";
          }
          leaf out {
            type uint32;
            description
              "Sent ESH PDUs.";
          }
          description
            "Number of ESH PDUs received/sent.";
        }
        container lsp {
          leaf in {
            type uint32;
            description
              "Received Link State PDU (LSP) PDUs.";
          }
          leaf out {
            type uint32;
            description
              "Sent LSP PDUs.";
          }
          description
            "Number of LSP PDUs received/sent.";
        }
        container psnp {
          leaf in {
            type uint32;
            description
              "Received Partial Sequence Number PDU (PSNP) PDUs.";
          }
          leaf out {
            type uint32;
            description
              "Sent PSNP PDUs.";
          }
          description
            "Number of PSNP PDUs received/sent.";
        }
        container csnp {
          leaf in {
            type uint32;
            description
              "Received Complete Sequence Number PDU (CSNP) PDUs.";
          }
          leaf out {
            type uint32;
            description
              "Sent CSNP PDUs.";
          }
          description
            "Number of CSNP PDUs received/sent.";
        }
        container unknown {
          leaf in {
            type uint32;
            description
              "Received unknown PDUs.";
          }
          description
            "Number of unknown PDUs received.";
        }
        description
          "List of packet counters for supported levels.";
      }
      description
        "Packet counters per IS-IS level.";
    }
    description
      "Grouping for packet counters per IS-IS level.";
  }

  /* Groupings for various log buffers */

  grouping spf-log {
    container spf-log {
      config false;
      list event {
        key "id";
        leaf id {
          type yang:counter32;
          description
            "Event identifier.  A purely internal value.
             The most recent events are expected to have a bigger
             ID number.";
        }
        leaf spf-type {
          type enumeration {
            enum full {
              description
                "Full SPF computation.";
            }
            enum route-only {
              description
                "SPF computation of route reachability
                 only.";
            }
          }
          description
            "Type of SPF computation performed.";
        }
        leaf level {
          type level-number;
          description
            "IS-IS level number for the SPF computation.";
        }
        leaf schedule-timestamp {
          type yang:timestamp;
          description
            "Timestamp of when the SPF computation was
             scheduled.";
        }
        leaf start-timestamp {
          type yang:timestamp;
          description
            "Timestamp of when the SPF computation started.";
        }
        leaf end-timestamp {
          type yang:timestamp;
          description
            "Timestamp of when the SPF computation ended.";
        }
        list trigger-lsp {
          key "lsp";
          leaf lsp {
            type lsp-id;
            description
              "LSP ID of the LSP that triggered the SPF
               computation.";
          }
          leaf sequence {
            type uint32;
            description
              "Sequence number of the LSP that triggered the SPF
               computation.";
          }
          description
            "This list includes the LSPs that triggered the
             SPF computation.";
        }
        description
          "List of computation events.  Implemented as a
           wrapping buffer.";
      }
      description
        "This container lists the SPF computation events.";
    }
    description
      "Grouping for SPF log events.";
  }

  grouping lsp-log {
    container lsp-log {
      config false;
      list event {
        key "id";
        leaf id {
          type yang:counter32;
          description
            "Event identifier.  A purely internal value.
             The most recent events are expected to have a bigger
             ID number.";
        }
        leaf level {
          type level-number;
          description
            "IS-IS level number for the LSP.";
        }
        container lsp {
          leaf lsp {
            type lsp-id;
            description
              "LSP ID of the LSP.";
          }
          leaf sequence {
            type uint32;
            description
              "Sequence number of the LSP.";
          }
          description
            "LSP identification container for either the received
             LSP or the locally generated LSP.";
        }
        leaf received-timestamp {
          type yang:timestamp;
          description
            "This is the timestamp when the LSP was received.
             In the case of a local LSP update, the timestamp refers
             to the LSP origination time.";
        }
        leaf reason {
          type identityref {
            base lsp-log-reason;
          }
          description
            "Type of LSP change.";
        }
        description
          "List of LSP events.  Implemented as a wrapping buffer.";
      }
      description
        "This container lists the LSP log.
         Local LSP modifications are also included in the list.";
    }
    description
      "Grouping for the LSP log.";
  }

  /* Groupings for the Link State Database (LSDB) descriptions */
  /* Unknown TLV and sub-TLV descriptions */

  grouping tlv {
    description
      "Type-Length-Value (TLV).";
    leaf type {
      type uint16;
      description
        "TLV type.";
    }
    leaf length {
      type uint16;
      description
        "TLV length (octets).";
    }
    leaf value {
      type yang:hex-string;
      description
        "TLV value.";
    }
  }

  grouping unknown-tlvs {
    description
      "Unknown TLVs grouping.  Used for unknown TLVs or
       unknown sub-TLVs.";
    container unknown-tlvs {
      description
        "All unknown TLVs.";
      list unknown-tlv {
        description
          "Unknown TLV.";
        uses tlv;
      }
    }
  }

  /* TLVs and sub-TLVs for prefixes */

  grouping prefix-reachability-attributes {
    description
      "Grouping for extended reachability attributes of an
       IPv4 or IPv6 prefix.";
    leaf external-prefix-flag {
      type boolean;
      description
        "External prefix flag.";
    }
    leaf readvertisement-flag {
      type boolean;
      description
        "Re-advertisement flag.";
    }
    leaf node-flag {
      type boolean;
      description
        "Node flag.";
    }
  }

  grouping prefix-ipv4-source-router-id {
    description
      "Grouping for the IPv4 source router ID of a prefix
       advertisement.";
    leaf ipv4-source-router-id {
      type inet:ipv4-address;
      description
        "IPv4 source router ID address.";
    }
  }

  grouping prefix-ipv6-source-router-id {
    description
      "Grouping for the IPv6 source router ID of a prefix
       advertisement.";
    leaf ipv6-source-router-id {
      type inet:ipv6-address;
      description
        "IPv6 source router ID address.";
    }
  }

  grouping prefix-attributes-extension {
    description
      "Prefix extended attributes as defined in RFC 7794.";
    reference
      "RFC 7794: IS-IS Prefix Attributes for Extended IPv4 and IPv6
       Reachability";
    uses prefix-reachability-attributes;
    uses prefix-ipv4-source-router-id;
    uses prefix-ipv6-source-router-id;
  }

  grouping prefix-ipv4-std {
    description
      "Grouping for attributes of an IPv4 standard prefix
       as defined in RFC 1195.";
    reference
      "RFC 1195: Use of OSI IS-IS for routing in TCP/IP and
       dual environments";
    leaf ip-prefix {
      type inet:ipv4-address;
      description
        "IPv4 prefix address.";
    }
    leaf prefix-len {
      type uint8;
      description
        "IPv4 prefix length (in bits).";
    }
    leaf i-e {
      type boolean;
      description
        "Internal or external (I/E) metric bit value.
         Set to 'false' to indicate an internal metric.";
    }
    container default-metric {
      leaf metric {
        type std-metric;
        description
          "Default IS-IS metric for the IPv4 prefix.";
      }
      description
        "IS-IS default metric container.";
    }
    container delay-metric {
      leaf metric {
        type std-metric;
        description
          "IS-IS delay metric for the IPv4 prefix.";
      }
      leaf supported {
        type boolean;
        default "false";
        description
          "Indicates whether the IS-IS delay metric is supported.";
      }
      description
        "IS-IS delay metric container.";
    }
    container expense-metric {
      leaf metric {
        type std-metric;
        description
          "IS-IS expense metric for the IPv4 prefix.";
      }
      leaf supported {
        type boolean;
        default "false";
        description
          "Indicates whether the IS-IS expense metric is supported.";
      }
      description
        "IS-IS expense metric container.";
    }
    container error-metric {
      leaf metric {
        type std-metric;
        description
          "This leaf describes the IS-IS error metric value.";
      }
      leaf supported {
        type boolean;
        default "false";
        description
          "Indicates whether the IS-IS error metric is supported.";
      }
      description
        "IS-IS error metric container.";
    }
  }

  grouping prefix-ipv4-extended {
    description
      "Grouping for attributes of an IPv4 extended prefix
       as defined in RFC 5305.";
    reference
      "RFC 5305: IS-IS Extensions for Traffic Engineering";
    leaf up-down {
      type boolean;
      description
        "Value of the up/down bit.
         Set to 'true' when the prefix has been advertised down
         the hierarchy.";
    }
    leaf ip-prefix {
      type inet:ipv4-address;
      description
        "IPv4 prefix address.";
    }
    leaf prefix-len {
      type uint8;
      description
        "IPv4 prefix length (in bits).";
    }
    leaf metric {
      type wide-metric;
      description
        "IS-IS wide metric value.";
    }
    leaf-list tag {
      type uint32;
      description
        "List of 32-bit tags associated with the IPv4 prefix.";
    }
    leaf-list tag64 {
      type uint64;
      description
        "List of 64-bit tags associated with the IPv4 prefix.";
    }
    uses prefix-attributes-extension;
  }

  grouping prefix-ipv6-extended {
    description
      "Grouping for attributes of an IPv6 prefix
       as defined in RFC 5308.";
    reference
      "RFC 5308: Routing IPv6 with IS-IS";
    leaf up-down {
      type boolean;
      description
        "Value of the up/down bit.
         Set to 'true' when the prefix has been advertised down
         the hierarchy.";
    }
    leaf ip-prefix {
      type inet:ipv6-address;
      description
        "IPv6 prefix address.";
    }
    leaf prefix-len {
      type uint8;
      description
        "IPv6 prefix length (in bits).";
    }
    leaf metric {
      type wide-metric;
      description
        "IS-IS wide metric value.";
    }
    leaf-list tag {
      type uint32;
      description
        "List of 32-bit tags associated with the IPv6 prefix.";
    }
    leaf-list tag64 {
      type uint64;
      description
        "List of 64-bit tags associated with the IPv6 prefix.";
    }
    uses prefix-attributes-extension;
  }

  /* TLVs and sub-TLVs for neighbors */

  grouping neighbor-link-attributes {
    description
      "Grouping for link attributes as defined
       in RFC 5029.";
    reference
      "RFC 5029: Definition of an IS-IS Link Attribute Sub-TLV";
    leaf link-attributes-flags {
      type uint16;
      description
        "Flags for the link attributes.";
    }
  }

  grouping neighbor-gmpls-extensions {
    description
      "Grouping for GMPLS attributes of a neighbor as defined
       in RFC 5307.";
    reference
      "RFC 5307: IS-IS Extensions in Support of Generalized
       Multi-Protocol Label Switching (GMPLS)";
    leaf link-local-id {
      type uint32;
      description
        "Local identifier of the link.";
    }
    leaf remote-local-id {
      type uint32;
      description
        "Remote identifier of the link.";
    }
    leaf protection-capability {
      type uint8;
      description
        "Describes the protection capabilities
         of the link.  This is the value of the
         first octet of the sub-TLV type 20 value.";
    }
    container interface-switching-capability {
      description
        "Interface switching capabilities of the link.";
      leaf switching-capability {
        type uint8;
        description
          "Switching capability of the link.";
      }
      leaf encoding {
        type uint8;
        description
          "Type of encoding of the LSP being used.";
      }
      container max-lsp-bandwidths {
        description
          "Per-priority maximum LSP bandwidths.";
        list max-lsp-bandwidth {
          leaf priority {
            type uint8 {
              range "0 .. 7";
            }
            description
              "Priority from 0 to 7.";
          }
          leaf bandwidth {
            type rt-types:bandwidth-ieee-float32;
            description
              "Maximum LSP bandwidth.";
          }
          description
            "List of maximum LSP bandwidths for different
             priorities.";
        }
      }
      container tdm-specific {
        when '../switching-capability = 100';
        description
          "Switching-capability-specific information applicable
           when the switching type is Time-Division Multiplexing
           (TDM).";
        leaf minimum-lsp-bandwidth {
          type rt-types:bandwidth-ieee-float32;
          description
            "Minimum LSP bandwidth.";
        }
        leaf indication {
          type uint8;
          description
            "Indicates whether the interface supports Standard
             or Arbitrary SONET/SDH (Synchronous Optical Network /
             Synchronous Digital Hierarchy).";
        }
      }
      container psc-specific {
        when "../switching-capability &gt;= 1 and
              ../switching-capability &lt;= 4";
        description
          "Switching-capability-specific information applicable
           when the switching type is PSC1, PSC2, PSC3, or PSC4
           ('PSC' stands for 'Packet Switching Capability').";
        leaf minimum-lsp-bandwidth {
          type rt-types:bandwidth-ieee-float32;
          description
            "Minimum LSP bandwidth.";
        }
        leaf mtu {
          type uint16;
          units "bytes";
          description
            "Interface MTU.";
        }
      }
    }
  }

  grouping neighbor-extended-te-extensions {
    description
      "Grouping for TE attributes of a neighbor as defined
       in RFC 8570.";
    reference
      "RFC 8570: IS-IS Traffic Engineering (TE) Metric Extensions";
    container unidirectional-link-delay {
      description
        "Container for the average delay
         from the local neighbor to the remote neighbor.";
      container flags {
        leaf-list unidirectional-link-delay-subtlv-flags {
          type identityref {
            base unidirectional-link-delay-subtlv-flag;
          }
          description
            "This list contains identities for the bits that
             are set.";
        }
        description
          "Unidirectional Link Delay sub-TLV flags.";
      }
      leaf value {
        type uint32;
        units "usec";
        description
          "Delay value expressed in microseconds.";
      }
    }
    container min-max-unidirectional-link-delay {
      description
        "Container for the minimum and maximum delay
         from the local neighbor to the remote neighbor.";
      container flags {
        leaf-list min-max-unidirectional-link-delay-subtlv-flags {
          type identityref {
            base min-max-unidirectional-link-delay-subtlv-flag;
          }
          description
            "This list contains identities for the bits that
             are set.";
        }
        description
          "Min/Max Unidirectional Link Delay sub-TLV flags.";
      }
      leaf min-value {
        type uint32;
        units "usec";
        description
          "Minimum delay value expressed in microseconds.";
      }
      leaf max-value {
        type uint32;
        units "usec";
        description
          "Maximum delay value expressed in microseconds.";
      }
    }
    container unidirectional-link-delay-variation {
      description
        "Container for the average delay variation
         from the local neighbor to the remote neighbor.";
      leaf value {
        type uint32;
        units "usec";
        description
          "Delay variation value expressed in microseconds.";
      }
    }
    container unidirectional-link-loss {
      description
        "Container for packet loss from the local neighbor to the
         remote neighbor.";
      container flags {
        leaf-list unidirectional-link-loss-subtlv-flags {
          type identityref {
            base unidirectional-link-loss-subtlv-flag;
          }
          description
            "This list contains identities for the bits that
             are set.";
        }
        description
          "Unidirectional Link Loss sub-TLV flags.";
      }
      leaf value {
        type uint32;
        units "percent";
        description
          "Link packet loss expressed as a percentage of
           the total traffic sent over a configurable interval.";
      }
    }
    container unidirectional-link-residual-bandwidth {
      description
        "Container for the residual bandwidth
         from the local neighbor to the remote neighbor.";
      leaf value {
        type rt-types:bandwidth-ieee-float32;
        units "Bps";
        description
          "Residual bandwidth.";
      }
    }
    container unidirectional-link-available-bandwidth {
      description
        "Container for the available bandwidth
         from the local neighbor to the remote neighbor.";
      leaf value {
        type rt-types:bandwidth-ieee-float32;
        units "Bps";
        description
          "Available bandwidth.";
      }
    }
    container unidirectional-link-utilized-bandwidth {
      description
        "Container for the utilized bandwidth
         from the local neighbor to the remote neighbor.";
      leaf value {
        type rt-types:bandwidth-ieee-float32;
        units "Bps";
        description
          "Utilized bandwidth.";
      }
    }
  }

  grouping neighbor-te-extensions {
    description
      "Grouping for TE attributes of a neighbor as defined
       in RFC 5305.";
    reference
      "RFC 5305: IS-IS Extensions for Traffic Engineering";
    leaf admin-group {
      type uint32;
      description
        "Administrative Group / Resource Class/Color.";
    }
    container local-if-ipv4-addrs {
      description
        "All local interface IPv4 addresses.";
      leaf-list local-if-ipv4-addr {
        type inet:ipv4-address;
        description
          "List of local interface IPv4 addresses.";
      }
    }
    container remote-if-ipv4-addrs {
      description
        "All remote interface IPv4 addresses.";
      leaf-list remote-if-ipv4-addr {
        type inet:ipv4-address;
        description
          "List of remote interface IPv4 addresses.";
      }
    }
    leaf te-metric {
      type uint32;
      description
        "TE metric.";
    }
    leaf max-bandwidth {
      type rt-types:bandwidth-ieee-float32;
      description
        "Maximum bandwidth.";
    }
    leaf max-reservable-bandwidth {
      type rt-types:bandwidth-ieee-float32;
      description
        "Maximum reservable bandwidth.";
    }
    container unreserved-bandwidths {
      description
        "All unreserved bandwidths.";
      list unreserved-bandwidth {
        leaf priority {
          type uint8 {
            range "0 .. 7";
          }
          description
            "Priority from 0 to 7.";
        }
        leaf unreserved-bandwidth {
          type rt-types:bandwidth-ieee-float32;
          description
            "Unreserved bandwidth.";
        }
        description
          "List of unreserved bandwidths for different
           priorities.";
      }
    }
  }

  grouping neighbor-extended {
    description
      "Grouping for attributes of an IS-IS extended neighbor.";
    leaf neighbor-id {
      type extended-system-id;
      description
        "System ID of the extended neighbor.";
    }
    container instances {
      description
        "List of all adjacencies between the local
         system and the neighbor system ID.";
      list instance {
        key "id";
        leaf id {
          type uint32;
          description
            "Unique identifier of an instance of a
             particular neighbor.";
        }
        leaf metric {
          type wide-metric;
          description
            "IS-IS wide metric for the extended neighbor.";
        }
        uses neighbor-gmpls-extensions;
        uses neighbor-te-extensions;
        uses neighbor-extended-te-extensions;
        uses neighbor-link-attributes;
        uses unknown-tlvs;
        description
          "Instance of a particular adjacency.";
      }
    }
  }

  grouping neighbor {
    description
      "IS-IS standard neighbor grouping.";
    leaf neighbor-id {
      type extended-system-id;
      description
        "IS-IS neighbor system ID.";
    }
    container instances {
      description
        "List of all adjacencies between the local
         system and the neighbor system ID.";
      list instance {
        key "id";
        leaf id {
          type uint32;
          description
            "Unique identifier of an instance of a
             particular neighbor.";
        }
        leaf i-e {
          type boolean;
          description
            "Internal or external (I/E) metric bit value.
             Set to 'false' to indicate an internal metric.";
        }
        container default-metric {
          leaf metric {
            type std-metric;
            description
              "IS-IS default metric value.";
          }
          description
            "IS-IS default metric container.";
        }
        container delay-metric {
          leaf metric {
            type std-metric;
            description
              "IS-IS delay metric value.";
          }
          leaf supported {
            type boolean;
            default "false";
            description
              "IS-IS delay metric supported.";
          }
          description
            "IS-IS delay metric container.";
        }
        container expense-metric {
          leaf metric {
            type std-metric;
            description
              "IS-IS expense metric value.";
          }
          leaf supported {
            type boolean;
            default "false";
            description
              "IS-IS expense metric supported.";
          }
          description
            "IS-IS expense metric container.";
        }
        container error-metric {
          leaf metric {
            type std-metric;
            description
              "IS-IS error metric value.";
          }
          leaf supported {
            type boolean;
            default "false";
            description
              "IS-IS error metric supported.";
          }
          description
            "IS-IS error metric container.";
        }
        description
          "Instance of a particular adjacency as defined in
           ISO 10589.";
        reference
          "ISO 10589: Intermediate System to Intermediate System
           intra-domain routeing information exchange protocol
           for use in conjunction with the protocol for providing
           the connectionless-mode network service (ISO 8473)";
      }
    }
  }

  /* Top-level TLVs */

  grouping tlv132-ipv4-addresses {
    leaf-list ipv4-addresses {
      type inet:ipv4-address;
      description
        "List of IPv4 addresses of the IS-IS node.  The IS-IS
         reference is TLV 132.";
    }
    description
      "Grouping for TLV 132.";
  }

  grouping tlv232-ipv6-addresses {
    leaf-list ipv6-addresses {
      type inet:ipv6-address;
      description
        "List of IPv6 addresses of the IS-IS node.  The IS-IS
         reference is TLV 232.";
    }
    description
      "Grouping for TLV 232.";
  }

  grouping tlv134-ipv4-te-rid {
    leaf ipv4-te-routerid {
      type inet:ipv4-address;
      description
        "IPv4 Traffic Engineering router ID of the IS-IS node.
         The IS-IS reference is TLV 134.";
    }
    description
      "Grouping for TLV 134.";
  }

  grouping tlv140-ipv6-te-rid {
    leaf ipv6-te-routerid {
      type inet:ipv6-address;
      description
        "IPv6 Traffic Engineering router ID of the IS-IS node.
         The IS-IS reference is TLV 140.";
    }
    description
      "Grouping for TLV 140.";
  }

  grouping tlv129-protocols {
    leaf-list protocol-supported {
      type uint8;
      description
        "List of supported protocols of the IS-IS node.
         The IS-IS reference is TLV 129.";
    }
    description
      "Grouping for TLV 129.";
  }

  grouping tlv137-hostname {
    leaf dynamic-hostname {
      type string;
      description
        "Hostname of the IS-IS node.  The IS-IS reference
         is TLV 137.";
    }
    description
      "Grouping for TLV 137.";
  }

  grouping tlv10-authentication {
    container authentication {
      leaf authentication-type {
        type identityref {
          base key-chain:crypto-algorithm;
        }
        description
          "Authentication type to be used with an IS-IS node.";
      }
      leaf authentication-key {
        type string;
        description
          "Authentication key to be used.  For security reasons,
           the authentication key MUST NOT be presented in
           a cleartext format in response to any request
           (e.g., via get or get-config).";
      }
      description
        "IS-IS node authentication information container.  The
         IS-IS reference is TLV 10.";
    }
    description
      "Grouping for TLV 10.";
  }

  grouping tlv229-mt {
    container mt-entries {
      list topology {
        description
          "List of topologies supported.";
        leaf mt-id {
          type uint16 {
            range "0 .. 4095";
          }
          description
            "Multi-Topology (MT) identifier of the topology.";
        }
        container attributes {
          leaf-list flags {
            type identityref {
              base tlv229-flag;
            }
            description
              "This list contains identities for the bits that
               are set.";
          }
          description
            "TLV 229 flags.";
        }
      }
      description
        "IS-IS node topology information container.  The
         IS-IS reference is TLV 229.";
    }
    description
      "Grouping for TLV 229.";
  }

  grouping tlv242-router-capabilities {
    container router-capabilities {
      list router-capability {
        container flags {
          leaf-list router-capability-flags {
            type identityref {
              base router-capability-flag;
            }
            description
              "This list contains identities for the bits that
               are set.";
          }
          description
            "Router Capability flags.";
        }
        container node-tags {
          if-feature "node-tag";
          list node-tag {
            leaf tag {
              type uint32;
              description
                "Node tag value.";
            }
            description
              "List of tags.";
          }
          description
            "Container for node administrative tags.";
        }
        uses unknown-tlvs;
        description
          "IS-IS node capabilities.  This list element may
           be extended with detailed information.  The IS-IS
           reference is TLV 242.";
      }
      description
        "List of Router Capability TLVs.";
    }
    description
      "Grouping for TLV 242.";
  }

  grouping tlv138-srlg {
    description
      "Grouping for TLV 138.";
    container links-srlgs {
      list links {
        leaf neighbor-id {
          type extended-system-id;
          description
            "System ID of the extended neighbor.";
        }
        leaf flags {
          type uint8;
          description
            "Flags associated with the link.";
        }
        leaf link-local-id {
          type union {
            type inet:ip-address;
            type uint32;
          }
          description
            "Local identifier of the link.
             It could be an IPv4 address or a local identifier.";
        }
        leaf link-remote-id {
          type union {
            type inet:ip-address;
            type uint32;
          }
          description
            "Remote identifier of the link.
             It could be an IPv4 address or a remotely learned
             identifier.";
        }
        container srlgs {
          description
            "List of SRLGs.";
          leaf-list srlg {
            type uint32;
            description
              "SRLG value of the link.";
          }
        }
        description
          "SRLG attribute of a link.";
      }
      description
        "List of links with SRLGs.";
    }
  }

  /* Grouping for LSDB descriptions */

  grouping lsp-entry {
    description
      "IS-IS LSP database entry grouping.";
    leaf decoded-completed {
      type boolean;
      description
        "The IS-IS LSP body has been fully decoded.";
    }
    leaf raw-data {
      type yang:hex-string;
      description
        "The hexadecimal representation of the complete LSP
         as received or originated, in network byte order.";
    }
    leaf lsp-id {
      type lsp-id;
      description
        "LSP ID of the LSP.";
    }
    leaf checksum {
      type uint16;
      description
        "LSP checksum.";
    }
    leaf remaining-lifetime {
      type uint16;
      units "seconds";
      description
        "Remaining lifetime (in seconds) until LSP expiration.";
    }
    leaf sequence {
      type uint32;
      description
        "This leaf describes the sequence number of the LSP.";
    }
    container attributes {
      leaf-list lsp-flags {
        type identityref {
          base lsp-flag;
        }
        description
          "This list contains identities for the bits that
           are set.";
      }
      description
        "LSP attributes.";
    }
    uses tlv132-ipv4-addresses;
    uses tlv232-ipv6-addresses;
    uses tlv134-ipv4-te-rid;
    uses tlv140-ipv6-te-rid;
    uses tlv129-protocols;
    uses tlv137-hostname;
    uses tlv10-authentication;
    uses tlv229-mt;
    uses tlv242-router-capabilities;
    uses tlv138-srlg;
    uses unknown-tlvs;
    container is-neighbor {
      list neighbor {
        key "neighbor-id";
        uses neighbor;
        description
          "List of neighbors.";
      }
      description
        "Standard IS neighbors container.  The IS-IS reference is
         TLV 2.";
    }
    container extended-is-neighbor {
      list neighbor {
        key "neighbor-id";
        uses neighbor-extended;
        description
          "List of extended IS neighbors.";
      }
      description
        "Standard IS extended neighbors container.  The IS-IS
         reference is TLV 22.";
    }
    container ipv4-internal-reachability {
      list prefixes {
        uses prefix-ipv4-std;
        description
          "List of prefixes.";
      }
      description
        "IPv4 internal reachability information container.
         The IS-IS reference is TLV 128.";
    }
    container ipv4-external-reachability {
      list prefixes {
        uses prefix-ipv4-std;
        description
          "List of prefixes.";
      }
      description
        "IPv4 external reachability information container.  The
         IS-IS reference is TLV 130.";
    }
    container extended-ipv4-reachability {
      list prefixes {
        uses prefix-ipv4-extended;
        uses unknown-tlvs;
        description
          "List of prefixes.";
      }
      description
        "IPv4 extended reachability information container.  The
         IS-IS reference is TLV 135.";
    }
    container mt-is-neighbor {
      list neighbor {
        leaf mt-id {
          type uint16 {
            range "0 .. 4095";
          }
          description
            "Multi-Topology (MT) identifier.";
        }
        uses neighbor-extended;
        description
          "List of neighbors.";
      }
      description
        "IS-IS MT neighbor container.  The IS-IS reference is
         TLV 223.";
    }
    container mt-extended-ipv4-reachability {
      list prefixes {
        leaf mt-id {
          type uint16 {
            range "0 .. 4095";
          }
          description
            "MT identifier.";
        }
        uses prefix-ipv4-extended;
        uses unknown-tlvs;
        description
          "List of extended prefixes.";
      }
      description
        "IPv4 MT extended reachability information container.
         The IS-IS reference is TLV 235.";
      reference
        "RFC 5120: M-ISIS: Multi Topology (MT) Routing in
         Intermediate System to Intermediate Systems (IS-ISs)";
    }
    container mt-ipv6-reachability {
      list prefixes {
        leaf mt-id {
          type uint16 {
            range "0 .. 4095";
          }
          description
            "MT identifier.";
        }
        uses prefix-ipv6-extended;
        uses unknown-tlvs;
        description
          "List of IPv6 extended prefixes.";
      }
      description
        "IPv6 MT extended reachability information container.
         The IS-IS reference is TLV 237.";
      reference
        "RFC 5120: M-ISIS: Multi Topology (MT) Routing in
         Intermediate System to Intermediate Systems (IS-ISs)";
    }
    container ipv6-reachability {
      list prefixes {
        uses prefix-ipv6-extended;
        uses unknown-tlvs;
        description
          "List of IPv6 prefixes.";
      }
      description
        "IPv6 reachability information container.  The IS-IS
         reference is TLV 236.";
    }
  }

  grouping lsdb {
    description
      "Link State Database (LSDB) grouping.";
    container database {
      config false;
      list levels {
        key "level";
        leaf level {
          type level-number;
          description
            "LSDB level number (1 or 2).";
        }
        list lsp {
          key "lsp-id";
          uses lsp-entry;
          description
            "List of LSPs in the LSDB.";
        }
        description
          "List of LSPs for the LSDB-level container.";
      }
      description
        "IS-IS LSDB container.";
    }
  }

  /* Augmentations */

  augment "/rt:routing/"
        + "rt:ribs/rt:rib/rt:routes/rt:route" {
    when "derived-from-or-self(rt:source-protocol, 'isis:isis')" {
      description
        "IS-IS-specific route attributes.";
    }
    uses route-content;
    description
      "This augments the route object in the Routing Information
       Base (RIB) with IS-IS-specific attributes.";
  }

  augment "/if:interfaces/if:interface" {
    leaf clns-mtu {
      if-feature "osi-interface";
      type uint16;
      description
        "Connectionless-mode Network Service (CLNS) MTU of the
         interface.";
    }
    description
      "ISO-specific interface parameters.";
  }

  augment "/rt:routing/rt:control-plane-protocols/"
        + "rt:control-plane-protocol" {
    when "derived-from-or-self(rt:type, 'isis:isis')" {
      description
        "This augmentation is only valid when the routing protocol
         instance type is 'isis'.";
    }
    description
      "This augments a routing protocol instance with IS-IS-specific
       parameters.";
    container isis {
      must 'count(area-address) &gt; 0' {
        error-message "At least one area address must be "
                    + "configured.";
        description
          "Enforces the configuration of at least one area.";
      }
      uses instance-config;
      uses instance-state;
      container topologies {
        if-feature "multi-topology";
        list topology {
          key "name";
          leaf enabled {
            type boolean;
            description
              "Enables the topology configuration.";
          }
          leaf name {
            type leafref {
              path "../../../../../../rt:ribs/rt:rib/rt:name";
            }
            description
              "RIB corresponding to the topology.";
          }
          uses multi-topology-config;
          description
            "List of topologies.";
        }
        description
          "MT container.";
      }
      container interfaces {
        list interface {
          key "name";
          leaf name {
            type if:interface-ref;
            description
              "Reference to the interface within
               the routing instance.";
          }
          uses interface-config;
          uses interface-state;
          container topologies {
            if-feature "multi-topology";
            list topology {
              key "name";
              leaf name {
                type leafref {
                  path "../../../../../../../../"
                     + "rt:ribs/rt:rib/rt:name";
                }
                description
                  "RIB corresponding to the topology.";
              }
              uses multi-topology-interface-config;
              description
                "List of interface topologies.";
            }
            description
              "MT container.";
          }
          description
            "List of IS-IS interfaces.";
        }
        description
          "Configuration container specific to IS-IS interfaces.";
      }
      description
        "IS-IS configuration/state top-level container.";
    }
  }

  /* RPC methods */

  rpc clear-adjacency {
    description
      "This RPC request clears a particular set of IS-IS
       adjacencies.  If the operation fails for an internal
       reason, then the 'error-tag' and 'error-app-tag' should be
       set indicating the reason for the failure.";
    reference
      "RFC 6241: Network Configuration Protocol (NETCONF)";
    input {
      leaf routing-protocol-instance-name {
        type leafref {
          path "/rt:routing/rt:control-plane-protocols/"
             + "rt:control-plane-protocol/rt:name";
        }
        mandatory true;
        description
          "Name of the IS-IS protocol instance whose IS-IS
           adjacency is being cleared.

           If the corresponding IS-IS instance doesn't exist,
           then the operation will fail with an 'error-tag' of
           'data-missing' and an 'error-app-tag' of
           'routing-protocol-instance-not-found'.";
      }
      leaf level {
        type level;
        description
          "IS-IS level of the adjacency to be cleared.  If the
           IS-IS level is 'level-all', level-1 and level-2
           adjacencies would both be cleared.

           If the value provided is different from the value
           authorized in the enum type, then the operation
           SHALL fail with an 'error-tag' of 'data-missing' and
           an 'error-app-tag' of 'bad-isis-level'.";
      }
      leaf interface {
        type if:interface-ref;
        description
          "IS-IS interface name.

           If the corresponding IS-IS interface doesn't exist,
           then the operation SHALL fail with an 'error-tag' of
           'data-missing' and an 'error-app-tag' of
           'isis-interface-not-found'.";
      }
    }
  }

  rpc clear-database {
    description
      "This RPC request clears a particular IS-IS database.
       Additionally, all neighbor adjacencies will be forced to
       the DOWN state and self-originated LSPs will be
       reoriginated.  If the operation fails for an IS-IS
       internal reason, then the 'error-tag' and 'error-app-tag'
       should be set indicating the reason for the failure.";
    input {
      leaf routing-protocol-instance-name {
        type leafref {
          path "/rt:routing/rt:control-plane-protocols/"
             + "rt:control-plane-protocol/rt:name";
        }
        mandatory true;
        description
          "Name of the IS-IS protocol instance whose IS-IS
           database or databases are being cleared.

           If the corresponding IS-IS instance doesn't exist,
           then the operation will fail with an 'error-tag' of
           'data-missing' and an 'error-app-tag' of
           'routing-protocol-instance-not-found'.";
      }
      leaf level {
        type level;
        description
          "IS-IS level of the adjacency to be cleared.  If the
           IS-IS level is 'level-all', the databases for both
           level 1 and level 2 would be cleared.

           If the value provided is different from the value
           authorized in the enum type, then the operation
           SHALL fail with an 'error-tag' of 'data-missing' and
           an 'error-app-tag' of 'bad-isis-level'.";
      }
    }
  }

  /* Notifications */

  notification database-overload {
    uses notification-instance-hdr;
    leaf overload {
      type enumeration {
        enum off {
          description
            "Indicates that the IS-IS instance has left the
             overload state.";
        }
        enum on {
          description
            "Indicates that the IS-IS instance has entered the
             overload state.";
        }
      }
      description
        "New overload state of the IS-IS instance.";
    }
    description
      "This notification is sent when an IS-IS instance
       overload state changes.";
  }

  notification lsp-too-large {
    uses notification-instance-hdr;
    uses notification-interface-hdr;
    leaf pdu-size {
      type uint32;
      description
        "Size of the LSP PDU.";
    }
    leaf lsp-id {
      type lsp-id;
      description
        "LSP ID.";
    }
    description
      "This notification is sent when an attempt to propagate
       an LSP that is larger than the dataLinkBlockSize (ISO 10589)
       for the circuit occurs.  The generation of the notification
       must be throttled with at least 5 seconds between successive
       notifications.";
    reference
      "ISO 10589: Intermediate System to Intermediate System
       intra-domain routeing information exchange protocol
       for use in conjunction with the protocol for providing
       the connectionless-mode network service (ISO 8473)";
  }

  notification if-state-change {
    uses notification-instance-hdr;
    uses notification-interface-hdr;
    leaf state {
      type if-state-type;
      description
        "Interface state.";
    }
    description
      "This notification is sent when an interface
       state change is detected.";
  }

  notification corrupted-lsp-detected {
    uses notification-instance-hdr;
    leaf lsp-id {
      type lsp-id;
      description
        "LSP ID.";
    }
    description
      "This notification is sent when an LSP that was stored in
       memory has become corrupted.";
  }

  notification attempt-to-exceed-max-sequence {
    uses notification-instance-hdr;
    leaf lsp-id {
      type lsp-id;
      description
        "LSP ID.";
    }
    description
      "This notification is sent when the system
       wraps the 32-bit sequence counter of an LSP.";
  }

  notification id-len-mismatch {
    uses notification-instance-hdr;
    uses notification-interface-hdr;
    leaf pdu-field-len {
      type uint8;
      description
        "Value for the system ID length in the received PDU.";
    }
    leaf raw-pdu {
      type binary;
      description
        "Received raw PDU.";
    }
    description
      "This notification is sent when a PDU with a different value
       for the system ID length is received.  The generation of the
       notification must be throttled with at least 5 seconds
       between successive notifications.";
  }

  notification max-area-addresses-mismatch {
    uses notification-instance-hdr;
    uses notification-interface-hdr;
    leaf max-area-addresses {
      type uint8;
      description
        "Received number of supported areas.";
    }
    leaf raw-pdu {
      type binary;
      description
        "Received raw PDU.";
    }
    description
      "This notification is sent when a PDU with a different value
       for the Maximum Area Addresses has been received.  The
       generation of the notification must be throttled with
       at least 5 seconds between successive notifications.";
  }

  notification own-lsp-purge {
    uses notification-instance-hdr;
    uses notification-interface-hdr;
    leaf lsp-id {
      type lsp-id;
      description
        "LSP ID.";
    }
    description
      "This notification is sent when the system receives
       a PDU with its own system ID and zero age.";
  }

  notification sequence-number-skipped {
    uses notification-instance-hdr;
    uses notification-interface-hdr;
    leaf lsp-id {
      type lsp-id;
      description
        "LSP ID.";
    }
    description
      "This notification is sent when the system receives a
       PDU with its own system ID and different contents.  The
       system has to originate the LSP with a higher sequence
       number.";
  }

  notification authentication-type-failure {
    uses notification-instance-hdr;
    uses notification-interface-hdr;
    leaf raw-pdu {
      type binary;
      description
        "Received raw PDU.";
    }
    description
      "This notification is sent when the system receives a
       PDU with the wrong authentication type field.
       The generation of the notification must be throttled
       with at least 5 seconds between successive notifications.";
  }

  notification authentication-failure {
    uses notification-instance-hdr;
    uses notification-interface-hdr;
    leaf raw-pdu {
      type binary;
      description
        "Received raw PDU.";
    }
    description
      "This notification is sent when the system receives
       a PDU on which authentication fails.  The generation of the
       notification must be throttled with at least 5 seconds
       between successive notifications.";
  }

  notification version-skew {
    uses notification-instance-hdr;
    uses notification-interface-hdr;
    leaf protocol-version {
      type uint8;
      description
        "Protocol version received in the PDU.";
    }
    leaf raw-pdu {
      type binary;
      description
        "Received raw PDU.";
    }
    description
      "This notification is sent when the system receives a
       PDU with a different protocol version number.
       The generation of the notification must be throttled
       with at least 5 seconds between successive notifications.";
  }

  notification area-mismatch {
    uses notification-instance-hdr;
    uses notification-interface-hdr;
    leaf raw-pdu {
      type binary;
      description
        "Received raw PDU.";
    }
    description
      "This notification is sent when the system receives a
       Hello PDU from an IS that does not share any area
       address.  The generation of the notification must be
       throttled with at least 5 seconds between successive
       notifications.";
  }

  notification rejected-adjacency {
    uses notification-instance-hdr;
    uses notification-interface-hdr;
    leaf raw-pdu {
      type binary;
      description
        "Received raw PDU.";
    }
    leaf reason {
      type string {
        length "0..255";
      }
      description
        "The system may provide a reason to reject the
         adjacency.  If the reason is not available,
         the reason string will not be returned.
         The expected format is a single line of text.";
    }
    description
      "This notification is sent when the system receives a
       Hello PDU from an IS but does not establish an adjacency
       for some reason.  The generation of the notification
       must be throttled with at least 5 seconds between
       successive notifications.";
  }

  notification protocols-supported-mismatch {
    uses notification-instance-hdr;
    uses notification-interface-hdr;
    leaf raw-pdu {
      type binary;
      description
        "Received raw PDU.";
    }
    leaf-list protocols {
      type uint8;
      description
        "List of protocols supported by the remote system.";
    }
    description
      "This notification is sent when the system receives a
       non-pseudonode LSP that has no matching protocols
       supported.  The generation of the notification must be
       throttled with at least 5 seconds between successive
       notifications.";
  }

  notification lsp-error-detected {
    uses notification-instance-hdr;
    uses notification-interface-hdr;
    leaf lsp-id {
      type lsp-id;
      description
        "LSP ID.";
    }
    leaf raw-pdu {
      type binary;
      description
        "Received raw PDU.";
    }
    leaf error-offset {
      type uint32;
      description
        "If the problem is a malformed TLV, the error offset
         points to the start of the TLV.  If the problem is with
         the LSP header, the error offset points to the errant
         byte.";
    }
    leaf tlv-type {
      type uint8;
      description
        "If the problem is a malformed TLV, the TLV type is set
         to the type value of the suspicious TLV.  Otherwise,
         this leaf is not present.";
    }
    description
      "This notification is sent when the system receives an
       LSP with a parse error.  The generation of the notification
       must be throttled with at least 5 seconds between
       successive notifications.";
  }

  notification adjacency-state-change {
    uses notification-instance-hdr;
    uses notification-interface-hdr;
    leaf neighbor {
      type string {
        length "1..255";
      }
      description
        "Name of the neighbor.  It corresponds to the hostname
         associated with the system ID of the neighbor in the
         mapping database (RFC 5301).  If the name of the neighbor
         is not available, it is not returned.";
      reference
        "RFC 5301: Dynamic Hostname Exchange Mechanism for IS-IS";
    }
    leaf neighbor-system-id {
      type system-id;
      description
        "Neighbor system ID.";
    }
    leaf state {
      type adj-state-type;
      description
        "New state of the IS-IS adjacency.";
    }
    leaf reason {
      type string {
        length "1..255";
      }
      description
        "If the adjacency is going to the 'down' state, this leaf
         provides a reason for the adjacency going down.  The reason
         is provided as text.  If the adjacency is going to the 'up'
         state, no reason is provided.  The expected format is a
         single line of text.";
    }
    description
      "This notification is sent when an IS-IS adjacency
       moves to the 'up' state or the 'down' state.";
  }

  notification lsp-received {
    uses notification-instance-hdr;
    uses notification-interface-hdr;
    leaf lsp-id {
      type lsp-id;
      description
        "LSP ID.";
    }
    leaf sequence {
      type uint32;
      description
        "Sequence number of the received LSP.";
    }
    leaf received-timestamp {
      type yang:timestamp;
      description
        "Timestamp when the LSP was received.";
    }
    leaf neighbor-system-id {
      type system-id;
      description
        "Neighbor system ID of the LSP sender.";
    }
    description
      "This notification is sent when an LSP is received.
       The generation of the notification must be throttled with
       at least 5 seconds between successive notifications.";
  }

  notification lsp-generation {
    uses notification-instance-hdr;
    leaf lsp-id {
      type lsp-id;
      description
        "LSP ID.";
    }
    leaf sequence {
      type uint32;
      description
        "Sequence number of the received LSP.";
    }
    leaf send-timestamp {
      type yang:timestamp;
      description
        "Timestamp when the LSP was regenerated.";
    }
    description
      "This notification is sent when an LSP is regenerated.
       The generation of the notification must be throttled with
       at least 5 seconds between successive notifications.";
  }
}
</sourcecode>
    </section>
    <section anchor="Security" toc="include" numbered="true" removeInRFC="false" pn="section-7">
      <name slugifiedName="name-security-considerations">Security Considerations</name>
      <t indent="0" pn="section-7-1">The YANG module specified in this document defines a schema for data
that is designed to be accessed via network management protocols such
as NETCONF <xref target="RFC6241" format="default" sectionFormat="of" derivedContent="RFC6241"/> or RESTCONF <xref target="RFC8040" format="default" sectionFormat="of" derivedContent="RFC8040"/>.
The lowest NETCONF layer is the secure transport layer, and the
mandatory-to-implement secure transport is Secure Shell (SSH)
<xref target="RFC6242" format="default" sectionFormat="of" derivedContent="RFC6242"/>. The lowest RESTCONF layer is HTTPS, and the
mandatory-to-implement secure transport is TLS <xref target="RFC8446" format="default" sectionFormat="of" derivedContent="RFC8446"/>.</t>
      <t indent="0" pn="section-7-2">The Network Configuration Access Control Model (NACM) <xref target="RFC8341" format="default" sectionFormat="of" derivedContent="RFC8341"/>
provides the means to restrict access for particular NETCONF or RESTCONF users
to a preconfigured subset of all available NETCONF or RESTCONF protocol
operations and content.</t>
      <t indent="0" pn="section-7-3">There are a number of data nodes defined in this YANG module that are
writable/creatable/deletable (i.e., config true, which is the default). These
data nodes may be considered sensitive or vulnerable in some network
environments. Write operations (e.g., edit-config) to these data nodes without
proper protection can have a negative effect on network operations. These are
the subtrees and data nodes and their sensitivity/vulnerability:</t>
      <t indent="3" pn="section-7-4">/isis</t>
      <t indent="3" pn="section-7-5">/isis/interfaces/interface[name]</t>
      <t indent="0" pn="section-7-6">For IS-IS, the ability to modify IS-IS configuration will allow the entire IS-IS domain to be compromised, including forming adjacencies with unauthorized routers to misroute traffic or mount a massive Denial-of-Service (DoS) attack.
For example, adding IS-IS on any unprotected interface could allow an IS-IS
      adjacency to be formed with an unauthorized and malicious neighbor. Once
      an adjacency is formed, traffic could be hijacked. As a simpler example,
      a DoS attack could be mounted by changing the cost of an IS-IS interface
      to be asymmetric, such that a hard routing loop ensues. In general,
      unauthorized modification of most IS-IS features will pose its own set
      of security risks; therefore, the Security Considerations sections in the respective reference RFCs should be consulted.</t>
      <t indent="0" pn="section-7-7">Some of the readable data nodes in this YANG module may be considered
sensitive or vulnerable in some network environments. It is thus important to
control read access (e.g., via get, get-config, or notification) to these data
nodes. These are the subtrees and data nodes and their
sensitivity/vulnerability:</t>
      <t indent="3" pn="section-7-8">/isis/database</t>
      <t indent="3" pn="section-7-9">/isis/local-rib</t>
      <t indent="0" pn="section-7-10">

Exposure of the Link State Database (LSDB) will reveal the detailed
topology of the network. Similarly, the IS-IS local RIB exposes the reachable
prefixes in the IS-IS routing domain. Exposure of the LSDB and local RIB may
also reveal information beyond the scope of the IS-IS router; this may be
undesirable, since such exposure may facilitate other attacks. Additionally,
the complete IP network topology -- and, if deployed, the TE topology of the
IS-IS domain -- can be reconstructed from the LSDB. Though not as
straightforward, the IS-IS local RIB can also be exploited to discover
topological information. Network operators may consider their topologies to
be sensitive confidential data.
      </t>
      <t indent="0" pn="section-7-11">For IS-IS authentication, configuration is supported via the
      specification of a key chain <xref target="RFC8177" format="default" sectionFormat="of" derivedContent="RFC8177"/>
      or the direct specification of a key and authentication algorithm.
Hence, authentication configuration using the "key-chain" case in the
"authentication-type" container inherits the security considerations of
 <xref target="RFC8177" format="default" sectionFormat="of" derivedContent="RFC8177"/>. This includes considerations with respect to the
   local storage and handling of authentication keys.</t>
      <t indent="0" pn="section-7-12">Some of the RPC operations in this YANG module may be considered sensitive or
 vulnerable in some network environments. It is thus important to control
 access to these operations. These are the operations and their
 sensitivity/vulnerability:</t>
      <t indent="0" pn="section-7-13">The IS-IS YANG
   module supports the "clear-adjacency" and "clear-database" RPCs. If
   access to either of these is compromised, they can be exploited to
   mount DoS attacks due to the resultant network outages.</t>
      <t indent="0" pn="section-7-14">The actual authentication key data (whether locally specified or part
   of a key chain) is sensitive and needs to be kept secret from
   unauthorized parties; compromise of the key data would allow an attacker to forge IS-IS traffic that would be accepted as authentic,
   potentially compromising the entire IS-IS domain.</t>
      <t indent="0" pn="section-7-15">The model describes several notifications. Implementations must
      rate-limit the generation of these notifications to avoid creating
      significant notification load. Otherwise, this notification load may
      negatively affect system stability and may be exploited as an attack vector.</t>
    </section>
    <section anchor="IANA" toc="include" numbered="true" removeInRFC="false" pn="section-8">
      <name slugifiedName="name-iana-considerations">IANA Considerations</name>
      <t indent="0" pn="section-8-1">The IANA has assigned the following URI in the
      "IETF XML Registry" <xref target="RFC3688" format="default" sectionFormat="of" derivedContent="RFC3688"/>.</t>
      <dl newline="false" spacing="compact" indent="3" pn="section-8-2">
        <dt pn="section-8-2.1">URI:</dt>
        <dd pn="section-8-2.2">urn:ietf:params:xml:ns:yang:ietf-isis</dd>
        <dt pn="section-8-2.3">Registrant Contact:</dt>
        <dd pn="section-8-2.4">The IESG</dd>
        <dt pn="section-8-2.5">XML:</dt>
        <dd pn="section-8-2.6">N/A; the requested URI is an XML namespace.</dd>
      </dl>
      <t indent="0" pn="section-8-3">This document also adds the following YANG module name in the "YANG
      Module Names" registry <xref target="RFC6020" format="default" sectionFormat="of" derivedContent="RFC6020"/>:</t>
      <dl newline="false" spacing="compact" indent="3" pn="section-8-4">
        <dt pn="section-8-4.1">Name:</dt>
        <dd pn="section-8-4.2">ietf-isis</dd>
        <dt pn="section-8-4.3">Maintained by IANA?</dt>
        <dd pn="section-8-4.4">N</dd>
        <dt pn="section-8-4.5">Namespace:</dt>
        <dd pn="section-8-4.6">urn:ietf:params:xml:ns:yang:ietf-isis</dd>
        <dt pn="section-8-4.7">Prefix:</dt>
        <dd pn="section-8-4.8">isis</dd>
        <dt pn="section-8-4.9">Reference:</dt>
        <dd pn="section-8-4.10">RFC 9130</dd>
      </dl>
    </section>
  </middle>
  <back>
    <displayreference target="I-D.ietf-rtgwg-segment-routing-ti-lfa" to="SR-TI-LFA"/>
    <references pn="section-9">
      <name slugifiedName="name-references">References</name>
      <references pn="section-9.1">
        <name slugifiedName="name-normative-references">Normative References</name>
        <reference anchor="ISO-10589" target="https://www.iso.org/standard/30932.html" quoteTitle="true" derivedAnchor="ISO-10589">
          <front>
            <title>Intermediate System to Intermediate System intra- domain routeing information exchange protocol for use in conjunction with the protocol for providing the connectionless-mode network service (ISO 8473)</title>
            <author>
              <organization showOnFrontPage="true">ISO</organization>
            </author>
            <date year="2002"/>
          </front>
          <refcontent>International Standard 10589: 2002, Second Edition</refcontent>
        </reference>
        <reference anchor="RFC1195" target="https://www.rfc-editor.org/info/rfc1195" quoteTitle="true" derivedAnchor="RFC1195">
          <front>
            <title>Use of OSI IS-IS for routing in TCP/IP and dual environments</title>
            <author fullname="R. Callon" initials="R." surname="Callon"/>
            <date month="December" year="1990"/>
            <abstract>
              <t indent="0">This memo specifies an integrated routing protocol, based on the OSI Intra-Domain IS-IS Routing Protocol, which may be used as an interior gateway protocol (IGP) to support TCP/IP as well as OSI.  This allows a single routing protocol to be used to support pure IP environments, pure OSI environments, and dual environments.  This specification was developed by the IS-IS working group of the Internet Engineering Task Force. [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="1195"/>
          <seriesInfo name="DOI" value="10.17487/RFC1195"/>
        </reference>
        <reference anchor="RFC2119" target="https://www.rfc-editor.org/info/rfc2119" quoteTitle="true" derivedAnchor="RFC2119">
          <front>
            <title>Key words for use in RFCs to Indicate Requirement Levels</title>
            <author fullname="S. Bradner" initials="S." surname="Bradner"/>
            <date month="March" year="1997"/>
            <abstract>
              <t indent="0">In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized.  This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t>
            </abstract>
          </front>
          <seriesInfo name="BCP" value="14"/>
          <seriesInfo name="RFC" value="2119"/>
          <seriesInfo name="DOI" value="10.17487/RFC2119"/>
        </reference>
        <reference anchor="RFC3688" target="https://www.rfc-editor.org/info/rfc3688" quoteTitle="true" derivedAnchor="RFC3688">
          <front>
            <title>The IETF XML Registry</title>
            <author fullname="M. Mealling" initials="M." surname="Mealling"/>
            <date month="January" year="2004"/>
            <abstract>
              <t indent="0">This document describes an IANA maintained registry for IETF standards which use Extensible Markup Language (XML) related items such as Namespaces, Document Type Declarations (DTDs), Schemas, and Resource Description Framework (RDF) Schemas.</t>
            </abstract>
          </front>
          <seriesInfo name="BCP" value="81"/>
          <seriesInfo name="RFC" value="3688"/>
          <seriesInfo name="DOI" value="10.17487/RFC3688"/>
        </reference>
        <reference anchor="RFC4090" target="https://www.rfc-editor.org/info/rfc4090" quoteTitle="true" derivedAnchor="RFC4090">
          <front>
            <title>Fast Reroute Extensions to RSVP-TE for LSP Tunnels</title>
            <author fullname="P. Pan" initials="P." role="editor" surname="Pan"/>
            <author fullname="G. Swallow" initials="G." role="editor" surname="Swallow"/>
            <author fullname="A. Atlas" initials="A." role="editor" surname="Atlas"/>
            <date month="May" year="2005"/>
            <abstract>
              <t indent="0">This document defines RSVP-TE extensions to establish backup label-switched path (LSP) tunnels for local repair of LSP tunnels. These mechanisms enable the re-direction of traffic onto backup LSP tunnels in 10s of milliseconds, in the event of a failure.</t>
              <t indent="0">Two methods are defined here. The one-to-one backup method creates detour LSPs for each protected LSP at each potential point of local repair. The facility backup method creates a bypass tunnel to protect a potential failure point; by taking advantage of MPLS label stacking, this bypass tunnel can protect a set of LSPs that have similar backup constraints. Both methods can be used to protect links and nodes during network failure. The described behavior and extensions to RSVP allow nodes to implement either method or both and to interoperate in a mixed network. [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="4090"/>
          <seriesInfo name="DOI" value="10.17487/RFC4090"/>
        </reference>
        <reference anchor="RFC5029" target="https://www.rfc-editor.org/info/rfc5029" quoteTitle="true" derivedAnchor="RFC5029">
          <front>
            <title>Definition of an IS-IS Link Attribute Sub-TLV</title>
            <author fullname="JP. Vasseur" initials="JP." surname="Vasseur"/>
            <author fullname="S. Previdi" initials="S." surname="Previdi"/>
            <date month="September" year="2007"/>
            <abstract>
              <t indent="0">This document defines a sub-TLV called "Link-attributes" carried within the TLV 22 and used to flood some link characteristics. [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="5029"/>
          <seriesInfo name="DOI" value="10.17487/RFC5029"/>
        </reference>
        <reference anchor="RFC5120" target="https://www.rfc-editor.org/info/rfc5120" quoteTitle="true" derivedAnchor="RFC5120">
          <front>
            <title>M-ISIS: Multi Topology (MT) Routing in Intermediate System to Intermediate Systems (IS-ISs)</title>
            <author fullname="T. Przygienda" initials="T." surname="Przygienda"/>
            <author fullname="N. Shen" initials="N." surname="Shen"/>
            <author fullname="N. Sheth" initials="N." surname="Sheth"/>
            <date month="February" year="2008"/>
            <abstract>
              <t indent="0">This document describes an optional mechanism within Intermediate System to Intermediate Systems (IS-ISs) used today by many ISPs for IGP routing within their clouds.  This document describes how to run, within a single IS-IS domain, a set of independent IP topologies that we call Multi-Topologies (MTs).  This MT extension can be used for a variety of purposes, such as an in-band management network "on top" of the original IGP topology, maintaining separate IGP routing domains for isolated multicast or IPv6 islands within the backbone, or forcing a subset of an address space to follow a different topology. [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="5120"/>
          <seriesInfo name="DOI" value="10.17487/RFC5120"/>
        </reference>
        <reference anchor="RFC5130" target="https://www.rfc-editor.org/info/rfc5130" quoteTitle="true" derivedAnchor="RFC5130">
          <front>
            <title>A Policy Control Mechanism in IS-IS Using Administrative Tags</title>
            <author fullname="S. Previdi" initials="S." surname="Previdi"/>
            <author fullname="M. Shand" initials="M." role="editor" surname="Shand"/>
            <author fullname="C. Martin" initials="C." surname="Martin"/>
            <date month="February" year="2008"/>
            <abstract>
              <t indent="0">This document describes an extension to the IS-IS protocol to add operational capabilities that allow for ease of management and control over IP prefix distribution within an IS-IS domain.  This document enhances the IS-IS protocol by extending the information that an Intermediate System (IS) router can place in Link State Protocol (LSP) Data Units for policy use.  This extension will provide operators with a mechanism to control IP prefix distribution throughout multi-level IS-IS domains. [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="5130"/>
          <seriesInfo name="DOI" value="10.17487/RFC5130"/>
        </reference>
        <reference anchor="RFC5286" target="https://www.rfc-editor.org/info/rfc5286" quoteTitle="true" derivedAnchor="RFC5286">
          <front>
            <title>Basic Specification for IP Fast Reroute: Loop-Free Alternates</title>
            <author fullname="A. Atlas" initials="A." role="editor" surname="Atlas"/>
            <author fullname="A. Zinin" initials="A." role="editor" surname="Zinin"/>
            <date month="September" year="2008"/>
            <abstract>
              <t indent="0">This document describes the use of loop-free alternates to provide local protection for unicast traffic in pure IP and MPLS/LDP networks in the event of a single failure, whether link, node, or shared risk link group (SRLG).  The goal of this technology is to reduce the packet loss that happens while routers converge after a topology change due to a failure.  Rapid failure repair is achieved through use of precalculated backup next-hops that are loop-free and safe to use until the distributed network convergence process completes.  This simple approach does not require any support from other routers.  The extent to which this goal can be met by this specification is dependent on the topology of the network. [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="5286"/>
          <seriesInfo name="DOI" value="10.17487/RFC5286"/>
        </reference>
        <reference anchor="RFC5301" target="https://www.rfc-editor.org/info/rfc5301" quoteTitle="true" derivedAnchor="RFC5301">
          <front>
            <title>Dynamic Hostname Exchange Mechanism for IS-IS</title>
            <author fullname="D. McPherson" initials="D." surname="McPherson"/>
            <author fullname="N. Shen" initials="N." surname="Shen"/>
            <date month="October" year="2008"/>
            <abstract>
              <t indent="0">RFC 2763 defined a simple and dynamic mechanism for routers running IS-IS to learn about symbolic hostnames. RFC 2763 defined a new TLV that allows the IS-IS routers to flood their name-to-systemID mapping information across the IS-IS network.</t>
              <t indent="0">This document obsoletes RFC 2763. This document moves the capability provided by RFC 2763 to the Standards Track. [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="5301"/>
          <seriesInfo name="DOI" value="10.17487/RFC5301"/>
        </reference>
        <reference anchor="RFC5302" target="https://www.rfc-editor.org/info/rfc5302" quoteTitle="true" derivedAnchor="RFC5302">
          <front>
            <title>Domain-Wide Prefix Distribution with Two-Level IS-IS</title>
            <author fullname="T. Li" initials="T." surname="Li"/>
            <author fullname="H. Smit" initials="H." surname="Smit"/>
            <author fullname="T. Przygienda" initials="T." surname="Przygienda"/>
            <date month="October" year="2008"/>
            <abstract>
              <t indent="0">This document describes extensions to the Intermediate System to Intermediate System (IS-IS) protocol to support optimal routing within a two-level domain. The IS-IS protocol is specified in ISO 10589, with extensions for supporting IPv4 (Internet Protocol) specified in RFC 1195. This document replaces RFC 2966.</t>
              <t indent="0">This document extends the semantics presented in RFC 1195 so that a routing domain running with both level 1 and level 2 Intermediate Systems (IS) (routers) can distribute IP prefixes between level 1 and level 2, and vice versa. This distribution requires certain restrictions to ensure that persistent forwarding loops do not form. The goal of this domain-wide prefix distribution is to increase the granularity of the routing information within the domain. [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="5302"/>
          <seriesInfo name="DOI" value="10.17487/RFC5302"/>
        </reference>
        <reference anchor="RFC5305" target="https://www.rfc-editor.org/info/rfc5305" quoteTitle="true" derivedAnchor="RFC5305">
          <front>
            <title>IS-IS Extensions for Traffic Engineering</title>
            <author fullname="T. Li" initials="T." surname="Li"/>
            <author fullname="H. Smit" initials="H." surname="Smit"/>
            <date month="October" year="2008"/>
            <abstract>
              <t indent="0">This document describes extensions to the Intermediate System to Intermediate System (IS-IS) protocol to support Traffic Engineering (TE).  This document extends the IS-IS protocol by specifying new information that an Intermediate System (router) can place in Link State Protocol Data Units (LSP).  This information describes additional details regarding the state of the network that are useful for traffic engineering computations. [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="5305"/>
          <seriesInfo name="DOI" value="10.17487/RFC5305"/>
        </reference>
        <reference anchor="RFC5307" target="https://www.rfc-editor.org/info/rfc5307" quoteTitle="true" derivedAnchor="RFC5307">
          <front>
            <title>IS-IS Extensions in Support of Generalized Multi-Protocol Label Switching (GMPLS)</title>
            <author fullname="K. Kompella" initials="K." role="editor" surname="Kompella"/>
            <author fullname="Y. Rekhter" initials="Y." role="editor" surname="Rekhter"/>
            <date month="October" year="2008"/>
            <abstract>
              <t indent="0">This document specifies encoding of extensions to the IS-IS routing protocol in support of Generalized Multi-Protocol Label Switching (GMPLS). [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="5307"/>
          <seriesInfo name="DOI" value="10.17487/RFC5307"/>
        </reference>
        <reference anchor="RFC5308" target="https://www.rfc-editor.org/info/rfc5308" quoteTitle="true" derivedAnchor="RFC5308">
          <front>
            <title>Routing IPv6 with IS-IS</title>
            <author fullname="C. Hopps" initials="C." surname="Hopps"/>
            <date month="October" year="2008"/>
            <abstract>
              <t indent="0">This document specifies a method for exchanging IPv6 routing information using the IS-IS routing protocol.  The described method utilizes two new TLVs: a reachability TLV and an interface address TLV to distribute the necessary IPv6 information throughout a routing domain.  Using this method, one can route IPv6 along with IPv4 and OSI using a single intra-domain routing protocol. [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="5308"/>
          <seriesInfo name="DOI" value="10.17487/RFC5308"/>
        </reference>
        <reference anchor="RFC5443" target="https://www.rfc-editor.org/info/rfc5443" quoteTitle="true" derivedAnchor="RFC5443">
          <front>
            <title>LDP IGP Synchronization</title>
            <author fullname="M. Jork" initials="M." surname="Jork"/>
            <author fullname="A. Atlas" initials="A." surname="Atlas"/>
            <author fullname="L. Fang" initials="L." surname="Fang"/>
            <date month="March" year="2009"/>
            <abstract>
              <t indent="0">In certain networks, there is dependency on the edge-to-edge Label Switched Paths (LSPs) setup by the Label Distribution Protocol (LDP), e.g., networks that are used for Multiprotocol Label Switching (MPLS) Virtual Private Network (VPN) applications.  For such applications, it is not possible to rely on Internet Protocol (IP) forwarding if the MPLS LSP is not operating appropriately.  Blackholing of labeled traffic can occur in situations where the Interior Gateway Protocol (IGP) is operational on a link on which LDP is not.  While the link could still be used for IP forwarding, it is not useful for MPLS forwarding, for example, MPLS VPN applications or Border Gateway Protocol (BGP) route-free cores.  This document describes a mechanism to avoid traffic loss due to this condition without introducing any protocol changes.  This memo provides information for the Internet community.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="5443"/>
          <seriesInfo name="DOI" value="10.17487/RFC5443"/>
        </reference>
        <reference anchor="RFC5880" target="https://www.rfc-editor.org/info/rfc5880" quoteTitle="true" derivedAnchor="RFC5880">
          <front>
            <title>Bidirectional Forwarding Detection (BFD)</title>
            <author fullname="D. Katz" initials="D." surname="Katz"/>
            <author fullname="D. Ward" initials="D." surname="Ward"/>
            <date month="June" year="2010"/>
            <abstract>
              <t indent="0">This document describes a protocol intended to detect faults in the bidirectional path between two forwarding engines, including interfaces, data link(s), and to the extent possible the forwarding engines themselves, with potentially very low latency.  It operates independently of media, data protocols, and routing protocols. [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="5880"/>
          <seriesInfo name="DOI" value="10.17487/RFC5880"/>
        </reference>
        <reference anchor="RFC5881" target="https://www.rfc-editor.org/info/rfc5881" quoteTitle="true" derivedAnchor="RFC5881">
          <front>
            <title>Bidirectional Forwarding Detection (BFD) for IPv4 and IPv6 (Single Hop)</title>
            <author fullname="D. Katz" initials="D." surname="Katz"/>
            <author fullname="D. Ward" initials="D." surname="Ward"/>
            <date month="June" year="2010"/>
            <abstract>
              <t indent="0">This document describes the use of the Bidirectional Forwarding Detection (BFD) protocol over IPv4 and IPv6 for single IP hops. [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="5881"/>
          <seriesInfo name="DOI" value="10.17487/RFC5881"/>
        </reference>
        <reference anchor="RFC6020" target="https://www.rfc-editor.org/info/rfc6020" quoteTitle="true" derivedAnchor="RFC6020">
          <front>
            <title>YANG - A Data Modeling Language for the Network Configuration Protocol (NETCONF)</title>
            <author fullname="M. Bjorklund" initials="M." role="editor" surname="Bjorklund"/>
            <date month="October" year="2010"/>
            <abstract>
              <t indent="0">YANG is a data modeling language used to model configuration and state data manipulated by the Network Configuration Protocol (NETCONF), NETCONF remote procedure calls, and NETCONF notifications. [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="6020"/>
          <seriesInfo name="DOI" value="10.17487/RFC6020"/>
        </reference>
        <reference anchor="RFC6119" target="https://www.rfc-editor.org/info/rfc6119" quoteTitle="true" derivedAnchor="RFC6119">
          <front>
            <title>IPv6 Traffic Engineering in IS-IS</title>
            <author fullname="J. Harrison" initials="J." surname="Harrison"/>
            <author fullname="J. Berger" initials="J." surname="Berger"/>
            <author fullname="M. Bartlett" initials="M." surname="Bartlett"/>
            <date month="February" year="2011"/>
            <abstract>
              <t indent="0">This document specifies a method for exchanging IPv6 traffic engineering information using the IS-IS routing protocol.  This information enables routers in an IS-IS network to calculate traffic-engineered routes using IPv6 addresses. [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="6119"/>
          <seriesInfo name="DOI" value="10.17487/RFC6119"/>
        </reference>
        <reference anchor="RFC6232" target="https://www.rfc-editor.org/info/rfc6232" quoteTitle="true" derivedAnchor="RFC6232">
          <front>
            <title>Purge Originator Identification TLV for IS-IS</title>
            <author fullname="F. Wei" initials="F." surname="Wei"/>
            <author fullname="Y. Qin" initials="Y." surname="Qin"/>
            <author fullname="Z. Li" initials="Z." surname="Li"/>
            <author fullname="T. Li" initials="T." surname="Li"/>
            <author fullname="J. Dong" initials="J." surname="Dong"/>
            <date month="May" year="2011"/>
            <abstract>
              <t indent="0">At present, an IS-IS purge does not contain any information identifying the Intermediate System (IS) that generates the purge. This makes it difficult to locate the source IS.</t>
              <t indent="0">To address this issue, this document defines a TLV to be added to purges to record the system ID of the IS generating it. Since normal Link State Protocol Data Unit (LSP) flooding does not change LSP contents, this TLV should propagate with the purge.</t>
              <t indent="0">This document updates RFC 5301, RFC 5304, and RFC 5310. [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="6232"/>
          <seriesInfo name="DOI" value="10.17487/RFC6232"/>
        </reference>
        <reference anchor="RFC6241" target="https://www.rfc-editor.org/info/rfc6241" quoteTitle="true" derivedAnchor="RFC6241">
          <front>
            <title>Network Configuration Protocol (NETCONF)</title>
            <author fullname="R. Enns" initials="R." role="editor" surname="Enns"/>
            <author fullname="M. Bjorklund" initials="M." role="editor" surname="Bjorklund"/>
            <author fullname="J. Schoenwaelder" initials="J." role="editor" surname="Schoenwaelder"/>
            <author fullname="A. Bierman" initials="A." role="editor" surname="Bierman"/>
            <date month="June" year="2011"/>
            <abstract>
              <t indent="0">The Network Configuration Protocol (NETCONF) defined in this document provides mechanisms to install, manipulate, and delete the configuration of network devices.  It uses an Extensible Markup Language (XML)-based data encoding for the configuration data as well as the protocol messages.  The NETCONF protocol operations are realized as remote procedure calls (RPCs).  This document obsoletes RFC 4741. [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="6241"/>
          <seriesInfo name="DOI" value="10.17487/RFC6241"/>
        </reference>
        <reference anchor="RFC6242" target="https://www.rfc-editor.org/info/rfc6242" quoteTitle="true" derivedAnchor="RFC6242">
          <front>
            <title>Using the NETCONF Protocol over Secure Shell (SSH)</title>
            <author fullname="M. Wasserman" initials="M." surname="Wasserman"/>
            <date month="June" year="2011"/>
            <abstract>
              <t indent="0">This document describes a method for invoking and running the Network Configuration Protocol (NETCONF) within a Secure Shell (SSH) session as an SSH subsystem.  This document obsoletes RFC 4742. [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="6242"/>
          <seriesInfo name="DOI" value="10.17487/RFC6242"/>
        </reference>
        <reference anchor="RFC6991" target="https://www.rfc-editor.org/info/rfc6991" quoteTitle="true" derivedAnchor="RFC6991">
          <front>
            <title>Common YANG Data Types</title>
            <author fullname="J. Schoenwaelder" initials="J." role="editor" surname="Schoenwaelder"/>
            <date month="July" year="2013"/>
            <abstract>
              <t indent="0">This document introduces a collection of common data types to be used with the YANG data modeling language.  This document obsoletes RFC 6021.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="6991"/>
          <seriesInfo name="DOI" value="10.17487/RFC6991"/>
        </reference>
        <reference anchor="RFC7490" target="https://www.rfc-editor.org/info/rfc7490" quoteTitle="true" derivedAnchor="RFC7490">
          <front>
            <title>Remote Loop-Free Alternate (LFA) Fast Reroute (FRR)</title>
            <author fullname="S. Bryant" initials="S." surname="Bryant"/>
            <author fullname="C. Filsfils" initials="C." surname="Filsfils"/>
            <author fullname="S. Previdi" initials="S." surname="Previdi"/>
            <author fullname="M. Shand" initials="M." surname="Shand"/>
            <author fullname="N. So" initials="N." surname="So"/>
            <date month="April" year="2015"/>
            <abstract>
              <t indent="0">This document describes an extension to the basic IP fast reroute mechanism, described in RFC 5286, that provides additional backup connectivity for point-to-point link failures when none can be provided by the basic mechanisms.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="7490"/>
          <seriesInfo name="DOI" value="10.17487/RFC7490"/>
        </reference>
        <reference anchor="RFC7794" target="https://www.rfc-editor.org/info/rfc7794" quoteTitle="true" derivedAnchor="RFC7794">
          <front>
            <title>IS-IS Prefix Attributes for Extended IPv4 and IPv6 Reachability</title>
            <author fullname="L. Ginsberg" initials="L." role="editor" surname="Ginsberg"/>
            <author fullname="B. Decraene" initials="B." surname="Decraene"/>
            <author fullname="S. Previdi" initials="S." surname="Previdi"/>
            <author fullname="X. Xu" initials="X." surname="Xu"/>
            <author fullname="U. Chunduri" initials="U." surname="Chunduri"/>
            <date month="March" year="2016"/>
            <abstract>
              <t indent="0">This document introduces new sub-TLVs to support advertisement of IPv4 and IPv6 prefix attribute flags and the source router ID of the router that originated a prefix advertisement.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="7794"/>
          <seriesInfo name="DOI" value="10.17487/RFC7794"/>
        </reference>
        <reference anchor="RFC7917" target="https://www.rfc-editor.org/info/rfc7917" quoteTitle="true" derivedAnchor="RFC7917">
          <front>
            <title>Advertising Node Administrative Tags in IS-IS</title>
            <author fullname="P. Sarkar" initials="P." role="editor" surname="Sarkar"/>
            <author fullname="H. Gredler" initials="H." surname="Gredler"/>
            <author fullname="S. Hegde" initials="S." surname="Hegde"/>
            <author fullname="S. Litkowski" initials="S." surname="Litkowski"/>
            <author fullname="B. Decraene" initials="B." surname="Decraene"/>
            <date month="July" year="2016"/>
            <abstract>
              <t indent="0">This document describes an extension to the IS-IS routing protocol to advertise node administrative tags.  This optional capability allows tagging and grouping of the nodes in an IS-IS domain.  The node administrative tags can be used to express and apply locally defined network policies, thereby providing a very useful operational capability.  Node administrative tags may be used by either IS-IS itself or other applications consuming information propagated via IS-IS.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="7917"/>
          <seriesInfo name="DOI" value="10.17487/RFC7917"/>
        </reference>
        <reference anchor="RFC7950" target="https://www.rfc-editor.org/info/rfc7950" quoteTitle="true" derivedAnchor="RFC7950">
          <front>
            <title>The YANG 1.1 Data Modeling Language</title>
            <author fullname="M. Bjorklund" initials="M." role="editor" surname="Bjorklund"/>
            <date month="August" year="2016"/>
            <abstract>
              <t indent="0">YANG is a data modeling language used to model configuration data, state data, Remote Procedure Calls, and notifications for network management protocols.  This document describes the syntax and semantics of version 1.1 of the YANG language.  YANG version 1.1 is a maintenance release of the YANG language, addressing ambiguities and defects in the original specification.  There are a small number of backward incompatibilities from YANG version 1.  This document also specifies the YANG mappings to the Network Configuration Protocol (NETCONF).</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="7950"/>
          <seriesInfo name="DOI" value="10.17487/RFC7950"/>
        </reference>
        <reference anchor="RFC7981" target="https://www.rfc-editor.org/info/rfc7981" quoteTitle="true" derivedAnchor="RFC7981">
          <front>
            <title>IS-IS Extensions for Advertising Router Information</title>
            <author fullname="L. Ginsberg" initials="L." surname="Ginsberg"/>
            <author fullname="S. Previdi" initials="S." surname="Previdi"/>
            <author fullname="M. Chen" initials="M." surname="Chen"/>
            <date month="October" year="2016"/>
            <abstract>
              <t indent="0">This document defines a new optional Intermediate System to Intermediate System (IS-IS) TLV named CAPABILITY, formed of multiple sub-TLVs, which allows a router to announce its capabilities within an IS-IS level or the entire routing domain.  This document obsoletes RFC 4971.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="7981"/>
          <seriesInfo name="DOI" value="10.17487/RFC7981"/>
        </reference>
        <reference anchor="RFC8040" target="https://www.rfc-editor.org/info/rfc8040" quoteTitle="true" derivedAnchor="RFC8040">
          <front>
            <title>RESTCONF Protocol</title>
            <author fullname="A. Bierman" initials="A." surname="Bierman"/>
            <author fullname="M. Bjorklund" initials="M." surname="Bjorklund"/>
            <author fullname="K. Watsen" initials="K." surname="Watsen"/>
            <date month="January" year="2017"/>
            <abstract>
              <t indent="0">This document describes an HTTP-based protocol that provides a programmatic interface for accessing data defined in YANG, using the datastore concepts defined in the Network Configuration Protocol (NETCONF).</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8040"/>
          <seriesInfo name="DOI" value="10.17487/RFC8040"/>
        </reference>
        <reference anchor="RFC8174" target="https://www.rfc-editor.org/info/rfc8174" quoteTitle="true" derivedAnchor="RFC8174">
          <front>
            <title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
            <author fullname="B. Leiba" initials="B." surname="Leiba"/>
            <date month="May" year="2017"/>
            <abstract>
              <t indent="0">RFC 2119 specifies common key words that may be used in protocol specifications.  This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the defined special meanings.</t>
            </abstract>
          </front>
          <seriesInfo name="BCP" value="14"/>
          <seriesInfo name="RFC" value="8174"/>
          <seriesInfo name="DOI" value="10.17487/RFC8174"/>
        </reference>
        <reference anchor="RFC8177" target="https://www.rfc-editor.org/info/rfc8177" quoteTitle="true" derivedAnchor="RFC8177">
          <front>
            <title>YANG Data Model for Key Chains</title>
            <author fullname="A. Lindem" initials="A." role="editor" surname="Lindem"/>
            <author fullname="Y. Qu" initials="Y." surname="Qu"/>
            <author fullname="D. Yeung" initials="D." surname="Yeung"/>
            <author fullname="I. Chen" initials="I." surname="Chen"/>
            <author fullname="J. Zhang" initials="J." surname="Zhang"/>
            <date month="June" year="2017"/>
            <abstract>
              <t indent="0">This document describes the key chain YANG data model.  Key chains are commonly used for routing protocol authentication and other applications requiring symmetric keys.  A key chain is a list containing one or more elements containing a Key ID, key string, send/accept lifetimes, and the associated authentication or encryption algorithm.  By properly overlapping the send and accept lifetimes of multiple key chain elements, key strings and algorithms may be gracefully updated.  By representing them in a YANG data model, key distribution can be automated.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8177"/>
          <seriesInfo name="DOI" value="10.17487/RFC8177"/>
        </reference>
        <reference anchor="RFC8294" target="https://www.rfc-editor.org/info/rfc8294" quoteTitle="true" derivedAnchor="RFC8294">
          <front>
            <title>Common YANG Data Types for the Routing Area</title>
            <author fullname="X. Liu" initials="X." surname="Liu"/>
            <author fullname="Y. Qu" initials="Y." surname="Qu"/>
            <author fullname="A. Lindem" initials="A." surname="Lindem"/>
            <author fullname="C. Hopps" initials="C." surname="Hopps"/>
            <author fullname="L. Berger" initials="L." surname="Berger"/>
            <date month="December" year="2017"/>
            <abstract>
              <t indent="0">This document defines a collection of common data types using the YANG data modeling language.  These derived common types are designed to be imported by other modules defined in the routing area.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8294"/>
          <seriesInfo name="DOI" value="10.17487/RFC8294"/>
        </reference>
        <reference anchor="RFC8341" target="https://www.rfc-editor.org/info/rfc8341" quoteTitle="true" derivedAnchor="RFC8341">
          <front>
            <title>Network Configuration Access Control Model</title>
            <author fullname="A. Bierman" initials="A." surname="Bierman"/>
            <author fullname="M. Bjorklund" initials="M." surname="Bjorklund"/>
            <date month="March" year="2018"/>
            <abstract>
              <t indent="0">The standardization of network configuration interfaces for use with the Network Configuration Protocol (NETCONF) or the RESTCONF protocol requires a structured and secure operating environment that promotes human usability and multi-vendor interoperability. There is a need for standard mechanisms to restrict NETCONF or RESTCONF protocol access for particular users to a preconfigured subset of all available NETCONF or RESTCONF protocol operations and content. This document defines such an access control model.</t>
              <t indent="0">This document obsoletes RFC 6536.</t>
            </abstract>
          </front>
          <seriesInfo name="STD" value="91"/>
          <seriesInfo name="RFC" value="8341"/>
          <seriesInfo name="DOI" value="10.17487/RFC8341"/>
        </reference>
        <reference anchor="RFC8342" target="https://www.rfc-editor.org/info/rfc8342" quoteTitle="true" derivedAnchor="RFC8342">
          <front>
            <title>Network Management Datastore Architecture (NMDA)</title>
            <author fullname="M. Bjorklund" initials="M." surname="Bjorklund"/>
            <author fullname="J. Schoenwaelder" initials="J." surname="Schoenwaelder"/>
            <author fullname="P. Shafer" initials="P." surname="Shafer"/>
            <author fullname="K. Watsen" initials="K." surname="Watsen"/>
            <author fullname="R. Wilton" initials="R." surname="Wilton"/>
            <date month="March" year="2018"/>
            <abstract>
              <t indent="0">Datastores are a fundamental concept binding the data models written in the YANG data modeling language to network management protocols such as the Network Configuration Protocol (NETCONF) and RESTCONF.  This document defines an architectural framework for datastores based on the experience gained with the initial simpler model, addressing requirements that were not well supported in the initial model.  This document updates RFC 7950.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8342"/>
          <seriesInfo name="DOI" value="10.17487/RFC8342"/>
        </reference>
        <reference anchor="RFC8343" target="https://www.rfc-editor.org/info/rfc8343" quoteTitle="true" derivedAnchor="RFC8343">
          <front>
            <title>A YANG Data Model for Interface Management</title>
            <author fullname="M. Bjorklund" initials="M." surname="Bjorklund"/>
            <date month="March" year="2018"/>
            <abstract>
              <t indent="0">This document defines a YANG data model for the management of network interfaces. It is expected that interface-type-specific data models augment the generic interfaces data model defined in this document. The data model includes definitions for configuration and system state (status information and counters for the collection of statistics).</t>
              <t indent="0">The YANG data model in this document conforms to the Network Management Datastore Architecture (NMDA) defined in RFC 8342.</t>
              <t indent="0">This document obsoletes RFC 7223.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8343"/>
          <seriesInfo name="DOI" value="10.17487/RFC8343"/>
        </reference>
        <reference anchor="RFC8349" target="https://www.rfc-editor.org/info/rfc8349" quoteTitle="true" derivedAnchor="RFC8349">
          <front>
            <title>A YANG Data Model for Routing Management (NMDA Version)</title>
            <author fullname="L. Lhotka" initials="L." surname="Lhotka"/>
            <author fullname="A. Lindem" initials="A." surname="Lindem"/>
            <author fullname="Y. Qu" initials="Y." surname="Qu"/>
            <date month="March" year="2018"/>
            <abstract>
              <t indent="0">This document specifies three YANG modules and one submodule. Together, they form the core routing data model that serves as a framework for configuring and managing a routing subsystem. It is expected that these modules will be augmented by additional YANG modules defining data models for control-plane protocols, route filters, and other functions. The core routing data model provides common building blocks for such extensions -- routes, Routing Information Bases (RIBs), and control-plane protocols.</t>
              <t indent="0">The YANG modules in this document conform to the Network Management Datastore Architecture (NMDA). This document obsoletes RFC 8022.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8349"/>
          <seriesInfo name="DOI" value="10.17487/RFC8349"/>
        </reference>
        <reference anchor="RFC8405" target="https://www.rfc-editor.org/info/rfc8405" quoteTitle="true" derivedAnchor="RFC8405">
          <front>
            <title>Shortest Path First (SPF) Back-Off Delay Algorithm for Link-State IGPs</title>
            <author fullname="B. Decraene" initials="B." surname="Decraene"/>
            <author fullname="S. Litkowski" initials="S." surname="Litkowski"/>
            <author fullname="H. Gredler" initials="H." surname="Gredler"/>
            <author fullname="A. Lindem" initials="A." surname="Lindem"/>
            <author fullname="P. Francois" initials="P." surname="Francois"/>
            <author fullname="C. Bowers" initials="C." surname="Bowers"/>
            <date month="June" year="2018"/>
            <abstract>
              <t indent="0">This document defines a standard algorithm to temporarily postpone or "back off" link-state IGP Shortest Path First (SPF) computations. This reduces the computational load and churn on IGP nodes when multiple temporally close network events trigger multiple SPF computations.</t>
              <t indent="0">Having one standard algorithm improves interoperability by reducing the probability and/or duration of transient forwarding loops during the IGP convergence when the IGP reacts to multiple temporally close IGP events.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8405"/>
          <seriesInfo name="DOI" value="10.17487/RFC8405"/>
        </reference>
        <reference anchor="RFC8446" target="https://www.rfc-editor.org/info/rfc8446" quoteTitle="true" derivedAnchor="RFC8446">
          <front>
            <title>The Transport Layer Security (TLS) Protocol Version 1.3</title>
            <author fullname="E. Rescorla" initials="E." surname="Rescorla"/>
            <date month="August" year="2018"/>
            <abstract>
              <t indent="0">This document specifies version 1.3 of the Transport Layer Security (TLS) protocol. TLS allows client/server applications to communicate over the Internet in a way that is designed to prevent eavesdropping, tampering, and message forgery.</t>
              <t indent="0">This document updates RFCs 5705 and 6066, and obsoletes RFCs 5077, 5246, and 6961. This document also specifies new requirements for TLS 1.2 implementations.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8446"/>
          <seriesInfo name="DOI" value="10.17487/RFC8446"/>
        </reference>
        <reference anchor="RFC8570" target="https://www.rfc-editor.org/info/rfc8570" quoteTitle="true" derivedAnchor="RFC8570">
          <front>
            <title>IS-IS Traffic Engineering (TE) Metric Extensions</title>
            <author fullname="L. Ginsberg" initials="L." role="editor" surname="Ginsberg"/>
            <author fullname="S. Previdi" initials="S." role="editor" surname="Previdi"/>
            <author fullname="S. Giacalone" initials="S." surname="Giacalone"/>
            <author fullname="D. Ward" initials="D." surname="Ward"/>
            <author fullname="J. Drake" initials="J." surname="Drake"/>
            <author fullname="Q. Wu" initials="Q." surname="Wu"/>
            <date month="March" year="2019"/>
            <abstract>
              <t indent="0">In certain networks, such as, but not limited to, financial information networks (e.g., stock market data providers), network-performance criteria (e.g., latency) are becoming as critical to data-path selection as other metrics.</t>
              <t indent="0">This document describes extensions to IS-IS Traffic Engineering Extensions (RFC 5305). These extensions provide a way to distribute and collect network-performance information in a scalable fashion. The information distributed using IS-IS TE Metric Extensions can then be used to make path-selection decisions based on network performance.</t>
              <t indent="0">Note that this document only covers the mechanisms with which network-performance information is distributed. The mechanisms for measuring network performance or acting on that information, once distributed, are outside the scope of this document.</t>
              <t indent="0">This document obsoletes RFC 7810.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8570"/>
          <seriesInfo name="DOI" value="10.17487/RFC8570"/>
        </reference>
        <reference anchor="RFC8706" target="https://www.rfc-editor.org/info/rfc8706" quoteTitle="true" derivedAnchor="RFC8706">
          <front>
            <title>Restart Signaling for IS-IS</title>
            <author fullname="L. Ginsberg" initials="L." surname="Ginsberg"/>
            <author fullname="P. Wells" initials="P." surname="Wells"/>
            <date month="February" year="2020"/>
            <abstract>
              <t indent="0">This document describes a mechanism for a restarting router to signal to its neighbors that it is restarting, allowing them to reestablish their adjacencies without cycling through the DOWN state while still correctly initiating database synchronization.</t>
              <t indent="0">This document additionally describes a mechanism for a router to signal its neighbors that it is preparing to initiate a restart while maintaining forwarding-plane state. This allows the neighbors to maintain their adjacencies until the router has restarted but also allows the neighbors to bring the adjacencies down in the event of other topology changes.</t>
              <t indent="0">This document additionally describes a mechanism for a restarting router to determine when it has achieved Link State Protocol Data Unit (LSP) database synchronization with its neighbors and a mechanism to optimize LSP database synchronization while minimizing transient routing disruption when a router starts.</t>
              <t indent="0">This document obsoletes RFC 5306.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8706"/>
          <seriesInfo name="DOI" value="10.17487/RFC8706"/>
        </reference>
        <reference anchor="RFC9314" target="https://www.rfc-editor.org/info/rfc9314" quoteTitle="true" derivedAnchor="RFC9314">
          <front>
            <title>YANG Data Model for Bidirectional Forwarding Detection (BFD)</title>
            <author fullname="M. Jethanandani" initials="M." role="editor" surname="Jethanandani"/>
            <author fullname="R. Rahman" initials="R." role="editor" surname="Rahman"/>
            <author fullname="L. Zheng" initials="L." role="editor" surname="Zheng"/>
            <author fullname="S. Pallagatti" initials="S." surname="Pallagatti"/>
            <author fullname="G. Mirsky" initials="G." surname="Mirsky"/>
            <date month="September" year="2022"/>
            <abstract>
              <t indent="0">This document defines a YANG data model that can be used to configure and manage Bidirectional Forwarding Detection (BFD).</t>
              <t indent="0">The YANG modules in this document conform to the Network Management Datastore Architecture (NMDA) (RFC 8342). This document updates "YANG Data Model for Bidirectional Forwarding Detection (BFD)" (RFC 9127).</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="9314"/>
          <seriesInfo name="DOI" value="10.17487/RFC9314"/>
        </reference>
        <reference anchor="W3C.REC-xml-20081126" target="https://www.w3.org/TR/2008/REC-xml-20081126" quoteTitle="true" derivedAnchor="W3C.REC-xml-20081126">
          <front>
            <title>Extensible Markup Language (XML) 1.0 (Fifth Edition)</title>
            <author initials="T." surname="Bray" fullname="Tim Bray">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="J." surname="Paoli" fullname="Jean Paoli">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="M." surname="Sperberg-McQueen" fullname="Michael Sperberg-McQueen">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="E." surname="Maler" fullname="Eve Maler">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="F." surname="Yergeau" fullname="Francois Yergeau">
              <organization showOnFrontPage="true"/>
            </author>
            <date month="November" year="2008"/>
          </front>
          <seriesInfo name="World Wide Web Consortium Recommendation" value="REC-xml-20081126"/>
        </reference>
      </references>
      <references pn="section-9.2">
        <name slugifiedName="name-informative-references">Informative References</name>
        <reference anchor="RFC7812" target="https://www.rfc-editor.org/info/rfc7812" quoteTitle="true" derivedAnchor="RFC7812">
          <front>
            <title>An Architecture for IP/LDP Fast Reroute Using Maximally Redundant Trees (MRT-FRR)</title>
            <author fullname="A. Atlas" initials="A." surname="Atlas"/>
            <author fullname="C. Bowers" initials="C." surname="Bowers"/>
            <author fullname="G. Enyedi" initials="G." surname="Enyedi"/>
            <date month="June" year="2016"/>
            <abstract>
              <t indent="0">This document defines the architecture for IP and LDP Fast Reroute using Maximally Redundant Trees (MRT-FRR).  MRT-FRR is a technology that gives link-protection and node-protection with 100% coverage in any network topology that is still connected after the failure.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="7812"/>
          <seriesInfo name="DOI" value="10.17487/RFC7812"/>
        </reference>
        <reference anchor="RFC8340" target="https://www.rfc-editor.org/info/rfc8340" quoteTitle="true" derivedAnchor="RFC8340">
          <front>
            <title>YANG Tree Diagrams</title>
            <author fullname="M. Bjorklund" initials="M." surname="Bjorklund"/>
            <author fullname="L. Berger" initials="L." role="editor" surname="Berger"/>
            <date month="March" year="2018"/>
            <abstract>
              <t indent="0">This document captures the current syntax used in YANG module tree diagrams.  The purpose of this document is to provide a single location for this definition.  This syntax may be updated from time to time based on the evolution of the YANG language.</t>
            </abstract>
          </front>
          <seriesInfo name="BCP" value="215"/>
          <seriesInfo name="RFC" value="8340"/>
          <seriesInfo name="DOI" value="10.17487/RFC8340"/>
        </reference>
        <reference anchor="RFC8792" target="https://www.rfc-editor.org/info/rfc8792" quoteTitle="true" derivedAnchor="RFC8792">
          <front>
            <title>Handling Long Lines in Content of Internet-Drafts and RFCs</title>
            <author fullname="K. Watsen" initials="K." surname="Watsen"/>
            <author fullname="E. Auerswald" initials="E." surname="Auerswald"/>
            <author fullname="A. Farrel" initials="A." surname="Farrel"/>
            <author fullname="Q. Wu" initials="Q." surname="Wu"/>
            <date month="June" year="2020"/>
            <abstract>
              <t indent="0">This document defines two strategies for handling long lines in width-bounded text content.  One strategy, called the "single backslash" strategy, is based on the historical use of a single backslash ('\') character to indicate where line-folding has occurred, with the continuation occurring with the first character that is not a space character (' ') on the next line.  The second strategy, called the "double backslash" strategy, extends the first strategy by adding a second backslash character to identify where the continuation begins and is thereby able to handle cases not supported by the first strategy.  Both strategies use a self-describing header enabling automated reconstitution of the original content.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8792"/>
          <seriesInfo name="DOI" value="10.17487/RFC8792"/>
        </reference>
        <reference anchor="I-D.ietf-rtgwg-segment-routing-ti-lfa" quoteTitle="true" target="https://datatracker.ietf.org/doc/html/draft-ietf-rtgwg-segment-routing-ti-lfa-08" derivedAnchor="SR-TI-LFA">
          <front>
            <title>Topology Independent Fast Reroute using Segment Routing</title>
            <author initials="S." surname="Litkowski" fullname="Stephane Litkowski">
              <organization showOnFrontPage="true">Cisco Systems</organization>
            </author>
            <author initials="A." surname="Bashandy" fullname="Ahmed Bashandy">
              <organization showOnFrontPage="true">Individual</organization>
            </author>
            <author initials="C." surname="Filsfils" fullname="Clarence Filsfils">
              <organization showOnFrontPage="true">Cisco Systems</organization>
            </author>
            <author initials="P." surname="Francois" fullname="Pierre Francois">
              <organization showOnFrontPage="true">INSA Lyon</organization>
            </author>
            <author initials="B." surname="Decraene" fullname="Bruno Decraene">
              <organization showOnFrontPage="true">Orange</organization>
            </author>
            <author initials="D." surname="Voyer" fullname="Daniel Voyer">
              <organization showOnFrontPage="true">Bell Canada</organization>
            </author>
            <date month="January" day="21" year="2022"/>
            <abstract>
              <t indent="0">   This document presents Topology Independent Loop-free Alternate Fast
   Re-route (TI-LFA), aimed at providing protection of node and
   adjacency segments within the Segment Routing (SR) framework.  This
   Fast Re-route (FRR) behavior builds on proven IP-FRR concepts being
   LFAs, remote LFAs (RLFA), and remote LFAs with directed forwarding
   (DLFA).  It extends these concepts to provide guaranteed coverage in
   any two connected network using a link-state IGP.  A key aspect of
   TI-LFA is the FRR path selection approach establishing protection
   over the expected post-convergence paths from the point of local
   repair, reducing the operational need to control the tie-breaks among
   various FRR options.

              </t>
            </abstract>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-ietf-rtgwg-segment-routing-ti-lfa-08"/>
          <format type="TXT" target="https://www.ietf.org/archive/id/draft-ietf-rtgwg-segment-routing-ti-lfa-08.txt"/>
          <refcontent>Work in Progress</refcontent>
        </reference>
      </references>
    </references>
    <section anchor="rpc-example" toc="include" numbered="true" removeInRFC="false" pn="section-appendix.a">
      <name slugifiedName="name-example-of-is-is-configurat">Example of IS-IS Configuration in XML</name>
      <t indent="0" pn="section-appendix.a-1">This appendix gives an example of the configuration of an IS-IS instance on a device.
          The example is written in XML <xref target="W3C.REC-xml-20081126" format="default" sectionFormat="of" derivedContent="W3C.REC-xml-20081126"/>.</t>
      <sourcecode type="xml" markers="false" pn="section-appendix.a-2">
&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;data xmlns="urn:ietf:params:xml:ns:netconf:base:1.0"&gt;
  &lt;routing xmlns="urn:ietf:params:xml:ns:yang:ietf-routing"&gt;
      &lt;name&gt;SLI&lt;/name&gt;
      &lt;router-id&gt;192.0.2.1&lt;/router-id&gt;
      &lt;control-plane-protocols&gt;
        &lt;control-plane-protocol&gt;
          &lt;name&gt;IS-IS-example&lt;/name&gt;
          &lt;description/&gt;
          &lt;type&gt;
            &lt;type xmlns:isis="urn:ietf:params:xml:ns:yang:ietf-isis"&gt;
            isis:isis
            &lt;/type&gt;
          &lt;/type&gt;
          &lt;isis xmlns="urn:ietf:params:xml:ns:yang:ietf-isis"&gt;
              &lt;enabled&gt;true&lt;/enabled&gt;
              &lt;level-type&gt;level-2&lt;/level-type&gt;
              &lt;system-id&gt;87FC.FCDF.4432&lt;/system-id&gt;
              &lt;area-address&gt;49.0001&lt;/area-address&gt;
              &lt;mpls&gt;
                &lt;te-rid&gt;
                  &lt;ipv4-router-id&gt;192.0.2.1&lt;/ipv4-router-id&gt;
                &lt;/te-rid&gt;
              &lt;/mpls&gt;
              &lt;lsp-lifetime&gt;65535&lt;/lsp-lifetime&gt;
              &lt;lsp-refresh&gt;65000&lt;/lsp-refresh&gt;
              &lt;metric-type&gt;
                &lt;value&gt;wide-only&lt;/value&gt;
              &lt;/metric-type&gt;
              &lt;default-metric&gt;
                &lt;value&gt;111111&lt;/value&gt;
              &lt;/default-metric&gt;
              &lt;address-families&gt;
                &lt;address-family-list&gt;
                  &lt;address-family&gt;ipv4&lt;/address-family&gt;
                  &lt;enabled&gt;true&lt;/enabled&gt;
                &lt;/address-family-list&gt;
                &lt;address-family-list&gt;
                  &lt;address-family&gt;ipv6&lt;/address-family&gt;
                  &lt;enabled&gt;true&lt;/enabled&gt;
                &lt;/address-family-list&gt;
              &lt;/address-families&gt;
              &lt;interfaces&gt;
                &lt;interface&gt;
                  &lt;name&gt;Loopback0&lt;/name&gt;
                  &lt;tag&gt;200&lt;/tag&gt;
                  &lt;metric&gt;
                    &lt;value&gt;0&lt;/value&gt;
                  &lt;/metric&gt;
                  &lt;passive&gt;true&lt;/passive&gt;
                &lt;/interface&gt;
                &lt;interface&gt;
                  &lt;name&gt;Eth1&lt;/name&gt;
                  &lt;level-type&gt;level-2&lt;/level-type&gt;
                  &lt;interface-type&gt;point-to-point&lt;/interface-type&gt;
                  &lt;metric&gt;
                    &lt;value&gt;167890&lt;/value&gt;
                  &lt;/metric&gt;
                &lt;/interface&gt;
              &lt;/interfaces&gt;
          &lt;/isis&gt;
        &lt;/control-plane-protocol&gt;
      &lt;/control-plane-protocols&gt;
  &lt;/routing&gt;
  &lt;interfaces xmlns="urn:ietf:params:xml:ns:yang:ietf-interfaces"&gt;
    &lt;interface&gt;
      &lt;name&gt;Loopback0&lt;/name&gt;
      &lt;description/&gt;
      &lt;type xmlns:ianaift="urn:ietf:params:xml:ns:yang:iana-if-type"&gt;
      ianaift:softwareLoopback
      &lt;/type&gt;
      &lt;link-up-down-trap-enable&gt;enabled&lt;/link-up-down-trap-enable&gt;
      &lt;ipv4 xmlns="urn:ietf:params:xml:ns:yang:ietf-ip"&gt;
        &lt;address&gt;
          &lt;ip&gt;192.0.2.1&lt;/ip&gt;
          &lt;prefix-length&gt;32&lt;/prefix-length&gt;
        &lt;/address&gt;
      &lt;/ipv4&gt;
      &lt;ipv6 xmlns="urn:ietf:params:xml:ns:yang:ietf-ip"&gt;
        &lt;address&gt;
          &lt;ip&gt;2001:db8::1&lt;/ip&gt;
          &lt;prefix-length&gt;128&lt;/prefix-length&gt;
        &lt;/address&gt;
      &lt;/ipv6&gt;
    &lt;/interface&gt;
    &lt;interface&gt;
      &lt;name&gt;Eth1&lt;/name&gt;
      &lt;description/&gt;
      &lt;type xmlns:ianaift="urn:ietf:params:xml:ns:yang:iana-if-type"&gt;
      ianaift:ethernetCsmacd
      &lt;/type&gt;
      &lt;link-up-down-trap-enable&gt;enabled&lt;/link-up-down-trap-enable&gt;
      &lt;ipv4 xmlns="urn:ietf:params:xml:ns:yang:ietf-ip"&gt;
        &lt;address&gt;
          &lt;ip&gt;198.51.100.1&lt;/ip&gt;
          &lt;prefix-length&gt;30&lt;/prefix-length&gt;
        &lt;/address&gt;
      &lt;/ipv4&gt;
      &lt;ipv6 xmlns="urn:ietf:params:xml:ns:yang:ietf-ip"&gt;
        &lt;address&gt;
          &lt;ip&gt;2001:db8:0:0:ff::1&lt;/ip&gt;
          &lt;prefix-length&gt;64&lt;/prefix-length&gt;
        &lt;/address&gt;
      &lt;/ipv6&gt;
    &lt;/interface&gt;
  &lt;/interfaces&gt;
&lt;/data&gt;
</sourcecode>
    </section>
    <section anchor="ack" toc="include" numbered="false" removeInRFC="false" pn="section-appendix.b">
      <name slugifiedName="name-acknowledgments">Acknowledgments</name>
      <t indent="0" pn="section-appendix.b-1">The authors would like to thank <contact fullname="Tom Petch"/>,
      <contact fullname="Alvaro Retana"/>, <contact fullname="Stewart       Bryant"/>, <contact fullname="Barry Leiba"/>, <contact fullname="Benjamin Kaduk"/>, <contact fullname="Adam Roach"/>,
      and <contact fullname="Roman Danyliw"/> for their review and
      comments.</t>
    </section>
    <section anchor="Contributors" toc="include" numbered="false" removeInRFC="false" pn="section-appendix.c">
      <name slugifiedName="name-contributors">Contributors</name>
      <t indent="0" pn="section-appendix.c-1">The authors would like to thank
         <contact fullname="Kiran Agrahara Sreenivasa"/>, <contact fullname="Dean Bogdanovic"/>, <contact fullname="Yingzhen Qu"/>,
         <contact fullname="Yi Yang"/>, and <contact fullname="Jeff Tantsura"/>
         for their major contributions to this document.</t>
    </section>
    <section anchor="authors-addresses" numbered="false" removeInRFC="false" toc="include" pn="section-appendix.d">
      <name slugifiedName="name-authors-addresses">Authors' Addresses</name>
      <author fullname="Stephane Litkowski" initials="S" surname="Litkowski" role="editor">
        <organization showOnFrontPage="true">Cisco Systems</organization>
        <address>
          <email>slitkows.ietf@gmail.com</email>
        </address>
      </author>
      <author fullname="Derek Yeung" initials="D" surname="Yeung">
        <organization showOnFrontPage="true">Arrcus, Inc.</organization>
        <address>
          <postal>
            <street>2077 Gateway Place, Suite 400</street>
            <city>San Jose</city>
            <region>CA</region>
            <code>95110</code>
            <country>United States of America</country>
          </postal>
          <email>derek@arrcus.com</email>
        </address>
      </author>
      <author fullname="Acee Lindem" initials="A." surname="Lindem">
        <organization showOnFrontPage="true">Cisco Systems</organization>
        <address>
          <postal>
            <street>301 Midenhall Way</street>
            <city>Cary</city>
            <region>NC</region>
            <code>27513</code>
            <country>United States of America</country>
          </postal>
          <email>acee@cisco.com</email>
        </address>
      </author>
      <author fullname="Jeffrey Zhang" initials="J" surname="Zhang">
        <organization showOnFrontPage="true">Juniper Networks</organization>
        <address>
          <postal>
            <street>10 Technology Park Drive</street>
            <city>Westford</city>
            <region>MA</region>
            <code>01886</code>
            <country>United States of America</country>
          </postal>
          <email>zzhang@juniper.net</email>
        </address>
      </author>
      <author fullname="Ladislav Lhotka" initials="L" surname="Lhotka">
        <organization showOnFrontPage="true">CZ.NIC</organization>
        <address>
          <email>ladislav.lhotka@nic.cz</email>
        </address>
      </author>
    </section>
  </back>
</rfc>
