<?xml version='1.0' encoding='utf-8'?>
<rfc xmlns:xi="http://www.w3.org/2001/XInclude" version="3" category="info" docName="draft-aranda-dispatch-q4s-10" indexInclude="true" ipr="trust200902" number="8802" prepTime="2020-07-29T06:41:29" scripts="Common,Latin" sortRefs="false" submissionType="independent" symRefs="true" tocDepth="4" tocInclude="true" xml:lang="en">
  <link href="https://datatracker.ietf.org/doc/draft-aranda-dispatch-q4s-10" rel="prev"/>
  <link href="https://dx.doi.org/10.17487/rfc8802" rel="alternate"/>
  <link href="urn:issn:2070-1721" rel="alternate"/>
  <front>
    <title>The Quality for Service (Q4S) Protocol</title>
    <seriesInfo name="RFC" value="8802" stream="independent"/>
    <author fullname="Jose Javier Garcia Aranda" initials="J.J." surname="Aranda">
      <organization showOnFrontPage="true">Nokia</organization>
      <address>
        <postal>
          <street>María Tubau 9</street>
          <code>28050</code>
          <city>Madrid</city>
          <country>Spain</country>
        </postal>
        <phone>+34 91 330 4348</phone>
        <email>jose_javier.garcia_aranda@nokia.com</email>
      </address>
    </author>
    <author fullname="Mónica Cortés" initials="M." surname="Cortés">
      <organization showOnFrontPage="true">Nokia</organization>
      <address>
        <postal>
          <street>María Tubau 9</street>
          <code>28050</code>
          <city>Madrid</city>
          <country>Spain</country>
        </postal>
        <email>monica.cortes_sack@nokia.com</email>
      </address>
    </author>
    <author fullname="Joaquín Salvachúa" initials="J." surname="Salvachúa">
      <organization abbrev="Univ. Politecnica de Madrid" showOnFrontPage="true">Universidad Politecnica de Madrid</organization>
      <address>
        <postal>
          <street>Avenida Complutense 30</street>
          <code>28040</code>
          <city>Madrid</city>
          <country>Spain</country>
        </postal>
        <phone>+34 91 0672134</phone>
        <email>Joaquin.salvachua@upm.es</email>
      </address>
    </author>
    <author fullname="Maribel Narganes" initials="M." surname="Narganes">
      <organization abbrev="Tecnalia" showOnFrontPage="true">Tecnalia Research &amp; Innovation</organization>
      <address>
        <postal>
          <extaddr>Parque Científico y Tecnológico de Bizkaia</extaddr>
          <street>Astondo Bidea, Edificio 700</street>
          <code>E-48160</code>
          <city>Derio</city>
          <region>Bizkaia</region>
          <country>Spain</country>
        </postal>
        <phone>+34 946 430 850</phone>
        <email>maribel.narganes@tecnalia.com</email>
      </address>
    </author>
    <author fullname="Iñaki Martínez-Sarriegui" initials="I." surname="Martínez-Sarriegui">
      <organization showOnFrontPage="true">Optiva Media</organization>
      <address>
        <postal>
          <street>Edificio Europa II,</street>
          <street>Calle Musgo 2, 1G,</street>
          <street>28023 Madrid</street>
          <street>Spain</street>
        </postal>
        <phone>+34 91 297 7271</phone>
        <email>inaki.martinez@optivamedia.com</email>
      </address>
    </author>
    <date month="07" year="2020"/>
    <keyword>quality measurement</keyword>
    <keyword>measurement protocol</keyword>
    <keyword>latency</keyword>
    <keyword>jitter</keyword>
    <keyword>bandwidth</keyword>
    <keyword>packet-loss</keyword>
    <abstract pn="section-abstract">
      <t pn="section-abstract-1">
   This memo describes an application-level protocol for the
   communication of end-to-end QoS compliance information based on
   the HyperText Transfer Protocol (HTTP) and the Session
   Description Protocol (SDP).  The Quality for Service 
   (Q4S) protocol provides a mechanism to negotiate and monitor latency,
   jitter, bandwidth, and packet loss, and to alert whenever one of the
   negotiated conditions is violated.</t>
      <t pn="section-abstract-2">
   Implementation details on the actions to be triggered upon
   reception/detection of QoS alerts exchanged by the protocol are
   out of scope of this document; it is either application dependent (e.g.,
   act to increase quality or reduce bit-rate) or network dependent
   (e.g., change connection's quality profile).</t>
      <t pn="section-abstract-3">
   This protocol specification is the product of research conducted
   over a number of years; it is presented here as a permanent
   record and to offer a foundation for future similar work.  It does
   not represent a standard protocol and does not have IETF
   consensus.</t>
    </abstract>
    <boilerplate>
      <section anchor="status-of-memo" numbered="false" removeInRFC="false" toc="exclude" pn="section-boilerplate.1">
        <name slugifiedName="name-status-of-this-memo">Status of This Memo</name>
        <t pn="section-boilerplate.1-1">
            This document is not an Internet Standards Track specification; it is
            published for informational purposes.
        </t>
        <t pn="section-boilerplate.1-2">
            This is a contribution to the RFC Series, independently of any
            other RFC stream.  The RFC Editor has chosen to publish this
            document at its discretion and makes no statement about its value
            for implementation or deployment.  Documents approved for
            publication by the RFC Editor are not candidates for any level of
            Internet Standard; see Section 2 of RFC 7841.
        </t>
        <t pn="section-boilerplate.1-3">
            Information about the current status of this document, any
            errata, and how to provide feedback on it may be obtained at
            <eref target="https://www.rfc-editor.org/info/rfc8802" brackets="none"/>.
        </t>
      </section>
      <section anchor="copyright" numbered="false" removeInRFC="false" toc="exclude" pn="section-boilerplate.2">
        <name slugifiedName="name-copyright-notice">Copyright Notice</name>
        <t pn="section-boilerplate.2-1">
            Copyright (c) 2020 IETF Trust and the persons identified as the
            document authors. All rights reserved.
        </t>
        <t pn="section-boilerplate.2-2">
            This document is subject to BCP 78 and the IETF Trust's Legal
            Provisions Relating to IETF Documents
            (<eref target="https://trustee.ietf.org/license-info" brackets="none"/>) in effect on the date of
            publication of this document. Please review these documents
            carefully, as they describe your rights and restrictions with
            respect to this document.
        </t>
      </section>
    </boilerplate>
    <toc>
      <section anchor="toc" numbered="false" removeInRFC="false" toc="exclude" pn="section-toc.1">
        <name slugifiedName="name-table-of-contents">Table of Contents</name>
        <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1">
          <li pn="section-toc.1-1.1">
            <t pn="section-toc.1-1.1.1"><xref derivedContent="1" format="counter" sectionFormat="of" target="section-1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-introduction">Introduction</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.1.2">
              <li pn="section-toc.1-1.1.2.1">
                <t keepWithNext="true" pn="section-toc.1-1.1.2.1.1"><xref derivedContent="1.1" format="counter" sectionFormat="of" target="section-1.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-scope">Scope</xref></t>
              </li>
              <li pn="section-toc.1-1.1.2.2">
                <t keepWithNext="true" pn="section-toc.1-1.1.2.2.1"><xref derivedContent="1.2" format="counter" sectionFormat="of" target="section-1.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-motivation">Motivation</xref></t>
              </li>
              <li pn="section-toc.1-1.1.2.3">
                <t keepWithNext="true" pn="section-toc.1-1.1.2.3.1"><xref derivedContent="1.3" format="counter" sectionFormat="of" target="section-1.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-summary-of-features">Summary of Features</xref></t>
              </li>
              <li pn="section-toc.1-1.1.2.4">
                <t pn="section-toc.1-1.1.2.4.1"><xref derivedContent="1.4" format="counter" sectionFormat="of" target="section-1.4"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-differences-from-owamp-twam">Differences from OWAMP/TWAMP</xref></t>
              </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.2">
            <t pn="section-toc.1-1.2.1"><xref derivedContent="2" format="counter" sectionFormat="of" target="section-2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-terminology">Terminology</xref></t>
          </li>
          <li pn="section-toc.1-1.3">
            <t pn="section-toc.1-1.3.1"><xref derivedContent="3" format="counter" sectionFormat="of" target="section-3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-overview-of-operation">Overview of Operation</xref></t>
          </li>
          <li pn="section-toc.1-1.4">
            <t pn="section-toc.1-1.4.1"><xref derivedContent="4" format="counter" sectionFormat="of" target="section-4"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-q4s-messages">Q4S Messages</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.4.2">
              <li pn="section-toc.1-1.4.2.1">
                <t pn="section-toc.1-1.4.2.1.1"><xref derivedContent="4.1" format="counter" sectionFormat="of" target="section-4.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-requests">Requests</xref></t>
              </li>
              <li pn="section-toc.1-1.4.2.2">
                <t pn="section-toc.1-1.4.2.2.1"><xref derivedContent="4.2" format="counter" sectionFormat="of" target="section-4.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-responses">Responses</xref></t>
              </li>
              <li pn="section-toc.1-1.4.2.3">
                <t pn="section-toc.1-1.4.2.3.1"><xref derivedContent="4.3" format="counter" sectionFormat="of" target="section-4.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-header-fields">Header Fields</xref></t>
                <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.4.2.3.2">
                  <li pn="section-toc.1-1.4.2.3.2.1">
                    <t pn="section-toc.1-1.4.2.3.2.1.1"><xref derivedContent="4.3.1" format="counter" sectionFormat="of" target="section-4.3.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-common-q4s-header-fields">Common Q4S Header Fields</xref></t>
                  </li>
                  <li pn="section-toc.1-1.4.2.3.2.2">
                    <t pn="section-toc.1-1.4.2.3.2.2.1"><xref derivedContent="4.3.2" format="counter" sectionFormat="of" target="section-4.3.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-specific-q4s-request-header">Specific Q4S Request Header Fields</xref></t>
                  </li>
                  <li pn="section-toc.1-1.4.2.3.2.3">
                    <t pn="section-toc.1-1.4.2.3.2.3.1"><xref derivedContent="4.3.3" format="counter" sectionFormat="of" target="section-4.3.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-specific-q4s-response-heade">Specific Q4S Response Header Fields</xref></t>
                  </li>
                </ul>
              </li>
              <li pn="section-toc.1-1.4.2.4">
                <t pn="section-toc.1-1.4.2.4.1"><xref derivedContent="4.4" format="counter" sectionFormat="of" target="section-4.4"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-bodies">Bodies</xref></t>
                <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.4.2.4.2">
                  <li pn="section-toc.1-1.4.2.4.2.1">
                    <t pn="section-toc.1-1.4.2.4.2.1.1"><xref derivedContent="4.4.1" format="counter" sectionFormat="of" target="section-4.4.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-encoding">Encoding</xref></t>
                  </li>
                </ul>
              </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.5">
            <t pn="section-toc.1-1.5.1"><xref derivedContent="5" format="counter" sectionFormat="of" target="section-5"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-q4s-method-definitions">Q4S Method Definitions</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.5.2">
              <li pn="section-toc.1-1.5.2.1">
                <t pn="section-toc.1-1.5.2.1.1"><xref derivedContent="5.1" format="counter" sectionFormat="of" target="section-5.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-begin">BEGIN</xref></t>
              </li>
              <li pn="section-toc.1-1.5.2.2">
                <t pn="section-toc.1-1.5.2.2.1"><xref derivedContent="5.2" format="counter" sectionFormat="of" target="section-5.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-ready">READY</xref></t>
              </li>
              <li pn="section-toc.1-1.5.2.3">
                <t pn="section-toc.1-1.5.2.3.1"><xref derivedContent="5.3" format="counter" sectionFormat="of" target="section-5.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-ping">PING</xref></t>
              </li>
              <li pn="section-toc.1-1.5.2.4">
                <t pn="section-toc.1-1.5.2.4.1"><xref derivedContent="5.4" format="counter" sectionFormat="of" target="section-5.4"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-bwidth">BWIDTH</xref></t>
              </li>
              <li pn="section-toc.1-1.5.2.5">
                <t pn="section-toc.1-1.5.2.5.1"><xref derivedContent="5.5" format="counter" sectionFormat="of" target="section-5.5"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-q4s-alert">Q4S-ALERT</xref></t>
              </li>
              <li pn="section-toc.1-1.5.2.6">
                <t pn="section-toc.1-1.5.2.6.1"><xref derivedContent="5.6" format="counter" sectionFormat="of" target="section-5.6"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-q4s-recovery">Q4S-RECOVERY</xref></t>
              </li>
              <li pn="section-toc.1-1.5.2.7">
                <t pn="section-toc.1-1.5.2.7.1"><xref derivedContent="5.7" format="counter" sectionFormat="of" target="section-5.7"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-cancel">CANCEL</xref></t>
              </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.6">
            <t pn="section-toc.1-1.6.1"><xref derivedContent="6" format="counter" sectionFormat="of" target="section-6"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-response-codes">Response Codes</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.6.2">
              <li pn="section-toc.1-1.6.2.1">
                <t pn="section-toc.1-1.6.2.1.1"><xref derivedContent="6.1" format="counter" sectionFormat="of" target="section-6.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-100-trying">100 Trying</xref></t>
              </li>
              <li pn="section-toc.1-1.6.2.2">
                <t pn="section-toc.1-1.6.2.2.1"><xref derivedContent="6.2" format="counter" sectionFormat="of" target="section-6.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-success-2xx">Success 2xx</xref></t>
                <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.6.2.2.2">
                  <li pn="section-toc.1-1.6.2.2.2.1">
                    <t pn="section-toc.1-1.6.2.2.2.1.1"><xref derivedContent="6.2.1" format="counter" sectionFormat="of" target="section-6.2.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-200-ok">200 OK</xref></t>
                  </li>
                </ul>
              </li>
              <li pn="section-toc.1-1.6.2.3">
                <t pn="section-toc.1-1.6.2.3.1"><xref derivedContent="6.3" format="counter" sectionFormat="of" target="section-6.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-redirection-3xx">Redirection 3xx</xref></t>
              </li>
              <li pn="section-toc.1-1.6.2.4">
                <t pn="section-toc.1-1.6.2.4.1"><xref derivedContent="6.4" format="counter" sectionFormat="of" target="section-6.4"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-request-failure-4xx">Request Failure 4xx</xref></t>
                <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.6.2.4.2">
                  <li pn="section-toc.1-1.6.2.4.2.1">
                    <t pn="section-toc.1-1.6.2.4.2.1.1"><xref derivedContent="6.4.1" format="counter" sectionFormat="of" target="section-6.4.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-400-bad-request">400 Bad Request</xref></t>
                  </li>
                  <li pn="section-toc.1-1.6.2.4.2.2">
                    <t pn="section-toc.1-1.6.2.4.2.2.1"><xref derivedContent="6.4.2" format="counter" sectionFormat="of" target="section-6.4.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-404-not-found">404 Not Found</xref></t>
                  </li>
                  <li pn="section-toc.1-1.6.2.4.2.3">
                    <t pn="section-toc.1-1.6.2.4.2.3.1"><xref derivedContent="6.4.3" format="counter" sectionFormat="of" target="section-6.4.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-405-method-not-allowed">405 Method Not Allowed</xref></t>
                  </li>
                  <li pn="section-toc.1-1.6.2.4.2.4">
                    <t pn="section-toc.1-1.6.2.4.2.4.1"><xref derivedContent="6.4.4" format="counter" sectionFormat="of" target="section-6.4.4"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-406-not-acceptable">406 Not Acceptable</xref></t>
                  </li>
                  <li pn="section-toc.1-1.6.2.4.2.5">
                    <t pn="section-toc.1-1.6.2.4.2.5.1"><xref derivedContent="6.4.5" format="counter" sectionFormat="of" target="section-6.4.5"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-408-request-timeout">408 Request Timeout</xref></t>
                  </li>
                  <li pn="section-toc.1-1.6.2.4.2.6">
                    <t pn="section-toc.1-1.6.2.4.2.6.1"><xref derivedContent="6.4.6" format="counter" sectionFormat="of" target="section-6.4.6"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-413-request-entity-too-larg">413 Request Entity Too Large</xref></t>
                  </li>
                  <li pn="section-toc.1-1.6.2.4.2.7">
                    <t pn="section-toc.1-1.6.2.4.2.7.1"><xref derivedContent="6.4.7" format="counter" sectionFormat="of" target="section-6.4.7"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-414-request-uri-too-long">414 Request-URI Too Long</xref></t>
                  </li>
                  <li pn="section-toc.1-1.6.2.4.2.8">
                    <t pn="section-toc.1-1.6.2.4.2.8.1"><xref derivedContent="6.4.8" format="counter" sectionFormat="of" target="section-6.4.8"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-415-unsupported-media-type">415 Unsupported Media Type</xref></t>
                  </li>
                  <li pn="section-toc.1-1.6.2.4.2.9">
                    <t pn="section-toc.1-1.6.2.4.2.9.1"><xref derivedContent="6.4.9" format="counter" sectionFormat="of" target="section-6.4.9"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-416-unsupported-uri-scheme">416 Unsupported URI Scheme</xref></t>
                  </li>
                </ul>
              </li>
              <li pn="section-toc.1-1.6.2.5">
                <t pn="section-toc.1-1.6.2.5.1"><xref derivedContent="6.5" format="counter" sectionFormat="of" target="section-6.5"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-server-failure-5xx">Server Failure 5xx</xref></t>
                <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.6.2.5.2">
                  <li pn="section-toc.1-1.6.2.5.2.1">
                    <t pn="section-toc.1-1.6.2.5.2.1.1"><xref derivedContent="6.5.1" format="counter" sectionFormat="of" target="section-6.5.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-500-server-internal-error">500 Server Internal Error</xref></t>
                  </li>
                  <li pn="section-toc.1-1.6.2.5.2.2">
                    <t pn="section-toc.1-1.6.2.5.2.2.1"><xref derivedContent="6.5.2" format="counter" sectionFormat="of" target="section-6.5.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-501-not-implemented">501 Not Implemented</xref></t>
                  </li>
                  <li pn="section-toc.1-1.6.2.5.2.3">
                    <t pn="section-toc.1-1.6.2.5.2.3.1"><xref derivedContent="6.5.3" format="counter" sectionFormat="of" target="section-6.5.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-503-service-unavailable">503 Service Unavailable</xref></t>
                  </li>
                  <li pn="section-toc.1-1.6.2.5.2.4">
                    <t pn="section-toc.1-1.6.2.5.2.4.1"><xref derivedContent="6.5.4" format="counter" sectionFormat="of" target="section-6.5.4"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-504-server-time-out">504 Server Time-Out</xref></t>
                  </li>
                  <li pn="section-toc.1-1.6.2.5.2.5">
                    <t pn="section-toc.1-1.6.2.5.2.5.1"><xref derivedContent="6.5.5" format="counter" sectionFormat="of" target="section-6.5.5"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-505-version-not-supported">505 Version Not Supported</xref></t>
                  </li>
                  <li pn="section-toc.1-1.6.2.5.2.6">
                    <t pn="section-toc.1-1.6.2.5.2.6.1"><xref derivedContent="6.5.6" format="counter" sectionFormat="of" target="section-6.5.6"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-513-message-too-large">513 Message Too Large</xref></t>
                  </li>
                </ul>
              </li>
              <li pn="section-toc.1-1.6.2.6">
                <t pn="section-toc.1-1.6.2.6.1"><xref derivedContent="6.6" format="counter" sectionFormat="of" target="section-6.6"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-global-failures-6xx">Global Failures 6xx</xref></t>
                <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.6.2.6.2">
                  <li pn="section-toc.1-1.6.2.6.2.1">
                    <t pn="section-toc.1-1.6.2.6.2.1.1"><xref derivedContent="6.6.1" format="counter" sectionFormat="of" target="section-6.6.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-600-session-does-not-exist">600 Session Does Not Exist</xref></t>
                  </li>
                  <li pn="section-toc.1-1.6.2.6.2.2">
                    <t pn="section-toc.1-1.6.2.6.2.2.1"><xref derivedContent="6.6.2" format="counter" sectionFormat="of" target="section-6.6.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-601-quality-level-not-allow">601 Quality Level Not Allowed</xref></t>
                  </li>
                  <li pn="section-toc.1-1.6.2.6.2.3">
                    <t pn="section-toc.1-1.6.2.6.2.3.1"><xref derivedContent="6.6.3" format="counter" sectionFormat="of" target="section-6.6.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-603-session-not-allowed">603 Session Not Allowed</xref></t>
                  </li>
                  <li pn="section-toc.1-1.6.2.6.2.4">
                    <t pn="section-toc.1-1.6.2.6.2.4.1"><xref derivedContent="6.6.4" format="counter" sectionFormat="of" target="section-6.6.4"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-604-authorization-not-allow">604 Authorization Not Allowed</xref></t>
                  </li>
                </ul>
              </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.7">
            <t pn="section-toc.1-1.7.1"><xref derivedContent="7" format="counter" sectionFormat="of" target="section-7"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-protocol">Protocol</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.7.2">
              <li pn="section-toc.1-1.7.2.1">
                <t pn="section-toc.1-1.7.2.1.1"><xref derivedContent="7.1" format="counter" sectionFormat="of" target="section-7.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-protocol-phases">Protocol Phases</xref></t>
              </li>
              <li pn="section-toc.1-1.7.2.2">
                <t pn="section-toc.1-1.7.2.2.1"><xref derivedContent="7.2" format="counter" sectionFormat="of" target="section-7.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-sdp-structure">SDP Structure</xref></t>
                <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.7.2.2.2">
                  <li pn="section-toc.1-1.7.2.2.2.1">
                    <t pn="section-toc.1-1.7.2.2.2.1.1"><xref derivedContent="7.2.1" format="counter" sectionFormat="of" target="section-7.2.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-qos-level-attribute">"qos-level" Attribute</xref></t>
                  </li>
                  <li pn="section-toc.1-1.7.2.2.2.2">
                    <t pn="section-toc.1-1.7.2.2.2.2.1"><xref derivedContent="7.2.2" format="counter" sectionFormat="of" target="section-7.2.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-alerting-mode-attribute">"alerting-mode" Attribute</xref></t>
                  </li>
                  <li pn="section-toc.1-1.7.2.2.2.3">
                    <t pn="section-toc.1-1.7.2.2.2.3.1"><xref derivedContent="7.2.3" format="counter" sectionFormat="of" target="section-7.2.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-alert-pause-attribute">"alert-pause" Attribute</xref></t>
                  </li>
                  <li pn="section-toc.1-1.7.2.2.2.4">
                    <t pn="section-toc.1-1.7.2.2.2.4.1"><xref derivedContent="7.2.4" format="counter" sectionFormat="of" target="section-7.2.4"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-recovery-pause-attribute">"recovery-pause" Attribute</xref></t>
                  </li>
                  <li pn="section-toc.1-1.7.2.2.2.5">
                    <t pn="section-toc.1-1.7.2.2.2.5.1"><xref derivedContent="7.2.5" format="counter" sectionFormat="of" target="section-7.2.5"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-public-address-attributes">"public-address" Attributes</xref></t>
                  </li>
                  <li pn="section-toc.1-1.7.2.2.2.6">
                    <t pn="section-toc.1-1.7.2.2.2.6.1"><xref derivedContent="7.2.6" format="counter" sectionFormat="of" target="section-7.2.6"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-latency-attribute">"latency" Attribute</xref></t>
                  </li>
                  <li pn="section-toc.1-1.7.2.2.2.7">
                    <t pn="section-toc.1-1.7.2.2.2.7.1"><xref derivedContent="7.2.7" format="counter" sectionFormat="of" target="section-7.2.7"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-jitter-attribute">"jitter" Attribute</xref></t>
                  </li>
                  <li pn="section-toc.1-1.7.2.2.2.8">
                    <t pn="section-toc.1-1.7.2.2.2.8.1"><xref derivedContent="7.2.8" format="counter" sectionFormat="of" target="section-7.2.8"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-bandwidth-attribute">"bandwidth" Attribute</xref></t>
                  </li>
                  <li pn="section-toc.1-1.7.2.2.2.9">
                    <t pn="section-toc.1-1.7.2.2.2.9.1"><xref derivedContent="7.2.9" format="counter" sectionFormat="of" target="section-7.2.9"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-packetloss-attribute">"packetloss" Attribute</xref></t>
                  </li>
                  <li pn="section-toc.1-1.7.2.2.2.10">
                    <t pn="section-toc.1-1.7.2.2.2.10.1"><xref derivedContent="7.2.10" format="counter" sectionFormat="of" target="section-7.2.10"/>. <xref derivedContent="" format="title" sectionFormat="of" target="name-flow-attributes">"flow" Attributes</xref></t>
                  </li>
                  <li pn="section-toc.1-1.7.2.2.2.11">
                    <t pn="section-toc.1-1.7.2.2.2.11.1"><xref derivedContent="7.2.11" format="counter" sectionFormat="of" target="section-7.2.11"/>. <xref derivedContent="" format="title" sectionFormat="of" target="name-measurement-attributes">"measurement" Attributes</xref></t>
                  </li>
                  <li pn="section-toc.1-1.7.2.2.2.12">
                    <t pn="section-toc.1-1.7.2.2.2.12.1"><xref derivedContent="7.2.12" format="counter" sectionFormat="of" target="section-7.2.12"/>. <xref derivedContent="" format="title" sectionFormat="of" target="name-max-content-length-attribut">"max-content-length" Attribute</xref></t>
                  </li>
                </ul>
              </li>
              <li pn="section-toc.1-1.7.2.3">
                <t pn="section-toc.1-1.7.2.3.1"><xref derivedContent="7.3" format="counter" sectionFormat="of" target="section-7.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-measurements">Measurements</xref></t>
                <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.7.2.3.2">
                  <li pn="section-toc.1-1.7.2.3.2.1">
                    <t pn="section-toc.1-1.7.2.3.2.1.1"><xref derivedContent="7.3.1" format="counter" sectionFormat="of" target="section-7.3.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-latency">Latency</xref></t>
                  </li>
                  <li pn="section-toc.1-1.7.2.3.2.2">
                    <t pn="section-toc.1-1.7.2.3.2.2.1"><xref derivedContent="7.3.2" format="counter" sectionFormat="of" target="section-7.3.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-jitter">Jitter</xref></t>
                  </li>
                  <li pn="section-toc.1-1.7.2.3.2.3">
                    <t pn="section-toc.1-1.7.2.3.2.3.1"><xref derivedContent="7.3.3" format="counter" sectionFormat="of" target="section-7.3.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-bandwidth">Bandwidth</xref></t>
                  </li>
                  <li pn="section-toc.1-1.7.2.3.2.4">
                    <t pn="section-toc.1-1.7.2.3.2.4.1"><xref derivedContent="7.3.4" format="counter" sectionFormat="of" target="section-7.3.4"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-packet-loss">Packet Loss</xref></t>
                  </li>
                </ul>
              </li>
              <li pn="section-toc.1-1.7.2.4">
                <t pn="section-toc.1-1.7.2.4.1"><xref derivedContent="7.4" format="counter" sectionFormat="of" target="section-7.4"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-handshake-phase">Handshake Phase</xref></t>
              </li>
              <li pn="section-toc.1-1.7.2.5">
                <t pn="section-toc.1-1.7.2.5.1"><xref derivedContent="7.5" format="counter" sectionFormat="of" target="section-7.5"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-negotiation-phase">Negotiation Phase</xref></t>
                <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.7.2.5.2">
                  <li pn="section-toc.1-1.7.2.5.2.1">
                    <t pn="section-toc.1-1.7.2.5.2.1.1"><xref derivedContent="7.5.1" format="counter" sectionFormat="of" target="section-7.5.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-stage-0-measurement-of-late">Stage 0: Measurement of Latencies and Jitter</xref></t>
                  </li>
                  <li pn="section-toc.1-1.7.2.5.2.2">
                    <t pn="section-toc.1-1.7.2.5.2.2.1"><xref derivedContent="7.5.2" format="counter" sectionFormat="of" target="section-7.5.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-stage-1-measurement-of-band">Stage 1: Measurement of Bandwidth and Packet Loss</xref></t>
                  </li>
                  <li pn="section-toc.1-1.7.2.5.2.3">
                    <t pn="section-toc.1-1.7.2.5.2.3.1"><xref derivedContent="7.5.3" format="counter" sectionFormat="of" target="section-7.5.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-quality-constraints-not-rea">Quality Constraints Not Reached</xref></t>
                    <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.7.2.5.2.3.2">
                      <li pn="section-toc.1-1.7.2.5.2.3.2.1">
                        <t pn="section-toc.1-1.7.2.5.2.3.2.1.1"><xref derivedContent="7.5.3.1" format="counter" sectionFormat="of" target="section-7.5.3.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-actuator-role">Actuator Role</xref></t>
                      </li>
                      <li pn="section-toc.1-1.7.2.5.2.3.2.2">
                        <t pn="section-toc.1-1.7.2.5.2.3.2.2.1"><xref derivedContent="7.5.3.2" format="counter" sectionFormat="of" target="section-7.5.3.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-policy-server-role">Policy Server Role</xref></t>
                      </li>
                    </ul>
                  </li>
                  <li pn="section-toc.1-1.7.2.5.2.4">
                    <t pn="section-toc.1-1.7.2.5.2.4.1"><xref derivedContent="7.5.4" format="counter" sectionFormat="of" target="section-7.5.4"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-qos-level-changes">"qos-level" Changes</xref></t>
                  </li>
                </ul>
              </li>
              <li pn="section-toc.1-1.7.2.6">
                <t pn="section-toc.1-1.7.2.6.1"><xref derivedContent="7.6" format="counter" sectionFormat="of" target="section-7.6"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-continuity-phase">Continuity Phase</xref></t>
              </li>
              <li pn="section-toc.1-1.7.2.7">
                <t pn="section-toc.1-1.7.2.7.1"><xref derivedContent="7.7" format="counter" sectionFormat="of" target="section-7.7"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-termination-phase">Termination Phase</xref></t>
                <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.7.2.7.2">
                  <li pn="section-toc.1-1.7.2.7.2.1">
                    <t pn="section-toc.1-1.7.2.7.2.1.1"><xref derivedContent="7.7.1" format="counter" sectionFormat="of" target="section-7.7.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-sanity-check-of-quality-ses">Sanity Check of Quality Sessions</xref></t>
                  </li>
                </ul>
              </li>
              <li pn="section-toc.1-1.7.2.8">
                <t pn="section-toc.1-1.7.2.8.1"><xref derivedContent="7.8" format="counter" sectionFormat="of" target="section-7.8"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-dynamic-constraints-and-flo">Dynamic Constraints and Flows</xref></t>
              </li>
              <li pn="section-toc.1-1.7.2.9">
                <t pn="section-toc.1-1.7.2.9.1"><xref derivedContent="7.9" format="counter" sectionFormat="of" target="section-7.9"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-qos-level-upgrade-and-downg">"qos-level" Upgrade and Downgrade Operation</xref></t>
              </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.8">
            <t pn="section-toc.1-1.8.1"><xref derivedContent="8" format="counter" sectionFormat="of" target="section-8"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-general-user-agent-behavior">General User Agent Behavior</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.8.2">
              <li pn="section-toc.1-1.8.2.1">
                <t pn="section-toc.1-1.8.2.1.1"><xref derivedContent="8.1" format="counter" sectionFormat="of" target="section-8.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-roles-in-peer-to-peer-scena">Roles in Peer-to-Peer Scenarios</xref></t>
              </li>
              <li pn="section-toc.1-1.8.2.2">
                <t pn="section-toc.1-1.8.2.2.1"><xref derivedContent="8.2" format="counter" sectionFormat="of" target="section-8.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-multiple-quality-sessions-i">Multiple Quality Sessions in Parallel</xref></t>
              </li>
              <li pn="section-toc.1-1.8.2.3">
                <t pn="section-toc.1-1.8.2.3.1"><xref derivedContent="8.3" format="counter" sectionFormat="of" target="section-8.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-general-client-behavior">General Client Behavior</xref></t>
                <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.8.2.3.2">
                  <li pn="section-toc.1-1.8.2.3.2.1">
                    <t pn="section-toc.1-1.8.2.3.2.1.1"><xref derivedContent="8.3.1" format="counter" sectionFormat="of" target="section-8.3.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-generating-requests">Generating Requests</xref></t>
                  </li>
                </ul>
              </li>
              <li pn="section-toc.1-1.8.2.4">
                <t pn="section-toc.1-1.8.2.4.1"><xref derivedContent="8.4" format="counter" sectionFormat="of" target="section-8.4"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-general-server-behavior">General Server Behavior</xref></t>
              </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.9">
            <t pn="section-toc.1-1.9.1"><xref derivedContent="9" format="counter" sectionFormat="of" target="section-9"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-implementation-recommendati">Implementation Recommendations</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.9.2">
              <li pn="section-toc.1-1.9.2.1">
                <t pn="section-toc.1-1.9.2.1.1"><xref derivedContent="9.1" format="counter" sectionFormat="of" target="section-9.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-default-client-constraints">Default Client Constraints</xref></t>
              </li>
              <li pn="section-toc.1-1.9.2.2">
                <t pn="section-toc.1-1.9.2.2.1"><xref derivedContent="9.2" format="counter" sectionFormat="of" target="section-9.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-latency-and-jitter-measurem">Latency and Jitter Measurements</xref></t>
              </li>
              <li pn="section-toc.1-1.9.2.3">
                <t pn="section-toc.1-1.9.2.3.1"><xref derivedContent="9.3" format="counter" sectionFormat="of" target="section-9.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-bandwidth-measurements">Bandwidth Measurements</xref></t>
              </li>
              <li pn="section-toc.1-1.9.2.4">
                <t pn="section-toc.1-1.9.2.4.1"><xref derivedContent="9.4" format="counter" sectionFormat="of" target="section-9.4"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-packet-loss-measurement-res">Packet Loss Measurement Resolution</xref></t>
              </li>
              <li pn="section-toc.1-1.9.2.5">
                <t pn="section-toc.1-1.9.2.5.1"><xref derivedContent="9.5" format="counter" sectionFormat="of" target="section-9.5"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-measurements-and-reactions">Measurements and Reactions</xref></t>
              </li>
              <li pn="section-toc.1-1.9.2.6">
                <t pn="section-toc.1-1.9.2.6.1"><xref derivedContent="9.6" format="counter" sectionFormat="of" target="section-9.6"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-instability-treatments">Instability Treatments</xref></t>
                <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.9.2.6.2">
                  <li pn="section-toc.1-1.9.2.6.2.1">
                    <t pn="section-toc.1-1.9.2.6.2.1.1"><xref derivedContent="9.6.1" format="counter" sectionFormat="of" target="section-9.6.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-loss-of-control-packets">Loss of Control Packets</xref></t>
                  </li>
                  <li pn="section-toc.1-1.9.2.6.2.2">
                    <t pn="section-toc.1-1.9.2.6.2.2.1"><xref derivedContent="9.6.2" format="counter" sectionFormat="of" target="section-9.6.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-outlier-samples">Outlier Samples</xref></t>
                  </li>
                </ul>
              </li>
              <li pn="section-toc.1-1.9.2.7">
                <t pn="section-toc.1-1.9.2.7.1"><xref derivedContent="9.7" format="counter" sectionFormat="of" target="section-9.7"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-scenarios">Scenarios</xref></t>
                <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.9.2.7.2">
                  <li pn="section-toc.1-1.9.2.7.2.1">
                    <t pn="section-toc.1-1.9.2.7.2.1.1"><xref derivedContent="9.7.1" format="counter" sectionFormat="of" target="section-9.7.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-client-to-acp">Client to ACP</xref></t>
                  </li>
                  <li pn="section-toc.1-1.9.2.7.2.2">
                    <t pn="section-toc.1-1.9.2.7.2.2.1"><xref derivedContent="9.7.2" format="counter" sectionFormat="of" target="section-9.7.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-client-to-client">Client to Client</xref></t>
                  </li>
                </ul>
              </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.10">
            <t pn="section-toc.1-1.10.1"><xref derivedContent="10" format="counter" sectionFormat="of" target="section-10"/>. <xref derivedContent="" format="title" sectionFormat="of" target="name-security-considerations">Security Considerations</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.10.2">
              <li pn="section-toc.1-1.10.2.1">
                <t pn="section-toc.1-1.10.2.1.1"><xref derivedContent="10.1" format="counter" sectionFormat="of" target="section-10.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-confidentiality-issues">Confidentiality Issues</xref></t>
              </li>
              <li pn="section-toc.1-1.10.2.2">
                <t pn="section-toc.1-1.10.2.2.1"><xref derivedContent="10.2" format="counter" sectionFormat="of" target="section-10.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-integrity-of-measurements-a">Integrity of Measurements and Authentication</xref></t>
              </li>
              <li pn="section-toc.1-1.10.2.3">
                <t pn="section-toc.1-1.10.2.3.1"><xref derivedContent="10.3" format="counter" sectionFormat="of" target="section-10.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-privacy-of-measurements">Privacy of Measurements</xref></t>
              </li>
              <li pn="section-toc.1-1.10.2.4">
                <t pn="section-toc.1-1.10.2.4.1"><xref derivedContent="10.4" format="counter" sectionFormat="of" target="section-10.4"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-availability-issues">Availability Issues</xref></t>
              </li>
              <li pn="section-toc.1-1.10.2.5">
                <t pn="section-toc.1-1.10.2.5.1"><xref derivedContent="10.5" format="counter" sectionFormat="of" target="section-10.5"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-bandwidth-occupancy-issues">Bandwidth Occupancy Issues</xref></t>
              </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.11">
            <t pn="section-toc.1-1.11.1"><xref derivedContent="11" format="counter" sectionFormat="of" target="section-11"/>. <xref derivedContent="" format="title" sectionFormat="of" target="name-future-code-point-requireme">Future Code Point Requirements</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.11.2">
              <li pn="section-toc.1-1.11.2.1">
                <t pn="section-toc.1-1.11.2.1.1"><xref derivedContent="11.1" format="counter" sectionFormat="of" target="section-11.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-service-port">Service Port</xref></t>
              </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.12">
            <t pn="section-toc.1-1.12.1"><xref derivedContent="12" format="counter" sectionFormat="of" target="section-12"/>. <xref derivedContent="" format="title" sectionFormat="of" target="name-iana-considerations">IANA Considerations</xref></t>
          </li>
          <li pn="section-toc.1-1.13">
            <t pn="section-toc.1-1.13.1"><xref derivedContent="13" format="counter" sectionFormat="of" target="section-13"/>. <xref derivedContent="" format="title" sectionFormat="of" target="name-references">References</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.13.2">
              <li pn="section-toc.1-1.13.2.1">
                <t pn="section-toc.1-1.13.2.1.1"><xref derivedContent="13.1" format="counter" sectionFormat="of" target="section-13.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-normative-references">Normative References</xref></t>
              </li>
              <li pn="section-toc.1-1.13.2.2">
                <t pn="section-toc.1-1.13.2.2.1"><xref derivedContent="13.2" format="counter" sectionFormat="of" target="section-13.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-informative-references">Informative References</xref></t>
              </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.14">
            <t pn="section-toc.1-1.14.1"><xref derivedContent="" format="none" sectionFormat="of" target="section-appendix.a"/><xref derivedContent="" format="title" sectionFormat="of" target="name-acknowledgements">Acknowledgements</xref></t>
          </li>
          <li pn="section-toc.1-1.15">
            <t pn="section-toc.1-1.15.1"><xref derivedContent="" format="none" sectionFormat="of" target="section-appendix.b"/><xref derivedContent="" format="title" sectionFormat="of" target="name-contributors">Contributors</xref></t>
          </li>
          <li pn="section-toc.1-1.16">
            <t pn="section-toc.1-1.16.1"><xref derivedContent="" format="none" sectionFormat="of" target="section-appendix.c"/><xref derivedContent="" format="title" sectionFormat="of" target="name-authors-addresses">Authors' Addresses</xref></t>
          </li>
        </ul>
      </section>
    </toc>
  </front>
  <middle>
    <section anchor="sec-1" numbered="true" toc="include" removeInRFC="false" pn="section-1">
      <name slugifiedName="name-introduction">Introduction</name>
      <t pn="section-1-1">
   The World Wide Web (WWW) is a distributed hypermedia system
   that has gained widespread acceptance among Internet users.
   Although WWW browsers support other, preexisting Internet
   application protocols, the primary protocol used between WWW
   clients and servers became the HyperText Transfer Protocol (HTTP)
   (<xref target="RFC7230" format="default" sectionFormat="of" derivedContent="RFC7230"/>, <xref target="RFC7231" format="default" sectionFormat="of" derivedContent="RFC7231"/>, 
    <xref target="RFC7232" format="default" sectionFormat="of" derivedContent="RFC7232"/>, <xref target="RFC7233" format="default" sectionFormat="of" derivedContent="RFC7233"/>, 
    <xref target="RFC7234" format="default" sectionFormat="of" derivedContent="RFC7234"/>, and <xref target="RFC7235" format="default" sectionFormat="of" derivedContent="RFC7235"/>).  
   Since then, HTTP over TLS (known as HTTPS
   and described in <xref target="RFC2818" format="default" sectionFormat="of" derivedContent="RFC2818"/>) has become an imperative for
   providing secure and authenticated WWW access.  The mechanisms
   described in this document are equally applicable to HTTP and
   HTTPS.</t>
      <t pn="section-1-2">
   The ease of use of the Web has prompted its widespread employment
   as a client/server architecture for many applications.  Many of
   such applications require the client and the server to be able to
   communicate with each other and exchange information with certain
   quality constraints.</t>
      <t pn="section-1-3">
   Quality in communications at the application level consists of
   four measurable parameters:

      </t>
      <dl newline="false" spacing="normal" indent="6" pn="section-1-4">
        <dt pn="section-1-4.1">Latency:</dt>
        <dd pn="section-1-4.2">The time a message takes to travel from source to
        destination. It may be approximated as RTT/2 (round-trip
        time), assuming the networks are symmetrical. In this context,
        we will consider the statistical median formula.</dd>
        <dt pn="section-1-4.3">Jitter:</dt>
        <dd pn="section-1-4.4">Latency variation. There are some formulas to
        calculate jitter, and in this context, we will consider the
        arithmetic mean formula.</dd>
        <dt pn="section-1-4.5">Bandwidth:</dt>
        <dd pn="section-1-4.6">Bit rate of communication. To ensure quality, a
        protocol must ensure the availability of the bandwidth needed
        by the application.</dd>
        <dt pn="section-1-4.7">Packet loss:</dt>
        <dd pn="section-1-4.8">The percentage of packet loss is closely related
        to bandwidth and jitter. Packet loss affects bandwidth because a high
        packet loss sometimes implies retransmissions that also
        consumes extra bandwidth, other times the retransmissions are
        not achieved (for example, in video streaming over UDP), and
        the information received is less than the required bandwidth.
        In terms of jitter, a packet loss sometimes is seen by the
        destination as a larger time between arrivals, causing a
        jitter growth.</dd>
      </dl>
      <t pn="section-1-5">
   Any other communication parameter, such as throughput, is not a
   network parameter because it depends on protocol window size and
   other implementation-dependent aspects.</t>
      <t pn="section-1-6">
   The Q4S protocol provides a mechanism for
   quality monitoring based on an HTTP syntax and the Session
   Description Protocol (SDP) in order to be easily integrated in the
   WWW, but it may be used by any type of application, not only those
   based on HTTP. Quality requirements may be needed by any type of
   application that communicates using any kind of protocol,
   especially those with real-time constraints. Depending on the
   nature of each application, the constraints may be different,
   leading to different parameter thresholds that need to be met.</t>
      <t pn="section-1-7">
   Q4S is an application-level client/server protocol that
   continuously measures session quality for a given flow (or set of
   flows), end-to-end (e2e) and in real time; raising alerts if
   quality parameters are below a given negotiated threshold and
   sending recoveries when quality parameters are restored. Q4S
   describes when these notifications, alerts, and recoveries need to
   be sent and the entity receiving them. The actions undertaken by
   the receiver of the alert are out of scope of the protocol.</t>
      <t pn="section-1-8">
   Q4S is session-independent from the application flows to minimize
   the impact on them. To perform the measurements, two control flows
   are created on both communication paths (forward and reverse
   directions).</t>
      <t pn="section-1-9">
   This protocol specification is the product of research conducted
   over a number of years and is presented here as a permanent
   record and to offer a foundation for future similar work.  It does
   not represent a standard protocol and does not have IETF
   consensus.</t>
      <section anchor="sec-1.1" numbered="true" toc="include" removeInRFC="false" pn="section-1.1">
        <name slugifiedName="name-scope">Scope</name>
        <t pn="section-1.1-1">
   The purpose of Q4S is to measure end-to-end network quality in
   real time. Q4S does not transport any application data. This means
   that Q4S is designed to be used jointly with other transport
   protocols such as Real-time Transport Protocol (RTP) <xref target="RFC3550" format="default" sectionFormat="of" derivedContent="RFC3550"/>,
   Transmission Control Protocol (TCP) <xref target="RFC0793" format="default" sectionFormat="of" derivedContent="RFC0793"/>, 
   QUIC <xref target="I-D.ietf-quic-transport" format="default" sectionFormat="of" derivedContent="QUIC"/>, 
   HTTP <xref target="RFC7230" format="default" sectionFormat="of" derivedContent="RFC7230"/>, etc.</t>
        <t pn="section-1.1-2">
   Some existent transport protocols are focused on real-time media
   transport and certain connection metrics are available, which is
   the case of RTP and RTP Control Protocol (RTCP) <xref target="RFC3550" format="default" sectionFormat="of" derivedContent="RFC3550"/>. Other
   protocols such as QUIC provide low connection latencies as well as
   advanced congestion control. These protocols transport data
   efficiently and provide a lot of functionalities. However, there are
   currently no other quality measurement protocols offering the same
   level of function as Q4S.  See <xref target="sec-1.4" format="default" sectionFormat="of" derivedContent="Section 1.4"/> for a discussion of the
   IETF's quality measurement protocols, One-Way Active Measurement Protocol (OWAMP) and 
   Two-Way Active Measurement Protocol (TWAMP).</t>
        <t pn="section-1.1-3">
   Q4S enables applications to become reactive under e2e network
   quality changes. To achieve it, an independent Q4S stack
   application must run in parallel with the target application. Then, Q4S
   metrics may be used to trigger actions on the target application, such
   as speed adaptation to latency in multiuser games, bitrate control
   at streaming services, intelligent commutation of delivery node at
   Content Delivery Networks, and whatever the target application allows.</t>
      </section>
      <section anchor="sec-1.2" numbered="true" toc="include" removeInRFC="false" pn="section-1.2">
        <name slugifiedName="name-motivation">Motivation</name>
        <t pn="section-1.2-1">
   Monitoring quality of service (QoS) in computer networks is useful
   for several reasons:</t>
        <ul spacing="normal" bare="false" empty="false" pn="section-1.2-2">
          <li pn="section-1.2-2.1">It enables real-time services and applications to verify whether
        network resources achieve a certain QoS level. This helps
        real-time services and applications to run over the
        Internet, allowing the existence of Application Content
        Providers (ACPs), which offer guaranteed real-time services to
        the end users.</li>
          <li pn="section-1.2-2.2">Real-time monitoring allows applications to adapt themselves
        to network conditions (application-based QoS) and/or request
        more network quality from the Internet Service Provider (ISP)
        (if the ISP offers this possibility).</li>
          <li pn="section-1.2-2.3">Monitoring may also be required by peer-to-peer (P2P) real-time 
           applications for which Q4S can be used.</li>
          <li pn="section-1.2-2.4">Monitoring enables ISPs to offer QoS to any ACP or end user application
        in an accountable way.</li>
          <li pn="section-1.2-2.5">
            <t pn="section-1.2-2.5.1">Monitoring enables e2e negotiation of QoS parameters, independently of
        the ISPs of both endpoints.</t>
          </li>
        </ul>
        <t pn="section-1.2-3">

        A protocol to monitor QoS must address the following issues:

        </t>
        <ul spacing="normal" bare="false" empty="false" pn="section-1.2-4">
          <li pn="section-1.2-4.1">Must be ready to be used in conjunction with current standard
        protocols and applications, without forcing a change on them.</li>
          <li pn="section-1.2-4.2">Must have a formal and compact way to specify quality
        constraints desired by the application to run.</li>
          <li pn="section-1.2-4.3">Must have measurement mechanisms that avoid application
        disruption and minimize network resources consumption.</li>
          <li pn="section-1.2-4.4">Must have specific messages to alert about the violation of
        quality constraints in different directions (forward and
        reverse) because network routing may not be symmetrical, and
        of course, quality constraints may not be symmetrical.</li>
          <li pn="section-1.2-4.5">After having alerted about the violation of quality
        constraints, must have specific messages to inform about
        the recovery of quality constraints in corresponding directions
        (forward and reverse).</li>
          <li pn="section-1.2-4.6">Must protect the data (constraints, measurements, QoS levels
        demanded from the network) in order to avoid the injection of
        malicious data in the measurements.</li>
        </ul>
      </section>
      <section anchor="sec-1.3" numbered="true" toc="include" removeInRFC="false" pn="section-1.3">
        <name slugifiedName="name-summary-of-features">Summary of Features</name>
        <t pn="section-1.3-1">
   The Quality for Service (Q4S) protocol is a message-oriented
   communication protocol that can be used in conjunction with any
   other application-level protocol. Q4S is a measurement protocol.
   Any action taken derived from its measurements are out of scope of
   the protocol. These actions depend on the application provider and may
   be application-level adaptive reactions, may involve requests to
   the ISP, or whatever the application provider decides.</t>
        <t pn="section-1.3-2">
   The benefits in quality measurements provided by Q4S can be used
   by any type of application that uses any type of protocol for data
   transport. It provides a quality monitoring scheme for any
   communication that takes place between the client and the server,
   not only for the Q4S communication itself.</t>
        <t pn="section-1.3-3">
   Q4S does not establish multimedia sessions, and it does not
   transport application data. It monitors the fulfillment of the
   quality requirements of the communication between the client and
   the server; therefore, it does not impose any restrictions on the
   type of application, protocol, or usage of the
   monitored quality connection.</t>
        <t pn="section-1.3-4">
   Some applications may vary their quality requirements dynamically
   for any given quality parameter. Q4S is able to adapt to the
   changing application needs, modifying the parameter thresholds to
   the new values and monitoring the network quality according to the
   new quality constraints. It will raise alerts if the new
   constraints are violated.</t>
        <t pn="section-1.3-5">
   The Q4S session lifetime is composed of four phases with different
   purposes: Handshake, Negotiation, Continuity, and Termination.
   Negotiation and Continuity phases perform network parameter
   measurements per a negotiated measurement procedure. Different
   measurement procedures could be used inside Q4S, although one
   default measurement mechanism is needed for compatibility reasons
   and is the one defined in this document. Basically, Q4S defines
   how to transport application quality requirements and measurement
   results between a client and server and how to provide monitoring and
   alerting, too.</t>
        <t pn="section-1.3-6">
   Q4S must be executed just before starting a client-server
   application that needs a quality connection in terms of latency,
   jitter, bandwidth, and/or packet loss. Once the client and server have
   succeeded in establishing communication under quality constraints,
   the application can start, and Q4S continues measuring and
   alerting if necessary.</t>
        <t pn="section-1.3-7">
   The quality parameters can be suggested by the client in the first
   message of the Handshake phase, but it is the server that accepts
   these parameter values or forces others. The server is in charge
   of deciding the final values of quality connection.</t>
      </section>
      <section anchor="sec-1.4" numbered="true" toc="include" removeInRFC="false" pn="section-1.4">
        <name slugifiedName="name-differences-from-owamp-twam">Differences from OWAMP/TWAMP</name>
        <t pn="section-1.4-1">
   OWAMP <xref target="RFC4656" format="default" sectionFormat="of" derivedContent="RFC4656"/> and 
   TWAMP <xref target="RFC5357" format="default" sectionFormat="of" derivedContent="RFC5357"/> are two protocols
   to measure network quality in terms of RTT, but they have a different
   goal than Q4S. The main difference is the scope: Q4S is designed
   to assist reactive applications, whereas OWAMP/TWAMP is designed
   to measure just network delay.</t>
        <t pn="section-1.4-2">
   The differences can be summarized in the following points:</t>
        <ul spacing="normal" bare="false" empty="false" pn="section-1.4-3">
          <li pn="section-1.4-3.1">OWAMP and TWAMP are not intended for measuring availability of
      resources (certain bandwidth availability, for example) but
      only RTT. However, Q4S is intended for measuring required
      bandwidth, packet loss, jitter, and latency in both
      directions. Available bandwidth is not measured by Q4S, but
      bandwidth required for a specific application is.</li>
          <li pn="section-1.4-3.2">OWAMP and TWAMP do not have responsivity control (which
      defines the speed of protocol reactions under network quality
      changes) because these protocols are designed to measure
      network performance, not to assist reactive applications, and
      do not detect the fluctuations of quality within certain time
      intervals to take reactive actions. However, responsivity
      control is a key feature of Q4S.</li>
          <li pn="section-1.4-3.3">OWAMP and TWAMP are not intended to run in parallel with reactive
      applications, but the Q4S protocol's goal is to run in parallel and assist
      reactive applications in making decisions based on Q4S-ALERT
      packets, which may trigger actions.</li>
        </ul>
      </section>
    </section>
    <section anchor="sec-2" numbered="true" toc="include" removeInRFC="false" pn="section-2">
      <name slugifiedName="name-terminology">Terminology</name>
      <t pn="section-2-1">
    The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>",
    "<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>", "<bcp14>SHALL NOT</bcp14>",
    "<bcp14>SHOULD</bcp14>", "<bcp14>SHOULD NOT</bcp14>",
    "<bcp14>RECOMMENDED</bcp14>", "<bcp14>NOT RECOMMENDED</bcp14>",
    "<bcp14>MAY</bcp14>", and "<bcp14>OPTIONAL</bcp14>" in this document are to be
    interpreted as described in BCP 14 <xref target="RFC2119" format="default" sectionFormat="of" derivedContent="RFC2119"/> <xref target="RFC8174" format="default" sectionFormat="of" derivedContent="RFC8174"/> when, and only when, they appear in all capitals, as
    shown here.
</t>
    </section>
    <section anchor="sec-3" numbered="true" toc="include" removeInRFC="false" pn="section-3">
      <name slugifiedName="name-overview-of-operation">Overview of Operation</name>
      <t pn="section-3-1">
   This section introduces the basic operation of Q4S using simple
   examples.  This section is of a tutorial nature and does not contain
   any normative statements.</t>
      <t pn="section-3-2">
   The first example shows the basic functions of Q4S:
   communication establishment between a client and a server, quality
   requirement negotiations for the requested application,
   application start and continuous quality parameter measurements,
   and finally communication termination.</t>
      <t pn="section-3-3">
   The client triggers the establishment of the communication by
   requesting a specific service or application from the server. This
   first message must have a special URI <xref target="RFC3986" format="default" sectionFormat="of" derivedContent="RFC3986"/>, which may
   force the use of the Q4S protocol if it is implemented in a
   standard web browser. This message consists of a Q4S BEGIN method,
   which can optionally include a proposal for the communication
   quality requirements in an SDP body. This option gives the client
   a certain negotiation capacity about quality requirements, but it
   will be the server who finally decides the stated
   requirements.</t>
      <t pn="section-3-4">
   This request is answered by the server with a Q4S 200 OK response
   letting the client know that it accepts the request. This response
   message must contain an SDP body with the following:</t>
      <ul spacing="normal" bare="false" empty="false" pn="section-3-5">
        <li pn="section-3-5.1">The assigned Q4S sess-id.</li>
        <li pn="section-3-5.2">The quality constraints required by the requested application.</li>
        <li pn="section-3-5.3">The measurement procedure to use.</li>
        <li pn="section-3-5.4">
          <t pn="section-3-5.4.1">"alerting-mode" attribute: There are two different scenarios for
      sending alerts that trigger actions either on the network or
      in the application when measurements identify violated
      quality constraints. In both cases, alerts are triggered by
      the server.
          </t>
          <ol spacing="normal" type="(%c)" start="1" pn="section-3-5.4.2">
            <li pn="section-3-5.4.2.1" derivedCounter="(a)">
              <t pn="section-3-5.4.2.1.1">Q4S-aware-network scenario: The network is Q4S aware
           and reacts by itself to these alerts. In this scenario,
           Q4S-ALERT messages are sent by the server to the client,
           and network elements inspect and process these alert
           messages. The alerting mode in this scenario is called
           Q4S-aware-network alerting mode.</t>
            </li>
            <li pn="section-3-5.4.2.2" derivedCounter="(b)">
              <t pn="section-3-5.4.2.2.1">Reactive scenario: As shown in 
           <xref target="ref-reactive-scenario" format="default" sectionFormat="of" derivedContent="Figure 1"/>, the network
           is not Q4S aware. In this scenario, alert notifications
           are sent to a specific node, called an Actuator, which is
           in charge of making decisions regarding what actions to
           trigger: either to change application behavior to adapt
           it to network conditions and/or invoke a network policy
           server in order to reconfigure the network and request
           better quality for application flows.</t>
              <figure anchor="ref-reactive-scenario" align="left" suppress-title="false" pn="figure-1">
                <name slugifiedName="name-reactive-scenario">Reactive Scenario</name>
                <artwork name="" type="" align="left" alt="" pn="section-3-5.4.2.2.2.1">
         +------+                           +-----------+
         |  App |&lt;----- app flows----------&gt;|Application|
         |Client|                           +-----------+
         +------+                                 A
                                                  |
         +------+             +------+       +--------+
         | Q4S  |&lt;----Q4S----&gt;| Q4S  |&lt;-----&gt;|Actuator|
         |Client|             |Server|       +--------+
         +------+             +------+            |
                                                  V
                                           +-------------+
                                           |policy server|
                                           +-------------+
</artwork>
              </figure>
              <t pn="section-3-5.4.2.2.3">The format of messages exchanged between the server stack and
      the Actuator doesn't follow Q4S codification rules;
      their format will be implementation dependent. In this way,
      we will call the messages sent from the server stack to the
      Actuator "notifications" (e.g., alert notifications) and the
      messages sent from the Actuator to the server stack in
      response to notifications "acknowledges" (e.g., alert
      acknowledges).</t>
            </li>
          </ol>
        </li>
      </ul>
      <ul spacing="normal" bare="false" empty="false" pn="section-3-6">
        <li pn="section-3-6.1">"alert-pause" attribute: The amount of time between consecutive alerts.
      In the Q4S-aware-network scenario, the server has to wait
      this period of time between Q4S-ALERT messages sent to the
      client. In the Reactive scenario, the server stack has to
      wait this period of time between alert notifications sent to
      the Actuator. Measurements are not stopped in Negotiation or
      Continuity phases during this period of time, but no alerts
      are sent, even with violated network quality constraints, in
      order to leave time for network reconfiguration or for
      application adjustments.</li>
        <li pn="section-3-6.2">"recovery-pause" attribute: The amount of time the Q4S server waits
      before trying to recover the initial "qos-level" (<xref target="sec-7.2.1" format="default" sectionFormat="of" derivedContent="Section 7.2.1"/>). 
      After having
      detected violation of quality constraints several times, the
      "qos-level" will have been increased accordingly. If this
      violation detection finally stops, the server waits for a
      period of time (recovery time), and if the situation persists,
      it tries to recover to previous "qos-level" values gradually by
      sending Q4S-RECOVERY messages to the client in the Q4S-aware-network scenario, or recovery notifications to the
      Actuator in the Reactive scenario (<xref target="sec-7.9" format="default" sectionFormat="of" derivedContent="Section 7.9"/>).</li>
      </ul>
      <t pn="section-3-7">
   It is important to highlight that any Q4S 200 OK response sent by
   the server to the client at any time during the life of a quality
   session may contain an SDP body with new values of quality
   constraints required by the application. Depending on the phase
   and the state of the measurement procedure within the specific
   phase, the client will react accordingly to take into
   account the new quality constraints in the measurement procedure.</t>
      <t pn="section-3-8">
   Once the communication has been established (i.e., the Handshake phase is
   finished), the protocol will verify that the communication path
   between the client and the server meets the quality constraints in
   both directions, from and to the server (Negotiation phase). This
   Negotiation phase requires taking measurements of the quality
   parameters: latencies, jitter, bandwidth, and packet loss. This
   phase is initiated with a client message containing a Q4S READY
   method, which will be answered by the server with a Q4S 200 OK
   response.</t>
      <t pn="section-3-9">
   Negotiation measurements are achieved in two sequential stages:
      </t>
      <dl newline="false" spacing="normal" indent="6" pn="section-3-10">
        <dt pn="section-3-10.1">Stage 0:</dt>
        <dd pn="section-3-10.2"> latency and jitter measurements</dd>
        <dt pn="section-3-10.3">Stage 1:</dt>
        <dd pn="section-3-10.4"> bandwidth and packet loss measurements</dd>
      </dl>
      <t pn="section-3-11">
   Stage 0 measurements are taken through Q4S PING messages
   sent from both the client and the server. All Q4S PING
   requests will be answered by Q4S 200 OK messages to allow for
   bidirectional measurements.</t>
      <t pn="section-3-12">
   Different client and server implementations may send a different
   number of PING messages for measuring, although at least 255
   messages should be considered to perform the latency measurement.
   The Stage 0 measurements only may be considered ended when neither
   client nor server receive new PING messages after an
   implementation-dependent guard time. Only after Stage 0 has ended, can the client send a
   "READY 1" message.</t>
      <t pn="section-3-13">
   After a pre-agreed number of measurements have been performed,
   determined by the measurement procedure sent by the server, three
   scenarios may be possible:
      </t>
      <ol spacing="normal" type="(%c)" start="1" pn="section-3-14">
        <li pn="section-3-14.1" derivedCounter="(a)"> Measurements do not meet the 
        requirements: in this case, the
	stage 0 is repeated after sending an alert from the server to
      the client or from the server stack to the Actuator, depending
      on the alerting mode defined in the Handshake phase. Notice
      that measurements continue to be taken but no alerts are sent
      during the "alert-pause" time. In the Reactive scenario, the
      Actuator will decide either to forward the alert notification
      to the network policy server or to the application, depending
      on where reconfiguration actions have to be taken.
	</li>
        <li pn="section-3-14.2" derivedCounter="(b)"> Measurements do meet the requirements: in this case, client
	moves to stage 1 by sending a new READY message.
	</li>
        <li pn="section-3-14.3" derivedCounter="(c)"> At any time during the measurement procedure, the Q4S 200 OK
	message sent by the server to the client, in response to a Q4S
      PING message, contains an SDP body with new values of quality
      constraints required by the application. This means the
      application has varied their quality requirements dynamically;
      therefore, quality thresholds used while monitoring quality
      parameters have to be changed to the new constraints. In this
      case, the client moves to the beginning of Stage 0 for
      initiating the negotiation measurements again.
	</li>
      </ol>
      <t pn="section-3-15">
   Stage 1 is optional. Its purpose is to measure the availability of
   application-needed bandwidth. If the "bandwidth" attribute is 
   set to zero kbps in the SDP, the client can skip stage 1 by 
   sending a "READY 2" message after completion of stage 0. Stage 1
   measurements are achieved through Q4S BWIDTH messages sent
   from both the client and the server. Unlike PING messages, Q4S BWIDTH
   requests will not be answered.</t>
      <t pn="section-3-16">
   If Stage 0 and 1 meet the application quality constraints, the
   application may start. Q4S will enter the Continuity phase
   by measuring the network quality parameters through the Q4S PING
   message exchange on both connection paths and raising alerts in
   case of violation.</t>
      <t pn="section-3-17">
   Once the client wants to terminate the quality session, it sends a
   Q4S CANCEL message, which will be acknowledged by the server with
   another Q4S CANCEL message. Termination of quality sessions are
   always initiated by the client because Q4S TCP requests follow the
   client/server schema.</t>
      <t pn="section-3-18"><xref target="ref-successful-q4s-message-exchange" format="default" sectionFormat="of" derivedContent="Figure 2"/> 
   depicts the message exchange in a successful scenario.</t>
      <figure anchor="ref-successful-q4s-message-exchange" align="left" suppress-title="false" pn="figure-2">
        <name slugifiedName="name-successful-q4s-message-exch">Successful Q4S Message Exchange</name>
        <artwork name="" type="" align="left" alt="" pn="section-3-19.1">
            +-------------------------------------------+
            |                                           |
            | Client                             Server |
            |                                           |
Handshake   |     --------- Q4S BEGIN -----------&gt;      |
            |     &lt;-------- Q4S 200 OK -----------      |
            |                                           |
Negotiation |                                           |
(Stage 0)   |     --------- Q4S READY 0----------&gt;      |
            |     &lt;-------- Q4S 200 OK -----------      |
            |                                           |
            |     --------- Q4S PING ------------&gt;      |
            |     &lt;-------- Q4S 200 OK -----------      |
            |     &lt;-------- Q4S PING -------------      |
            |      -------- Q4S 200 OK ----------&gt;      |
            |     --------- Q4S PING ------------&gt;      |
            |     &lt;-------- Q4S PING -------------      |
            |     --------- Q4S 200 OK ----------&gt;      |
            |     &lt;-------- Q4S 200 OK -----------      |
            |                    ...                    |
Negotiation |                                           |
(Stage 1)   |     --------- Q4S READY 1----------&gt;      |
            |     &lt;-------- Q4S 200 OK -----------      |
            |                                           |
            |     --------- Q4S BWITDH ----------&gt;      |
            |     &lt;-------- Q4S BWIDTH------------      |
            |     --------- Q4S BWITDH ----------&gt;      |
            |     &lt;-------- Q4S BWIDTH------------      |
            |                    ...                    |
Continuity  |     --------- Q4S READY 2 ---------&gt;      |
            |     &lt;-------- Q4S 200 OK -----------      | app start
            |                                           |
            |     --------- Q4S PING ------------&gt;      |
            |     &lt;-------- Q4S 200 OK -----------      |
            |     &lt;-------- Q4S PING -------------      |
            |      -------- Q4S 200 OK ----------&gt;      |
            |                                           |
Termination |     --------- Q4S CANCEL ----------&gt;      | app end
            |     &lt;-------- Q4S CANCEL -----------      |
            |                                           |
            +-------------------------------------------+
</artwork>
      </figure>
      <t pn="section-3-20">
   Both client and server measurements are included in the PING and BWIDTH
   messages, allowing both sides of the communication channel to be aware
   of all measurements in both directions.</t>
      <t pn="section-3-21">
   The following two examples show the behavior of the Q4S protocol
   when quality constraints are violated, and alerts are generated; and,
   later on, when the violation of quality constraints stops leading to the
   execution of the recovery process. The first example 
   (<xref target="ref-q4s-aware-network-alerting-mode" format="default" sectionFormat="of" derivedContent="Figure 3"/>)
   shows the Q4S-aware-network alerting mode scenario:</t>
      <figure anchor="ref-q4s-aware-network-alerting-mode" align="left" suppress-title="false" pn="figure-3">
        <name slugifiedName="name-q4s-aware-network-alerting-">Q4S-Aware-Network Alerting Mode</name>
        <artwork name="" type="" align="left" alt="" pn="section-3-22.1">
            +-------------------------------------------+
            |                                           |
            | Client                             Server |
            |                                           |
Handshake   |     --------- Q4S BEGIN -----------&gt;      |
            |     &lt;-------- Q4S 200 OK -----------      |
            |                                           |
Negotiation |                                           |
(Stage 0)   |     --------- Q4S READY 0----------&gt;      |
            |     &lt;-------- Q4S 200 OK -----------      |
            |                                           |
            |     --------- Q4S PING ------------&gt;      |
            |     &lt;-------- Q4S 200 OK -----------      |
            |     &lt;-------- Q4S PING -------------      |
            |      -------- Q4S 200 OK ----------&gt;      |
            |                    ...                    |
            |                                           |
            |     &lt;-------- Q4S-ALERT ------------      |
            |     -------- Q4S-ALERT ------------&gt;      |
            |          (alert-pause start)              |
Repetition  |                                           |
of Stage 0  |     --------- Q4S READY 0----------&gt;      |
            |     &lt;-------- Q4S 200 OK -----------      |
            |                                           |
            |     --------- Q4S PING ------------&gt;      |
            |     &lt;-------- Q4S 200 OK -----------      |
            |     &lt;-------- Q4S PING -------------      |
            |                    ...                    |
Negotiation |                                           |
(Stage 1)   |     --------- Q4S READY 1----------&gt;      |
            |     &lt;-------- Q4S 200 OK -----------      |
            |                                           |
            |     --------- Q4S BWITDH ----------&gt;      |
            |     &lt;-------- Q4S BWIDTH------------      |
            |                    ...                    |
            |                                           |
Continuity  |     --------- Q4S READY 2 ---------&gt;      |
            |     &lt;-------- Q4S 200 OK -----------      | app start
            |                                           |
            |     --------- Q4S PING ------------&gt;      |
            |     &lt;-------- Q4S 200 OK -----------      |
            |     &lt;-------- Q4S PING -------------      |
            |      -------- Q4S 200 OK ----------&gt;      |
            |                    ...                    |
            |(alert-pause expires &amp;                     |
            |                   violated constraints)   |
            |     &lt;-------- Q4S-ALERT ------------      |
            |     --------- Q4S-ALERT -----------&gt;      |
            |                                           |
            |           (alert-pause start)             |
            |     --------- Q4S PING ------------&gt;      |
            |     &lt;-------- Q4S 200 OK -----------      |
            |     &lt;-------- Q4S PING -------------      |
            |     --------- Q4S 200 OK ----------&gt;      |
            |                    ...                    |
            |(alert-pause expires &amp;                     |
            |                   violated constraints)   |
            |     &lt;-------- Q4S-ALERT ------------      |
            |     --------- Q4S-ALERT -----------&gt;      |
            |           (alert-pause)                   |
            |     --------- Q4S PING ------------&gt;      |
            |     &lt;-------- Q4S 200 OK -----------      |
            |     &lt;-------- Q4S PING -------------      |
            |      -------- Q4S 200 OK ----------&gt;      |
            |                    ...                    |
            |(alert-pause expires &amp;                     |
            |                 Fulfilled constraints)    |
            |                                           |
            |           (recovery-pause start)          |
            |                                           |
            |     --------- Q4S PING ------------&gt;      |
            |     &lt;-------- Q4S 200 OK -----------      |
            |     &lt;-------- Q4S PING -------------      |
            |      -------- Q4S 200 OK ----------&gt;      |
            |                    ...                    |
            |(recovery-pause expires &amp;                  |
            |                 Fulfilled constraints)    |
            |     &lt;--------- Q4S-RECOVERY ---------     |
            |     -------- Q4S-RECOVERY -----------&gt;    |
            |                                           |
            |          (recovery-pause start)           |
            |     --------- Q4S PING ------------&gt;      |
            |     &lt;-------- Q4S 200 OK -----------      |
            |     &lt;-------- Q4S PING -------------      |
            |      -------- Q4S 200 OK ----------&gt;      |
            |                    ...                    |
            |                                           |
Termination |     --------- Q4S CANCEL ----------&gt;      | app end
            |     &lt;-------- Q4S CANCEL -----------      |
            |                                           |
            +-------------------------------------------+
</artwork>
      </figure>
      <t pn="section-3-23">
   In this Q4S-aware-network alerting mode scenario, the server may
   send Q4S alerts to the client at any time upon detection of violated
   quality constraints. This alerting exchange must not interrupt the
   continuity quality parameter measurements between client and
   server.</t>
      <t pn="section-3-24">
   The second example depicted in <xref target="ref-reactive-alerting-mode" format="default" sectionFormat="of" derivedContent="Figure 4"/> represents the
   Reactive scenario, in which alert notifications are sent from the
   server stack to the Actuator, which is in charge of deciding 
   to act over application behavior and/or to invoke a network policy
   server. The Actuator is an entity that has a defined set of
   different quality levels and decides how to act depending on the
   actions stated for each of these levels; it can take actions for
   making adjustments on the application, or it can send a request to
   the policy server for acting on the network. The policy server
   also has a defined set of different quality levels previously agreed
   upon between the Application Content Provider and the ISP. The
   Reactive alerting mode is the default mode.</t>
      <figure anchor="ref-reactive-alerting-mode" align="left" suppress-title="false" pn="figure-4">
        <name slugifiedName="name-reactive-alerting-mode">Reactive Alerting Mode</name>
        <artwork name="" type="" align="left" alt="" pn="section-3-25.1">
            +-------------------------------------------+
            |                                           |
            | Client               Server      Actuator |
Handshake   |   ----- Q4S BEGIN -----&gt;                  |
            |   &lt;---- Q4S 200 OK -----                  |
            |                                           |
Negotiation |                                           |
(Stage 0)   |   ----- Q4S READY 0----&gt;                  |
            |   &lt;---- Q4S 200 OK -----                  |
            |                                           |
            |   ----- Q4S PING ------&gt;                  |
            |   &lt;---- Q4S 200 OK -----                  |
            |   &lt;---- Q4S PING -------                  |
            |    ---- Q4S 200 OK ----&gt;                  |
            |              ...                          |
            |  (alert-pause start)                      |
            |                          --alert          |
            |                         notification--&gt;   |
            |                                           |
            |                         &lt;--alert          |
            |                          acknowledge---   |
            |                                           |
Repetition  |                                           |
of Stage 0  |   ----- Q4S READY 0----&gt;                  |
            |   &lt;---- Q4S 200 OK -----                  |
            |                                           |
            |   ----- Q4S PING ------&gt;                  |
            |   &lt;---- Q4S 200 OK -----                  |
            |   &lt;---- Q4S PING -------                  |
            |              ...                          |
            |(alert-pause expires &amp;                     |
            |                   violated constraints)   |
            |                                           |
            |                         --alert           |
            |                         notification--&gt;   |
            |                                           |
            |                         &lt;--alert          |
            |                          acknowledge---   |
            |                                           |
            |   ----- Q4S PING ------&gt;                  |
            |   &lt;---- Q4S 200 OK -----                  |
            |   &lt;---- Q4S PING -------                  |
            |              ...                          |
Negotiation |                                           |
(Stage 1)   |   ----- Q4S READY 1----&gt;                  |
            |   &lt;---- Q4S 200 OK -----                  |
            |                                           |
            |   ----- Q4S BWITDH ----&gt;                  |
            |   &lt;---- Q4S BWIDTH------                  |
            |              ...                          |
Continuity  |   ----- Q4S READY 2 ---&gt;                  |
            |   &lt;---- Q4S 200 OK -----                  | app start
            |                                           |
            |(alert-pause expires &amp;                     |
            |                  fulfilled constraints)   |
            |                                           |
            |(recovery-pause start)                     |
            |   ----- Q4S PING ------&gt;                  |
            |   &lt;---- Q4S 200 OK -----                  |
            |   &lt;---- Q4S PING -------                  |
            |   ----- Q4S PING ------&gt;                  |
            |                                           |
            |(recovery-pause expires &amp;                  |
            |                  fulfilled constraints)   |
            |                                           |
            |                         --recovery        |
            |                         notification--&gt;   |
            |                                           |
            |                         &lt;--recovery       |
            |                          acknowledge---   |
            |                                           |
            |(recovery-pause start)                     |
            |   &lt;---- Q4S 200 OK -----                  |
            |   &lt;---- Q4S PING -------                  |
            |   ----- Q4S 200 OK ----&gt;                  |
            |   ----- Q4S PING ------&gt;                  |
            |              ...                          |
            |                                           |
Termination |   ----- Q4S CANCEL ----&gt;                  | app end
            |                          --cancel         |
            |                          notification--&gt;  |
            |                                           |
            |                          &lt;--cancel        |
            |                           acknowledge--   |
            |   &lt;---- Q4S CANCEL -----                  |
            |                                           |
            +-------------------------------------------+
</artwork>
      </figure>
      <t pn="section-3-26">
   At the end of any stage of the Negotiation phase, the server sends an
   alert notification to the Actuator if quality constraints are
   violated. During the period of time defined by the "alert-pause"
   attribute, no further alert notifications are sent, but
   measurements are not interrupted. This way, both the client and
   the server will detect network improvements as soon as possible.
   In a similar way during the Continuity phase, the server may send
   alert notifications at any time to the Actuator upon detection of
   violated quality constraints. This alerting exchange must not
   interrupt the continuity measurements between client and server.</t>
      <t pn="section-3-27">
   Finally, in the Termination phase, Q4S CANCEL messages sent from
   the client to the server must be forwarded from the server to the
   Actuator in order to release possible assigned resources for the
   session.</t>
    </section>
    <section anchor="sec-4" numbered="true" toc="include" removeInRFC="false" pn="section-4">
      <name slugifiedName="name-q4s-messages">Q4S Messages</name>
      <t pn="section-4-1">
   Q4S is a text-based protocol and uses the UTF-8 charset 
   <xref target="RFC3629" format="default" sectionFormat="of" derivedContent="RFC3629"/>. A Q4S message is either a request or a response.</t>
      <t pn="section-4-2">
   Both request and response messages use the basic format of
   Internet Message Format <xref target="RFC5322" format="default" sectionFormat="of" derivedContent="RFC5322"/>. Both types of messages
   consist of a start-line, one or more header fields, an empty line
   indicating the end of the header fields, and an optional message-body.
   This document uses ABNF notation <xref target="RFC5234" format="default" sectionFormat="of" derivedContent="RFC5234"/>
   for the definitions of the syntax of messages.</t>
      <t pn="section-4-3">
   The start-line, each message-header line, and the empty line <bcp14>MUST</bcp14>
   be terminated by a carriage-return line-feed sequence (CRLF).
   Note that the empty line <bcp14>MUST</bcp14> be present even if the message-body
   is not.</t>
      <sourcecode type="abnf" markers="false" pn="section-4-4">
      generic-message  =  start-line CRLF
                          *message-header CRLF
                          CRLF
                          [ message-body ]
      start-line       =  Request-Line / Status-Line
</sourcecode>
      <t pn="section-4-5">
   Much of Q4S's messages and header field syntax are identical to
   HTTP/1.1. However, Q4S is not an extension of HTTP.</t>
      <section anchor="sec-4.1" numbered="true" toc="include" removeInRFC="false" pn="section-4.1">
        <name slugifiedName="name-requests">Requests</name>
        <t pn="section-4.1-1">
   Q4S requests are distinguished by having a Request-Line for a
   start-line. A Request-Line contains a method name, a Request-URI,
   and the protocol version separated by a single space (SP)
   character.</t>
        <t pn="section-4.1-2">
   The Request-Line ends with CRLF. No CR or LF are allowed except in
   the end-of-line CRLF sequence. No linear whitespace (LWSP) is allowed
   in any of the elements.</t>
        <sourcecode type="abnf" markers="false" pn="section-4.1-3">
   Request-Line  =  Method SP Request-URI SP Q4S-Version CRLF
</sourcecode>
        <dl newline="false" spacing="normal" indent="6" pn="section-4.1-4">
          <dt pn="section-4.1-4.1">Method:</dt>
          <dd pn="section-4.1-4.2">
	This specification defines seven methods: BEGIN for
	starting and negotiating quality sessions, READY for
      synchronization of measurements, PING and BWIDTH for
      quality measurements purposes, CANCEL for terminating
      sessions, Q4S-ALERT for reporting quality violations, and
      Q4S-RECOVERY for reporting quality recovery.
	</dd>
          <dt pn="section-4.1-4.3">Request-URI:</dt>
          <dd pn="section-4.1-4.4">
	The Request-URI is a Q4S URI <xref target="RFC3986" format="default" sectionFormat="of" derivedContent="RFC3986"/> as described
	in <xref target="sec-7.4" format="default" sectionFormat="of" derivedContent="Section 7.4"/>. The Request-URI <bcp14>MUST NOT</bcp14> contain unescaped spaces
      or control characters and <bcp14>MUST NOT</bcp14> be enclosed in "&lt;&gt;".
	</dd>
          <dt pn="section-4.1-4.5">Q4S-Version:</dt>
          <dd pn="section-4.1-4.6">
	Both request and response messages include the
	version of Q4S in use. To be compliant with this
      specification, applications sending Q4S messages <bcp14>MUST</bcp14>
      include a Q4S-Version of "Q4S/1.0".  The Q4S-Version string
      is case insensitive, but implementations <bcp14>MUST</bcp14> 
      send uppercase. Unlike HTTP/1.1, Q4S treats the version number as a
      literal string.  In practice, this should make no difference.
	</dd>
        </dl>
      </section>
      <section anchor="sec-4.2" numbered="true" toc="include" removeInRFC="false" pn="section-4.2">
        <name slugifiedName="name-responses">Responses</name>
        <t pn="section-4.2-1">
   Q4S responses are distinguished from requests by having a Status-Line as their start-line. A Status-Line consists of the protocol
   version followed by a numeric Status-Code and its associated
   textual phrase, with each element separated by a single SP
   character. No CR or LF is allowed except in the final CRLF
   sequence.</t>
        <sourcecode type="abnf" markers="false" pn="section-4.2-2">
   Status-Line  =  Q4S-Version SP Status-Code SP Reason-Phrase CRLF
</sourcecode>
        <t pn="section-4.2-3">
   The Status-Code is a 3-digit integer result code that indicates
   the outcome of an attempt to understand and satisfy a request. The
   Reason-Phrase is intended to give a short textual description of
   the Status-Code.  The Status-Code is intended for use by automata,
   whereas the Reason-Phrase is intended for the human user. A client
   is not required to examine or display the Reason-Phrase.</t>
        <t pn="section-4.2-4">
   While this specification suggests specific wording for the 
   Reason-Phrase, implementations <bcp14>MAY</bcp14> choose other text, for example, in the
   language indicated in the Accept-Language header field of the
   request.</t>
        <t pn="section-4.2-5">
   The first digit of the Status-Code defines the class of response.
   The last two digits do not have any categorization role.  For this
   reason, any response with a status code between 100 and 199 is
   referred to as a "1xx response", any response with a status code
   between 200 and 299 as a "2xx response", and so on.  Q4S/1.0
   allows following values for the first digit:

        </t>
        <dl newline="false" spacing="normal" indent="6" pn="section-4.2-6">
          <dt pn="section-4.2-6.1">1xx:</dt>
          <dd pn="section-4.2-6.2">
	Provisional -- request received, continuing to process the request;
	</dd>
          <dt pn="section-4.2-6.3">2xx:</dt>
          <dd pn="section-4.2-6.4">
	Success -- the action was successfully received, understood, and accepted;
	</dd>
          <dt pn="section-4.2-6.5">3xx:</dt>
          <dd pn="section-4.2-6.6">
	Redirection -- further action needs to be taken in order to complete the request;
	</dd>
          <dt pn="section-4.2-6.7">4xx:</dt>
          <dd pn="section-4.2-6.8">
	Request Failure -- the request contains bad syntax or cannot be fulfilled at this server;
	</dd>
          <dt pn="section-4.2-6.9">5xx:</dt>
          <dd pn="section-4.2-6.10"> 
        Server Error -- the server failed to fulfill an apparently valid request;
	</dd>
          <dt pn="section-4.2-6.11">6xx:</dt>
          <dd pn="section-4.2-6.12"> 
        Global Failure -- the request cannot be fulfilled at any server.
	</dd>
        </dl>
        <t pn="section-4.2-7">
   The status codes are the same as described in HTTP <xref target="RFC7231" format="default" sectionFormat="of" derivedContent="RFC7231"/>. In
   the same way as HTTP, Q4S applications are not required to
   understand the meaning of all registered status codes, though such
   understanding is obviously desirable. However, applications <bcp14>MUST</bcp14>
   understand the class of any status code, as indicated by the first
   digit, and treat any unrecognized response as being equivalent to
   the x00 status code of that class.</t>
        <t pn="section-4.2-8">
   The Q4S-ALERT, Q4S-RECOVERY, and CANCEL requests do not have to be
   responded to. However, after receiving a Q4S-ALERT, Q4S-RECOVERY, or
   CANCEL request, the server <bcp14>SHOULD</bcp14> send a Q4S-ALERT, Q4S-RECOVERY,
   or CANCEL request to the client.</t>
      </section>
      <section anchor="sec-4.3" numbered="true" toc="include" removeInRFC="false" pn="section-4.3">
        <name slugifiedName="name-header-fields">Header Fields</name>
        <t pn="section-4.3-1">
   Q4S header fields are identical to HTTP header fields in both
   syntax and semantics.</t>
        <t pn="section-4.3-2">
   Some header fields only make sense in requests or responses. These
   are called request header fields and response header fields,
   respectively.  If a header field appears in a message that does not match
   its category (such as a request header field in a response), it
   <bcp14>MUST</bcp14> be ignored.</t>
        <section anchor="sec-4.3.1" numbered="true" toc="include" removeInRFC="false" pn="section-4.3.1">
          <name slugifiedName="name-common-q4s-header-fields">Common Q4S Header Fields</name>
          <t pn="section-4.3.1-1"> These fields may appear in request and response messages.
          </t>
          <dl newline="false" spacing="normal" indent="6" pn="section-4.3.1-2">
            <dt pn="section-4.3.1-2.1">Session-Id:</dt>
            <dd pn="section-4.3.1-2.2">the value for this header field is the same sess-id
      used in SDP (embedded in the SDP "o=" line) and is assigned
      by the server. The messages without SDP <bcp14>MUST</bcp14> include this
      header field. If a message has an SDP body, this header field is
      optional. The method of sess-id allocation is up to the
      creating tool, but it is suggested that a UTC timestamp be
      used to ensure uniqueness.</dd>
            <dt pn="section-4.3.1-2.3">Sequence-Number:</dt>
            <dd pn="section-4.3.1-2.4">sequential and cyclic positive integer
      number assigned to PING and BWIDTH messages and acknowledged
      in 200 OK responses.</dd>
            <dt pn="section-4.3.1-2.5">Timestamp:</dt>
            <dd pn="section-4.3.1-2.6">this optional header field contains the system time
      (with the best possible accuracy). It indicates the time in
      which the PING request was sent. If this header field is present in
      PING messages, then the 200 OK response messages <bcp14>MUST</bcp14> include
      this value.</dd>
            <dt pn="section-4.3.1-2.7">Stage:</dt>
            <dd pn="section-4.3.1-2.8">this is used in the client's READY requests and the server's
      200 OK responses during the Negotiation and Continuity phases
      in order to synchronize the initiation of the measurements.
      Example:  Stage: 0</dd>
          </dl>
        </section>
        <section anchor="sec-4.3.2" numbered="true" toc="include" removeInRFC="false" pn="section-4.3.2">
          <name slugifiedName="name-specific-q4s-request-header">Specific Q4S Request Header Fields</name>
          <t pn="section-4.3.2-1">
   In addition to HTTP header fields, these are the specific Q4S
   request header fields:</t>
          <dl newline="false" spacing="normal" indent="6" pn="section-4.3.2-2">
            <dt pn="section-4.3.2-2.1">User-Agent:</dt>
            <dd pn="section-4.3.2-2.2">this header field contains information about the
      implementation of the user agent. This is for statistical
      purposes, the tracing of protocol violations, and the
      automated recognition of user agents for the sake of
      tailoring responses to avoid particular user agent
      limitations. User agents <bcp14>SHOULD</bcp14> include this field with
      requests. The field <bcp14>MAY</bcp14> contain multiple product tokens and
      comments identifying the agent and any sub-products that 
      form a significant part of the user agent. By convention, the
      product tokens are listed in order of their significance for
      identifying the application.</dd>
            <dt pn="section-4.3.2-2.3">Signature:</dt>
            <dd pn="section-4.3.2-2.4">
              <t pn="section-4.3.2-2.4.1">this header field contains a digital signature that can
      be used by the network, Actuator, or policy server to validate
      the SDP, preventing security attacks. The Signature is an
      optional header field generated by the server according to the 
      pre-agreed security policies between the Application Content
      Provider and the ISP. For example, a hash algorithm and
      encryption method such as SHA256 <xref target="RFC6234" format="default" sectionFormat="of" derivedContent="RFC6234"/> 
      and RSA <xref target="RFC8017" format="default" sectionFormat="of" derivedContent="RFC8017"/> based on the server certificate could be used.
      This certificate is supposed to be delivered by a
      Certification Authority (CA) or policy owner to the server.
      The signature is applied to the SDP body.</t>
              <sourcecode type="abnf" markers="false" pn="section-4.3.2-2.4.2">
      Signature= RSA ( SHA256 (&lt;sdp&gt;), &lt;certificate&gt; )
</sourcecode>
              <t pn="section-4.3.2-2.4.3">If the Signature header field is not present, other validation mechanisms
      <bcp14>MAY</bcp14> be implemented in order to provide assured quality with
      security and control.
              </t>
            </dd>
            <dt pn="section-4.3.2-2.5">Measurements:</dt>
            <dd pn="section-4.3.2-2.6">
              <t pn="section-4.3.2-2.6.1">this header field carries the measurements of the
      quality parameters in PING and BWIDTH requests. The format
      is: </t>
              <sourcecode type="abnf" markers="false" pn="section-4.3.2-2.6.2">
  Measurements: "l=" " "|[0..9999] ", j=" " "|[0..9999] ", pl="
  " "|[0.00 .. 100.00] ", bw=" " "|[0..999999]
</sourcecode>
              <t pn="section-4.3.2-2.6.3">
      Where "l" stands for latency followed by the measured value
      (in milliseconds) or an empty space, "j" stands for jitter
      followed by the measured value (in milliseconds) or an empty
      space, "pl" stands for packet loss followed by the measured
      value (in percentage with two decimals) or an empty space,
      and "bw" stands for bandwidth followed by the measured value
      (in kbps) or an empty space.</t>
            </dd>
          </dl>
        </section>
        <section anchor="sec-4.3.3" numbered="true" toc="include" removeInRFC="false" pn="section-4.3.3">
          <name slugifiedName="name-specific-q4s-response-heade">Specific Q4S Response Header Fields</name>
          <dl newline="false" spacing="normal" indent="6" pn="section-4.3.3-1">
            <dt pn="section-4.3.3-1.1">Expires:</dt>
            <dd pn="section-4.3.3-1.2">
              <t pn="section-4.3.3-1.2.1">its purpose is to provide a sanity check and allow
      the server to close inactive sessions. If the client does not
      send a new request before the expiration time, the server <bcp14>MAY</bcp14>
      close the session. The value <bcp14>MUST</bcp14> be an integer, and the
      measurement units are milliseconds.</t>
              <t pn="section-4.3.3-1.2.2">
	In order to keep the session open, the server <bcp14>MUST</bcp14> send a Q4S
      alert before the session expiration (Expires header field), with
      the same quality levels and an alert cause of "keep-alive".
      The purpose of this alert is to avoid TCP sockets, which were
      opened with READY message, from being closed, specially in
      NAT scenarios.</t>
            </dd>
          </dl>
        </section>
      </section>
      <section anchor="sec-4.4" numbered="true" toc="include" removeInRFC="false" pn="section-4.4">
        <name slugifiedName="name-bodies">Bodies</name>
        <t pn="section-4.4-1">
   Requests, including new requests defined in extensions to this
   specification, <bcp14>MAY</bcp14> contain message bodies unless otherwise noted.
   The interpretation of the body depends on the request method.</t>
        <t pn="section-4.4-2">
   For response messages, the request method and the response status
   code determine the type and interpretation of any message body.
   All responses <bcp14>MAY</bcp14> include a body.</t>
        <t pn="section-4.4-3">
   The Internet media type of the message body <bcp14>MUST</bcp14> be given by the
   Content-Type header field.</t>
        <section anchor="sec-4.4.1" numbered="true" toc="include" removeInRFC="false" pn="section-4.4.1">
          <name slugifiedName="name-encoding">Encoding</name>
          <t pn="section-4.4.1-1">
   The body <bcp14>MUST NOT</bcp14> be compressed. This mechanism is valid for
   other protocols such as HTTP and SIP <xref target="RFC3261" format="default" sectionFormat="of" derivedContent="RFC3261"/>, 
   but a compression/coding scheme will limit the way the request 
   is parsed to certain logical implementations, thus making
   the protocol concept more implementation dependent. In addition, the
   bandwidth calculation may not be valid if compression is used.
   Therefore, the HTTP Accept-Encoding request header field cannot be
   used in Q4S with values different from "identity", and if it is
   present in a request, the server <bcp14>MUST</bcp14> ignore it. In addition, the
   response header field Content-Encoding is optional, but if present,
   the unique permitted value is "identity".</t>
          <t pn="section-4.4.1-2">
   The body length in bytes <bcp14>MUST</bcp14> be provided by the Content-Length
   header field. The "chunked" transfer encoding of HTTP/1.1 <bcp14>MUST NOT</bcp14>
   be used for Q4S.</t>
          <aside pn="section-4.4.1-3">
            <t pn="section-4.4.1-3.1">Note: The chunked encoding modifies the body of a
   message in order to transfer it as a series of chunks, each one
   with its own size indicator.</t>
          </aside>
        </section>
      </section>
    </section>
    <section anchor="sec-5" numbered="true" toc="include" removeInRFC="false" pn="section-5">
      <name slugifiedName="name-q4s-method-definitions">Q4S Method Definitions</name>
      <t pn="section-5-1">
   The Method token indicates the method to be performed on the
   resource identified by the Request-URI. The method is case sensitive.</t>
      <sourcecode type="abnf" markers="false" pn="section-5-2">
 Method  = "BEGIN" | "READY" | "PING" | "BWIDTH" |
           "Q4S-ALERT" | "Q4S-RECOVERY" | "CANCEL" | extension-method

 extension-method = token
</sourcecode>
      <t pn="section-5-3">
   The list of methods allowed by a resource can be specified in an
   Allow header field <xref target="RFC7231" format="default" sectionFormat="of" derivedContent="RFC7231"/>. The return code of the
   response always notifies the client when a method is currently
   allowed on a resource, since the set of allowed methods can change
   dynamically. Any server application <bcp14>SHOULD</bcp14> return the status code
   405 (Method Not Allowed) if the method is known, but not allowed
   for the requested resource, and 501 (Not Implemented) if the
   method is unrecognized or not implemented by the server.</t>
      <section anchor="sec-5.1" numbered="true" toc="include" removeInRFC="false" pn="section-5.1">
        <name slugifiedName="name-begin">BEGIN</name>
        <t pn="section-5.1-1">
   The BEGIN method requests information from a resource identified
   by a Q4S URI. The purpose of this method is to start the
   quality session.</t>
        <t pn="section-5.1-2">
   This method is used only during the Handshake phase to retrieve
   the SDP containing the sess-id and all quality and operation
   parameters for the desired application to run.</t>
        <t pn="section-5.1-3">
   When a BEGIN message is received by the server, any current
   quality session <bcp14>MUST</bcp14> be canceled, and a new session should be
   created.</t>
        <t pn="section-5.1-4">
   The response to a Q4S BEGIN request is not cacheable.</t>
      </section>
      <section anchor="sec-5.2" numbered="true" toc="include" removeInRFC="false" pn="section-5.2">
        <name slugifiedName="name-ready">READY</name>
        <t pn="section-5.2-1">
   The READY method is used to synchronize the starting time for the
   sending of PING and BWIDTH messages over UDP between clients and
   servers. Including the Stage header field in this method is mandatory.</t>
        <t pn="section-5.2-2">
   This message is used only in Negotiation and Continuity phases,
   and only just before making a measurement. Otherwise (outside of this
   context), the server <bcp14>MUST</bcp14> ignore this method.</t>
      </section>
      <section anchor="sec-5.3" numbered="true" toc="include" removeInRFC="false" pn="section-5.3">
        <name slugifiedName="name-ping">PING</name>
        <t pn="section-5.3-1">
   This message is used during the Negotiation and Continuity phases
   to measure the RTT and jitter of a session. The message <bcp14>MUST</bcp14> be
   sent only over UDP ports.</t>
        <t pn="section-5.3-2">
   The fundamental difference between the PING and BWIDTH requests is
   reflected in the different measurements achieved with them. PING
   is a short message, and it <bcp14>MUST</bcp14> be answered in order to measure RTT
   and jitter, whereas BWIDTH is a long message and <bcp14>MUST NOT</bcp14> be
   answered.</t>
        <t pn="section-5.3-3">
   PING is a request method that can be originated by either the client or
   the server. The client <bcp14>MUST</bcp14> also answer the server PING messages,
   assuming a "server role" for these messages during the measurement
   process.</t>
        <t pn="section-5.3-4">
   Including the Measurements header field in this method is mandatory, and
   provides updated measurements values for latency, jitter, and
   packet loss to the counterpart.</t>
      </section>
      <section anchor="sec-5.4" numbered="true" toc="include" removeInRFC="false" pn="section-5.4">
        <name slugifiedName="name-bwidth">BWIDTH</name>
        <t pn="section-5.4-1">
   This message is used only during the Negotiation phase to measure
   the bandwidth and packet loss of a session. The message <bcp14>MUST</bcp14> be
   sent only over UDP ports.</t>
        <t pn="section-5.4-2">
   BWIDTH is a request method that can be originated by either the client
   or the server. Both client and server <bcp14>MUST NOT</bcp14> answer
   BWIDTH messages.</t>
        <t pn="section-5.4-3">
   Including the Measurements header field in this method is mandatory and
   provides updated measurements values for bandwidth and packet loss
   to the counterpart.</t>
      </section>
      <section anchor="sec-5.5" numbered="true" toc="include" removeInRFC="false" pn="section-5.5">
        <name slugifiedName="name-q4s-alert">Q4S-ALERT</name>
        <t pn="section-5.5-1">
   This is the request message that Q4S generates when the
   measurements indicate that quality constraints are being violated.
   It is used during the Negotiation and Continuity phases.</t>
        <t pn="section-5.5-2">
   This informative message indicates that the user experience is
   being degraded and includes the details of the problem (bandwidth,
   jitter, packet loss measurements). The Q4S-ALERT message does not
   contain any detail on the actions to be taken, which depend on
   the agreements between all involved parties.</t>
        <t pn="section-5.5-3">
   Unless there is an error condition, an answer to a Q4S-ALERT 
   request is optional and is formatted as a request Q4S-ALERT message. 
   If there is an error condition, then a response message is sent.
   The response to a Q4S-ALERT request is not cacheable.</t>
        <t pn="section-5.5-4">
   This method <bcp14>MUST</bcp14> be initiated by the server in both alerting
   modes. In the Q4S-aware-network alerting mode, the Q4S-ALERT messages
   are sent by the server to the client, advising the
   network to react by itself. In the Reactive alerting mode, alert
   notifications are triggered by the server stack and sent to the
   Actuator (see <xref target="ref-reactive-scenario" format="default" sectionFormat="of" derivedContent="Figure 1"/>, "Reactive Scenario").</t>
        <artwork name="" type="" align="left" alt="" pn="section-5.5-5">
Client----q4s----SERVER STACK---&gt;ACTUATOR--&gt;APP OR POLICY SERVER
</artwork>
        <t pn="section-5.5-6">
   The way in which the server stack notifies the Actuator is
   implementation dependent, and the communication between the
   Actuator and the network policy server is defined by the protocol
   and API that the policy server implements.</t>
      </section>
      <section anchor="sec-5.6" numbered="true" toc="include" removeInRFC="false" pn="section-5.6">
        <name slugifiedName="name-q4s-recovery">Q4S-RECOVERY</name>
        <t pn="section-5.6-1">
   This is the request message that Q4S generates when the
   measurements indicate that quality constraints, which had been violated,
   have been fulfilled during a period of time
   ("recovery-pause"). It is used during the Negotiation and Continuity
   phases.</t>
        <t pn="section-5.6-2">
   This informative message indicates that the "qos-level" could be
   increased gradually until the initial "qos-level" is recovered (the
   "qos-level" established at the beginning of the session that was
   decreased during violation of constraints. See <xref target="sec-7.9" format="default" sectionFormat="of" derivedContent="Section 7.9"/>). 
   The Q4S-RECOVERY
   message does not contain any detail on the actions to be taken,
   which depends on the agreements between all involved parties.</t>
        <t pn="section-5.6-3">
   The answer to a Q4S-RECOVERY request is formatted as a request
   Q4S-RECOVERY message. A Q4S-RECOVERY request <bcp14>MUST NOT</bcp14> be answered 
   with a response message unless there is an error condition. 
   The response to a Q4S-RECOVERY request is not cacheable.</t>
        <t pn="section-5.6-4">
   Like the Q4S-ALERT message, the Q4S-RECOVERY method is always
   initiated by the server in both alerting modes. In the 
   Q4S-aware-network alerting mode, the Q4S-RECOVERY messages are sent by the
   server to the client, advising the network to react by
   itself. In the Reactive alerting mode, recovery notifications are
   triggered by the server stack and sent to the Actuator (see <xref target="ref-reactive-scenario" format="default" sectionFormat="of" derivedContent="Figure 1"/>, 
   "Reactive Scenario").</t>
      </section>
      <section anchor="sec-5.7" numbered="true" toc="include" removeInRFC="false" pn="section-5.7">
        <name slugifiedName="name-cancel">CANCEL</name>
        <t pn="section-5.7-1">
   The purpose of the CANCEL message is the release of the Q4S 
   Session-Id and the possible resources assigned to the session. This
   message could be triggered by the Q4S stack or by the application
   using the stack (through an implementation-dependent API).</t>
        <t pn="section-5.7-2">
   In the same way as Q4S-ALERT, CANCEL must not be answered with a
   response message, but with an answer formatted as a request Q4S-CANCEL message.</t>
        <t pn="section-5.7-3">
   In the Reactive scenario, the server stack <bcp14>MUST</bcp14> react to the Q4S
   CANCEL messages received from the client by forwarding a cancel
   notification to the Actuator, in order to release possible
   assigned resources for the session (at the application or at the policy
   server). The Actuator <bcp14>MUST</bcp14> answer the cancel notification with a
   cancel acknowledge towards the server stack, acknowledging the
   reception.</t>
      </section>
    </section>
    <section anchor="sec-6" numbered="true" toc="include" removeInRFC="false" pn="section-6">
      <name slugifiedName="name-response-codes">Response Codes</name>
      <t pn="section-6-1">
   Q4S response codes are used for TCP and UDP. However, in UDP, only
   the response code 200 is used.</t>
      <t pn="section-6-2">
   The receiver of an unknown response code must take a generic
   action for the received error group (1xx, 2xx, 3xx, 4xx, 5xx,
   6xx). In case of an unknown error group, the expected action should
   be the same as with the 6xx error group.</t>
      <section anchor="sec-6.1" numbered="true" toc="include" removeInRFC="false" pn="section-6.1">
        <name slugifiedName="name-100-trying">100 Trying</name>
        <t pn="section-6.1-1">
   This response indicates that the request has been received by the
   next-hop server and that some unspecified action is being taken on
   behalf of this request (for example, a database is being
   consulted). This response, like all other provisional responses,
   stops retransmissions of a Q4S-ALERT during the "alert-pause" time.</t>
      </section>
      <section anchor="sec-6.2" numbered="true" toc="include" removeInRFC="false" pn="section-6.2">
        <name slugifiedName="name-success-2xx">Success 2xx</name>
        <t pn="section-6.2-1">
   2xx responses give information about the success of a request.</t>
        <section anchor="sec-6.2.1" numbered="true" toc="include" removeInRFC="false" pn="section-6.2.1">
          <name slugifiedName="name-200-ok">200 OK</name>
          <t pn="section-6.2.1-1">
   The request has succeeded.</t>
        </section>
      </section>
      <section anchor="sec-6.3" numbered="true" toc="include" removeInRFC="false" pn="section-6.3">
        <name slugifiedName="name-redirection-3xx">Redirection 3xx</name>
        <t pn="section-6.3-1">
   3xx responses give information about the user's new location or
   about alternative services that might be able to satisfy the
   request.</t>
        <t pn="section-6.3-2">
   The requesting client <bcp14>SHOULD</bcp14> retry the request at the new
   address(es) given by the Location header field.</t>
      </section>
      <section anchor="sec-6.4" numbered="true" toc="include" removeInRFC="false" pn="section-6.4">
        <name slugifiedName="name-request-failure-4xx">Request Failure 4xx</name>
        <t pn="section-6.4-1">
   4xx responses are definite failure responses from a particular
   server. The client <bcp14>SHOULD NOT</bcp14> retry the same request without
   modification (for example, adding appropriate header fields or SDP
   values). However, the same request to a different server might be
   successful.</t>
        <section anchor="sec-6.4.1" numbered="true" toc="include" removeInRFC="false" pn="section-6.4.1">
          <name slugifiedName="name-400-bad-request">400 Bad Request</name>
          <t pn="section-6.4.1-1">
   The request could not be understood due to malformed syntax. The
   Reason-Phrase <bcp14>SHOULD</bcp14> identify the syntax problem in more detail,
   for example, "Missing Sequence-Number header field".</t>
        </section>
        <section anchor="sec-6.4.2" numbered="true" toc="include" removeInRFC="false" pn="section-6.4.2">
          <name slugifiedName="name-404-not-found">404 Not Found</name>
          <t pn="section-6.4.2-1">
   The server has definitive information that the user does not exist
   at the domain specified in the Request-URI. This status is also
   returned if the domain in the Request-URI does not match any of
   the domains handled by the recipient of the request.</t>
        </section>
        <section anchor="sec-6.4.3" numbered="true" toc="include" removeInRFC="false" pn="section-6.4.3">
          <name slugifiedName="name-405-method-not-allowed">405 Method Not Allowed</name>
          <t pn="section-6.4.3-1">
   The method specified in the Request-Line is understood, but not
   allowed for the address identified by the Request-URI.</t>
          <t pn="section-6.4.3-2">
   The response <bcp14>MUST</bcp14> include an Allow header field containing a list
   of valid methods for the indicated address.</t>
        </section>
        <section anchor="sec-6.4.4" numbered="true" toc="include" removeInRFC="false" pn="section-6.4.4">
          <name slugifiedName="name-406-not-acceptable">406 Not Acceptable</name>
          <t pn="section-6.4.4-1">
   The resource identified by the request is only able to generate
   response entities that have content characteristics that are not acceptable
   according to the Accept header field sent in the request.</t>
        </section>
        <section anchor="sec-6.4.5" numbered="true" toc="include" removeInRFC="false" pn="section-6.4.5">
          <name slugifiedName="name-408-request-timeout">408 Request Timeout</name>
          <t pn="section-6.4.5-1">
   The server could not produce a response within a suitable amount
   of time, and the client <bcp14>MAY</bcp14> repeat the request without
   modifications at any later time.</t>
        </section>
        <section anchor="sec-6.4.6" numbered="true" toc="include" removeInRFC="false" pn="section-6.4.6">
          <name slugifiedName="name-413-request-entity-too-larg">413 Request Entity Too Large</name>
          <t pn="section-6.4.6-1">
   The server is refusing to process a request because the request
   entity-body is larger than the one that the server is willing or
   able to process. The server <bcp14>MAY</bcp14> close the connection to prevent
   the client from continuing the request.</t>
        </section>
        <section anchor="sec-6.4.7" numbered="true" toc="include" removeInRFC="false" pn="section-6.4.7">
          <name slugifiedName="name-414-request-uri-too-long">414 Request-URI Too Long</name>
          <t pn="section-6.4.7-1">
   The server is refusing to process the request because the Request-URI is longer than the one that the server accepts.</t>
        </section>
        <section anchor="sec-6.4.8" numbered="true" toc="include" removeInRFC="false" pn="section-6.4.8">
          <name slugifiedName="name-415-unsupported-media-type">415 Unsupported Media Type</name>
          <t pn="section-6.4.8-1">
   The server is refusing to process the request because the message
   body of the request is in a format not supported by the server for
   the requested method. The server <bcp14>MUST</bcp14> return a list of acceptable
   formats using the Accept, Accept-Encoding, or Accept-Language
   header field, depending on the specific problem with the content.</t>
        </section>
        <section anchor="sec-6.4.9" numbered="true" toc="include" removeInRFC="false" pn="section-6.4.9">
          <name slugifiedName="name-416-unsupported-uri-scheme">416 Unsupported URI Scheme</name>
          <t pn="section-6.4.9-1">
   The server cannot process the request because the scheme of the
   URI in the Request-URI is unknown to the server.</t>
        </section>
      </section>
      <section anchor="sec-6.5" numbered="true" toc="include" removeInRFC="false" pn="section-6.5">
        <name slugifiedName="name-server-failure-5xx">Server Failure 5xx</name>
        <t pn="section-6.5-1">
   5xx responses are failure responses given when a server itself is
   having trouble.</t>
        <section anchor="sec-6.5.1" numbered="true" toc="include" removeInRFC="false" pn="section-6.5.1">
          <name slugifiedName="name-500-server-internal-error">500 Server Internal Error</name>
          <t pn="section-6.5.1-1">
   The server encountered an unexpected condition that prevented it
   from fulfilling the request. The client <bcp14>MAY</bcp14> display the specific
   error condition and <bcp14>MAY</bcp14> retry the request after several seconds.</t>
        </section>
        <section anchor="sec-6.5.2" numbered="true" toc="include" removeInRFC="false" pn="section-6.5.2">
          <name slugifiedName="name-501-not-implemented">501 Not Implemented</name>
          <t pn="section-6.5.2-1">
   The server does not support the functionality required to fulfill
   the request. This is the appropriate response when a server does
   not recognize the request method, and it is not capable of
   supporting it for any user.</t>
          <t pn="section-6.5.2-2">
   Note that a 405 (Method Not Allowed) is sent when the server
   recognizes the request method, but that method is not allowed or
   supported.</t>
        </section>
        <section anchor="sec-6.5.3" numbered="true" toc="include" removeInRFC="false" pn="section-6.5.3">
          <name slugifiedName="name-503-service-unavailable">503 Service Unavailable</name>
          <t pn="section-6.5.3-1">
   The server is temporarily unable to process the request due to a
   temporary overloading or maintenance of the server. The server <bcp14>MAY</bcp14>
   indicate when the client should retry the request in a Retry-After
   header field. If no Retry-After is given, the client <bcp14>MUST</bcp14> act as
   if it had received a 500 (Server Internal Error) response.</t>
          <t pn="section-6.5.3-2">
   A client receiving a 503 (Service Unavailable) <bcp14>SHOULD</bcp14> attempt to
   forward the request to an alternate server. It <bcp14>SHOULD NOT</bcp14> forward
   any other requests to that server for the duration specified in
   the Retry-After header field, if present.</t>
          <t pn="section-6.5.3-3">
   Servers <bcp14>MAY</bcp14> refuse the connection or drop the request instead of
   responding with 503 (Service Unavailable).</t>
        </section>
        <section anchor="sec-6.5.4" numbered="true" toc="include" removeInRFC="false" pn="section-6.5.4">
          <name slugifiedName="name-504-server-time-out">504 Server Time-Out</name>
          <t pn="section-6.5.4-1">
   The server did not receive a timely response from an external
   server it accessed in attempting to process the request.</t>
        </section>
        <section anchor="sec-6.5.5" numbered="true" toc="include" removeInRFC="false" pn="section-6.5.5">
          <name slugifiedName="name-505-version-not-supported">505 Version Not Supported</name>
          <t pn="section-6.5.5-1">
   The server does not support, or refuses to support, the Q4S
   protocol version that was used in the request. The server is
   indicating that it is unable or unwilling to complete the request
   using the same major version as the client, other than with this
   error message.</t>
          <t pn="section-6.5.5-2">
   In the case that the Q4S version is not supported, this error may be
   sent by the server in the Handshake phase just after receiving the
   first BEGIN message from client.</t>
        </section>
        <section anchor="sec-6.5.6" numbered="true" toc="include" removeInRFC="false" pn="section-6.5.6">
          <name slugifiedName="name-513-message-too-large">513 Message Too Large</name>
          <t pn="section-6.5.6-1">
   The server was unable to process the request because the message
   length exceeded its capabilities.</t>
        </section>
      </section>
      <section anchor="sec-6.6" numbered="true" toc="include" removeInRFC="false" pn="section-6.6">
        <name slugifiedName="name-global-failures-6xx">Global Failures 6xx</name>
        <t pn="section-6.6-1">
   6xx responses indicate that a server has definitive information
   about a particular policy not satisfied for processing the
   request.</t>
        <section anchor="sec-6.6.1" numbered="true" toc="include" removeInRFC="false" pn="section-6.6.1">
          <name slugifiedName="name-600-session-does-not-exist">600 Session Does Not Exist</name>
          <t pn="section-6.6.1-1">
   The Session-Id is not valid.</t>
        </section>
        <section anchor="sec-6.6.2" numbered="true" toc="include" removeInRFC="false" pn="section-6.6.2">
          <name slugifiedName="name-601-quality-level-not-allow">601 Quality Level Not Allowed</name>
          <t pn="section-6.6.2-1">
   The "qos-level" requested is not allowed for the client/server pair.</t>
        </section>
        <section anchor="sec-6.6.3" numbered="true" toc="include" removeInRFC="false" pn="section-6.6.3">
          <name slugifiedName="name-603-session-not-allowed">603 Session Not Allowed</name>
          <t pn="section-6.6.3-1">
   The session is not allowed due to some policy (the number of sessions
   allowed for the server is exceeded, or the time band of the Q4S-ALERT 
   is not allowed for the client/server pair, etc.).</t>
        </section>
        <section anchor="sec-6.6.4" numbered="true" toc="include" removeInRFC="false" pn="section-6.6.4">
          <name slugifiedName="name-604-authorization-not-allow">604 Authorization Not Allowed</name>
          <t pn="section-6.6.4-1">
   The policy server does not authorize the Q4S-ALERT quality session
   improvement operation due to an internal or external reason.</t>
        </section>
      </section>
    </section>
    <section anchor="sec-7" numbered="true" toc="include" removeInRFC="false" pn="section-7">
      <name slugifiedName="name-protocol">Protocol</name>
      <t pn="section-7-1">
   This section describes the measurement procedures, the SDP
   structure of the Q4S messages, the different Q4S protocol phases,
   and the messages exchanged in them.</t>
      <section anchor="sec-7.1" numbered="true" toc="include" removeInRFC="false" pn="section-7.1">
        <name slugifiedName="name-protocol-phases">Protocol Phases</name>
        <t pn="section-7.1-1">
   All elements of the IP network contribute to quality in
   terms of latency, jitter, bandwidth, and packet loss. All these
   elements have their own quality policies in terms of priorities,
   traffic mode, etc., and each element has its own way to manage the
   quality. The purpose of a quality connection is to establish 
   end-to-end communication with enough quality for the application
   to function flawlessly.</t>
        <t pn="section-7.1-2">
   To monitor quality constraints of the application, four phases are
   defined and can be seen in <xref target="ref-session-lifetime-phases" format="default" sectionFormat="of" derivedContent="Figure 5"/>:</t>
        <figure anchor="ref-session-lifetime-phases" align="left" suppress-title="false" pn="figure-5">
          <name slugifiedName="name-session-lifetime-phases">Session Lifetime Phases</name>
          <artwork name="" type="" align="left" alt="" pn="section-7.1-3.1">
+---------------------------------------------------------------+
|                                                               |
|                                                               |
| Handshake ---&gt; Negotiation -+--&gt; Continuity ----&gt; Termination |
|                   A         |    (app start) |    (app end)   |
|                   |         V        A       V       A        |
|                   |     violated     |     violated  |        |
|                   |    constraints   |   constraints |        |
|                   |      |     |     |_______|   ____|        |
|                   |      |     |     +-------+       |        |
|                   |      |     |                     |        |
|                   +------+     +---------------------+        |
|                                                               |
+---------------------------------------------------------------+
</artwork>
        </figure>
        <dl spacing="normal" newline="false" pn="section-7.1-4">
          <dt pn="section-7.1-4.1">Handshake phase:</dt>
          <dd pn="section-7.1-4.2">in which the server is contacted by the
      client, and in the answer message, the quality constraints for
      the application are communicated in the embedded SDP.</dd>
          <dt pn="section-7.1-4.3">Negotiation phase:</dt>
          <dd pn="section-7.1-4.4">in which the quality of the connection is
      measured in both directions (latency, jitter, bandwidth, and
      packet loss), and Q4S messages may be sent in order to alert
      if the measured quality does not meet the constraints. This
      phase is iterative until quality constraints are reached, or
      the session is canceled after a number of measurement cycles
      with consistent violation of the quality constraints. The
      number of measurement cycles executed depends on the "qos-level", 
      which is incremented in each cycle until a maximum "qos-level" value 
      is reached. Just after reaching the quality
      requirements, Q4S provides a simple optional mechanism using
      HTTP to start the application.</dd>
          <dt pn="section-7.1-4.5">Continuity phase:</dt>
          <dd pn="section-7.1-4.6">in which quality is continuously measured.
      In this phase, the measurements <bcp14>MUST</bcp14> avoid disturbing the
      application by consuming network resources. If quality
      constraints are not met, the server stack will notify the
      Actuator with an alert notification. If later the quality
      improves, the server stack will notify the Actuator, in this
      case with a recovery notification. After several alert
      notifications with no quality improvements, the Q4S stack
      <bcp14>SHOULD</bcp14> move to the Termination phase.</dd>
          <dt pn="section-7.1-4.7">Termination phase:</dt>
          <dd pn="section-7.1-4.8">in which the Q4S session is terminated.
      The application may be closed also or may not start.</dd>
        </dl>
      </section>
      <section anchor="sec-7.2" numbered="true" toc="include" removeInRFC="false" pn="section-7.2">
        <name slugifiedName="name-sdp-structure">SDP Structure</name>
        <t pn="section-7.2-1">
   The original goal of SDP was to announce necessary information for
   the participants and multicast MBONE (Multicast Backbone)
   applications. Right now, its use has been extended to the
   announcement and the negotiation of multimedia sessions. The
   purpose of Q4S is not to establish media stream sessions, but to
   monitor a quality connection. This connection may be later used to
   establish any type of session including media sessions; Q4S does
   not impose any conditions on the type of communication requiring
   quality parameters.</t>
        <t pn="section-7.2-2">
   SDP will be used by Q4S to exchange quality constraints and will
   therefore always have all the media descriptions ("m=") set to zero.</t>
        <t pn="section-7.2-3">
   The SDP embedded in the messages is the container of the quality
   parameters. As these may vary depending on the direction of the
   communication (to and from the client), all quality parameters need
   to specify the uplink and downlink values: &lt;uplink&gt; / &lt;downlink&gt;
   (see <xref target="sec-7.5.3" format="default" sectionFormat="of" derivedContent="Section 7.5.3"/> for an example).
   When one or both of these values are empty, it <bcp14>MUST</bcp14> be understood
   as needing no constraint on that parameter and/or that direction.</t>
        <t pn="section-7.2-4">
   The uplink direction <bcp14>MUST</bcp14> be considered as being the communication
   from the client to the server. The downlink direction <bcp14>MUST</bcp14> be
   considered as being the communication from the server to the
   client.</t>
        <t pn="section-7.2-5">
   The SDP information can comprise all or some of the following
   parameters shown in the example below. This is an example of an
   SDP message used by Q4S included in the 200 OK response to a Q4S
   BEGIN request.</t>
        <sourcecode type="sdp" markers="false" pn="section-7.2-6">
v=0
o=q4s-UA 53655765 2353687637 IN IP4 192.0.2.33
s=Q4S
i=Q4S parameters
t=0 0
a=qos-level:0/0
a=alerting-mode:Reactive
a=alert-pause:5000
a=public-address:client IP4 198.51.100.51
a=public-address:server IP4 198.51.100.58
a=measurement:procedure default(50/50,75/75,5000,40/80,100/256)
a=latency:40
a=jitter:10/10
a=bandwidth:20/6000
a=packetloss:0.50/0.50
a=flow:app clientListeningPort TCP/10000-20000
a=flow:app clientListeningPort UDP/15000-18000
a=flow:app serverListeningPort TCP/56000
a=flow:app serverListeningPort UDP/56000
a=flow:q4s clientListeningPort UDP/55000
a=flow:q4s clientListeningPort TCP/55001
a=flow:q4s serverListeningPort UDP/56000
a=flow:q4s serverListeningPort TCP/56001
</sourcecode>
        <t pn="section-7.2-7">
   As quality constraints may be changed by applications at any time
   during the Q4S session lifetime, any Q4S 200 OK response sent by
   the server to the client in the Negotiation and Continuity phases
   could also include an SDP body with the new quality requirements
   stated by the applications from then on. Therefore, in response to
   any PING request sent by the client to the server, the server
   could send a Q4S 200 OK with an embedded SDP message that
   specifies new quality constraints requested by the application.</t>
        <section anchor="sec-7.2.1" numbered="true" toc="include" removeInRFC="false" pn="section-7.2.1">
          <name slugifiedName="name-qos-level-attribute">"qos-level" Attribute</name>
          <t pn="section-7.2.1-1">
   The "qos-level" attribute contains the QoS level for uplink and
   downlink. Default values are 0 for both directions. The meaning of
   each level is out of scope of Q4S, but a higher level <bcp14>SHOULD</bcp14>
   correspond to a better service quality.</t>
          <t pn="section-7.2.1-2">
   Appropriate attribute values: [0..9] "/" [0..9]</t>
          <t pn="section-7.2.1-3">
   The "qos-level" attribute may be changed during the session
   lifetime, raising or lowering the value as necessary following the
   network measurements and the application needs.</t>
        </section>
        <section anchor="sec-7.2.2" numbered="true" toc="include" removeInRFC="false" pn="section-7.2.2">
          <name slugifiedName="name-alerting-mode-attribute">"alerting-mode" Attribute</name>
          <t pn="section-7.2.2-1">
   The "alerting-mode" attribute specifies the player in charge of
   triggering Q4S alerts in the case of constraint violation. There are
   two possible values:</t>
          <t pn="section-7.2.2-2">
   Appropriate attribute values: &lt;"Q4S-aware-network"|"Reactive"&gt;</t>
          <dl newline="false" spacing="normal" indent="6" pn="section-7.2.2-3">
            <dt pn="section-7.2.2-3.1">Q4S-aware-network:</dt>
            <dd pn="section-7.2.2-3.2">Q4S-ALERT messages are triggered by the
	server to the client. In this case, the network is supposed to
        be Q4S aware, and reacts by itself to these alerts.</dd>
            <dt pn="section-7.2.2-3.3"> Reactive:</dt>
            <dd pn="section-7.2.2-3.4">alert notifications are sent by the server stack to
	the Actuator. In this case, the network is not Q4S aware, and a
      specific node (Actuator) is in charge of triggering tuning
      mechanisms, either on the network or in the application.
	</dd>
          </dl>
          <t pn="section-7.2.2-4">
   The "alerting-mode" attribute is optional, and if not present,
   Reactive alerting mode is assumed.</t>
        </section>
        <section anchor="sec-7.2.3" numbered="true" toc="include" removeInRFC="false" pn="section-7.2.3">
          <name slugifiedName="name-alert-pause-attribute">"alert-pause" Attribute</name>
          <t pn="section-7.2.3-1">
   In the Q4S-aware-network scenario, the "alert-pause" attribute
   specifies the amount of time (in milliseconds) the server waits
   between consecutive Q4S-ALERT messages sent to the client. In the
   Reactive scenario, the "alert-pause" attribute specifies the
   amount of time (in milliseconds) the server stack waits between
   consecutive alert notifications sent to the Actuator. Measurements
   are not stopped in Negotiation or Continuity phases during this
   period of time, but no Q4S-ALERT messages or alert notifications
   are fired, even with violated quality constraints, allowing for either
   network reconfigurations or application adjustments.</t>
          <t pn="section-7.2.3-2">
   Appropriate attribute values: [0..60000]</t>
        </section>
        <section anchor="sec-7.2.4" numbered="true" toc="include" removeInRFC="false" pn="section-7.2.4">
          <name slugifiedName="name-recovery-pause-attribute">"recovery-pause" Attribute</name>
          <t pn="section-7.2.4-1">
   In the Q4S-aware-network scenario, the "recovery-pause" attribute
   specifies the amount of time (in milliseconds) the server waits
   for initiating the "qos-level" recovery process. Once the recovery
   process has started, the "recovery-pause" attribute also states
   the amount of time (in milliseconds) between consecutive Q4S-RECOVERY 
   messages sent by the server to the client (in the Q4S-aware-network scenario) or between recovery notifications sent by
   the server stack to the Actuator (in the Reactive scenario).</t>
          <t pn="section-7.2.4-2">
   Appropriate attribute values: [0..60000]</t>
        </section>
        <section anchor="sec-7.2.5" numbered="true" toc="include" removeInRFC="false" pn="section-7.2.5">
          <name slugifiedName="name-public-address-attributes">"public-address" Attributes</name>
          <t pn="section-7.2.5-1">
   This attribute contains the public IP address of the client and
   the server. The server fills these attributes with its own public
   IP address and the public IP address of the first message received
   from the client in the Handshake phase.</t>
          <t pn="section-7.2.5-2">
   The purpose of these attributes is to make available the
   addressing information to the network policy server or other external
   entities in charge of processing Q4S-ALERT messages.</t>
          <t pn="section-7.2.5-3">
   Appropriate attribute values: &lt;"client"|"server"&gt; &lt;"IP4"|"IP6"&gt;
   &lt;value of IP address&gt;</t>
        </section>
        <section anchor="sec-7.2.6" numbered="true" toc="include" removeInRFC="false" pn="section-7.2.6">
          <name slugifiedName="name-latency-attribute">"latency" Attribute</name>
          <t pn="section-7.2.6-1">
   The maximum latency (considered equal for uplink and downlink)
   tolerance is specified in the "latency" attribute, expressed in
   milliseconds. In the Q4S-aware-network scenario, if the latency
   constraints are not met, a Q4S-ALERT method will be sent to the
   client. In the Reactive scenario, if the latency constraints are
   not met, an alert notification will be sent to the Actuator. If
   the "latency" attribute is not present or has a 0 value, no
   latency constraints need to be met, and no measurements <bcp14>MAY</bcp14> be
   taken.</t>
          <t pn="section-7.2.6-2">
   Appropriate attribute values: [0..9999]</t>
        </section>
        <section anchor="sec-7.2.7" numbered="true" toc="include" removeInRFC="false" pn="section-7.2.7">
          <name slugifiedName="name-jitter-attribute">"jitter" Attribute</name>
          <t pn="section-7.2.7-1">
   The maximum uplink and downlink jitter tolerance is specified in
   the "jitter" attribute, expressed in milliseconds. In the Q4S-aware-network scenario, if the jitter constraints are not met, a
   Q4S-ALERT method will be sent to the client. In the Reactive
   scenario, if the latency constraints are not met, an alert
   notification will be sent to the Actuator. If the "jitter" attribute
   is not present or has a 0 value, no jitter constraints need to be
   met, and no measurements <bcp14>MAY</bcp14> be taken.</t>
          <t pn="section-7.2.7-2">
   Appropriate attribute values: [0..9999] "/" [0..9999]</t>
        </section>
        <section anchor="sec-7.2.8" numbered="true" toc="include" removeInRFC="false" pn="section-7.2.8">
          <name slugifiedName="name-bandwidth-attribute">"bandwidth" Attribute</name>
          <t pn="section-7.2.8-1">
   The minimum uplink and downlink bandwidth is specified in the
   "bandwidth" attribute, expressed in kbps. In the Q4S-aware-network
   scenario, if the bandwidth constraints are not met, a Q4S-ALERT
   method will be sent to the client. In the Reactive scenario, an
   alert notification will be sent to the Actuator. If the "bandwidth"
   attribute is not present or has a 0 value, no bandwidth
   constraints need to be met, and no measurements <bcp14>MAY</bcp14> be taken.</t>
          <t pn="section-7.2.8-2">
   Appropriate attribute values: [0..99999] "/" [0..99999]</t>
        </section>
        <section anchor="sec-7.2.9" numbered="true" toc="include" removeInRFC="false" pn="section-7.2.9">
          <name slugifiedName="name-packetloss-attribute">"packetloss" Attribute</name>
          <t pn="section-7.2.9-1">
   The maximum uplink and downlink packet loss tolerance is
   specified in the "packetloss" attribute expressed in percentage
   (two decimal accuracy). In the Q4S-aware-network scenario, if the
   packetloss constraints are not met, a Q4S-ALERT method will be
   sent to the client. In the Reactive scenario, an alert
   notification will be sent to the Actuator. If the "packetloss"
   attribute is not present or has a 0 value, no packet loss
   constraints need to be met, and no measurements <bcp14>MAY</bcp14> be taken.</t>
          <t pn="section-7.2.9-2">
   Appropriate attribute values: [0.00 ..100.00] "/"[0.00 ..100.00]</t>
        </section>
        <section anchor="sec-7.2.10" numbered="true" toc="include" removeInRFC="false" pn="section-7.2.10">
          <name slugifiedName="name-flow-attributes">"flow" Attributes</name>
          <t pn="section-7.2.10-1">
   These attributes specify the flows (protocol, destination
   IP/ports) of data over TCP and UDP ports to be used in uplink and
   downlink communications.</t>
          <t pn="section-7.2.10-2">
   Several "flow" attributes can be defined. These flows identify the
   listening port (client or server), the protocol (TCP <xref target="RFC0793" format="default" sectionFormat="of" derivedContent="RFC0793"/> 
   or UDP <xref target="RFC0768" format="default" sectionFormat="of" derivedContent="RFC0768"/>) 
   with the range of ports that are going
   to be used by the application and, of course, by the Q4S protocol
   (for quality measurements). All defined flows ("app" and "q4s") will
   be considered within the same quality profile, which is determined
   by the "qos-level" attribute in each direction. This allows us to
   assume that measurements on "q4s" flows are the same as experienced by
   the application, which is using "app" flows.</t>
          <t pn="section-7.2.10-3">
   During Negotiation and Continuity phases, the specified Q4S ports
   in the "flow:q4s" attributes of SDP will be used for Q4S messages.</t>
          <t pn="section-7.2.10-4">
   The Q4S flows comprise two UDP flows and two TCP flows (one uplink
   and one downlink for each one), whereas application traffic <bcp14>MAY</bcp14>
   consist of many flows, depending on its nature. The Handshake
   phase takes place through the Q4S Contact URI, using the standard
   Q4S TCP port. However, the Negotiation and Continuity phases will
   take place on the Q4S ports (UDP and TCP) specified in
   the SDP.</t>
          <t pn="section-7.2.10-5">
   The "clientListeningPort" is a port on which the client listens
   for server requests and <bcp14>MUST</bcp14> be used as the origin port of client
   responses. The "serverListeningPort" is a port on which the server is
   listening for incoming messages from the client. The origin port
   of server responses may be different than the "serverListeningPort"
   value.</t>
          <t pn="section-7.2.10-6">
   If "clientListeningPort" is zero ("a=flow:q4s clientListeningPort
   TCP/0"), the client <bcp14>MAY</bcp14> choose one randomly per OS standard
   rules. Client ports inside the SDP must always be matched against
   actual received port values on the server side in order to deal
   with NAT/NAPT devices. If a zero value or incorrect value is
   present, the server must set the value to the received origin port in
   the next message with SDP (200 OK, ALERT, and CANCEL messages).</t>
          <sourcecode type="abnf" markers="false" pn="section-7.2.10-7">
Attribute values:
   &lt;"q4s"|"app"&gt; &lt;"serverListeningPort"|"clientListeningPort"&gt;
&lt;"UDP"|"TCP"&gt; &lt;0..65535&gt; [ "-" [0..65535]]
</sourcecode>
        </section>
        <section anchor="sec-7.2.11" numbered="true" toc="include" removeInRFC="false" pn="section-7.2.11">
          <name slugifiedName="name-measurement-attributes">"measurement" Attributes</name>
          <t pn="section-7.2.11-1">
   These attributes contain the measurement procedure and the results
   of the quality measurements.</t>
          <t pn="section-7.2.11-2">
   Measurement parameters are included using the session attribute
   "measurement". The first measurement parameter is the procedure.
   Q4S provides a "default" procedure for measurements, but others
   like RTP/RTCP might be used and defined later. This document will
   only define and explain the "default" procedure.</t>
          <t pn="section-7.2.11-3">
   In the initial client request, a set of measurement procedures can
   be sent to the server for negotiation. One measurement procedure
   line <bcp14>MUST</bcp14> be included in the SDP message for each proposed method.
   The server <bcp14>MUST</bcp14> answer with only one line with the chosen
   procedure.</t>
          <t pn="section-7.2.11-4">
   For each procedure, a set of values of parameters separated by ","
   can be included in the same attribute line. The amount and type of
   parameters depends on the procedure type.</t>
          <t pn="section-7.2.11-5">
   In the following example, the "default" procedure type is chosen:</t>
          <sourcecode type="sdp" markers="false" pn="section-7.2.11-6">
   a=measurement:procedure default(50/50,75/75,5000,40/80,100/256)
</sourcecode>
          <t pn="section-7.2.11-7">
   In the "default" procedure, the meaning of these parameters is
the following:</t>
          <ul spacing="normal" bare="false" empty="false" pn="section-7.2.11-8">
            <li pn="section-7.2.11-8.1">The first parameter is the interval of time (in milliseconds)
      between PING requests during the Negotiation phase. Uplink
      and downlink values from the client's point of view are
      separated by "/". This allows different responsiveness
      values depending on the control resources used in each
      direction.</li>
            <li pn="section-7.2.11-8.2">The second parameter is the time interval (in milliseconds)
      between PING requests during the Continuity phase. Uplink and
      downlink values are separated by "/". This allows two
      different responsiveness values depending on the control
      resources used in each direction.</li>
            <li pn="section-7.2.11-8.3">The third parameter is the time interval to be used to
      measure bandwidth during the Negotiation phase.</li>
            <li pn="section-7.2.11-8.4">The fourth parameter indicates the window size for jitter and
      latency calculations. Uplink and downlink values are
      separated by "/".</li>
            <li pn="section-7.2.11-8.5">The fifth parameter indicates the window size for packet loss
      calculations. Uplink and downlink values are separated by
      "/".</li>
          </ul>
          <t pn="section-7.2.11-9">
   There are four more "measurement" attributes:</t>
          <sourcecode type="sdp" markers="false" pn="section-7.2.11-10">
a=measurement:latency 45
a=measurement:jitter 3/12
a=measurement:bandwidth 200/9800
a=measurement:packetloss 0.00/1.00
</sourcecode>
          <t pn="section-7.2.11-11">
   The "measurement:latency", "measurement:jitter", "measurement:bandwidth", and "measurement:packetloss" 
   attributes contain the values measured for each of these quality
   parameters in uplink and downlink directions. Notice that latency
   is considered equal for uplink and downlink directions. Quality
   parameter values in these "measurement" attributes provide a
   snapshot of the quality reached and <bcp14>MUST</bcp14> only be 
   included in Q4S-ALERT messages in the SDP body such that they can be protected
   from malicious attacks as these alerts include a signature of the
   SDP body in the header. The rest of the messages will include the
   measured values in the Measurements header field.</t>
          <t pn="section-7.2.11-12">
   In the case of the "default" procedure, the valid values are as follows:</t>
          <sourcecode type="abnf" markers="false" pn="section-7.2.11-13">
a=measurement:procedure default,[0..999]"/" [0..999]  "," [0..999]
"/" [0..999] "," [0..9999] "," [0..999]/[0..999] ","
[0..999]/[0..999]
</sourcecode>
        </section>
        <section anchor="sec-7.2.12" numbered="true" toc="include" removeInRFC="false" pn="section-7.2.12">
          <name slugifiedName="name-max-content-length-attribut">"max-content-length" Attribute</name>
          <t pn="section-7.2.12-1">
   The adaptation of measurement traffic to approximate the actual
   data streams' characteristics is convenient to accurately estimate
   the expected QoS for applications. Particularly, packet size can
   have a remarkable effect on bandwidth estimations. Moreover, this
   can produce problems depending on the MTU of the end hosts and
   links along the path.</t>
          <t pn="section-7.2.12-2">
   Therefore, the maximum content length <bcp14>MAY</bcp14> be set in an attribute
   denoted as "max-content-length". Its value <bcp14>MUST</bcp14> be given in bytes
   and <bcp14>MUST NOT</bcp14> include application, transport, network, or link layer
   headers, i.e., size of the content length at the application
   layer. If not set, the value <bcp14>MUST</bcp14> be 1000 bytes.</t>
          <t pn="section-7.2.12-3">
   Furthermore, this attribute <bcp14>MAY</bcp14> be used to communicate MTU limits
   in endpoints, hence reducing possible bias as a result of
   network-layer fragmentation.</t>
          <t pn="section-7.2.12-4">
   For instance:</t>
          <t pn="section-7.2.12-5">
   a=max-content-length:1300</t>
        </section>
      </section>
      <section anchor="sec-7.3" numbered="true" toc="include" removeInRFC="false" pn="section-7.3">
        <name slugifiedName="name-measurements">Measurements</name>
        <t pn="section-7.3-1">
   This section describes the way quality parameters are measured as
   defined by the "default" procedure. Measurements <bcp14>MUST</bcp14> be taken for
   any quality parameter with constraints, that is, specified in the
   SDP attributes with non-zero values. For absent attributes,
   measurements <bcp14>MAY</bcp14> be omitted.</t>
        <section anchor="sec-7.3.1" numbered="true" toc="include" removeInRFC="false" pn="section-7.3.1">
          <name slugifiedName="name-latency">Latency</name>
          <t pn="section-7.3.1-1">
   Latency measurements will be performed if the "latency" attribute
   and/or the "a=measurement:latency" attribute are present and have non-zero values.</t>
          <t pn="section-7.3.1-2">
   Q4S defines a PING method in order to exchange packets between the
   client and the server. Based on this PING exchange, the client and
   the server are able to calculate the round-trip time (RTT). The
   RTT is the sum of downlink latency (normally named "reverse latency") and uplink latency (normally named "forward latency").</t>
          <t pn="section-7.3.1-3">
   At least 255 samples of RTT <bcp14>MUST</bcp14> be taken by the client and
   server. As the forward and reverse latencies are impossible to
   measure, the client and server will assume that both latencies are
   identical (symmetric network assumption). The latency will
   therefore be calculated as the statistical median value of all the
   RTT samples divided by 2.</t>
        </section>
        <section anchor="sec-7.3.2" numbered="true" toc="include" removeInRFC="false" pn="section-7.3.2">
          <name slugifiedName="name-jitter">Jitter</name>
          <t pn="section-7.3.2-1">
   Jitter measurements will be performed if the "jitter" attribute
   and/or the "a=measurement:jitter" attribute are present and have non-zero values.</t>
          <t pn="section-7.3.2-2">
   The jitter can be calculated independently by the client and by
   the server. The downlink jitter is calculated by the client taking
   into account the time interval between PING requests as defined by
   the "measurement:procedure" attribute in the first or second
   parameter depending on the Q4S protocol phase. The client and the
   server <bcp14>MUST</bcp14> send these PING requests at the specified intervals.
   The client measures the downlink jitter, whereas the server
   measures the uplink jitter. Note that PING responses are not taken
   into account when calculating jitter values.</t>
          <t pn="section-7.3.2-3">
   Every time a PING request is received by an endpoint 
   (either server or client), the corresponding jitter value is 
   updated with the statistical jitter value, which is 
   the arithmetic mean of the absolute values of elapsed times
   calculated on the first 255 packets received.
          </t>
          <t pn="section-7.3.2-4">
   Each endpoint sends a PING periodically with a fixed interval,
   and each value of "elapsed time" (ET) should be very close to this
   interval. If a PING message is lost, the ET value is
   doubled. Identifying lost PING messages, however, is not an issue
   because all PING messages are labeled with a Sequence-Number
   header field. Therefore, the receiver can discard this ET
   value.</t>
          <t pn="section-7.3.2-5">
   In order to have the first jitter sample, the receiver <bcp14>MUST</bcp14> wait
   until it receives 3 PING requests, because each ET is the time
   between two PINGs, and a jitter measurement needs at least two ET.</t>
          <t pn="section-7.3.2-6">
   The client measures the values of RTT and downlink jitter, and the
   server measures RTT and uplink jitter, but all measurements are
   shared with the counterpart by means of the Measurements header field of
   the PING message.</t>
        </section>
        <section anchor="sec-7.3.3" numbered="true" toc="include" removeInRFC="false" pn="section-7.3.3">
          <name slugifiedName="name-bandwidth">Bandwidth</name>
          <t pn="section-7.3.3-1">
   Bandwidth measurements will be performed if the "bandwidth"
   attribute and/or the "a=measurement:bandwidth" attribute is present
   and has non-zero values.</t>
          <t pn="section-7.3.3-2">
   In order to measure the available bandwidth, both the client and
   the server <bcp14>MUST</bcp14> start sending BWIDTH messages simultaneously using
   the UDP control ports exchanged during the Handshake phase in the
   SDP message at the needed rate to verify the availability of the
   bandwidth constraint in each direction. The messages are sent
   during the period of time defined in the third parameter of the
   SDP "measurement:procedure default" attribute in milliseconds.</t>
          <figure anchor="ref-bandwidth-and-packet-loss-measurements" align="left" suppress-title="false" pn="figure-6">
            <name slugifiedName="name-bandwidth-and-packet-loss-m">Bandwidth and Packet Loss Measurements</name>
            <artwork name="" type="" align="left" alt="" pn="section-7.3.3-3.1">
a=measurement:procedure default(50/50,75/75,5000,256/256,256/256)

        +------------------------------------------------+
        |             Rate                               |
        |              A                                 |
        |              |                                 |
        |downlink rate-|-------------------+ &lt;-- traffic |
        |              |                   |     sent by |
        |              |                   |     server  |
        |              |                   |             |
        |              |                   |             |
        |              |                   |             |
        |              |                   |             |
        |              |                   |             |
        |              |                   |             |
        |              |                   |             |
        |              |                   |             |
        |              |                   |             |
        |              |                   |             |
        |              |                   |             |
        |              |                   |             |
        |  uplink rate-|-------------------+ &lt;-- traffic |
        |              |                   |     sent by |
        |              |                   |     client  |
        |              |                   |             |
        |              |                   |             |
        |              |---|---|---|---|---|----&gt; time   |
        |              0   1   2   3   4   5     (sec.)  |
        |                                                |
        +------------------------------------------------+
</artwork>
          </figure>
          <t pn="section-7.3.3-4">
   The goal of these measurements is not to identify the available
   bandwidth of the communication path, but to determine if the
   required bandwidth is available, meeting the application's
   constraints. Therefore, the requested bandwidth <bcp14>MUST</bcp14> be measured
   sending only the highest bitrate required by the bandwidth
   attribute. This is illustrated in <xref target="ref-bandwidth-and-packet-loss-measurements" format="default" sectionFormat="of" derivedContent="Figure 6"/>.</t>
          <t pn="section-7.3.3-5">
   ALERTS are not expected during bandwidth measurement, but
   only at the end of the measurement time.</t>
          <t pn="section-7.3.3-6">
   When measuring bandwidth, all BWIDTH requests sent <bcp14>MUST</bcp14> be 1
   kilobyte in length (UDP payload length by default), they <bcp14>MUST</bcp14>
   include a Sequence-Number header field with a sequential number starting
   at 0, and their content <bcp14>MUST</bcp14> consist of randomly generated values
   to minimize the effect of compression elements along the path. The
   Sequence-Number <bcp14>MUST</bcp14> be incremented by 1 with each BWIDTH packet
   sent. If any measurement stage needs to be repeated, the sequence
   number <bcp14>MUST</bcp14> start at zero again. BWIDTH requests <bcp14>MUST NOT</bcp14> be
   answered. Examples:</t>
          <artwork name="" type="" align="left" alt="" pn="section-7.3.3-7">
Client message:
=========================
       BWIDTH q4s://www.example.com Q4S/1.0
       User-Agent: q4s-ua-experimental-1.0
       Session-Id: 53655765
       Sequence-Number: 0
       Content-Type: text
       Content-Length: XXXX
       Measurements: l=22, j=10, pl=0.00, bw=3000

       VkZaU1FrNVZNVlZSV0doT1ZrZ (to complete up to "max-content-
                                 length" bytes UDP payload length)
=========================
</artwork>
          <t pn="section-7.3.3-8">
   The client <bcp14>MUST</bcp14> send BWIDTH packets to the server to allow the
   server to measure the uplink bandwidth. The server <bcp14>MUST</bcp14> send
   BWIDTH packets to the client to allow the client to measure the
   downlink bandwidth.</t>
          <artwork name="" type="" align="left" alt="" pn="section-7.3.3-9">
Server message:
=========================
       BWIDTH q4s://www.example.com Q4S/1.0
       Session-Id: 53655765
       Sequence-Number: 0
       Content-Type: text
       Content-Length: XXXX
       Measurements: l=22, j=7, pl=0.00, bw=200

       ZY0VaT1ZURlZVVmhyUFE9PQ (to complete up to max-content-
                               length UDP payload length)
=========================
</artwork>
        </section>
        <section anchor="sec-7.3.4" numbered="true" toc="include" removeInRFC="false" pn="section-7.3.4">
          <name slugifiedName="name-packet-loss">Packet Loss</name>
          <t pn="section-7.3.4-1">
   Packet loss and bandwidth are measured simultaneously using the
   BWIDTH packets sent by both the client and the server. Because the
   BWIDTH packets contain a Sequence-Number header field incremented
   sequentially with each sent packet, lost packets can be easily
   identified. The lost packets <bcp14>MUST</bcp14> be counted during the
   measurement time.</t>
        </section>
      </section>
      <section anchor="sec-7.4" numbered="true" toc="include" removeInRFC="false" pn="section-7.4">
        <name slugifiedName="name-handshake-phase">Handshake Phase</name>
        <t pn="section-7.4-1">
   The first phase consists of a Q4S BEGIN method issued from the
   client to the server as shown in <xref target="ref-handshake-phase" format="default" sectionFormat="of" derivedContent="Figure 7"/>.</t>
        <t pn="section-7.4-2">
   The first Q4S message <bcp14>MUST</bcp14> have a special URI <xref target="RFC3986" format="default" sectionFormat="of" derivedContent="RFC3986"/>,
   which forces the use of the Q4S protocol if it is implemented in a
   standard web browser.</t>
        <t pn="section-7.4-3">
   This URI, named "Contact URI", is used to request the start of a
   session. Its scheme <bcp14>MUST</bcp14> be:</t>
        <sourcecode type="abnf" markers="false" pn="section-7.4-4">
      "q4s:" "//" host [":" port] [path["?" query]
</sourcecode>
        <t pn="section-7.4-5">
   Optionally, the client can send the desired quality parameters
   enclosed in the body of the message as an SDP document. The server
   <bcp14>MAY</bcp14> take them into account when building the answer message with
   the final values in the SDP body, following a request/response
   schema <xref target="RFC3264" format="default" sectionFormat="of" derivedContent="RFC3264"/>.</t>
        <t pn="section-7.4-6">
   If the request is accepted, the server <bcp14>MUST</bcp14> answer it with a Q4S
   200 OK message, which <bcp14>MUST</bcp14> contain an SDP body <xref target="RFC4566" format="default" sectionFormat="of" derivedContent="RFC4566"/>
   with the assigned sess-id (embedded in the SDP "o=" line),
   the IP addresses to be used, the flow ports to be used, the
   measurement procedure to be followed, and information about the
   required quality constraints. Additionally, the "alerting-mode" and
   "alert-pause" time attributes may be included. Q4S responses should
   use the protocol designator "Q4S/1.0".</t>
        <t pn="section-7.4-7">
   After these two messages are exchanged, the first phase is
   completed. The quality parameter thresholds have been sent to the
   client. The next step is to measure the actual quality of the
   communication path between the client and the server and alert if
   the Service Level Agreement (SLA) is being violated.</t>
        <figure anchor="ref-handshake-phase" align="left" suppress-title="false" pn="figure-7">
          <name slugifiedName="name-handshake-phase-2">Handshake Phase</name>
          <artwork name="" type="" align="left" alt="" pn="section-7.4-8.1">
        +------------------------------------------------+
        |                                                |
        | Client                            Server       |
        |                                                |
        |     ------- Q4S BEGIN ------------&gt;            |
        |                                                |
        |     &lt;------ Q4S 200 OK ------------            |
        |                                                |
        |                                                |
        +------------------------------------------------+
</artwork>
        </figure>
        <t pn="section-7.4-9">
   The following is an example of a client request and a server answer:</t>
        <artwork name="" type="" align="left" alt="" pn="section-7.4-10">
Client Request:
=========================
BEGIN q4s://www.example.com Q4S/1.0
Content-Type: application/sdp
User-Agent: q4s-ua-experimental-1.0
Content-Length: 142

(SDP not shown)
=========================

Server Answer:
=========================
Q4S/1.0 200 OK
Date: Mon, 10 Jun 2010 10:00:01 GMT
Content-Type: application/sdp
Expires: 3000
Signature: 6ec1ba40e2adf2d783de530ae254acd4f3477ac4
Content-Length: 131

(SDP not shown)
=========================
</artwork>
        <t pn="section-7.4-11">The header fields used are explained in <xref target="sec-4.3" format="default" sectionFormat="of" derivedContent="Section 4.3"/>.</t>
      </section>
      <section anchor="sec-7.5" numbered="true" toc="include" removeInRFC="false" pn="section-7.5">
        <name slugifiedName="name-negotiation-phase">Negotiation Phase</name>
        <t pn="section-7.5-1">
   The Negotiation phase is in charge of measuring the quality
   parameters and verifying that the communication paths meet the
   required quality constraints in both directions as specified in
   the SDP body.</t>
        <t pn="section-7.5-2">
   The measured parameters will be compared with the quality
   constraints specified in the SDP body. If the quality session is
   compliant with all the quality constraints, the application can
   start.</t>
        <t pn="section-7.5-3">If the quality constraints are not met, a higher quality
      service level will be demanded. Depending on the scenario,
      this quality upgrade will be managed as follows: </t>
        <dl newline="false" spacing="normal" pn="section-7.5-4">
          <dt pn="section-7.5-4.1">In the Q4S-aware-network scenario:</dt>
          <dd pn="section-7.5-4.2">a Q4S-ALERT method will be triggered
      by the server to the client, and the client will answer with
      the same Q4S-ALERT method. After receiving the same Q4S-ALERT
      from the counterpart, no other alerts will be triggered by
      the server during the "alert-pause" period of time in order
      to allow the network to react, but measurements will continue
      to be taken to achieve early detection of improved network
      quality conditions and a fast application start.</dd>
          <dt pn="section-7.5-4.3">In the Reactive scenario:</dt>
          <dd pn="section-7.5-4.4">an alert notification will be sent
      by the server stack to the Actuator, and the Actuator will
      answer with an alert acknowledgement. After receiving the
      alert acknowledgement from the Actuator, the server stack
      will not send other alert notifications during the "alert-pause" 
      period of time in order to allow the Actuator to
      react and trigger actions on the application or on the policy
      server, but measurements will continue to be taken to achieve
      early detection of improved network quality conditions and a
      fast application start.</dd>
        </dl>
        <t pn="section-7.5-5">
   In both scenarios stated above, if after several measurement
   cycles, the network constraints cannot be met, the quality session
   is terminated. Concretely when, under all possible actions taken by
   Actuator, the quality remains below requirements, the session must
   be terminated.</t>
        <t pn="section-7.5-6">
   The steps to be taken in this phase depend on the measurement
   procedure exchanged during the Handshake phase. This document only
   describes the "default" procedure, but others can be used, like
   RTP/RTCP <xref target="RFC3550" format="default" sectionFormat="of" derivedContent="RFC3550"/>.</t>
        <t pn="section-7.5-7">
   Measurements of latency and jitter are made by calculating the
   differences in the arrival times of packets and can be achieved with
   little bandwidth consumption. The bandwidth measurement, on the
   other hand, involves higher bandwidth consumption in both
   directions (uplink and downlink).</t>
        <t pn="section-7.5-8">
   To avoid wasting unnecessary network resources, these two types of
   measurements will be performed in two separate stages. If the
   required latencies and jitters cannot be reached, it makes no
   sense to waste network resources measuring bandwidth. In addition,
   if achieving the required latency and jitter thresholds implies
   upgrading the quality session level, the chance of obtaining
   compliant bandwidth measurements without retries is higher, saving
   network traffic again. Therefore, the "default" procedure
   determines that the measurements are taken in two stages:
        </t>
        <dl newline="false" spacing="normal" indent="6" pn="section-7.5-9">
          <dt pn="section-7.5-9.1">Stage 0:</dt>
          <dd pn="section-7.5-9.2"> Measurement of latencies, jitters, and packet loss</dd>
          <dt pn="section-7.5-9.3">Stage 1:</dt>
          <dd pn="section-7.5-9.4"> Measurement of bandwidths and packet loss</dd>
        </dl>
        <t pn="section-7.5-10">
   Notice that packet loss can be measured in both stages, as all
   messages exchanged include a Sequence-Number header field that allows
   for easy packet loss detection.</t>
        <t pn="section-7.5-11">
   The client starts the Negotiation phase by sending a READY request
   using the TCP Q4S ports defined in the SDP. This READY request
   includes a Stage header field that indicates the measurement stage.</t>
        <t pn="section-7.5-12">
   If either jitter, latency, or both are specified, the Negotiation
   phase begins with the measurement of latencies and jitters (stage
   0). If none of those attributes is specified, stage 0 is skipped.</t>
        <section anchor="sec-7.5.1" numbered="true" toc="include" removeInRFC="false" pn="section-7.5.1">
          <name slugifiedName="name-stage-0-measurement-of-late">Stage 0: Measurement of Latencies and Jitter</name>
          <t pn="section-7.5.1-1">
   The Stage 0 <bcp14>MUST</bcp14> start with a synchronization message exchange
   initiated with the client's READY message.</t>
          <artwork name="" type="" align="left" alt="" pn="section-7.5.1-2">
Client Request, READY message:
=========================
       READY q4s://www.example.com Q4S/1.0
       Stage: 0
       Session-Id: 53655765
       User-Agent: q4s-ua-experimental-1.0
       Content-Length: 0
=========================

Server Response:
=========================
  Q4S/1.0 200 OK
       Session-Id: 53655765
       Stage:0
       Content-Length: 0
=========================
</artwork>
          <t pn="section-7.5.1-3">
   This triggers the exchange of a sequence of PING requests and
   responses that will lead to the calculation of RTT (latency),
   jitter, and packet loss.</t>
          <t pn="section-7.5.1-4">
   After receiving a 200 OK, the client must send the first PING
   message, and the server will wait to send PINGs until the reception
   of this first client PING.</t>
          <t pn="section-7.5.1-5">
   The client and server <bcp14>MUST</bcp14> send PING requests to each other. The
   Sequence-Number header field of the first PING <bcp14>MUST</bcp14> be set to 0. The client
   and server will manage their own sequence numbers.</t>
          <figure anchor="ref-simultaneous-exchange-of-ping-request-and-responses" align="left" suppress-title="false" pn="figure-8">
            <name slugifiedName="name-simultaneous-exchange-of-pi">Simultaneous Exchange of PING Request and Responses</name>
            <artwork name="" type="" align="left" alt="" pn="section-7.5.1-6.1">
        +------------------------------------------------+
        |                                                |
        | Client                                Server   |
        |                                                |
        |      --------- Q4S READY 0 ---------&gt;          |
        |      &lt;-------- Q4S 200 OK -----------          |
        |                                                |
        |      --------- Q4S PING ------------&gt;          |
        |      &lt;-------- Q4S 200 OK -----------          |
        |      &lt;-------- Q4S PING -------------          |
        |       -------- Q4S 200 OK ----------&gt;          |
        |      --------- Q4S PING ------------&gt;          |
        |      &lt;-------- Q4S PING -------------          |
        |      --------- Q4S 200 OK ----------&gt;          |
        |      &lt;-------- Q4S 200 OK -----------          |
        |                     ...                        |
        |                                                |
        +------------------------------------------------+
</artwork>
          </figure>
          <t pn="section-7.5.1-7">
   The following is 
   an example of the PING request sent from the client
   and the server's response:</t>
          <artwork name="" type="" align="left" alt="" pn="section-7.5.1-8">
Client Request:
=========================
       PING q4s://www.example.com Q4S/1.0
       Session-Id: 53655765
       Sequence-Number: 0
       User-Agent: q4s-ua-experimental-1.0
       Measurements: l=22, j=12, pl=0.20, bw=
       Content-Length: 0
=========================

Server Response:
=========================
  Q4S/1.0 200 OK
       Session-Id: 53655765
       Sequence-Number: 0
       Content-Length: 0
=========================
</artwork>
          <t pn="section-7.5.1-9">
   The function of the PING method is similar to the ICMP echo
   request message <xref target="RFC0792" format="default" sectionFormat="of" derivedContent="RFC0792"/>. 
   The server <bcp14>MUST</bcp14> answer as soon as it receives the
   message.</t>
          <t pn="section-7.5.1-10">
   Both endpoints <bcp14>MUST</bcp14> send Q4S PING messages with the periodicity
   specified in the first parameter of SDP "measurement:procedure"
   attribute, always using the same UDP ports and incrementing the
   Sequence-Number with each message.</t>
          <t pn="section-7.5.1-11">
   In the following example, the value of the first parameter of the SDP "measurement:procedure" attribute
   is 50 milliseconds (from the client to the server) and
   60 ms (from the server to the client):</t>
          <sourcecode type="sdp" markers="false" pn="section-7.5.1-12">
a=measurement:procedure default(50/60,50/50,5000,256/256,256/256)
</sourcecode>
          <t pn="section-7.5.1-13">
   They <bcp14>MUST NOT</bcp14> wait for a response to send the next PING request.
   The Sequence-Number header field value is incremented sequentially and
   <bcp14>MUST</bcp14> start at zero. If this stage is repeated, the initial
   Sequence-Number <bcp14>MUST</bcp14> start at zero again.</t>
          <t pn="section-7.5.1-14">
   All PING requests <bcp14>MUST</bcp14> contain a Measurements header field with the
   values of the latency, jitter, and packet loss measured by each
   entity up to that moment. The client will send its measurements to
   the server, and the server will send its measurements to the client. Example:</t>
          <artwork name="" type="" align="left" alt="" pn="section-7.5.1-15">
      Measurements: l=22, j=13, pl=0.10, bw=
</artwork>
          <t pn="section-7.5.1-16">
   Where "l" stands for latency, "j" for jitter, "pl" for packet loss, and "bw"
   for bandwidth. The bandwidth value is omitted, as it is not
   measured at this stage.</t>
          <t pn="section-7.5.1-17">
   Optionally the PING request can include a Timestamp header field with
   the time in which the message has been sent. In the case that the header field is
   present, the server <bcp14>MUST</bcp14> include the header field in the response
   without changing the value.</t>
          <t pn="section-7.5.1-18">
   A minimum number of PING messages <bcp14>MUST</bcp14> be exchanged in order to be
   able to measure latency, jitter, and packet loss with certain
   accuracy (at least 256 samples are <bcp14>RECOMMENDED</bcp14> to get an accurate
   packet loss measurement). Both the client and the server calculate
   the respective measured parameter values. The mechanisms to
   calculate the different parameters are described in <xref target="sec-7.3" format="default" sectionFormat="of" derivedContent="Section 7.3"/>.</t>
          <t pn="section-7.5.1-19">
   At the end of this stage 0, there are three possibilities:</t>
          <ul spacing="normal" bare="false" empty="false" pn="section-7.5.1-20">
            <li pn="section-7.5.1-20.1">The latency, jitter, and packetloss constraints are reached
      in both directions</li>
            <li pn="section-7.5.1-20.2">The latency, jitter, and packetloss constraints are not
      reached in one or both directions</li>
          </ul>
          <t pn="section-7.5.1-21">
   In the first case, Stage 0 is finished. The client and server are
   ready for Stage 1: bandwidth and packet loss measurement. The
   client moves to stage 1 by sending a READY message that includes the
   header field, "Stage: 1".</t>
          <t pn="section-7.5.1-22">
   If the bandwidth constraints are either empty or have a value of zero, the
   Negotiation phase <bcp14>MUST</bcp14> terminate, and both client and server may
   initiate the Continuity phase. In this case, client moves to the 
   Continuity phase by sending a READY message that includes the header field,
   "Stage: 2".</t>
          <t pn="section-7.5.1-23">
   The second case, in which one or more quality constraints have not
   been met, is detailed in <xref target="sec-7.5.4" format="default" sectionFormat="of" derivedContent="Section 7.5.4"/>.</t>
        </section>
        <section anchor="sec-7.5.2" numbered="true" toc="include" removeInRFC="false" pn="section-7.5.2">
          <name slugifiedName="name-stage-1-measurement-of-band">Stage 1: Measurement of Bandwidth and Packet Loss</name>
          <t pn="section-7.5.2-1">
   This stage begins in a similar way to stage 0, sending a READY
   request over TCP. The value of the READY message's Stage header field is 1.
   The server answers with a Q4S 200 OK message to synchronize the
   initiation of the measurements as shown in 
   <xref target="ref-starting-bandwidth-and-packet-loss-measurement" format="default" sectionFormat="of" derivedContent="Figure 9"/>.</t>
          <figure anchor="ref-starting-bandwidth-and-packet-loss-measurement" align="left" suppress-title="false" pn="figure-9">
            <name slugifiedName="name-starting-bandwidth-and-pack">Starting Bandwidth and Packet Loss Measurement</name>
            <artwork name="" type="" align="left" alt="" pn="section-7.5.2-2.1">
        +------------------------------------------------+
        |                                                |
        | Client                                Server   |
        |                                                |
        |      --------- Q4S READY 1 -----------&gt;        |
        |      &lt;-------- Q4S 200 OK -------------        |
        |                                                |
        |      --------- Q4S BWIDTH  -----------&gt;        |
        |      &lt;-------- Q4S BWIDTH  ------------        |
        |      --------- Q4S BWIDTH  -----------&gt;        |
        |      &lt;-------- Q4S BWIDTH  ------------        |
        |                  ...                           |
        |                                                |
        +------------------------------------------------+
</artwork>
          </figure>
          <artwork name="" type="" align="left" alt="" pn="section-7.5.2-3">
Client Request:
=========================
       READY q4s://www.example.com Q4S/1.0
       User-Agent: q4s-ua-experimental-1.0
       Stage: 1
       Session-Id: 53655765
       Content-Length: 0

=========================

Server Response:
=========================
  Q4S/1.0 200 OK
       Session-Id: 53655765
       Stage: 1
       Content-Length: 0

=========================
</artwork>
          <t pn="section-7.5.2-4">
   Just after receiving the 200 OK, both the client and the server
   <bcp14>MUST</bcp14> start sending BWIDTH messages simultaneously using the UDP
   "q4s" ports. <xref target="sec-7.3.3" format="default" sectionFormat="of" derivedContent="Section 7.3.3"/> describes the bandwidth measurement in
   detail.</t>
          <t pn="section-7.5.2-5">
   At the end of this stage 1, there are three possibilities:</t>
          <ul spacing="normal" bare="false" empty="false" pn="section-7.5.2-6">
            <li pn="section-7.5.2-6.1">The bandwidth and packetloss constraints are reached in both
      directions.</li>
            <li pn="section-7.5.2-6.2">The bandwidth and packetloss constraints are not reached in
      one or both directions.</li>
          </ul>
          <t pn="section-7.5.2-7">
   In the first case, Stage 1 is finished. The client and server are
   ready for the Continuity phase. The client moves to this phase by
   sending a READY message that includes the header field, "Stage: 2". The
   server answer <bcp14>MUST</bcp14> be 200 OK as shown in 
   <xref target="ref-trigger-the-application-using-http-uri" format="default" sectionFormat="of" derivedContent="Figure 10"/>.</t>
          <figure anchor="ref-trigger-the-application-using-http-uri" align="left" suppress-title="false" pn="figure-10">
            <name slugifiedName="name-trigger-the-application-usi">Trigger the Application Using HTTP URI</name>
            <artwork name="" type="" align="left" alt="" pn="section-7.5.2-8.1">
        +------------------------------------------------+
        |                                                |
        | Client                                Server   |
        |                                                |
        |     ---------  Q4S READY 2 --------------&gt;     |
        |     &lt;---- Q4S 200 OK with trigger URI-----     |
        |                                                |
        |     ---------   HTTP GET ----------------&gt;     |
        |                                                |
        |            (Application starts)                |
        |                                                |
        +------------------------------------------------+
</artwork>
          </figure>
          <artwork name="" type="" align="left" alt="" pn="section-7.5.2-9">
Client Request:
=========================
READY q4s://www.example.com Q4S/1.0
User-Agent: q4s-ua-experimental-1.0
Stage: 2
Session-Id: 53655765
Content-Length: 0

=========================

Server Answer:
=========================
Q4S/1.0 200 OK
Date: Mon, 10 Jun 2010 10:00:01 GMT
Session-Id: 53655765
Trigger-URI: http://www.example.com/app_start
Expires: 3000
Content-Type: application/sdp
Signature: 6ec1ba40e2adf2d783de530ae254acd4f3477ac4
Content-Length: 131

(SDP not shown)
=========================
</artwork>
          <t pn="section-7.5.2-10">
   If the Trigger-URI header field is present, the client <bcp14>SHOULD</bcp14> send an
   HTTP request to this URI.</t>
          <t pn="section-7.5.2-11">
   The second case, with violated network constraints, is explained in
   <xref target="sec-7.5.4" format="default" sectionFormat="of" derivedContent="Section 7.5.4"/>.</t>
        </section>
        <section anchor="sec-7.5.3" numbered="true" toc="include" removeInRFC="false" pn="section-7.5.3">
          <name slugifiedName="name-quality-constraints-not-rea">Quality Constraints Not Reached</name>
          <t pn="section-7.5.3-1">
   After finishing Stage 1 of the Negotiation phase, the client and
   the server have each other's measured parameter values as these have
   been exchanged in the Measurements header fields of the PING and
   BWIDTH messages. If there is one or more parameters that do not
   comply with the uplink or downlink application constraints
   required, both the server and the client are aware of it.</t>
          <t pn="section-7.5.3-2">
   If there is any quality parameter that does not meet the uplink or
   downlink quality constraints specified in the SDP message, two
   scenarios are possible depending on the specified alerting mode
   (if not present, the default value is Reactive alerting mode):

          </t>
          <ol spacing="normal" type="(%c)" start="1" pn="section-7.5.3-3">
            <li pn="section-7.5.3-3.1" derivedCounter="(a)">
              <t pn="section-7.5.3-3.1.1"> Q4S-aware-network alerting mode: the server <bcp14>MUST</bcp14> send a 
      Q4S-ALERT message to the client including the digital Signature
      header field, and the client <bcp14>MUST</bcp14> answer with the same Q4S-ALERT
      message. The Signature header field contains the signed hash value of
      the SDP body in order to protect all the SDP data, and
      therefore it <bcp14>MUST</bcp14> contain the "measurement" parameters in the
      body.
              </t>
              <artwork name="" type="" align="left" alt="" pn="section-7.5.3-3.1.2">
Server request
=========================
Q4S-ALERT q4s://www.example.com Q4S/1.0
Host: www.example.com
User-Agent: q4s-ua-experimental-1.0
Session-Id: 53655765
Content-Type: application/sdp
Content-Length: 142

v=0
o=q4s-UA 53655765 2353687637 IN IP4 192.0.2.33
s=Q4S
i=Q4S parameters
t=0 0
a=qos-level:1/2
a=alerting-mode: Q4S-aware-network
a=alert-pause:5000
a=public-address:client IP4 198.51.100.51
a=public-address:server IP4 198.51.100.58
a=latency:40
a=jitter:10/10
a=bandwidth:20/6000
a=packetloss:0.50/0.50
a=flow:app downlink TCP/10000-20000
a=flow:app uplink TCP/56000
a=flow:q4s downlink UDP/55000
a=flow:q4s downlink TCP/55001
a=flow:q4s uplink UDP/56000
a=flow:q4s uplink TCP/56001
a=measurement:procedure default(50/50,50/50,5000,256/256,256/256)
a=measurement:latency 30
a=measurement:jitter 6/4
a=measurement:bandwidth 200/4000
a=measurement:packetloss 0.20/0.33
=========================
</artwork>
              <t pn="section-7.5.3-3.1.3">
   At this point, both the client and server keep on measuring but
   without sending new Q4S-ALERT messages during the "alert-pause"
   milliseconds. </t>
            </li>
            <li pn="section-7.5.3-3.2" derivedCounter="(b)">  Reactive alerting mode: the server stack <bcp14>MUST</bcp14> send an alert
      notification to the Actuator, and the Actuator <bcp14>MUST</bcp14> answer with
      an acknowledgement to the received alert notification. The
      alert notification sent to the Actuator by the server stack
      doesn't follow Q4S message style but should have all the
      information the Actuator will need for the actions to be taken,
      which will be implementation dependent.
	</li>
          </ol>
          <t pn="section-7.5.3-4">
   At this point during Negotiation phase, both the client and server
   keep on measuring without sending new alert notifications to the
   Actuator during the "alert-pause" milliseconds specified in the
   SDP. This way, both client and server will detect any improvement
   in network conditions as soon as the network reacts. The
   application can start as soon as the number of measurements
   indicated in the "measurement:procedure" attribute indicates that
   the quality parameters are met.</t>
          <t pn="section-7.5.3-5">
   The same applies to Continuity phase: the measurement dialog between
   client and server must not be interrupted by any possible ALERT
   message.</t>
          <section anchor="sec-7.5.3.1" numbered="true" toc="include" removeInRFC="false" pn="section-7.5.3.1">
            <name slugifiedName="name-actuator-role">Actuator Role</name>
            <t pn="section-7.5.3.1-1">
   The actuator receives notifications of unmet requirements from the Q4S
   server stack and acts upon the application or the network policy
   server, according to logic out of scope of this protocol.</t>
            <t pn="section-7.5.3.1-2">
   The Actuator logic activates mechanisms at the application level
   and/or the network level based on a quality level dictionary, in which
   the meaning of each level is implementation dependent, and each level
   involves different actions based on rules to keep a certain user
   experience quality.</t>
            <t pn="section-7.5.3.1-3">
   The type of actions that an Actuator can take at the application level
   are application dependent and <bcp14>MAY</bcp14> involve:</t>
            <ul spacing="normal" bare="false" empty="false" pn="section-7.5.3.1-4">
              <li pn="section-7.5.3.1-4.1">Reduction of application functionalities, such as limitation
      of application speed or application options.</li>
              <li pn="section-7.5.3.1-4.2">Reduction of application resources usage, such as reduction
      of frames per second in a video application or any other parameter
      modification in order to adapt to network conditions.</li>
            </ul>
            <t pn="section-7.5.3.1-5">
   Apart from actions at the application level, the Actuator <bcp14>MAY</bcp14> act at
   the network level if a network policy server is available.</t>
          </section>
          <section anchor="sec-7.5.3.2" numbered="true" toc="include" removeInRFC="false" pn="section-7.5.3.2">
            <name slugifiedName="name-policy-server-role">Policy Server Role</name>
            <t pn="section-7.5.3.2-1">
   A network policy server may be part of the Reactive scenario, and
   it is in charge of managing network quality provision. A network
   policy server may implement all or some of these features (but implementation is not
   exclusive to):</t>
            <ul spacing="normal" bare="false" empty="false" pn="section-7.5.3.2-2">
              <li pn="section-7.5.3.2-2.1">Server validation in terms of quality constraints</li>
              <li pn="section-7.5.3.2-2.2">Authentication (Signature validation) and security (blocking of 
      malicious clients)</li>
              <li pn="section-7.5.3.2-2.3">
                <t pn="section-7.5.3.2-2.3.1">Policy rules (the following rules are only examples):</t>
                <ul spacing="normal" bare="false" empty="false" pn="section-7.5.3.2-2.3.2">
                  <li pn="section-7.5.3.2-2.3.2.1">Maximum quality level allowed for the ACP</li>
                  <li pn="section-7.5.3.2-2.3.2.2">Time bands allowed for providing quality sessions</li>
                  <li pn="section-7.5.3.2-2.3.2.3">Number of simultaneous quality sessions allowed</li>
                  <li pn="section-7.5.3.2-2.3.2.4">Maximum time used by allowed quality sessions</li>
                  <li pn="section-7.5.3.2-2.3.2.5">Etc.</li>
                </ul>
              </li>
            </ul>
            <t pn="section-7.5.3.2-3">
   If any of the policy rules fail, a Q4S-ALERT message <bcp14>MUST</bcp14> be
   answered by a 6xx error indicating the cause.</t>
          </section>
        </section>
        <section anchor="sec-7.5.4" numbered="true" toc="include" removeInRFC="false" pn="section-7.5.4">
          <name slugifiedName="name-qos-level-changes">"qos-level" Changes</name>
          <t pn="section-7.5.4-1">
   If any constraint was violated, the server <bcp14>MAY</bcp14> trigger a Q4S-ALERT
   asking for a higher "qos-level" attribute. The maximum "qos-level"
   allowed is 9 for both uplink and downlink.</t>
          <t pn="section-7.5.4-2">
   If the "qos-level" has reached the maximum value for the downlink or
   uplink without matching the constraints, then a CANCEL request
   <bcp14>MUST</bcp14> be sent by the client using the TCP port determined in the
   Handshake phase in order to release the session. In reaction to
   the reception of the CANCEL request, the server <bcp14>MUST</bcp14> send a CANCEL
   request, too. If no CANCEL request is received, the expiration time
   cancels the session on the server side.</t>
          <artwork name="" type="" align="left" alt="" pn="section-7.5.4-3">
Client Request:
=========================
CANCEL q4s://www.example.com Q4S/1.0
User-Agent: q4s-ua-experimental-1.0
Session-Id: 53655765
Content-Type: application/sdp
Content-Length: 142

(SDP not shown)
=========================

Server Request in reaction to Client Request:
=========================
CANCEL q4s://www.example.com Q4S/1.0
Session-Id: 53655765
Expires: 0
Content-Type: application/sdp
Signature: 6ec1ba40e2adf2d783de530ae254acd4f3477ac4
Content-Length: 131

(SDP not shown)
=========================
</artwork>
        </section>
      </section>
      <section anchor="sec-7.6" numbered="true" toc="include" removeInRFC="false" pn="section-7.6">
        <name slugifiedName="name-continuity-phase">Continuity Phase</name>
        <t pn="section-7.6-1">
   During the Negotiation phase, latency, jitter, bandwidth, and
   packet loss have been measured. During the Continuity phase,
   bandwidth will not be measured again because bandwidth
   measurements may disturb application performance.</t>
        <t pn="section-7.6-2">
   This phase is supposed to be executed at the same time as the
   real-time application is being used.</t>
        <t pn="section-7.6-3">
   This document only covers the "default" procedure. The continuity
   operation with the "default" procedure is based on a sliding window of
   samples. The number of samples involved in the sliding window may
   be different for jitter and latency than for packet loss
   calculations according to the fifth and sixth parameters of the
   "measurement:procedure" attribute. In the example, shown in 
   <xref target="ref-sliding-samples-window" format="default" sectionFormat="of" derivedContent="Figure 11"/>, 
   the jitter and latency sliding window comprises 40 samples,
   whereas the size of the packet loss sliding window is 100 samples:</t>
        <sourcecode type="sdp" markers="false" pn="section-7.6-4">
a=measurement:procedure default(50/50,75/75,5000,40/40,100/100)
</sourcecode>
        <t pn="section-7.6-5">
   In addition, the sizes of these windows are configurable per
   direction: uplink and downlink values may differ.</t>
        <t pn="section-7.6-6">
   PING requests are sent continuously (in both directions), and when
   the Sequence-Number header field reaches the maximum value, the client
   continues sending PING messages with the Sequence-Number header field
   starting again at zero. When the server PING Sequence-Number
   header field reaches the maximum value, it does the same, starting again
   from zero.</t>
        <t pn="section-7.6-7">
   On the client side, the measured values of downlink jitter,
   downlink packet loss, and latency are calculated using the last
   samples, discarding older ones, in a sliding window schema.</t>
        <figure anchor="ref-sliding-samples-window" align="left" suppress-title="false" pn="figure-11">
          <name slugifiedName="name-sliding-samples-window">Sliding Samples Window</name>
          <artwork name="" type="" align="left" alt="" pn="section-7.6-8.1">
       +--------------------------------------------------+
       |                                                  |
       | 55 56 57 . . . 253 254 255 0 1 2 . . . 55 56     |
       |        A                                   A     |
       |        |                                   |     |
       |        +-----------------------------------+     |
       |                                                  |
       +--------------------------------------------------+
</artwork>
        </figure>
        <t pn="section-7.6-9">
   Only if the server detects that the measured values (downlink or
   uplink jitter, packet loss, or latency) are not reaching the
   quality constraints, a Q4S-ALERT is triggered and sent either to
   the client or to the Actuator, depending on the alerting mode, and
   the "alert-pause" timer is started.</t>
        <t pn="section-7.6-10">
   In the Q4S-aware-network alerting mode shown in 
   <xref target="ref-continuity-in-q4s-aware-network-alerting-mode" format="default" sectionFormat="of" derivedContent="Figure 12"/>, 
   if the
   client receives a Q4S-ALERT message, it <bcp14>MUST</bcp14> answer by sending the
   Q4S-ALERT request message including the SDP
   (with its corresponding digital signature) back to the server.</t>
        <t pn="section-7.6-11">
    Both client and server will keep performing measurements, 
    but Q4S-ALERT messages <bcp14>MUST NOT</bcp14> be sent during 
    "alert-pause" milliseconds. 
   The operations needed to act on the network and the
   agents in charge of them are out of scope of this document.</t>
        <figure anchor="ref-continuity-in-q4s-aware-network-alerting-mode" align="left" suppress-title="false" pn="figure-12">
          <name slugifiedName="name-continuity-in-q4s-aware-net">Continuity in Q4S-Aware-Network Alerting Mode</name>
          <artwork name="" type="" align="left" alt="" pn="section-7.6-12.1">
        +------------------------------------------------+
        |                                                |
        | Client                      Server             |
        |                                                |
        |               ...                              |
        |   ----------- PING ----------&gt;                 |
        |   &lt;--------- 200 OK ----------                 |
        |   &lt;------- Q4S-ALERT ---------                 |
        |   -------- Q4S-ALERT --------&gt;                 |
        |   &lt;---------- PING -----------                 |
        |   ---------- 200 OK ---------&gt;                 |
        |   ----------- PING ----------&gt;                 |
        |   &lt;--------- 200 OK ----------                 |
        |   &lt;---------- PING -----------                 |
        |   ---------- 200 OK ---------&gt;                 |
        |        ...                                     |
        |                                                |
        +------------------------------------------------+
</artwork>
        </figure>
        <t pn="section-7.6-13">
   In the Reactive scenario shown in <xref target="ref-continuity-in-reactive-alerting-mode" format="default" sectionFormat="of" derivedContent="Figure 13"/>, 
   if the server detects
   that the measured values (downlink or uplink jitter, packet loss,
   or latency) are not reaching the quality constraints, an alert
   notification is triggered and sent to the Actuator. The Actuator
   <bcp14>MUST</bcp14> then answer to the server stack with an alert acknowledgement.</t>
        <t pn="section-7.6-14">
   The measurement dialog between the client and the server <bcp14>MUST NOT</bcp14>
   be interrupted by any possible ALERT message.</t>
        <figure anchor="ref-continuity-in-reactive-alerting-mode" align="left" suppress-title="false" pn="figure-13">
          <name slugifiedName="name-continuity-in-reactive-aler">Continuity in Reactive Alerting Mode</name>
          <artwork name="" type="" align="left" alt="" pn="section-7.6-15.1">
        +------------------------------------------------+
        |                                                |
        | Client             Server             Actuator |
        |        ...                                     |
        |   --- PING ----------&gt;                         |
        |   &lt;-- 200 OK----------                         |
        |   &lt;----- PING --------                         |
        |   &lt;--- 200 OK -------- ---- alert              |
        |                            notification --&gt;    |
        |                                                |
        |   --- PING ----------&gt; &lt;--- alert              |
        |                             acknowledge ---    |
        |   &lt;-- 200 OK----------                         |
        |   &lt;----- PING --------                         |
        |   --- 200 OK --------&gt;                         |
        |        ...                                     |
        |                                                |
        +------------------------------------------------+
</artwork>
        </figure>
      </section>
      <section anchor="sec-7.7" numbered="true" toc="include" removeInRFC="false" pn="section-7.7">
        <name slugifiedName="name-termination-phase">Termination Phase</name>
        <t pn="section-7.7-1">
   The Termination phase is the endpoint for the established Q4S
   session that is reached in the following cases:</t>
        <ul spacing="normal" bare="false" empty="false" pn="section-7.7-2">
          <li pn="section-7.7-2.1">A CANCEL message has been received. The client sends a
      CANCEL message due to the network's inability to
      meet the required quality constraints. The client and server
      application will be notified by their respective Q4S stacks.</li>
          <li pn="section-7.7-2.2">Session expires: if after the Expires time, no client or
      server activity is detected, that end cancels the session.</li>
          <li pn="section-7.7-2.3">A BEGIN message has been received by the server. 
     The pre-existing Q4S quality session is canceled, and a new session
      will be initiated.</li>
        </ul>
        <t pn="section-7.7-3">
   The meaning of the Termination phase in terms of the release of resources
   or accounting is application dependent and out of scope of the Q4S
   protocol.</t>
        <t pn="section-7.7-4">
   In the Reactive alerting mode, Q4S CANCEL messages received by the Q4S
   server must cause the server stack to send cancel notifications 
   to the Actuator in order to release possible
   assigned resources for the session.</t>
        <section anchor="sec-7.7.1" numbered="true" toc="include" removeInRFC="false" pn="section-7.7.1">
          <name slugifiedName="name-sanity-check-of-quality-ses">Sanity Check of Quality Sessions</name>
          <t pn="section-7.7.1-1">
   A session may finish due to several reasons (client shutdown,
   client CANCEL request, constraints not reached, etc.), and any
   session finished <bcp14>MUST</bcp14> release the assigned resources.</t>
          <t pn="section-7.7.1-2">
   In order to release the assigned server resources for the session,
   the Expires header field indicates the maximum interval of time
   without exchanging any Q4S message.</t>
        </section>
      </section>
      <section anchor="sec-7.8" numbered="true" toc="include" removeInRFC="false" pn="section-7.8">
        <name slugifiedName="name-dynamic-constraints-and-flo">Dynamic Constraints and Flows</name>
        <t pn="section-7.8-1">
   Depending on the nature of the application, the quality
   constraints to be reached may evolve, changing some or all quality
   constraint values in any direction.</t>
        <t pn="section-7.8-2">
   The client <bcp14>MUST</bcp14> be able to deal with this possibility. When the
   server sends an SDP document attached to a response (200 OK or
   Q4S-ALERT, etc.), the client <bcp14>MUST</bcp14> take all the new received values,
   overriding any previous value in use.</t>
        <t pn="section-7.8-3">
   The dynamic changes on the quality constraints can be a result
   of two possibilities:</t>
        <ul spacing="normal" bare="false" empty="false" pn="section-7.8-4">
          <li pn="section-7.8-4.1">The application communicates to the Q4S server a change in
      the constraints. In this case, the application requirements
      can evolve, and the Q4S server will be aware of them.</li>
          <li pn="section-7.8-4.2">The application uses TCP flows. In that case, in order to
      guarantee a constant throughput, the nature of TCP behavior
      forces the use of a composite constraint function, which
      depends on RTT, packet loss, and a window control mechanism
      implemented in each TCP stack.</li>
        </ul>
        <t pn="section-7.8-5">
   TCP throughput can be less than actual bandwidth if the
   Bandwidth-Delay Product (BDP) is large, or if the network suffers
   from a high packet loss rate. In both cases, TCP congestion
   control algorithms may result in a suboptimal performance.</t>
        <t pn="section-7.8-6">
   Different TCP congestion control implementations like Reno <xref target="RENO" format="default" sectionFormat="of" derivedContent="RENO"/>,
   High Speed TCP <xref target="RFC3649" format="default" sectionFormat="of" derivedContent="RFC3649"/>, 
   CUBIC <xref target="I-D.rhee-tcpm-cubic" format="default" sectionFormat="of" derivedContent="CUBIC"/>, 
   Compound TCP (CTCP) <xref target="I-D.sridharan-tcpm-ctcp" format="default" sectionFormat="of" derivedContent="CTCP"/>, 
   etc., reach different throughputs under the same network
   conditions of RTT and packet loss. In all cases, depending on the
   RTT-measured value, the Q4S server could dynamically change the
   packetloss constraints (defined in the SDP) in order to make it possible
   to reach a required throughput or vice versa (using "measurement:packetloss"
   to change dynamically the latency constraints).</t>
        <t pn="section-7.8-7">
   A general guideline for calculating the packet loss constraint and the RTT
   constraint consists of approximating the throughput by using a
   simplified formula, which should take into account the TCP stack
   implementation of the receiver, in addition to the RTT and packet
   loss:</t>
        <sourcecode type="pseudocode" markers="false" pn="section-7.8-8">
          Th= Function( RTT, packet loss, ...)
</sourcecode>
        <t pn="section-7.8-9">
   Then, depending on RTT-measured values, set dynamically the
   packet loss constraint.</t>
        <t pn="section-7.8-10">
   It is possible to easily calculate a worst-case boundary for the
   Reno algorithm, which should ensure for all algorithms that the
   target throughput is actually achieved, except that high-speed
   algorithms will then have even larger throughput if more
   bandwidth is available.</t>
        <t pn="section-7.8-11">
   For the Reno algorithm, the Mathis formula may be used <xref target="RENO" format="default" sectionFormat="of" derivedContent="RENO"/> for
   the upper bound on the throughput:</t>
        <sourcecode type="pseudocode" markers="false" pn="section-7.8-12">
          Th &lt;= (MSS/RTT)*(1 / sqrt{p})
</sourcecode>
        <t pn="section-7.8-13">
   In the absence of packet loss, a practical limit for the TCP
   throughput is the receiver_window_size divided by the RTT.
   However, if the TCP implementation uses a window scale
   option, this limit can reach the available bandwidth value.</t>
      </section>
      <section anchor="sec-7.9" numbered="true" toc="include" removeInRFC="false" pn="section-7.9">
        <name slugifiedName="name-qos-level-upgrade-and-downg">"qos-level" Upgrade and Downgrade Operation</name>
        <t pn="section-7.9-1">
   Each time the server detects a violation of constraints, the alert
   mechanism is triggered, the "alert-pause" timer is started, and the
   "qos-level" is increased. When this happens repeatedly, and the 
   "qos-level" reaches its maximum value (value 9), the session is
   canceled. But when the violation of constraints stops before
   reaching "qos-level" maximum value, the recovery mechanism allows
   for the "qos-level" upgrade gradually.</t>
        <t pn="section-7.9-2">
   This downgrade and upgrade of "qos-level" is explained
   with the following example:</t>
        <ol spacing="normal" type="1" start="1" pn="section-7.9-3">
          <li pn="section-7.9-3.1" derivedCounter="1.">A Q4S session is initiated successfully with "qos-level=0".</li>
          <li pn="section-7.9-3.2" derivedCounter="2.">During the Continuity phase, violation of constraints is
      detected; the "qos-level" is increased to 1, a Q4S-ALERT is sent by
      the server to the client, and an "alert-pause" timer is started.</li>
          <li pn="section-7.9-3.3" derivedCounter="3.">The "alert-pause" timer expires, and still a violation of constraints
      is detected; the "qos-level" is increased to 2, a Q4S-ALERT is sent
      by the server to the client, and an "alert-pause" timer is started.</li>
          <li pn="section-7.9-3.4" derivedCounter="4.">The "alert-pause" timer expires, but the violation of constraints has
      stopped; the "recovery-pause" timer is started.</li>
          <li pn="section-7.9-3.5" derivedCounter="5.">The "recovery-pause" timer expires, and no violation of
      constraints has been detected. Meanwhile, the "qos-level" is
      decreased to 1, a Q4S-RECOVERY is sent by the server to the
      client, and the "recovery-pause" timer is started again.</li>
          <li pn="section-7.9-3.6" derivedCounter="6.">The "recovery-pause" timer expires again, and no violation of
      constraints has been detected. Meanwhile, the "qos-level" is
      decreased to 0, and a Q4S-RECOVERY is sent by the server to
      the client. The "recovery-pause" timer is not started this time as
      the "qos-level" has reached its initial value.</li>
        </ol>
        <t pn="section-7.9-4">
   When the network configuration allows for the possibility of
   managing Q4S flows and application flows independently (either is
   a network-based QoS or a Q4S-aware network), the "qos-level"
   downgrade process could be managed more efficiently using a
   strategy that allows for carrying out "qos-level" downgrades
   excluding application flows from SDP dynamically. The Q4S flows would be
   downgraded to allow for measurements on a lower quality level
   without interference of the application flows. A Q4S client <bcp14>MUST</bcp14>
   allow this kind of SDP modification by the server.</t>
        <t pn="section-7.9-5">
   Periodically (every several minutes, depending on the
   implementation) a Q4S-ALERT could be triggered, in which the level
   is downgraded for Q4S flows, excluding application flows from the
   embedded SDP of that request.</t>
        <t pn="section-7.9-6">
   This mechanism allows the measurement at lower levels of quality while
   application flows continue using a higher "qos-level" value.</t>
        <ul spacing="normal" bare="false" empty="false" pn="section-7.9-7">
          <li pn="section-7.9-7.1">If the measurements in the lower level meet the quality
      constraints, then a Q4S-RECOVERY message to this lower "qos-level" may be triggered, in which the SDP includes the
      application flows in addition to the Q4S flows.</li>
          <li pn="section-7.9-7.2">If the measurements in the lower level do not meet the
      constraints, then a new Q4S-ALERT to the previous "qos-level"
      <bcp14>MUST</bcp14> be triggered, in which the SDP includes only the Q4S
      flows.</li>
        </ul>
        <figure anchor="ref-possible-evolution-of-qos-level" align="left" suppress-title="false" pn="figure-14">
          <name slugifiedName="name-possible-evolution-of-qos-l">Possible Evolution of "qos-level"</name>
          <artwork name="" type="" align="left" alt="" pn="section-7.9-8.1">
        +------------------------------------------------+
        |                                                |
        | qos-level                                      |
        |   A                                            |
        |   |                                            |
        |  4|                                            |
        |   |                                            |
        |  3|             +------+                       |
        |   |             |      |                       |
        |  2|        +----+      +----+     +---         |
        |   |        |                |     |            |
        |  1|   +----+                +-----+            |
        |   |   |                                        |
        |  0+---+---------------------------------&gt; time |
        |                                                |
        +------------------------------------------------+
</artwork>
        </figure>
        <t pn="section-7.9-9">
   This mechanism, illustrated in <xref target="ref-possible-evolution-of-qos-level" format="default" sectionFormat="of" derivedContent="Figure 14"/>, avoids the risk of
   disturbing the application while the measurements are being run
   in lower levels. However, this optional optimization of resources
   <bcp14>MUST</bcp14> be used carefully.</t>
        <t pn="section-7.9-10">
   The chosen period to measure a lower "qos-level" is implementation
   dependent. Therefore, it is not included as a "measurement:procedure" parameter. 
   It is <bcp14>RECOMMENDED</bcp14> to use a large value, such
   as 20 minutes.</t>
      </section>
    </section>
    <section anchor="sec-8" numbered="true" toc="include" removeInRFC="false" pn="section-8">
      <name slugifiedName="name-general-user-agent-behavior">General User Agent Behavior</name>
      <section anchor="sec-8.1" numbered="true" toc="include" removeInRFC="false" pn="section-8.1">
        <name slugifiedName="name-roles-in-peer-to-peer-scena">Roles in Peer-to-Peer Scenarios</name>
        <t pn="section-8.1-1">
   In order to allow peer-to-peer applications, a Q4S User Agent (UA)
   <bcp14>MUST</bcp14> be able to assume both the client and server role. The role
   assumed depends on who sends the first message.</t>
        <t pn="section-8.1-2">
   In a communication between two UAs, the UA that first sends the Q4S
   BEGIN request to start the Handshake phase shall assume the client role.</t>
        <t pn="section-8.1-3">
   If both UAs send the BEGIN request at the same time, they will
   wait for a random time to restart again as shown in <xref target="ref-p2p-roles" format="default" sectionFormat="of" derivedContent="Figure 15"/>.</t>
        <t pn="section-8.1-4">
   Otherwise, an UA may be configured to act only as server (e.g.,
   content provider's side).</t>
        <figure anchor="ref-p2p-roles" align="left" suppress-title="false" pn="figure-15">
          <name slugifiedName="name-p2p-roles">P2P Roles</name>
          <artwork name="" type="" align="left" alt="" pn="section-8.1-5.1">
        +-----------------------------------------------+
        |                                               |
        | UA(Client)                         UA(Server) |
        |                                               |
        |     -------- Q4S BEGIN -------------&gt;         |
        |     &lt;------- Q4S BEGIN --------------         |
        |                                               |
        |     ------- Q4S BEGIN --------------&gt;         |
        |     &lt;------ Q4S 200 OK --------------         |
        |                                               |
        |                                               |
        +-----------------------------------------------+
</artwork>
        </figure>
      </section>
      <section anchor="sec-8.2" numbered="true" toc="include" removeInRFC="false" pn="section-8.2">
        <name slugifiedName="name-multiple-quality-sessions-i">Multiple Quality Sessions in Parallel</name>
        <t pn="section-8.2-1">
   A Q4S session is intended to be used for an application. This means
   that for using the application, the client <bcp14>MUST</bcp14> establish only one
   Q4S session against the server. Indeed, the relation between
   the Session-Id and the application is 1 to 1.</t>
        <t pn="section-8.2-2">
   If a user wants to participate in several independent Q4S sessions
   simultaneously against different servers (or against the same
   server), it can execute different Q4S clients to establish
   separately different Q4S sessions, but it is <bcp14>NOT RECOMMENDED</bcp14>
   because:</t>
        <ul spacing="normal" bare="false" empty="false" pn="section-8.2-3">
          <li pn="section-8.2-3.1">The establishment of a new Q4S session may affect other
      running applications over other Q4S sessions during bandwidth
      measurement.</li>
          <li pn="section-8.2-3.2">If the Negotiation phase is executed separately before
      running any application, the summation of bandwidth
      requirements could not be met when the applications are
      running in parallel.</li>
        </ul>
      </section>
      <section anchor="sec-8.3" numbered="true" toc="include" removeInRFC="false" pn="section-8.3">
        <name slugifiedName="name-general-client-behavior">General Client Behavior</name>
        <t pn="section-8.3-1">
   A Q4S client has different behaviors. We will use letters X, Y, and Z to
   designate each different behavior (follow the letters in
   <xref target="ref-phases-client-behaviors" format="default" sectionFormat="of" derivedContent="Figure 16"/> and their descriptions below).</t>
        <dl newline="false" spacing="normal" indent="4" pn="section-8.3-2">
          <dt pn="section-8.3-2.1">X)</dt>
          <dd pn="section-8.3-2.2">When it sends messages over TCP (methods BEGIN, READY, 
      Q4S-ALERT, Q4S-RECOVERY, and CANCEL), it behaves strictly like a state
      machine that sends requests and waits for responses. Depending
      on the response type, it enters into a new state.</dd>
        </dl>
        <t pn="section-8.3-3">
   When it sends UDP messages (methods PING and BWIDTH), a Q4S client
   is not strictly a state machine that sends messages and waits for
   responses because of the following:</t>
        <dl newline="false" spacing="normal" indent="4" pn="section-8.3-4">
          <dt pn="section-8.3-4.1">Y)</dt>
          <dd pn="section-8.3-4.2">During the measurement of latency, jitter, and packet loss, the PING
      requests are sent periodically, not just after receiving the response
      to the previous request. In addition, the client <bcp14>MUST</bcp14> answer the
      PING requests coming from the server, therefore the client
      assumes temporarily the role of a server.</dd>
        </dl>
        <dl newline="false" spacing="normal" indent="4" pn="section-8.3-5">
          <dt pn="section-8.3-5.1">Z)</dt>
          <dd pn="section-8.3-5.2">During the bandwidth and packet loss measurement stage, the client
      does not expect to receive responses when sending BWIDTH
      requests to the server. In addition, it <bcp14>MUST</bcp14> receive and process
      all server messages in order to achieve the downlink
      measurement.</dd>
        </dl>
        <t pn="section-8.3-6">
   The Q4S-ALERT and CANCEL may have a conventional answer if an
   error is produced, otherwise the corresponding answer is formatted
   as a request message.</t>
        <figure anchor="ref-phases-client-behaviors" align="left" suppress-title="false" pn="figure-16">
          <name slugifiedName="name-phases-and-client-behaviors">Phases and Client Behaviors</name>
          <artwork name="" type="" align="left" alt="" pn="section-8.3-7.1">
  +-----------+------------------------+-----------+-----------+
  | Handshake |    Negotiation         |Continuity |Termination|
  |   Phase   |      Phase             |   Phase   |  Phase    |
  |           |                        |           |           |
  | X ---------&gt; Y --&gt; X --&gt; Z --&gt; X ---&gt; Y --&gt; X ---&gt; X       |
  |           |  A     |     A     |   |  A     |  |           |
  |           |  |     |     |     |   |  |     |  |           |
  |           |  +-----+     +-----+   |  +-----+  |           |
  |           |                        |           |           |
  +------------------------------------------------+-----------+
</artwork>
        </figure>
        <section anchor="sec-8.3.1" numbered="true" toc="include" removeInRFC="false" pn="section-8.3.1">
          <name slugifiedName="name-generating-requests">Generating Requests</name>
          <t pn="section-8.3.1-1">
   A valid Q4S request formulated by a client <bcp14>MUST</bcp14>, at a minimum,
   contain the following header fields:</t>
          <dl newline="false" spacing="normal" pn="section-8.3.1-2">
            <dt pn="section-8.3.1-2.1">If no SDP is included:</dt>
            <dd pn="section-8.3.1-2.2">the header fields Session-Id and Sequence-Number are mandatory.</dd>
            <dt pn="section-8.3.1-2.3">If SDP is included:</dt>
            <dd pn="section-8.3.1-2.4">the Session-Id is embedded into the SDP,
      therefore the inclusion of the Session-Id header field is optional, but
      if present, must have the same value. Measurements are
      embedded into the SDP only for Q4S-ALERT messages in order to
      be signed.</dd>
          </dl>
          <t pn="section-8.3.1-3">
   At any time, if the server sends new SDP with updated values,
   the client <bcp14>MUST</bcp14> take it into account.</t>
        </section>
      </section>
      <section anchor="sec-8.4" numbered="true" toc="include" removeInRFC="false" pn="section-8.4">
        <name slugifiedName="name-general-server-behavior">General Server Behavior</name>
        <t pn="section-8.4-1">
   If a server does not understand a header field in a request (that
   is, the header field is not defined in this specification or in
   any supported extension), the server <bcp14>MUST</bcp14> ignore that header field
   and continue processing the message.</t>
        <t pn="section-8.4-2">
   The role of the server is changed at Negotiation and Continuity
   phases, in which the server <bcp14>MUST</bcp14> send packets to measure jitter,
   latency, and bandwidth. Therefore, the different behaviors of
   the server are (follow the letters in <xref target="ref-phases-server-behaviours" format="default" sectionFormat="of" derivedContent="Figure 17"/> 
and their descriptions below):</t>
        <dl newline="false" spacing="normal" indent="4" pn="section-8.4-3">
          <dt pn="section-8.4-3.1">R)</dt>
          <dd pn="section-8.4-3.2">
       When the client sends messages over TCP (methods BEGIN,
      READY Q4S-ALERT, Q4S-RECOVERY, and CANCEL), it behaves strictly
      like a state machine that receives messages and sends
      responses.</dd>
        </dl>
        <t pn="section-8.4-4">
   When the client begins to send UDP messages (methods PING and
   BWIDTH), a Q4S server is not strictly a state machine that
   receives messages and sends responses because of the following:</t>
        <dl newline="false" spacing="normal" indent="4" pn="section-8.4-5">
          <dt pn="section-8.4-5.1">S)</dt>
          <dd pn="section-8.4-5.2">
      During the measurement of latency, jitter, and packet loss, the PING
      requests are sent periodically by the client and also by the
      server. In this case, the server behaves as a server answering
      client requests but also behaves temporarily as a client,
      sending PING requests toward the client and receiving
      responses.</dd>
        </dl>
        <dl newline="false" spacing="normal" indent="4" pn="section-8.4-6">
          <dt pn="section-8.4-6.1">T)</dt>
          <dd pn="section-8.4-6.2">
      During bandwidth and packet loss measurement, the server sends
      BWIDTH requests to the client. In addition, it <bcp14>MUST</bcp14> receive and
      process client messages in order to achieve the uplink
      measurement.</dd>
        </dl>
        <t pn="section-8.4-7">
   The Q4S-ALERT and CANCEL may have a conventional answer if an
   error is produced, otherwise the corresponding answer is formatted
   as a request message.</t>
        <figure anchor="ref-phases-server-behaviours" align="left" suppress-title="false" pn="figure-17">
          <name slugifiedName="name-phases-and-server-behaviors">Phases and Server Behaviors</name>
          <artwork name="" type="" align="left" alt="" pn="section-8.4-8.1">
  +-----------+------------------------+-----------+-----------+
  | Handshake |    Negotiation         |Continuity |Termination|
  |   Phase   |      Phase             |   Phase   |  Phase    |
  |           |                        |           |           |
  | R ---------&gt; S --&gt; R --&gt; T --&gt; R ---&gt; S --&gt; R ---&gt; R       |
  |           |  A     |     A     |   |  A     |  |           |
  |           |  |     |     |     |   |  |     |  |           |
  |           |  +-----+     +-----+   |  +-----+  |           |
  |           |                        |           |           |
  +------------------------------------------------+-----------+
</artwork>
        </figure>
      </section>
    </section>
    <section anchor="sec-9" numbered="true" toc="include" removeInRFC="false" pn="section-9">
      <name slugifiedName="name-implementation-recommendati">Implementation Recommendations</name>
      <section anchor="sec-9.1" numbered="true" toc="include" removeInRFC="false" pn="section-9.1">
        <name slugifiedName="name-default-client-constraints">Default Client Constraints</name>
        <t pn="section-9.1-1">
   To provide a default configuration, it would be good if the
   client had a configurable set of quality headers in the
   implementation settings menu. Otherwise, these quality headers will
   not be present in the first message.</t>
        <t pn="section-9.1-2">
   Different business models (out of scope of this proposal) may be
   achieved: depending on who pays for the quality session, the
   server can accept certain client parameters sent in the first
   message, or force billing parameters on the server side.</t>
      </section>
      <section anchor="sec-9.2" numbered="true" toc="include" removeInRFC="false" pn="section-9.2">
        <name slugifiedName="name-latency-and-jitter-measurem">Latency and Jitter Measurements</name>
        <t pn="section-9.2-1">
   Different client and server implementations may send a different
   number of PING messages for measuring, although at least 255
   messages should be considered to perform the latency measurement.
   The Stage 0 measurements may be considered ended only when neither
   the client nor server receive new PING messages after an
   implementation-dependent guard time. Only after, the client can send a
   "READY 1" message.</t>
        <t pn="section-9.2-2">
   In execution systems, where the timers are not accurate, a
   recommended approach consists of including the optional Timestamp header field
   in the PING request with the time in which the message
   has been sent. This allows an accurate measurement of the jitter
   even with no identical intervals of time between PINGs.</t>
      </section>
      <section anchor="sec-9.3" numbered="true" toc="include" removeInRFC="false" pn="section-9.3">
        <name slugifiedName="name-bandwidth-measurements">Bandwidth Measurements</name>
        <t pn="section-9.3-1">
   In programming languages or operating systems with limited timers
   or clock resolution, it is recommended to use an approach based on
   several intervals to send messages of 1KB (= 8000 bits) in order
   to reach the required bandwidth consumption, using a rate as close
   as possible to a constant rate.</t>
        <t pn="section-9.3-2">
   For example, if the resolution is 1 millisecond, and the bandwidth
   to reach is 11 Mbps, a good approach consists of sending: </t>
        <artwork name="" type="" align="left" alt="" pn="section-9.3-3">
      1 message of 1KB every 1 millisecond +

      1 message of 1KB every 3 milliseconds +

      1 message of 1KB every 23 milliseconds
</artwork>
        <t pn="section-9.3-4">
   The number of intervals depends on the required bandwidth and accuracy
   that the programmer wants to achieve.</t>
        <t pn="section-9.3-5">
   Considering messages of 1KB (= 8000 bits), a general approach to
   determine these intervals is the following:

        </t>
        <ol spacing="normal" type="(%d)" start="1" pn="section-9.3-6">
          <li pn="section-9.3-6.1" derivedCounter="(1)"> Compute target bandwidth / 8000 bits. In the example above, it is
            11 Mbps / 8000 = 1375 messages per second.
	</li>
          <li pn="section-9.3-6.2" derivedCounter="(2)"> Divide the number of messages per second by 1000 to determine
    	the number of messages per millisecond: 1375 / 1000 = 1.375. The
      integer value is the number of messages per millisecond (in this
      case, one). The pending bandwidth is now 375 messages per second.
	</li>
          <li pn="section-9.3-6.3" derivedCounter="(3)">
            <t pn="section-9.3-6.3.1"> To achieve the 375 messages per second, use a submultiple of
	1000, which must be less than 375:
</t>
            <artwork name="" type="" align="left" alt="" pn="section-9.3-6.3.2">
      1000 / 2 = 500 &gt; 375

      1000 / 3 = 333 &lt; 375 
</artwork>
            <t pn="section-9.3-6.3.3">

   In this case, a message every 3 ms is suitable. The new pending
   target bandwidth is 375 - 333 = 42 messages per second.</t>
          </li>
          <li pn="section-9.3-6.4" derivedCounter="(4)">
            <t pn="section-9.3-6.4.1"> Repeat the same strategy as point 3 to reach the pending
    	    bandwidth. In this case, 23 ms is suitable because of the following:

</t>
            <artwork name="" type="" align="left" alt="" pn="section-9.3-6.4.2">
      1000 / 22 = 45 &gt; 42

      1000 / 23 = 43 &gt; 42

      1000 / 24 = 41.6 &lt; 42
</artwork>
          </li>
        </ol>
        <t pn="section-9.3-7">
   We can choose 24 ms, but then we need to cover an additional 0.4
   messages per second (42 - 41.6 = 0.4), and 43 is a number higher than
   42 but very close to it.</t>
        <t pn="section-9.3-8">
   In execution systems where the timers are not accurate, a
   recommended approach consists of checking at each interval the
   number of packets that should have been sent at this timestamp
   since origin and send the needed number of packets in order to
   reach the required bandwidth.</t>
        <t pn="section-9.3-9">
   The shorter the packets used, the more constant the rate of
   bandwidth measurement. However, this may stress the execution
   system in charge of receiving and processing packets. As a
   consequence, some packets may be lost because of stack overflows.
   To deal with this potential issue, a larger packet is <bcp14>RECOMMENDED</bcp14>
   (2KB or more), taking into account the overhead produced by the
   chunks' headers.</t>
      </section>
      <section anchor="sec-9.4" numbered="true" toc="include" removeInRFC="false" pn="section-9.4">
        <name slugifiedName="name-packet-loss-measurement-res">Packet Loss Measurement Resolution</name>
        <t pn="section-9.4-1">
   Depending on the application nature and network conditions, a packet
   loss resolution less than 1% may be needed. In such cases, there
   is no limit to the number of samples used for this calculation. A
   trade-off between time and resolution should be reached in each
   case. For example, in order to have a resolution of 1/10000, the
   last 10000 samples should be considered in the packet loss
   measured value.</t>
        <t pn="section-9.4-2">
   The problem of this approach is the reliability of old samples. If
   the interval used between PING messages is 50 ms, then to have a
   resolution of 1/1000, it takes 50 seconds, and a resolution of
   1/10000 takes 500 seconds (more than 8 minutes). The reliability
   of a packet loss calculation based on a sliding window of 8
   minutes depends on how fast network conditions evolve.</t>
      </section>
      <section anchor="sec-9.5" numbered="true" toc="include" removeInRFC="false" pn="section-9.5">
        <name slugifiedName="name-measurements-and-reactions">Measurements and Reactions</name>
        <t pn="section-9.5-1">
   Q4S can be used as a mechanism to measure and trigger network
   tuning and application-level actions (i.e. lowering video bit-rate, 
   reducing multiplayer interaction speed, etc.) in real time in
   order to reach the application constraints, addressing measured
   possible network degradation.</t>
      </section>
      <section anchor="sec-9.6" numbered="true" toc="include" removeInRFC="false" pn="section-9.6">
        <name slugifiedName="name-instability-treatments">Instability Treatments</name>
        <t pn="section-9.6-1">
   There are two scenarios in which Q4S can be affected by network
   problems: loss of Q4S packets and outlier samples.</t>
        <section anchor="sec-9.6.1" numbered="true" toc="include" removeInRFC="false" pn="section-9.6.1">
          <name slugifiedName="name-loss-of-control-packets">Loss of Control Packets</name>
          <t pn="section-9.6.1-1">
   Lost UDP packets (PING or BWIDTH messages) don't cause any
   problems for the Q4S state machine, but if TCP packets are
   delivered too late (which we will consider as "lost"), some
   undesirable consequences could arise.</t>
          <t pn="section-9.6.1-2">
   Q4S does have protection mechanisms to overcome these situations.
   Examples:</t>
          <ul spacing="normal" bare="false" empty="false" pn="section-9.6.1-3">
            <li pn="section-9.6.1-3.1">If a BEGIN packet or its corresponding answer is lost, after
      a certain timeout, the client <bcp14>SHOULD</bcp14> resend another BEGIN
      packet, resetting the session</li>
            <li pn="section-9.6.1-3.2">If a READY packet is lost, after a certain timeout, the
      client <bcp14>SHOULD</bcp14> resend another READY packet.</li>
            <li pn="section-9.6.1-3.3">If a Q4S-ALERT request or its corresponding answer is lost,
      after a certain timeout, the originator <bcp14>SHOULD</bcp14> resend another
      Q4S-ALERT packet.</li>
            <li pn="section-9.6.1-3.4">If a CANCEL request or its corresponding answer is lost,
      after a certain timeout, the originator <bcp14>SHOULD</bcp14> resend another
      CANCEL packet.</li>
          </ul>
        </section>
        <section anchor="sec-9.6.2" numbered="true" toc="include" removeInRFC="false" pn="section-9.6.2">
          <name slugifiedName="name-outlier-samples">Outlier Samples</name>
          <t pn="section-9.6.2-1">
   Outlier samples are those jitter or latency values far from the
   general/average values of most samples.</t>
          <t pn="section-9.6.2-2">
   Hence, the Q4S default measurement method uses the statistical median
   formula for latency calculation, and the outlier samples are
   neutralized. This is a very common filter for noise or errors
   on signal and image processing.</t>
        </section>
      </section>
      <section anchor="sec-9.7" numbered="true" toc="include" removeInRFC="false" pn="section-9.7">
        <name slugifiedName="name-scenarios">Scenarios</name>
        <t pn="section-9.7-1">
   Q4S could be used in two scenarios:</t>
        <ul spacing="normal" bare="false" empty="false" pn="section-9.7-2">
          <li pn="section-9.7-2.1">client to ACP </li>
          <li pn="section-9.7-2.2">client to client (peer-to-peer scenario)</li>
        </ul>
        <section anchor="sec-9.7.1" numbered="true" toc="include" removeInRFC="false" pn="section-9.7.1">
          <name slugifiedName="name-client-to-acp">Client to ACP</name>
          <t pn="section-9.7.1-1">
   One server:</t>
          <t pn="section-9.7.1-2">
   It is the common scenario in which the client contacts the server to
   establish a Q4S session.</t>
          <t pn="section-9.7.1-3">
   N servers:</t>
          <t pn="section-9.7.1-4">
   In Content Delivery Networks and in general applications where
   delivery of contents can be achieved by different delivery nodes,
   two working mechanisms can be defined:</t>
          <dl newline="false" spacing="normal" pn="section-9.7.1-5">
            <dt pn="section-9.7.1-5.1">Starting mode:</dt>
            <dd pn="section-9.7.1-5.2">the end user may run Q4S against several delivery
      nodes and after some seconds choose the best one to start the
      multimedia session.</dd>
            <dt pn="section-9.7.1-5.3">Prevention mode:</dt>
            <dd pn="section-9.7.1-5.4">during a streaming session, the user keeps several
      Q4S dialogs against different alternative delivery nodes. In
      case of congestion, the end user <bcp14>MAY</bcp14> change to the best
      alternative delivery node.</dd>
          </dl>
        </section>
        <section anchor="sec-9.7.2" numbered="true" toc="include" removeInRFC="false" pn="section-9.7.2">
          <name slugifiedName="name-client-to-client">Client to Client</name>
          <t pn="section-9.7.2-1">
   In order to solve the client-to-client scenario, a Q4S register
   function <bcp14>MUST</bcp14> be implemented. This allows clients to contact each
   other for sending the BEGIN message. In this scenario, the
   Register server would be used by peers to publish their Q4S-Resource-Server header and their public IP address to
   enable the assumption of the server role.</t>
          <t pn="section-9.7.2-2">
   The register function is out of scope of this protocol version
   because different HTTP mechanisms can be used, and Q4S <bcp14>MUST NOT</bcp14>
   force any.</t>
        </section>
      </section>
    </section>
    <section anchor="sec-10" numbered="true" toc="include" removeInRFC="false" pn="section-10">
      <name slugifiedName="name-security-considerations">Security Considerations</name>
      <section anchor="sec-10.1" numbered="true" toc="include" removeInRFC="false" pn="section-10.1">
        <name slugifiedName="name-confidentiality-issues">Confidentiality Issues</name>
        <t pn="section-10.1-1">
   Because Q4S does not transport any application data, Q4S does not
   jeopardize the security of application data. However, other
   certain considerations may take place, like identity impersonation
   and measurements privacy and integrity.</t>
      </section>
      <section anchor="sec-10.2" numbered="true" toc="include" removeInRFC="false" pn="section-10.2">
        <name slugifiedName="name-integrity-of-measurements-a">Integrity of Measurements and Authentication</name>
        <t pn="section-10.2-1">
   Identity impersonation could potentially produce anomalous Q4S
   measurements. If this attack is based on spoofing of the server IP
   address, it can be avoided using the digital signature mechanism
   included in the SDP. The network can easily validate this digital
   signature using the public key of the server certificate.</t>
        <t pn="section-10.2-2">
   Integrity of Q4S measurements under any malicious manipulation
   (such as a Man-in-the-Middle (MITM) attack) relies on the same
   mechanism, the SDP signature.</t>
        <t pn="section-10.2-3">
   The Signature header field contains the signed hash value of the SDP
   body in order to protect all the SDP data, including the
   measurements. This signature not only protects the integrity of
   data but also authenticates the server.</t>
      </section>
      <section anchor="sec-10.3" numbered="true" toc="include" removeInRFC="false" pn="section-10.3">
        <name slugifiedName="name-privacy-of-measurements">Privacy of Measurements</name>
        <t pn="section-10.3-1">
   This protocol could be supported over IPsec. Q4S relies on UDP and
   TCP, and IPsec supports both.  If Q4S is used for application-based 
   QoS, then IPsec is operationally valid; however, if Q4S is used to 
   trigger network-based actions, then measurements could be incorrect 
   unless the IPsec ports can be a target of potential action over the 
   network (such as prioritizing IPsec flows to measure the new, upgraded 
   state of certain application flows). </t>
      </section>
      <section anchor="sec-10.4" numbered="true" toc="include" removeInRFC="false" pn="section-10.4">
        <name slugifiedName="name-availability-issues">Availability Issues</name>
        <t pn="section-10.4-1">
   Any loss of connectivity may interrupt the availability of the Q4S
   service and may result in higher packet loss measurements, which is
   just the desired behavior in these situations.</t>
        <t pn="section-10.4-2">
   In order to mitigate availability issues caused by malicious
   attacks (such as DoS and DDoS), a good practice is to enable the Q4S
   service only for authenticated users. Q4S can be launched after the
   user is authenticated by the application. At this moment, the user's IP
   address is known, and the Q4S service may be enabled for this IP
   address. Otherwise, the Q4S service should appear unreachable.</t>
      </section>
      <section anchor="sec-10.5" numbered="true" toc="include" removeInRFC="false" pn="section-10.5">
        <name slugifiedName="name-bandwidth-occupancy-issues">Bandwidth Occupancy Issues</name>
        <t pn="section-10.5-1">
   Q4S bandwidth measurement is limited to the application needs. It
   means that all available bandwidth is not measured, but only the
   fraction required by the application. This allows other
   applications to use the rest of available bandwidth normally.</t>
        <t pn="section-10.5-2">
   However, a malicious Q4S client could restart Q4S sessions just
   after finishing the Negotiation phase. The consequence would be to
   waste bandwidth for nothing.</t>
        <t pn="section-10.5-3">
   In order to mitigate this possible anomalous behavior, it is
   <bcp14>RECOMMENDED</bcp14> to configure the server to reject sessions from the
   same endpoint when this situation is detected.</t>
      </section>
    </section>
    <section anchor="sec-11" numbered="true" toc="include" removeInRFC="false" pn="section-11">
      <name slugifiedName="name-future-code-point-requireme">Future Code Point Requirements</name>
      <t pn="section-11-1">
   If the ideas described in this document are pursued to become a
   protocol specification, then the code points described in this
   document will need to be assigned by IANA.</t>
      <section anchor="sec-11.1" numbered="true" toc="include" removeInRFC="false" pn="section-11.1">
        <name slugifiedName="name-service-port">Service Port</name>
        <t pn="section-11.1-1">
   An assigned port would make possible a future Q4S-aware 
   network capable of reacting by itself to Q4S alerts. A
   specific port would simplify the identification of the protocol by
   network elements in charge of making possible reactive decisions.
   Therefore, the need for a port assignment by IANA may be postponed until there is the
   need for a future Q4S-aware network.</t>
        <t pn="section-11.1-2">
   Service Name: Q4S</t>
        <t pn="section-11.1-3">
   Transport Protocol(s): TCP</t>
        <dl newline="true" spacing="normal" indent="3" pn="section-11.1-4">
          <dt pn="section-11.1-4.1">Assignee:</dt>
          <dd pn="section-11.1-4.2">
            <t pn="section-11.1-4.2.1">
	Name: Jose Javier Garcia Aranda
            </t>
            <t pn="section-11.1-4.2.2">
	Email: jose_javier.garcia_aranda@nokia.com
            </t>
          </dd>
          <dt pn="section-11.1-4.3">Contact:</dt>
          <dd pn="section-11.1-4.4">
            <t pn="section-11.1-4.4.1">
	Name: Jose Javier Garcia Aranda
            </t>
            <t pn="section-11.1-4.4.2">
	Email: jose_javier.garcia_aranda@nokia.com
            </t>
          </dd>
        </dl>
        <dl newline="false" spacing="normal" indent="6" pn="section-11.1-5">
          <dt pn="section-11.1-5.1">Description:</dt>
          <dd pn="section-11.1-5.2">
   The service associated with this request is in
   charge of the establishment of new Q4S sessions, and during the
   session, manages the handoff to a new protocol phase (Handshake,
   Negotiation and Continuity) as well as sends alerts when
   measurements do not meet the requirements.</dd>
          <dt pn="section-11.1-5.3">Reference:</dt>
          <dd pn="section-11.1-5.4">
   This document. This service does not use IP-layer
   broadcast, multicast, or anycast communication.</dd>
        </dl>
      </section>
    </section>
    <section anchor="sec-12" numbered="true" toc="include" removeInRFC="false" pn="section-12">
      <name slugifiedName="name-iana-considerations">IANA Considerations</name>
      <t pn="section-12-1">This document has no IANA actions.</t>
    </section>
  </middle>
  <back>
    <displayreference target="I-D.ietf-quic-transport" to="QUIC"/>
    <displayreference target="I-D.rhee-tcpm-cubic" to="CUBIC"/>
    <displayreference target="I-D.sridharan-tcpm-ctcp" to="CTCP"/>
    <references pn="section-13">
      <name slugifiedName="name-references">References</name>
      <references pn="section-13.1">
        <name slugifiedName="name-normative-references">Normative References</name>
        <reference anchor="RFC7230" target="https://www.rfc-editor.org/info/rfc7230" quoteTitle="true" derivedAnchor="RFC7230">
          <front>
            <title>Hypertext Transfer Protocol (HTTP/1.1): Message Syntax and Routing</title>
            <author initials="R." surname="Fielding" fullname="R. Fielding" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="J." surname="Reschke" fullname="J. Reschke" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2014" month="June"/>
            <abstract>
              <t>The Hypertext Transfer Protocol (HTTP) is a stateless application-level protocol for distributed, collaborative, hypertext information systems.  This document provides an overview of HTTP architecture and its associated terminology, defines the "http" and "https" Uniform Resource Identifier (URI) schemes, defines the HTTP/1.1 message syntax and parsing requirements, and describes related security concerns for implementations.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="7230"/>
          <seriesInfo name="DOI" value="10.17487/RFC7230"/>
        </reference>
        <reference anchor="RFC7231" target="https://www.rfc-editor.org/info/rfc7231" quoteTitle="true" derivedAnchor="RFC7231">
          <front>
            <title>Hypertext Transfer Protocol (HTTP/1.1): Semantics and Content</title>
            <author initials="R." surname="Fielding" fullname="R. Fielding" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="J." surname="Reschke" fullname="J. Reschke" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2014" month="June"/>
            <abstract>
              <t>The Hypertext Transfer Protocol (HTTP) is a stateless \%application- level protocol for distributed, collaborative, hypertext information systems.  This document defines the semantics of HTTP/1.1 messages, as expressed by request methods, request header fields, response status codes, and response header fields, along with the payload of messages (metadata and body content) and mechanisms for content negotiation.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="7231"/>
          <seriesInfo name="DOI" value="10.17487/RFC7231"/>
        </reference>
        <reference anchor="RFC7232" target="https://www.rfc-editor.org/info/rfc7232" quoteTitle="true" derivedAnchor="RFC7232">
          <front>
            <title>Hypertext Transfer Protocol (HTTP/1.1): Conditional Requests</title>
            <author initials="R." surname="Fielding" fullname="R. Fielding" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="J." surname="Reschke" fullname="J. Reschke" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2014" month="June"/>
            <abstract>
              <t>The Hypertext Transfer Protocol (HTTP) is a stateless application- level protocol for distributed, collaborative, hypertext information systems.  This document defines HTTP/1.1 conditional requests, including metadata header fields for indicating state changes, request header fields for making preconditions on such state, and rules for constructing the responses to a conditional request when one or more preconditions evaluate to false.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="7232"/>
          <seriesInfo name="DOI" value="10.17487/RFC7232"/>
        </reference>
        <reference anchor="RFC7233" target="https://www.rfc-editor.org/info/rfc7233" quoteTitle="true" derivedAnchor="RFC7233">
          <front>
            <title>Hypertext Transfer Protocol (HTTP/1.1): Range Requests</title>
            <author initials="R." surname="Fielding" fullname="R. Fielding" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="Y." surname="Lafon" fullname="Y. Lafon" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="J." surname="Reschke" fullname="J. Reschke" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2014" month="June"/>
            <abstract>
              <t>The Hypertext Transfer Protocol (HTTP) is a stateless application- level protocol for distributed, collaborative, hypertext information systems.  This document defines range requests and the rules for constructing and combining responses to those requests.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="7233"/>
          <seriesInfo name="DOI" value="10.17487/RFC7233"/>
        </reference>
        <reference anchor="RFC7234" target="https://www.rfc-editor.org/info/rfc7234" quoteTitle="true" derivedAnchor="RFC7234">
          <front>
            <title>Hypertext Transfer Protocol (HTTP/1.1): Caching</title>
            <author initials="R." surname="Fielding" fullname="R. Fielding" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="M." surname="Nottingham" fullname="M. Nottingham" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="J." surname="Reschke" fullname="J. Reschke" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2014" month="June"/>
            <abstract>
              <t>The Hypertext Transfer Protocol (HTTP) is a stateless \%application- level protocol for distributed, collaborative, hypertext information systems.  This document defines HTTP caches and the associated header fields that control cache behavior or indicate cacheable response messages.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="7234"/>
          <seriesInfo name="DOI" value="10.17487/RFC7234"/>
        </reference>
        <reference anchor="RFC7235" target="https://www.rfc-editor.org/info/rfc7235" quoteTitle="true" derivedAnchor="RFC7235">
          <front>
            <title>Hypertext Transfer Protocol (HTTP/1.1): Authentication</title>
            <author initials="R." surname="Fielding" fullname="R. Fielding" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="J." surname="Reschke" fullname="J. Reschke" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2014" month="June"/>
            <abstract>
              <t>The Hypertext Transfer Protocol (HTTP) is a stateless application- level protocol for distributed, collaborative, hypermedia information systems.  This document defines the HTTP Authentication framework.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="7235"/>
          <seriesInfo name="DOI" value="10.17487/RFC7235"/>
        </reference>
        <reference anchor="RFC2818" target="https://www.rfc-editor.org/info/rfc2818" quoteTitle="true" derivedAnchor="RFC2818">
          <front>
            <title>HTTP Over TLS</title>
            <author initials="E." surname="Rescorla" fullname="E. Rescorla">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2000" month="May"/>
            <abstract>
              <t>This memo describes how to use Transport Layer Security (TLS) to secure Hypertext Transfer Protocol (HTTP) connections over the Internet.  This memo provides information for the Internet community.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="2818"/>
          <seriesInfo name="DOI" value="10.17487/RFC2818"/>
        </reference>
        <reference anchor="RFC2119" target="https://www.rfc-editor.org/info/rfc2119" quoteTitle="true" derivedAnchor="RFC2119">
          <front>
            <title>Key words for use in RFCs to Indicate Requirement Levels</title>
            <author initials="S." surname="Bradner" fullname="S. Bradner">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="1997" month="March"/>
            <abstract>
              <t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t>
            </abstract>
          </front>
          <seriesInfo name="BCP" value="14"/>
          <seriesInfo name="RFC" value="2119"/>
          <seriesInfo name="DOI" value="10.17487/RFC2119"/>
        </reference>
        <reference anchor="RFC8174" target="https://www.rfc-editor.org/info/rfc8174" quoteTitle="true" derivedAnchor="RFC8174">
          <front>
            <title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
            <author initials="B." surname="Leiba" fullname="B. Leiba">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2017" month="May"/>
            <abstract>
              <t>RFC 2119 specifies common key words that may be used in protocol  specifications.  This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the  defined special meanings.</t>
            </abstract>
          </front>
          <seriesInfo name="BCP" value="14"/>
          <seriesInfo name="RFC" value="8174"/>
          <seriesInfo name="DOI" value="10.17487/RFC8174"/>
        </reference>
        <reference anchor="RFC3986" target="https://www.rfc-editor.org/info/rfc3986" quoteTitle="true" derivedAnchor="RFC3986">
          <front>
            <title>Uniform Resource Identifier (URI): Generic Syntax</title>
            <author initials="T." surname="Berners-Lee" fullname="T. Berners-Lee">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="R." surname="Fielding" fullname="R. Fielding">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="L." surname="Masinter" fullname="L. Masinter">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2005" month="January"/>
            <abstract>
              <t>A Uniform Resource Identifier (URI) is a compact sequence of characters that identifies an abstract or physical resource.  This specification defines the generic URI syntax and a process for resolving URI references that might be in relative form, along with guidelines and security considerations for the use of URIs on the Internet.  The URI syntax defines a grammar that is a superset of all valid URIs, allowing an implementation to parse the common components of a URI reference without knowing the scheme-specific requirements of every possible identifier.  This specification does not define a generative grammar for URIs; that task is performed by the individual specifications of each URI scheme.  [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="STD" value="66"/>
          <seriesInfo name="RFC" value="3986"/>
          <seriesInfo name="DOI" value="10.17487/RFC3986"/>
        </reference>
        <reference anchor="RFC3629" target="https://www.rfc-editor.org/info/rfc3629" quoteTitle="true" derivedAnchor="RFC3629">
          <front>
            <title>UTF-8, a transformation format of ISO 10646</title>
            <author initials="F." surname="Yergeau" fullname="F. Yergeau">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2003" month="November"/>
            <abstract>
              <t>ISO/IEC 10646-1 defines a large character set called the Universal Character Set (UCS) which encompasses most of the world's writing systems.  The originally proposed encodings of the UCS, however, were not compatible with many current applications and protocols, and this has led to the development of UTF-8, the object of this memo.  UTF-8 has the characteristic of preserving the full US-ASCII range, providing compatibility with file systems, parsers and other software that rely on US-ASCII values but are transparent to other values.  This memo obsoletes and replaces RFC 2279.</t>
            </abstract>
          </front>
          <seriesInfo name="STD" value="63"/>
          <seriesInfo name="RFC" value="3629"/>
          <seriesInfo name="DOI" value="10.17487/RFC3629"/>
        </reference>
        <reference anchor="RFC5322" target="https://www.rfc-editor.org/info/rfc5322" quoteTitle="true" derivedAnchor="RFC5322">
          <front>
            <title>Internet Message Format</title>
            <author initials="P." surname="Resnick" fullname="P. Resnick" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2008" month="October"/>
            <abstract>
              <t>This document specifies the Internet Message Format (IMF), a syntax for text messages that are sent between computer users, within the framework of "electronic mail" messages.  This specification is a revision of Request For Comments (RFC) 2822, which itself superseded Request For Comments (RFC) 822, "Standard for the Format of ARPA Internet Text Messages", updating it to reflect current practice and incorporating incremental changes that were specified in other RFCs.  [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="5322"/>
          <seriesInfo name="DOI" value="10.17487/RFC5322"/>
        </reference>
        <reference anchor="RFC5234" target="https://www.rfc-editor.org/info/rfc5234" quoteTitle="true" derivedAnchor="RFC5234">
          <front>
            <title>Augmented BNF for Syntax Specifications: ABNF</title>
            <author initials="D." surname="Crocker" fullname="D. Crocker" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="P." surname="Overell" fullname="P. Overell">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2008" month="January"/>
            <abstract>
              <t>Internet technical specifications often need to define a formal syntax.  Over the years, a modified version of Backus-Naur Form (BNF), called Augmented BNF (ABNF), has been popular among many Internet specifications.  The current specification documents ABNF. It balances compactness and simplicity with reasonable representational power.  The differences between standard BNF and ABNF involve naming rules, repetition, alternatives, order-independence, and value ranges.  This specification also supplies additional rule definitions and encoding for a core lexical analyzer of the type common to several Internet specifications.  [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="STD" value="68"/>
          <seriesInfo name="RFC" value="5234"/>
          <seriesInfo name="DOI" value="10.17487/RFC5234"/>
        </reference>
        <reference anchor="RFC6234" target="https://www.rfc-editor.org/info/rfc6234" quoteTitle="true" derivedAnchor="RFC6234">
          <front>
            <title>US Secure Hash Algorithms (SHA and SHA-based HMAC and HKDF)</title>
            <author initials="D." surname="Eastlake 3rd" fullname="D. Eastlake 3rd">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="T." surname="Hansen" fullname="T. Hansen">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2011" month="May"/>
            <abstract>
              <t>Federal Information Processing Standard, FIPS</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="6234"/>
          <seriesInfo name="DOI" value="10.17487/RFC6234"/>
        </reference>
        <reference anchor="RFC8017" target="https://www.rfc-editor.org/info/rfc8017" quoteTitle="true" derivedAnchor="RFC8017">
          <front>
            <title>PKCS #1: RSA Cryptography Specifications Version 2.2</title>
            <author initials="K." surname="Moriarty" fullname="K. Moriarty" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="B." surname="Kaliski" fullname="B. Kaliski">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="J." surname="Jonsson" fullname="J. Jonsson">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="A." surname="Rusch" fullname="A. Rusch">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2016" month="November"/>
            <abstract>
              <t>This document provides recommendations for the implementation of public-key cryptography based on the RSA algorithm, covering cryptographic primitives, encryption schemes, signature schemes with appendix, and ASN.1 syntax for representing keys and for identifying the schemes.</t>
              <t>This document represents a republication of PKCS #1 v2.2 from RSA Laboratories' Public-Key Cryptography Standards (PKCS) series.  By publishing this RFC, change control is transferred to the IETF.</t>
              <t>This document also obsoletes RFC 3447.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8017"/>
          <seriesInfo name="DOI" value="10.17487/RFC8017"/>
        </reference>
        <reference anchor="RFC3264" target="https://www.rfc-editor.org/info/rfc3264" quoteTitle="true" derivedAnchor="RFC3264">
          <front>
            <title>An Offer/Answer Model with Session Description Protocol (SDP)</title>
            <author initials="J." surname="Rosenberg" fullname="J. Rosenberg">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="H." surname="Schulzrinne" fullname="H. Schulzrinne">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2002" month="June"/>
            <abstract>
              <t>This document defines a mechanism by which two entities can make use of the Session Description Protocol (SDP) to arrive at a common view of a multimedia session between them.  In the model, one participant offers the other a description of the desired session from their perspective, and the other participant answers with the desired session from their perspective.  This offer/answer model is most useful in unicast sessions where information from both participants is needed for the complete view of the session.  The offer/answer model is used by protocols like the Session Initiation Protocol (SIP).  [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="3264"/>
          <seriesInfo name="DOI" value="10.17487/RFC3264"/>
        </reference>
        <reference anchor="RFC4566" target="https://www.rfc-editor.org/info/rfc4566" quoteTitle="true" derivedAnchor="RFC4566">
          <front>
            <title>SDP: Session Description Protocol</title>
            <author initials="M." surname="Handley" fullname="M. Handley">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="V." surname="Jacobson" fullname="V. Jacobson">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="C." surname="Perkins" fullname="C. Perkins">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2006" month="July"/>
            <abstract>
              <t>This memo defines the Session Description Protocol (SDP).  SDP is intended for describing multimedia sessions for the purposes of session announcement, session invitation, and other forms of multimedia session initiation.  [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="4566"/>
          <seriesInfo name="DOI" value="10.17487/RFC4566"/>
        </reference>
      </references>
      <references pn="section-13.2">
        <name slugifiedName="name-informative-references">Informative References</name>
        <reference anchor="RFC3550" target="https://www.rfc-editor.org/info/rfc3550" quoteTitle="true" derivedAnchor="RFC3550">
          <front>
            <title>RTP: A Transport Protocol for Real-Time Applications</title>
            <author initials="H." surname="Schulzrinne" fullname="H. Schulzrinne">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="S." surname="Casner" fullname="S. Casner">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="R." surname="Frederick" fullname="R. Frederick">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="V." surname="Jacobson" fullname="V. Jacobson">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2003" month="July"/>
            <abstract>
              <t>This memorandum describes RTP, the real-time transport protocol.  RTP provides end-to-end network transport functions suitable for applications transmitting real-time data, such as audio, video or simulation data, over multicast or unicast network services.  RTP does not address resource reservation and does not guarantee quality-of- service for real-time services.  The data transport is augmented by a control protocol (RTCP) to allow monitoring of the data delivery in a manner scalable to large multicast networks, and to provide minimal control and identification functionality.  RTP and RTCP are designed to be independent of the underlying transport and network layers.  The protocol supports the use of RTP-level translators and mixers. Most of the text in this memorandum is identical to RFC 1889 which it obsoletes.  There are no changes in the packet formats on the wire, only changes to the rules and algorithms governing how the protocol is used. The biggest change is an enhancement to the scalable timer algorithm for calculating when to send RTCP packets in order to minimize transmission in excess of the intended rate when many participants join a session simultaneously.  [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="STD" value="64"/>
          <seriesInfo name="RFC" value="3550"/>
          <seriesInfo name="DOI" value="10.17487/RFC3550"/>
        </reference>
        <reference anchor="RFC0793" target="https://www.rfc-editor.org/info/rfc793" quoteTitle="true" derivedAnchor="RFC0793">
          <front>
            <title>Transmission Control Protocol</title>
            <author initials="J." surname="Postel" fullname="J. Postel">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="1981" month="September"/>
          </front>
          <seriesInfo name="STD" value="7"/>
          <seriesInfo name="RFC" value="793"/>
          <seriesInfo name="DOI" value="10.17487/RFC0793"/>
        </reference>
        <reference anchor="RFC0792" target="https://www.rfc-editor.org/info/rfc792" quoteTitle="true" derivedAnchor="RFC0792">
          <front>
            <title>Internet Control Message Protocol</title>
            <author initials="J." surname="Postel" fullname="J. Postel">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="1981" month="September"/>
          </front>
          <seriesInfo name="STD" value="5"/>
          <seriesInfo name="RFC" value="792"/>
          <seriesInfo name="DOI" value="10.17487/RFC0792"/>
        </reference>
        <reference anchor="I-D.ietf-quic-transport" quoteTitle="true" target="https://tools.ietf.org/html/draft-ietf-quic-transport-29" derivedAnchor="QUIC">
          <front>
            <title>QUIC: A UDP-Based Multiplexed and Secure Transport</title>
            <author initials="J" surname="Iyengar" fullname="Jana Iyengar">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="M" surname="Thomson" fullname="Martin Thomson">
              <organization showOnFrontPage="true"/>
            </author>
            <date month="June" day="9" year="2020"/>
            <abstract>
              <t>This document defines the core of the QUIC transport protocol. Accompanying documents describe QUIC's loss detection and congestion control and the use of TLS for key negotiation.  Note to Readers  Discussion of this draft takes place on the QUIC working group mailing list (quic@ietf.org (mailto:quic@ietf.org)), which is archived at https://mailarchive.ietf.org/arch/search/?email_list=quic  Working Group information can be found at https://github.com/quicwg; source code and issues list for this draft can be found at https://github.com/quicwg/base-drafts/labels/-transport.</t>
            </abstract>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-ietf-quic-transport-29"/>
          <format type="TXT" target="http://www.ietf.org/internet-drafts/draft-ietf-quic-transport-29.txt"/>
          <refcontent>Work in Progress</refcontent>
        </reference>
        <reference anchor="RFC4656" target="https://www.rfc-editor.org/info/rfc4656" quoteTitle="true" derivedAnchor="RFC4656">
          <front>
            <title>A One-way Active Measurement Protocol (OWAMP)</title>
            <author initials="S." surname="Shalunov" fullname="S. Shalunov">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="B." surname="Teitelbaum" fullname="B. Teitelbaum">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="A." surname="Karp" fullname="A. Karp">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="J." surname="Boote" fullname="J. Boote">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="M." surname="Zekauskas" fullname="M. Zekauskas">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2006" month="September"/>
            <abstract>
              <t>The One-Way Active Measurement Protocol (OWAMP) measures unidirectional characteristics such as one-way delay and one-way loss.  High-precision measurement of these one-way IP performance metrics became possible with wider availability of good time sources (such as GPS and CDMA).  OWAMP enables the interoperability of these measurements.  [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="4656"/>
          <seriesInfo name="DOI" value="10.17487/RFC4656"/>
        </reference>
        <reference anchor="RFC5357" target="https://www.rfc-editor.org/info/rfc5357" quoteTitle="true" derivedAnchor="RFC5357">
          <front>
            <title>A Two-Way Active Measurement Protocol (TWAMP)</title>
            <author initials="K." surname="Hedayat" fullname="K. Hedayat">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="R." surname="Krzanowski" fullname="R. Krzanowski">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="A." surname="Morton" fullname="A. Morton">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="K." surname="Yum" fullname="K. Yum">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="J." surname="Babiarz" fullname="J. Babiarz">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2008" month="October"/>
            <abstract>
              <t>The One-way Active Measurement Protocol (OWAMP), specified in RFC 4656, provides a common protocol for measuring one-way metrics between network devices.  OWAMP can be used bi-directionally to measure one-way metrics in both directions between two network elements.  However, it does not accommodate round-trip or two-way measurements.  This memo specifies a Two-Way Active Measurement Protocol (TWAMP), based on the OWAMP, that adds two-way or round-trip measurement capabilities.  The TWAMP measurement architecture is usually comprised of two hosts with specific roles, and this allows for some protocol simplifications, making it an attractive alternative in some circumstances.  [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="5357"/>
          <seriesInfo name="DOI" value="10.17487/RFC5357"/>
        </reference>
        <reference anchor="RFC3261" target="https://www.rfc-editor.org/info/rfc3261" quoteTitle="true" derivedAnchor="RFC3261">
          <front>
            <title>SIP: Session Initiation Protocol</title>
            <author initials="J." surname="Rosenberg" fullname="J. Rosenberg">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="H." surname="Schulzrinne" fullname="H. Schulzrinne">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="G." surname="Camarillo" fullname="G. Camarillo">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="A." surname="Johnston" fullname="A. Johnston">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="J." surname="Peterson" fullname="J. Peterson">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="R." surname="Sparks" fullname="R. Sparks">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="M." surname="Handley" fullname="M. Handley">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="E." surname="Schooler" fullname="E. Schooler">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2002" month="June"/>
            <abstract>
              <t>This document describes Session Initiation Protocol (SIP), an application-layer control (signaling) protocol for creating, modifying, and terminating sessions with one or more participants.  These sessions include Internet telephone calls, multimedia distribution, and multimedia conferences.  [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="3261"/>
          <seriesInfo name="DOI" value="10.17487/RFC3261"/>
        </reference>
        <reference anchor="RFC0768" target="https://www.rfc-editor.org/info/rfc768" quoteTitle="true" derivedAnchor="RFC0768">
          <front>
            <title>User Datagram Protocol</title>
            <author initials="J." surname="Postel" fullname="J. Postel">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="1980" month="August"/>
          </front>
          <seriesInfo name="STD" value="6"/>
          <seriesInfo name="RFC" value="768"/>
          <seriesInfo name="DOI" value="10.17487/RFC0768"/>
        </reference>
        <reference anchor="RENO" quoteTitle="true" target="https://doi.org/10.1145/263932.264023" derivedAnchor="RENO">
          <front>
            <title>The Macroscopic Behavior of the TCP Congestion Avoidance Algorithm</title>
            <seriesInfo name="DOI" value="10.1145/263932.264023"/>
            <author fullname="M. Mathis" initials="M." surname="Mathis">
	</author>
            <author fullname="J. Semke" initials="J." surname="Semke">
	</author>
            <author fullname="J. Mahdavi" initials="J." surname="Mahdavi">
	</author>
            <author fullname="T. Ott" initials="T." surname="Ott">
	</author>
            <date month="July" year="1997"/>
          </front>
          <refcontent>ACM SIGCOMM Computer Communication Review, pp. 67-82</refcontent>
        </reference>
        <reference anchor="RFC3649" target="https://www.rfc-editor.org/info/rfc3649" quoteTitle="true" derivedAnchor="RFC3649">
          <front>
            <title>HighSpeed TCP for Large Congestion Windows</title>
            <author initials="S." surname="Floyd" fullname="S. Floyd">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2003" month="December"/>
            <abstract>
              <t>The proposals in this document are experimental.  While they may be deployed in the current Internet, they do not represent a consensus that this is the best method for high-speed congestion control.  In particular, we note that alternative experimental proposals are likely to be forthcoming, and it is not well understood how the proposals in this document will interact with such alternative proposals.  This document proposes HighSpeed TCP, a modification to TCP's congestion control mechanism for use with TCP connections with large congestion windows.  The congestion control mechanisms of the current Standard TCP constrains the congestion windows that can be achieved by TCP in realistic environments.  For example, for a Standard TCP connection with 1500-byte packets and a 100 ms round-trip time, achieving a steady-state throughput of 10 Gbps would require an average congestion window of 83,333 segments, and a packet drop rate of at most one congestion event every 5,000,000,000 packets (or equivalently, at most one congestion event every 1 2/3 hours).  This is widely acknowledged as an unrealistic constraint.  To address his limitation of TCP, this document proposes HighSpeed TCP, and solicits experimentation and feedback from the wider community.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="3649"/>
          <seriesInfo name="DOI" value="10.17487/RFC3649"/>
        </reference>
        <reference anchor="I-D.rhee-tcpm-cubic" quoteTitle="true" target="https://tools.ietf.org/html/draft-rhee-tcpm-cubic-02" derivedAnchor="CUBIC">
          <front>
            <title>CUBIC for Fast Long-Distance Networks</title>
            <author initials="I" surname="Rhee" fullname="Injong Rhee">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="L" surname="Xu" fullname="Lisong Xu">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="S" surname="Ha" fullname="Sangtae Ha">
              <organization showOnFrontPage="true"/>
            </author>
            <date month="August" day="26" year="2008"/>
            <abstract>
              <t>CUBIC is an extension to the current TCP standards.  The protocol differs from the current TCP standards only in the congestion window adjustment function in the sender side.  In particular, it uses a cubic function instead of a linear window increase of the current TCP standards to improve scalability and stability under fast and long distance networks.  BIC-TCP, a predecessor of CUBIC, has been a default TCP adopted by Linux since year 2005 and has already been deployed globally and in use for several years by the Internet community at large.  CUBIC is using a similar window growth function as BIC-TCP and is designed to be less aggressive and fairer to TCP in bandwidth usage than BIC-TCP while maintaining the strengths of BIC- TCP such as stability, window scalability and RTT fairness.  Through extensive testing in various Internet scenarios, we believe that CUBIC is safe for deployment and testing in the global Internet.  The intent of this document is to provide the protocol specification of CUBIC for a third party implementation and solicit the community feedback through experimentation on the performance of CUBIC.  We expect this document to be eventually published as an experimental RFC.</t>
            </abstract>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-rhee-tcpm-cubic-02"/>
          <format type="TXT" target="http://www.ietf.org/internet-drafts/draft-rhee-tcpm-cubic-02.txt"/>
          <refcontent>Work in Progress</refcontent>
        </reference>
        <reference anchor="I-D.sridharan-tcpm-ctcp" quoteTitle="true" target="https://tools.ietf.org/html/draft-sridharan-tcpm-ctcp-02" derivedAnchor="CTCP">
          <front>
            <title>Compound TCP: A New TCP Congestion Control for High-Speed and Long Distance Networks</title>
            <author initials="M" surname="Sridharan" fullname="Murali Sridharan">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="K" surname="Tan" fullname="Kun Tan">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="D" surname="Bansal" fullname="Deepak Bansal">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="D" surname="Thaler" fullname="Dave Thaler">
              <organization showOnFrontPage="true"/>
            </author>
            <date month="November" day="11" year="2008"/>
            <abstract>
              <t>Compound TCP (CTCP) is a modification to TCP's congestion control mechanism for use with TCP connections with large congestion windows. This document describes the Compound TCP algorithm in detail, and solicits experimentation and feedback from the wider community.  The key idea behind CTCP is to add a scalable delay-based component to the standard TCP's loss-based congestion control. The sending rate of CTCP is controlled by both loss and delay components. The delay-based component has a scalable window increasing rule that not only efficiently uses the link capacity, but on sensing queue build up, proactively reduces the sending rate.</t>
            </abstract>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-sridharan-tcpm-ctcp-02"/>
          <format type="TXT" target="http://www.ietf.org/internet-drafts/draft-sridharan-tcpm-ctcp-02.txt"/>
          <refcontent>Work in Progress</refcontent>
        </reference>
      </references>
    </references>
    <section anchor="sec-13" numbered="false" toc="include" removeInRFC="false" pn="section-appendix.a">
      <name slugifiedName="name-acknowledgements">Acknowledgements</name>
      <t pn="section-appendix.a-1">
   Many people have made comments and suggestions contributing to
   this document. In particular, we would like to thank:</t>
      <t pn="section-appendix.a-2">
   <contact fullname="Victor Villagra"/>, <contact fullname="Sonia Herranz"/>, 
   <contact fullname="Clara Cubillo Pastor"/>, <contact fullname="Francisco Duran Pina"/>, 
   <contact fullname="Michael Scharf"/>, <contact fullname="Jesus Soto Viso"/>, and 
   <contact fullname="Federico Guillen"/>.</t>
      <t pn="section-appendix.a-3">
   Additionally, we want to thank the Spanish Centre for the
   Development of Industrial Technology (CDTI) as well as the Spanish
   Science and Tech Ministry, which funds this initiative through
   their innovation programs.</t>
    </section>
    <section anchor="sec-14" numbered="false" toc="include" removeInRFC="false" pn="section-appendix.b">
      <name slugifiedName="name-contributors">Contributors</name>
      <contact fullname="Jacobo Perez Lajo">
        <organization showOnFrontPage="true">Nokia Spain</organization>
        <address>
          <email>jacobo.perez@nokia.com</email>
        </address>
      </contact>
      <contact fullname="Luis Miguel Diaz Vizcaino">
        <organization showOnFrontPage="true">Nokia Spain</organization>
        <address>
          <email>Luismi.Diaz@nokia.com</email>
        </address>
      </contact>
      <contact fullname="Gonzalo Munoz Fernandez">
        <organization showOnFrontPage="true">Nokia Spain</organization>
        <address>
          <email>gonzalo.munoz_fernandez.ext@nokia.com</email>
        </address>
      </contact>
      <contact fullname="Manuel Alarcon Granero">
        <organization showOnFrontPage="true">Nokia Spain</organization>
        <address>
          <email>manuel.alarcon_granero.ext@nokia.com</email>
        </address>
      </contact>
      <contact fullname="Francisco Jose Juan Quintanilla">
        <organization showOnFrontPage="true">Nokia Spain</organization>
        <address>
          <email>francisco_jose.juan_quintanilla.ext@nokia.com</email>
        </address>
      </contact>
      <contact fullname="Carlos Barcenilla">
        <organization showOnFrontPage="true">Universidad Politecnica de Madrid</organization>
      </contact>
      <contact fullname="Juan Quemada">
        <organization showOnFrontPage="true">Universidad Politecnica de Madrid</organization>
        <address>
          <email>jquemada@dit.upm.es</email>
        </address>
      </contact>
      <contact fullname="Ignacio Maestro">
        <organization showOnFrontPage="true">Tecnalia Research &amp; Innovation</organization>
        <address>
          <email>ignacio.maestro@tecnalia.com</email>
        </address>
      </contact>
      <contact fullname="Lara Fajardo Ibañez">
        <organization showOnFrontPage="true">Optiva Media</organization>
        <address>
          <email>lara.fajardo@optivamedia.com</email>
        </address>
      </contact>
      <contact fullname="Pablo López Zapico">
        <organization showOnFrontPage="true">Optiva Media</organization>
        <address>
          <email>Pablo.lopez@optivamedia.com</email>
        </address>
      </contact>
      <contact fullname="David Muelas Recuenco">
        <organization showOnFrontPage="true">Universidad Autonoma de Madrid</organization>
        <address>
          <email>dav.muelas@uam.es</email>
        </address>
      </contact>
      <contact fullname="Jesus Molina Merchan">
        <organization showOnFrontPage="true">Universidad Autonoma de Madrid</organization>
        <address>
          <email>jesus.molina@uam.es</email>
        </address>
      </contact>
      <contact fullname="Jorge E. Lopez de Vergara Mendez">
        <organization showOnFrontPage="true">Universidad Autonoma de Madrid</organization>
        <address>
          <email>jorge.lopez_vergara@uam.es</email>
        </address>
      </contact>
      <contact fullname="Victor Manuel Maroto Ortega">
        <organization showOnFrontPage="true">Optiva Media</organization>
        <address>
          <email>victor.maroto@optivamedia.com</email>
        </address>
      </contact>
    </section>
    <section anchor="authors-addresses" numbered="false" removeInRFC="false" toc="include" pn="section-appendix.c">
      <name slugifiedName="name-authors-addresses">Authors' Addresses</name>
      <author fullname="Jose Javier Garcia Aranda" initials="J.J." surname="Aranda">
        <organization showOnFrontPage="true">Nokia</organization>
        <address>
          <postal>
            <street>María Tubau 9</street>
            <code>28050</code>
            <city>Madrid</city>
            <country>Spain</country>
          </postal>
          <phone>+34 91 330 4348</phone>
          <email>jose_javier.garcia_aranda@nokia.com</email>
        </address>
      </author>
      <author fullname="Mónica Cortés" initials="M." surname="Cortés">
        <organization showOnFrontPage="true">Nokia</organization>
        <address>
          <postal>
            <street>María Tubau 9</street>
            <code>28050</code>
            <city>Madrid</city>
            <country>Spain</country>
          </postal>
          <email>monica.cortes_sack@nokia.com</email>
        </address>
      </author>
      <author fullname="Joaquín Salvachúa" initials="J." surname="Salvachúa">
        <organization abbrev="Univ. Politecnica de Madrid" showOnFrontPage="true">Universidad Politecnica de Madrid</organization>
        <address>
          <postal>
            <street>Avenida Complutense 30</street>
            <code>28040</code>
            <city>Madrid</city>
            <country>Spain</country>
          </postal>
          <phone>+34 91 0672134</phone>
          <email>Joaquin.salvachua@upm.es</email>
        </address>
      </author>
      <author fullname="Maribel Narganes" initials="M." surname="Narganes">
        <organization abbrev="Tecnalia" showOnFrontPage="true">Tecnalia Research &amp; Innovation</organization>
        <address>
          <postal>
            <extaddr>Parque Científico y Tecnológico de Bizkaia</extaddr>
            <street>Astondo Bidea, Edificio 700</street>
            <code>E-48160</code>
            <city>Derio</city>
            <region>Bizkaia</region>
            <country>Spain</country>
          </postal>
          <phone>+34 946 430 850</phone>
          <email>maribel.narganes@tecnalia.com</email>
        </address>
      </author>
      <author fullname="Iñaki Martínez-Sarriegui" initials="I." surname="Martínez-Sarriegui">
        <organization showOnFrontPage="true">Optiva Media</organization>
        <address>
          <postal>
            <street>Edificio Europa II,</street>
            <street>Calle Musgo 2, 1G,</street>
            <street>28023 Madrid</street>
            <street>Spain</street>
          </postal>
          <phone>+34 91 297 7271</phone>
          <email>inaki.martinez@optivamedia.com</email>
        </address>
      </author>
    </section>
  </back>
</rfc>
