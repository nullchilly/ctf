<?xml version='1.0' encoding='utf-8'?>
<rfc xmlns:xi="http://www.w3.org/2001/XInclude" version="3" category="std" consensus="true" docName="draft-ietf-dtn-tcpclv4-26" indexInclude="true" ipr="trust200902" number="9174" prepTime="2022-01-31T22:39:37" scripts="Common,Latin" sortRefs="false" submissionType="IETF" symRefs="true" tocDepth="3" tocInclude="true" xml:lang="en">
  <link href="https://datatracker.ietf.org/doc/draft-ietf-dtn-tcpclv4-26" rel="prev"/>
  <link href="https://dx.doi.org/10.17487/rfc9174" rel="alternate"/>
  <link href="urn:issn:2070-1721" rel="alternate"/>
  <front>
    <title abbrev="DTN TCPCLv4">Delay-Tolerant Networking TCP Convergence-Layer Protocol Version 4</title>
    <seriesInfo name="RFC" value="9174" stream="IETF"/>
    <author fullname="Brian Sipos" initials="B." surname="Sipos">
      <organization abbrev="RKF Engineering" showOnFrontPage="true">RKF Engineering Solutions, LLC</organization>
      <address>
        <postal>
          <street>7500 Old Georgetown Road</street>
          <street>Suite 1275</street>
          <city>Bethesda</city>
          <region>MD</region>
          <code>20814-6198</code>
          <country>United States of America</country>
        </postal>
        <email>brian.sipos+ietf@gmail.com</email>
      </address>
    </author>
    <author fullname="Michael Demmer" initials="M." surname="Demmer">
      <address>
        <email>demmer@gmail.com</email>
      </address>
    </author>
    <author fullname="Jörg Ott" initials="J." surname="Ott">
      <organization showOnFrontPage="true">Technical University of Munich</organization>
      <address>
        <postal>
          <extaddr>Department of Informatics</extaddr>
          <extaddr>Chair of Connected Mobility</extaddr>
          <street>Boltzmannstrasse 3</street>
          <city>Garching</city>
          <code>DE-85748</code>
          <country>Germany</country>
        </postal>
        <email>ott@in.tum.de</email>
      </address>
    </author>
    <author fullname="Simon Perreault" initials="S." surname="Perreault">
      <organization showOnFrontPage="true">LogMeIn</organization>
      <address>
        <postal>
          <street>410 boulevard Charest Est</street>
          <street>Suite 250</street>
          <city>Quebec</city>
          <region>QC</region>
          <code>G1K 8G3</code>
          <country>Canada</country>
        </postal>
        <email>simon.perreault@logmein.com</email>
      </address>
    </author>
    <date month="01" year="2022"/>
    <area>Transport</area>
    <workgroup>Delay-Tolerant Networking</workgroup>
    <keyword>DTN</keyword>
    <keyword>TCP</keyword>
    <keyword>TLS</keyword>
    <keyword>PKIX</keyword>
    <abstract pn="section-abstract">
      <t indent="0" pn="section-abstract-1">
This document describes a TCP convergence layer (TCPCL) for Delay-Tolerant Networking (DTN). This version of the TCPCL protocol resolves implementation issues in the earlier TCPCL version 3 as defined in RFC 7242 and provides updates to the Bundle Protocol (BP) contents, encodings, and convergence-layer requirements in BP version 7 (BPv7). Specifically, TCPCLv4 uses BPv7 bundles encoded by the Concise Binary Object Representation (CBOR) as its service data unit being transported and provides a reliable transport of such bundles.
This TCPCL version also includes security and extensibility mechanisms.
      </t>
    </abstract>
    <boilerplate>
      <section anchor="status-of-memo" numbered="false" removeInRFC="false" toc="exclude" pn="section-boilerplate.1">
        <name slugifiedName="name-status-of-this-memo">Status of This Memo</name>
        <t indent="0" pn="section-boilerplate.1-1">
            This is an Internet Standards Track document.
        </t>
        <t indent="0" pn="section-boilerplate.1-2">
            This document is a product of the Internet Engineering Task Force
            (IETF).  It represents the consensus of the IETF community.  It has
            received public review and has been approved for publication by
            the Internet Engineering Steering Group (IESG).  Further
            information on Internet Standards is available in Section 2 of 
            RFC 7841.
        </t>
        <t indent="0" pn="section-boilerplate.1-3">
            Information about the current status of this document, any
            errata, and how to provide feedback on it may be obtained at
            <eref target="https://www.rfc-editor.org/info/rfc9174" brackets="none"/>.
        </t>
      </section>
      <section anchor="copyright" numbered="false" removeInRFC="false" toc="exclude" pn="section-boilerplate.2">
        <name slugifiedName="name-copyright-notice">Copyright Notice</name>
        <t indent="0" pn="section-boilerplate.2-1">
            Copyright (c) 2022 IETF Trust and the persons identified as the
            document authors. All rights reserved.
        </t>
        <t indent="0" pn="section-boilerplate.2-2">
            This document is subject to BCP 78 and the IETF Trust's Legal
            Provisions Relating to IETF Documents
            (<eref target="https://trustee.ietf.org/license-info" brackets="none"/>) in effect on the date of
            publication of this document. Please review these documents
            carefully, as they describe your rights and restrictions with
            respect to this document. Code Components extracted from this
            document must include Revised BSD License text as described in
            Section 4.e of the Trust Legal Provisions and are provided without
            warranty as described in the Revised BSD License.
        </t>
      </section>
    </boilerplate>
    <toc>
      <section anchor="toc" numbered="false" removeInRFC="false" toc="exclude" pn="section-toc.1">
        <name slugifiedName="name-table-of-contents">Table of Contents</name>
        <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1">
          <li pn="section-toc.1-1.1">
            <t indent="0" keepWithNext="true" pn="section-toc.1-1.1.1"><xref derivedContent="1" format="counter" sectionFormat="of" target="section-1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-introduction">Introduction</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.1.2">
              <li pn="section-toc.1-1.1.2.1">
                <t indent="0" keepWithNext="true" pn="section-toc.1-1.1.2.1.1"><xref derivedContent="1.1" format="counter" sectionFormat="of" target="section-1.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-scope">Scope</xref></t>
              </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.2">
            <t indent="0" pn="section-toc.1-1.2.1"><xref derivedContent="2" format="counter" sectionFormat="of" target="section-2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-requirements-language">Requirements Language</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.2.2">
              <li pn="section-toc.1-1.2.2.1">
                <t indent="0" keepWithNext="true" pn="section-toc.1-1.2.2.1.1"><xref derivedContent="2.1" format="counter" sectionFormat="of" target="section-2.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-definitions-specific-to-the">Definitions Specific to the TCPCL Protocol</xref></t>
              </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.3">
            <t indent="0" pn="section-toc.1-1.3.1"><xref derivedContent="3" format="counter" sectionFormat="of" target="section-3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-general-protocol-descriptio">General Protocol Description</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.3.2">
              <li pn="section-toc.1-1.3.2.1">
                <t indent="0" pn="section-toc.1-1.3.2.1.1"><xref derivedContent="3.1" format="counter" sectionFormat="of" target="section-3.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-convergence-layer-services">Convergence-Layer Services</xref></t>
              </li>
              <li pn="section-toc.1-1.3.2.2">
                <t indent="0" pn="section-toc.1-1.3.2.2.1"><xref derivedContent="3.2" format="counter" sectionFormat="of" target="section-3.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-tcpcl-session-overview">TCPCL Session Overview</xref></t>
              </li>
              <li pn="section-toc.1-1.3.2.3">
                <t indent="0" pn="section-toc.1-1.3.2.3.1"><xref derivedContent="3.3" format="counter" sectionFormat="of" target="section-3.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-tcpcl-states-and-transition">TCPCL States and Transitions</xref></t>
              </li>
              <li pn="section-toc.1-1.3.2.4">
                <t indent="0" pn="section-toc.1-1.3.2.4.1"><xref derivedContent="3.4" format="counter" sectionFormat="of" target="section-3.4"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-pkix-environments-and-ca-po">PKIX Environments and CA Policy</xref></t>
              </li>
              <li pn="section-toc.1-1.3.2.5">
                <t indent="0" pn="section-toc.1-1.3.2.5.1"><xref derivedContent="3.5" format="counter" sectionFormat="of" target="section-3.5"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-session-keeping-policies">Session-Keeping Policies</xref></t>
              </li>
              <li pn="section-toc.1-1.3.2.6">
                <t indent="0" pn="section-toc.1-1.3.2.6.1"><xref derivedContent="3.6" format="counter" sectionFormat="of" target="section-3.6"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-transfer-segmentation-polic">Transfer Segmentation Policies</xref></t>
              </li>
              <li pn="section-toc.1-1.3.2.7">
                <t indent="0" pn="section-toc.1-1.3.2.7.1"><xref derivedContent="3.7" format="counter" sectionFormat="of" target="section-3.7"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-example-message-exchange">Example Message Exchange</xref></t>
              </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.4">
            <t indent="0" pn="section-toc.1-1.4.1"><xref derivedContent="4" format="counter" sectionFormat="of" target="section-4"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-session-establishment">Session Establishment</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.4.2">
              <li pn="section-toc.1-1.4.2.1">
                <t indent="0" pn="section-toc.1-1.4.2.1.1"><xref derivedContent="4.1" format="counter" sectionFormat="of" target="section-4.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-tcp-connection">TCP Connection</xref></t>
              </li>
              <li pn="section-toc.1-1.4.2.2">
                <t indent="0" pn="section-toc.1-1.4.2.2.1"><xref derivedContent="4.2" format="counter" sectionFormat="of" target="section-4.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-contact-header">Contact Header</xref></t>
              </li>
              <li pn="section-toc.1-1.4.2.3">
                <t indent="0" pn="section-toc.1-1.4.2.3.1"><xref derivedContent="4.3" format="counter" sectionFormat="of" target="section-4.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-contact-validation-and-nego">Contact Validation and Negotiation</xref></t>
              </li>
              <li pn="section-toc.1-1.4.2.4">
                <t indent="0" pn="section-toc.1-1.4.2.4.1"><xref derivedContent="4.4" format="counter" sectionFormat="of" target="section-4.4"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-session-security">Session Security</xref></t>
                <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.4.2.4.2">
                  <li pn="section-toc.1-1.4.2.4.2.1">
                    <t indent="0" pn="section-toc.1-1.4.2.4.2.1.1"><xref derivedContent="4.4.1" format="counter" sectionFormat="of" target="section-4.4.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-entity-identification">Entity Identification</xref></t>
                  </li>
                  <li pn="section-toc.1-1.4.2.4.2.2">
                    <t indent="0" pn="section-toc.1-1.4.2.4.2.2.1"><xref derivedContent="4.4.2" format="counter" sectionFormat="of" target="section-4.4.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-certificate-profile-for-the">Certificate Profile for the TCPCL</xref></t>
                  </li>
                  <li pn="section-toc.1-1.4.2.4.2.3">
                    <t indent="0" pn="section-toc.1-1.4.2.4.2.3.1"><xref derivedContent="4.4.3" format="counter" sectionFormat="of" target="section-4.4.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-tls-handshake">TLS Handshake</xref></t>
                  </li>
                  <li pn="section-toc.1-1.4.2.4.2.4">
                    <t indent="0" pn="section-toc.1-1.4.2.4.2.4.1"><xref derivedContent="4.4.4" format="counter" sectionFormat="of" target="section-4.4.4"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-tls-authentication">TLS Authentication</xref></t>
                  </li>
                  <li pn="section-toc.1-1.4.2.4.2.5">
                    <t indent="0" pn="section-toc.1-1.4.2.4.2.5.1"><xref derivedContent="4.4.5" format="counter" sectionFormat="of" target="section-4.4.5"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-policy-recommendations">Policy Recommendations</xref></t>
                  </li>
                  <li pn="section-toc.1-1.4.2.4.2.6">
                    <t indent="0" pn="section-toc.1-1.4.2.4.2.6.1"><xref derivedContent="4.4.6" format="counter" sectionFormat="of" target="section-4.4.6"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-example-tls-initiation">Example TLS Initiation</xref></t>
                  </li>
                </ul>
              </li>
              <li pn="section-toc.1-1.4.2.5">
                <t indent="0" pn="section-toc.1-1.4.2.5.1"><xref derivedContent="4.5" format="counter" sectionFormat="of" target="section-4.5"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-message-header">Message Header</xref></t>
              </li>
              <li pn="section-toc.1-1.4.2.6">
                <t indent="0" pn="section-toc.1-1.4.2.6.1"><xref derivedContent="4.6" format="counter" sectionFormat="of" target="section-4.6"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-session-initialization-mess">Session Initialization Message (SESS_INIT)</xref></t>
              </li>
              <li pn="section-toc.1-1.4.2.7">
                <t indent="0" pn="section-toc.1-1.4.2.7.1"><xref derivedContent="4.7" format="counter" sectionFormat="of" target="section-4.7"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-session-parameter-negotiati">Session Parameter Negotiation</xref></t>
              </li>
              <li pn="section-toc.1-1.4.2.8">
                <t indent="0" pn="section-toc.1-1.4.2.8.1"><xref derivedContent="4.8" format="counter" sectionFormat="of" target="section-4.8"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-session-extension-items">Session Extension Items</xref></t>
              </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.5">
            <t indent="0" pn="section-toc.1-1.5.1"><xref derivedContent="5" format="counter" sectionFormat="of" target="section-5"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-established-session-operati">Established Session Operation</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.5.2">
              <li pn="section-toc.1-1.5.2.1">
                <t indent="0" pn="section-toc.1-1.5.2.1.1"><xref derivedContent="5.1" format="counter" sectionFormat="of" target="section-5.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-upkeep-and-status-messages">Upkeep and Status Messages</xref></t>
                <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.5.2.1.2">
                  <li pn="section-toc.1-1.5.2.1.2.1">
                    <t indent="0" pn="section-toc.1-1.5.2.1.2.1.1"><xref derivedContent="5.1.1" format="counter" sectionFormat="of" target="section-5.1.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-session-upkeep-keepalive">Session Upkeep (KEEPALIVE)</xref></t>
                  </li>
                  <li pn="section-toc.1-1.5.2.1.2.2">
                    <t indent="0" pn="section-toc.1-1.5.2.1.2.2.1"><xref derivedContent="5.1.2" format="counter" sectionFormat="of" target="section-5.1.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-message-rejection-msg_rejec">Message Rejection (MSG_REJECT)</xref></t>
                  </li>
                </ul>
              </li>
              <li pn="section-toc.1-1.5.2.2">
                <t indent="0" pn="section-toc.1-1.5.2.2.1"><xref derivedContent="5.2" format="counter" sectionFormat="of" target="section-5.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-bundle-transfer">Bundle Transfer</xref></t>
                <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.5.2.2.2">
                  <li pn="section-toc.1-1.5.2.2.2.1">
                    <t indent="0" pn="section-toc.1-1.5.2.2.2.1.1"><xref derivedContent="5.2.1" format="counter" sectionFormat="of" target="section-5.2.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-bundle-transfer-id">Bundle Transfer ID</xref></t>
                  </li>
                  <li pn="section-toc.1-1.5.2.2.2.2">
                    <t indent="0" pn="section-toc.1-1.5.2.2.2.2.1"><xref derivedContent="5.2.2" format="counter" sectionFormat="of" target="section-5.2.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-data-transmission-xfer_segm">Data Transmission (XFER_SEGMENT)</xref></t>
                  </li>
                  <li pn="section-toc.1-1.5.2.2.2.3">
                    <t indent="0" pn="section-toc.1-1.5.2.2.2.3.1"><xref derivedContent="5.2.3" format="counter" sectionFormat="of" target="section-5.2.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-data-acknowledgments-xfer_a">Data Acknowledgments (XFER_ACK)</xref></t>
                  </li>
                  <li pn="section-toc.1-1.5.2.2.2.4">
                    <t indent="0" pn="section-toc.1-1.5.2.2.2.4.1"><xref derivedContent="5.2.4" format="counter" sectionFormat="of" target="section-5.2.4"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-transfer-refusal-xfer_refus">Transfer Refusal (XFER_REFUSE)</xref></t>
                  </li>
                  <li pn="section-toc.1-1.5.2.2.2.5">
                    <t indent="0" pn="section-toc.1-1.5.2.2.2.5.1"><xref derivedContent="5.2.5" format="counter" sectionFormat="of" target="section-5.2.5"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-transfer-extension-items">Transfer Extension Items</xref></t>
                  </li>
                </ul>
              </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.6">
            <t indent="0" pn="section-toc.1-1.6.1"><xref derivedContent="6" format="counter" sectionFormat="of" target="section-6"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-session-termination">Session Termination</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.6.2">
              <li pn="section-toc.1-1.6.2.1">
                <t indent="0" pn="section-toc.1-1.6.2.1.1"><xref derivedContent="6.1" format="counter" sectionFormat="of" target="section-6.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-session-termination-message">Session Termination Message (SESS_TERM)</xref></t>
              </li>
              <li pn="section-toc.1-1.6.2.2">
                <t indent="0" pn="section-toc.1-1.6.2.2.1"><xref derivedContent="6.2" format="counter" sectionFormat="of" target="section-6.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-idle-session-termination">Idle Session Termination</xref></t>
              </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.7">
            <t indent="0" pn="section-toc.1-1.7.1"><xref derivedContent="7" format="counter" sectionFormat="of" target="section-7"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-security-considerations">Security Considerations</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.7.2">
              <li pn="section-toc.1-1.7.2.1">
                <t indent="0" pn="section-toc.1-1.7.2.1.1"><xref derivedContent="7.1" format="counter" sectionFormat="of" target="section-7.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-threat-passive-leak-of-node">Threat: Passive Leak of Node Data</xref></t>
              </li>
              <li pn="section-toc.1-1.7.2.2">
                <t indent="0" pn="section-toc.1-1.7.2.2.1"><xref derivedContent="7.2" format="counter" sectionFormat="of" target="section-7.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-threat-passive-leak-of-bund">Threat: Passive Leak of Bundle Data</xref></t>
              </li>
              <li pn="section-toc.1-1.7.2.3">
                <t indent="0" pn="section-toc.1-1.7.2.3.1"><xref derivedContent="7.3" format="counter" sectionFormat="of" target="section-7.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-threat-tcpcl-version-downgr">Threat: TCPCL Version Downgrade</xref></t>
              </li>
              <li pn="section-toc.1-1.7.2.4">
                <t indent="0" pn="section-toc.1-1.7.2.4.1"><xref derivedContent="7.4" format="counter" sectionFormat="of" target="section-7.4"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-threat-transport-security-s">Threat: Transport Security Stripping</xref></t>
              </li>
              <li pn="section-toc.1-1.7.2.5">
                <t indent="0" pn="section-toc.1-1.7.2.5.1"><xref derivedContent="7.5" format="counter" sectionFormat="of" target="section-7.5"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-threat-weak-tls-configurati">Threat: Weak TLS Configurations</xref></t>
              </li>
              <li pn="section-toc.1-1.7.2.6">
                <t indent="0" pn="section-toc.1-1.7.2.6.1"><xref derivedContent="7.6" format="counter" sectionFormat="of" target="section-7.6"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-threat-untrusted-end-entity">Threat: Untrusted End-Entity Certificate</xref></t>
              </li>
              <li pn="section-toc.1-1.7.2.7">
                <t indent="0" pn="section-toc.1-1.7.2.7.1"><xref derivedContent="7.7" format="counter" sectionFormat="of" target="section-7.7"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-threat-certificate-validati">Threat: Certificate Validation Vulnerabilities</xref></t>
              </li>
              <li pn="section-toc.1-1.7.2.8">
                <t indent="0" pn="section-toc.1-1.7.2.8.1"><xref derivedContent="7.8" format="counter" sectionFormat="of" target="section-7.8"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-threat-symmetric-key-limits">Threat: Symmetric Key Limits</xref></t>
              </li>
              <li pn="section-toc.1-1.7.2.9">
                <t indent="0" pn="section-toc.1-1.7.2.9.1"><xref derivedContent="7.9" format="counter" sectionFormat="of" target="section-7.9"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-threat-bp-node-impersonatio">Threat: BP Node Impersonation</xref></t>
              </li>
              <li pn="section-toc.1-1.7.2.10">
                <t indent="0" pn="section-toc.1-1.7.2.10.1"><xref derivedContent="7.10" format="counter" sectionFormat="of" target="section-7.10"/>. <xref derivedContent="" format="title" sectionFormat="of" target="name-threat-denial-of-service">Threat: Denial of Service</xref></t>
              </li>
              <li pn="section-toc.1-1.7.2.11">
                <t indent="0" pn="section-toc.1-1.7.2.11.1"><xref derivedContent="7.11" format="counter" sectionFormat="of" target="section-7.11"/>. <xref derivedContent="" format="title" sectionFormat="of" target="name-mandatory-to-implement-tls">Mandatory-to-Implement TLS</xref></t>
              </li>
              <li pn="section-toc.1-1.7.2.12">
                <t indent="0" pn="section-toc.1-1.7.2.12.1"><xref derivedContent="7.12" format="counter" sectionFormat="of" target="section-7.12"/>. <xref derivedContent="" format="title" sectionFormat="of" target="name-alternate-uses-of-tls">Alternate Uses of TLS</xref></t>
                <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.7.2.12.2">
                  <li pn="section-toc.1-1.7.2.12.2.1">
                    <t indent="0" pn="section-toc.1-1.7.2.12.2.1.1"><xref derivedContent="7.12.1" format="counter" sectionFormat="of" target="section-7.12.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-tls-without-authentication">TLS without Authentication</xref></t>
                  </li>
                  <li pn="section-toc.1-1.7.2.12.2.2">
                    <t indent="0" pn="section-toc.1-1.7.2.12.2.2.1"><xref derivedContent="7.12.2" format="counter" sectionFormat="of" target="section-7.12.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-non-certificate-tls-use">Non-certificate TLS Use</xref></t>
                  </li>
                </ul>
              </li>
              <li pn="section-toc.1-1.7.2.13">
                <t indent="0" pn="section-toc.1-1.7.2.13.1"><xref derivedContent="7.13" format="counter" sectionFormat="of" target="section-7.13"/>. <xref derivedContent="" format="title" sectionFormat="of" target="name-predictability-of-transfer-">Predictability of Transfer IDs</xref></t>
              </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.8">
            <t indent="0" pn="section-toc.1-1.8.1"><xref derivedContent="8" format="counter" sectionFormat="of" target="section-8"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-iana-considerations">IANA Considerations</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.8.2">
              <li pn="section-toc.1-1.8.2.1">
                <t indent="0" pn="section-toc.1-1.8.2.1.1"><xref derivedContent="8.1" format="counter" sectionFormat="of" target="section-8.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-port-number">Port Number</xref></t>
              </li>
              <li pn="section-toc.1-1.8.2.2">
                <t indent="0" pn="section-toc.1-1.8.2.2.1"><xref derivedContent="8.2" format="counter" sectionFormat="of" target="section-8.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-protocol-versions">Protocol Versions</xref></t>
              </li>
              <li pn="section-toc.1-1.8.2.3">
                <t indent="0" pn="section-toc.1-1.8.2.3.1"><xref derivedContent="8.3" format="counter" sectionFormat="of" target="section-8.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-session-extension-types">Session Extension Types</xref></t>
              </li>
              <li pn="section-toc.1-1.8.2.4">
                <t indent="0" pn="section-toc.1-1.8.2.4.1"><xref derivedContent="8.4" format="counter" sectionFormat="of" target="section-8.4"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-transfer-extension-types">Transfer Extension Types</xref></t>
              </li>
              <li pn="section-toc.1-1.8.2.5">
                <t indent="0" pn="section-toc.1-1.8.2.5.1"><xref derivedContent="8.5" format="counter" sectionFormat="of" target="section-8.5"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-message-types">Message Types</xref></t>
              </li>
              <li pn="section-toc.1-1.8.2.6">
                <t indent="0" pn="section-toc.1-1.8.2.6.1"><xref derivedContent="8.6" format="counter" sectionFormat="of" target="section-8.6"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-xfer_refuse-reason-codes-2">XFER_REFUSE Reason Codes</xref></t>
              </li>
              <li pn="section-toc.1-1.8.2.7">
                <t indent="0" pn="section-toc.1-1.8.2.7.1"><xref derivedContent="8.7" format="counter" sectionFormat="of" target="section-8.7"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-sess_term-reason-codes-2">SESS_TERM Reason Codes</xref></t>
              </li>
              <li pn="section-toc.1-1.8.2.8">
                <t indent="0" pn="section-toc.1-1.8.2.8.1"><xref derivedContent="8.8" format="counter" sectionFormat="of" target="section-8.8"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-msg_reject-reason-codes-2">MSG_REJECT Reason Codes</xref></t>
              </li>
              <li pn="section-toc.1-1.8.2.9">
                <t indent="0" pn="section-toc.1-1.8.2.9.1"><xref derivedContent="8.9" format="counter" sectionFormat="of" target="section-8.9"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-object-identifier-for-pkix-">Object Identifier for PKIX Module Identifier</xref></t>
              </li>
              <li pn="section-toc.1-1.8.2.10">
                <t indent="0" pn="section-toc.1-1.8.2.10.1"><xref derivedContent="8.10" format="counter" sectionFormat="of" target="section-8.10"/>. <xref derivedContent="" format="title" sectionFormat="of" target="name-object-identifier-for-pkix-o">Object Identifier for PKIX Other Name Forms</xref></t>
              </li>
              <li pn="section-toc.1-1.8.2.11">
                <t indent="0" pn="section-toc.1-1.8.2.11.1"><xref derivedContent="8.11" format="counter" sectionFormat="of" target="section-8.11"/>. <xref derivedContent="" format="title" sectionFormat="of" target="name-object-identifier-for-pkix-e">Object Identifier for PKIX Extended Key Usage</xref></t>
              </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.9">
            <t indent="0" pn="section-toc.1-1.9.1"><xref derivedContent="9" format="counter" sectionFormat="of" target="section-9"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-references">References</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.9.2">
              <li pn="section-toc.1-1.9.2.1">
                <t indent="0" pn="section-toc.1-1.9.2.1.1"><xref derivedContent="9.1" format="counter" sectionFormat="of" target="section-9.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-normative-references">Normative References</xref></t>
              </li>
              <li pn="section-toc.1-1.9.2.2">
                <t indent="0" pn="section-toc.1-1.9.2.2.1"><xref derivedContent="9.2" format="counter" sectionFormat="of" target="section-9.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-informative-references">Informative References</xref></t>
              </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.10">
            <t indent="0" pn="section-toc.1-1.10.1"><xref derivedContent="Appendix A" format="default" sectionFormat="of" target="section-appendix.a"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-significant-changes-from-rf">Significant Changes from RFC 7242</xref></t>
          </li>
          <li pn="section-toc.1-1.11">
            <t indent="0" pn="section-toc.1-1.11.1"><xref derivedContent="Appendix B" format="default" sectionFormat="of" target="section-appendix.b"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-asn1-module">ASN.1 Module</xref></t>
          </li>
          <li pn="section-toc.1-1.12">
            <t indent="0" pn="section-toc.1-1.12.1"><xref derivedContent="Appendix C" format="default" sectionFormat="of" target="section-appendix.c"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-example-of-the-bundleeid-ot">Example of the BundleEID Other Name Form</xref></t>
          </li>
          <li pn="section-toc.1-1.13">
            <t indent="0" pn="section-toc.1-1.13.1"><xref derivedContent="" format="none" sectionFormat="of" target="section-appendix.d"/><xref derivedContent="" format="title" sectionFormat="of" target="name-acknowledgments">Acknowledgments</xref></t>
          </li>
          <li pn="section-toc.1-1.14">
            <t indent="0" pn="section-toc.1-1.14.1"><xref derivedContent="" format="none" sectionFormat="of" target="section-appendix.e"/><xref derivedContent="" format="title" sectionFormat="of" target="name-authors-addresses">Authors' Addresses</xref></t>
          </li>
        </ul>
      </section>
    </toc>
  </front>
  <middle>
    <section anchor="sec-intro" numbered="true" removeInRFC="false" toc="include" pn="section-1">
      <name slugifiedName="name-introduction">Introduction</name>
      <t indent="0" pn="section-1-1">
This document describes the TCP convergence-layer protocol for Delay-Tolerant Networking (DTN).
DTN is an end-to-end architecture providing communications in and/or through highly stressed environments, including those with intermittent connectivity, long and/or variable delays, and high bit error rates.
More detailed descriptions of the rationale and capabilities of these networks can be found in "<xref target="RFC4838" format="title" sectionFormat="of" derivedContent="Delay-Tolerant Networking Architecture"/>" <xref target="RFC4838" format="default" sectionFormat="of" derivedContent="RFC4838"/>.
      </t>
      <t indent="0" pn="section-1-2">
An important goal of the DTN architecture is to accommodate a wide range of networking technologies and environments.
The protocol used for DTN communications is the Bundle Protocol version 7 (BPv7) <xref target="RFC9171" format="default" sectionFormat="of" derivedContent="RFC9171"/>, an application-layer protocol that is used to construct a store-and-forward overlay network.
BPv7 requires the services of a "convergence-layer adapter" (CLA) to send and receive bundles using the service of some "native" link, network, or Internet protocol.
This document describes one such convergence-layer adapter that uses the well-known Transmission Control Protocol (TCP).
This convergence layer is referred to as TCP Convergence Layer version 4 (TCPCLv4).
For the remainder of this document,</t>
      <ul spacing="normal" bare="false" empty="false" indent="3" pn="section-1-3">
        <li pn="section-1-3.1">the abbreviation "BP" without the version suffix refers to BPv7.</li>
        <li pn="section-1-3.2">the abbreviation "TCPCL" without the version suffix refers to TCPCLv4.</li>
      </ul>
      <t indent="0" pn="section-1-4">
The locations of the TCPCL and the Bundle Protocol in the Internet model protocol stack (described in <xref target="RFC1122" format="default" sectionFormat="of" derivedContent="RFC1122"/>) are shown in <xref target="fig-tcpcl-ip-stack" format="default" sectionFormat="of" derivedContent="Figure 1"/>.
In particular, when BP is using TCP as its bearer with the TCPCL as its convergence layer, both BP and the TCPCL reside at the application layer of the Internet model.
      </t>
      <figure anchor="fig-tcpcl-ip-stack" align="left" suppress-title="false" pn="figure-1">
        <name slugifiedName="name-the-locations-of-the-bundle">The Locations of the Bundle Protocol and the TCP Convergence-Layer Protocol above the Internet Protocol Stack</name>
        <artwork align="center" type="ascii-art" pn="section-1-5.1">
+-------------------------+
|     DTN Application     | -\
+-------------------------|   |
|  Bundle Protocol (BP)   |   -&gt; Application Layer
+-------------------------+   |
| TCP Conv. Layer (TCPCL) |   |
+-------------------------+   |
|     TLS (optional)      | -/
+-------------------------+
|          TCP            | ---&gt; Transport Layer
+-------------------------+
|       IPv4/IPv6         | ---&gt; Network Layer
+-------------------------+
|   Link-Layer Protocol   | ---&gt; Link Layer
+-------------------------+
</artwork>
      </figure>
      <section numbered="true" removeInRFC="false" toc="include" pn="section-1.1">
        <name slugifiedName="name-scope">Scope</name>
        <t indent="0" pn="section-1.1-1">
This document describes the format of the protocol data units passed between entities participating in TCPCL communications.
This document does not address:
        </t>
        <ul spacing="normal" bare="false" empty="false" indent="3" pn="section-1.1-2">
          <li pn="section-1.1-2.1">
The format of protocol data units of the Bundle Protocol, as those are defined elsewhere in <xref target="RFC9171" format="default" sectionFormat="of" derivedContent="RFC9171"/>.
This includes the concept of bundle fragmentation or bundle encapsulation.
The TCPCL transfers bundles as opaque data blocks.
            </li>
          <li pn="section-1.1-2.2">
Mechanisms for locating or identifying other bundle entities (peers) within a network or across an internet.
The mapping of a node ID to a potential convergence layer (CL) protocol and network address is left to implementation and configuration of the BP Agent (BPA) and its various potential routing strategies, as is the mapping of a DNS name and/or address to a choice of an end-entity certificate to authenticate a node to its peers.
            </li>
          <li pn="section-1.1-2.3">
Logic for routing bundles along a path toward a bundle's endpoint.
This CL protocol is involved only in transporting bundles between adjacent entities in a routing sequence.
            </li>
          <li pn="section-1.1-2.4">
Policies or mechanisms for issuing Public Key Infrastructure Using X.509 (PKIX) certificates; provisioning, deploying, or accessing certificates and private keys; deploying or accessing certificate revocation lists (CRLs); or configuring security parameters on an individual entity or across a network.
            </li>
          <li pn="section-1.1-2.5">
Uses of TLS that are not based on PKIX certificate authentication (see <xref target="sec-security-tlsnopki" format="default" sectionFormat="of" derivedContent="Section 7.12.2"/>) or in which authentication of both entities is not possible (see <xref target="sec-security-tlsnoauth" format="default" sectionFormat="of" derivedContent="Section 7.12.1"/>).
            </li>
        </ul>
        <t indent="0" pn="section-1.1-3">
Any TCPCL implementation requires a BPA to perform those above-listed functions in order to perform end-to-end bundle delivery.
        </t>
      </section>
    </section>
    <section numbered="true" removeInRFC="false" toc="include" pn="section-2">
      <name slugifiedName="name-requirements-language">Requirements Language</name>
      <t indent="0" pn="section-2-1">The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>",
       "<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>",
       "<bcp14>SHALL NOT</bcp14>", "<bcp14>SHOULD</bcp14>",
       "<bcp14>SHOULD NOT</bcp14>",
       "<bcp14>RECOMMENDED</bcp14>", "<bcp14>NOT RECOMMENDED</bcp14>",
       "<bcp14>MAY</bcp14>", and "<bcp14>OPTIONAL</bcp14>" in this document
       are to be interpreted as described in BCP 14
       <xref target="RFC2119" format="default" sectionFormat="of" derivedContent="RFC2119"/> <xref target="RFC8174" format="default" sectionFormat="of" derivedContent="RFC8174"/> when, and only
       when, they appear in all capitals, as shown here.</t>
      <section anchor="sec-term-defs" numbered="true" removeInRFC="false" toc="include" pn="section-2.1">
        <name slugifiedName="name-definitions-specific-to-the">Definitions Specific to the TCPCL Protocol</name>
        <t indent="0" pn="section-2.1-1">
This section contains definitions specific to the TCPCL protocol.
        </t>
        <dl newline="false" spacing="normal" indent="3" pn="section-2.1-2">
          <dt pn="section-2.1-2.1">Network Byte Order:</dt>
          <dd pn="section-2.1-2.2">
Here, "network byte order" means most significant byte first, a.k.a. big endian.
All of the integer encodings in this protocol <bcp14>SHALL</bcp14> be transmitted in network byte order.
            </dd>
          <dt pn="section-2.1-2.3">TCPCL Entity:</dt>
          <dd pn="section-2.1-2.4">
            <t indent="0" pn="section-2.1-2.4.1">
This is the notional TCPCL application that initiates TCPCL sessions.
This design, implementation, configuration, and specific behavior of such an entity is outside of the scope of this document.
However, the concept of an entity has utility within the scope of this document as the container and initiator of TCPCL sessions.
The relationship between a TCPCL entity and TCPCL sessions is defined as follows:
            </t>
            <ul spacing="normal" bare="false" empty="false" indent="3" pn="section-2.1-2.4.2">
              <li pn="section-2.1-2.4.2.1">
A TCPCL entity <bcp14>MAY</bcp14> actively initiate any number of TCPCL sessions and should do so whenever the entity is the initial transmitter of information to another entity in the network.
                </li>
              <li pn="section-2.1-2.4.2.2">
A TCPCL entity <bcp14>MAY</bcp14> support zero or more passive listening elements that listen for connection requests from other TCPCL entities operating on other entities in the network.
                </li>
              <li pn="section-2.1-2.4.2.3">
A TCPCL entity <bcp14>MAY</bcp14> passively initiate any number of TCPCL sessions from requests received by its passive listening element(s) if the entity uses such elements.
                </li>
            </ul>
            <t indent="0" pn="section-2.1-2.4.3">
These relationships are illustrated in <xref target="fig-entity-session-relations" format="default" sectionFormat="of" derivedContent="Figure 2"/>.
For most TCPCL behavior within a session, the two entities are symmetric and there is no protocol distinction between them.
Some specific behavior, particularly during session establishment, distinguishes between the active entity and the passive entity.
For the remainder of this document, the term "entity" without the prefix "TCPCL" refers to a TCPCL entity.
            </t>
          </dd>
          <dt pn="section-2.1-2.5">TCP Connection:</dt>
          <dd pn="section-2.1-2.6">
The term "connection" in this specification exclusively refers to a TCP connection and any and all behaviors, sessions, and other states associated with that TCP connection.
            </dd>
          <dt pn="section-2.1-2.7">TCPCL Session:</dt>
          <dd pn="section-2.1-2.8">
A TCPCL session (as opposed to a TCP connection) is a TCPCL communication relationship between two TCPCL entities.
A TCPCL session operates within a single underlying TCP connection, and the lifetime of a TCPCL session is bound to the lifetime of that TCP connection.
A TCPCL session is terminated when the TCP connection ends, due to either (1) one or both entities actively closing the TCP connection or (2) network errors causing a failure of the TCP connection.
Within a single TCPCL session, there are two possible transfer streams: one in each direction, with one stream from each entity being the outbound stream and the other being the inbound stream (see <xref target="fig-session-stream" format="default" sectionFormat="of" derivedContent="Figure 3"/>).
From the perspective of a TCPCL session, the two transfer streams do not logically interact with each other.
The streams do operate over the same TCP connection and between the same BPAs, so there are logical relationships at those layers (message and bundle interleaving, respectively).
For the remainder of this document, the term "session" without the prefix "TCPCL" refers to a TCPCL session.
            </dd>
          <dt pn="section-2.1-2.9">Session Parameters:</dt>
          <dd pn="section-2.1-2.10">
These are a set of values used to affect the operation of the TCPCL for a given session.
The manner in which these parameters are conveyed to the bundle entity and thereby to the TCPCL is implementation dependent.
However, the mechanism by which two entities exchange and negotiate the values to be used for a given session is described in <xref target="sec-contact-negotiate" format="default" sectionFormat="of" derivedContent="Section 4.3"/>.
            </dd>
          <dt pn="section-2.1-2.11">Transfer Stream:</dt>
          <dd pn="section-2.1-2.12">
A transfer stream is a unidirectional user-data path within a TCPCL session.
Transfers sent over a transfer stream are serialized, meaning that one transfer must complete its transmission prior to another transfer being started over the same transfer stream.
At the stream layer, there is no logical relationship between transfers in that stream; it's only within the BPA that transfers are fully decoded as bundles.
Each unidirectional stream has a single sender entity and a single receiver entity.
            </dd>
          <dt pn="section-2.1-2.13">Transfer:</dt>
          <dd pn="section-2.1-2.14">
This refers to the procedures and mechanisms for conveyance of an individual bundle from one node to another.
Each transfer within the TCPCL is identified by a Transfer ID number, which is guaranteed to be unique only to a single direction within a single session.
            </dd>
          <dt pn="section-2.1-2.15">Transfer Segment:</dt>
          <dd pn="section-2.1-2.16">
A transfer segment is a subset of a transfer of user data being communicated over a transfer stream.
            </dd>
          <dt pn="section-2.1-2.17">Idle Session:</dt>
          <dd pn="section-2.1-2.18">
A TCPCL session is idle while there is no transmission in progress in either direction.
While idle, the only messages being transmitted or received are KEEPALIVE messages.
            </dd>
          <dt pn="section-2.1-2.19">Live Session:</dt>
          <dd pn="section-2.1-2.20">
A TCPCL session is live while there is a transmission in progress in either direction.
            </dd>
          <dt pn="section-2.1-2.21">Reason Codes:</dt>
          <dd pn="section-2.1-2.22">
The TCPCL uses numeric codes to encode specific reasons for individual failure/error message types.
            </dd>
        </dl>
        <t indent="0" pn="section-2.1-3">
The relationship between connections, sessions, and streams is shown in <xref target="fig-session-stream" format="default" sectionFormat="of" derivedContent="Figure 3"/>.
        </t>
        <figure anchor="fig-entity-session-relations" align="left" suppress-title="false" pn="figure-2">
          <name slugifiedName="name-the-relationships-between-t">The Relationships between TCPCL Entities</name>
          <artwork align="center" type="ascii-art" pn="section-2.1-4.1">
+--------------------------------------------+
|                 TCPCL Entity               |
|                                            |      +----------------+
|   +--------------------------------+       |      |                |-+
|   | Actively Initiated Session #1  +-------------&gt;| Other          | |
|   +--------------------------------+       |      | TCPCL Entity's | |
|                  ...                       |      | Passive        | |
|   +--------------------------------+       |      | Listener       | |
|   | Actively Initiated Session #n  +-------------&gt;|                | |
|   +--------------------------------+       |      +----------------+ |
|                                            |       +-----------------+
|      +---------------------------+         |
|  +---| +---------------------------+       |      +----------------+
|  |   | | Optional Passive          |       |      |                |-+
|  |   +-| Listener(s)               +&lt;-------------+                | |
|  |     +---------------------------+       |      |                | |
|  |                                         |      | Other          | |
|  |    +---------------------------------+  |      | TCPCL Entity's | |
|  +---&gt;| Passively Initiated Session #1  +--------&gt;| Active         | |
|  |    +---------------------------------+  |      | Initiator(s)   | |
|  |                                         |      |                | |
|  |    +---------------------------------+  |      |                | |
|  +---&gt;| Passively Initiated Session #n  +--------&gt;|                | |
|       +---------------------------------+  |      +----------------+ |
|                                            |       +-----------------+
+--------------------------------------------+
</artwork>
        </figure>
        <figure anchor="fig-session-stream" align="left" suppress-title="false" pn="figure-3">
          <name slugifiedName="name-the-relationship-within-a-t">The Relationship within a TCPCL Session of its Two Streams</name>
          <artwork align="center" type="ascii-art" pn="section-2.1-5.1">
+---------------------------+              +---------------------------+
|    "Own" TCPCL Session    |              |   "Other" TCPCL Session   |
|                           |              |                           |
| +----------------------+  |              |  +----------------------+ |
| |   TCP Connection     |  |              |  |    TCP Connection    | |
| |                      |  |              |  |                      | |
| | +-----------------+  |  |   Messages   |  |  +-----------------+ | |
| | |   Own Inbound   |  +--------------------+  |  Peer Outbound  | | |
| | | Transfer Stream |                          | Transfer Stream | | |
| | |       -----     |&lt;---[Seg]--[Seg]--[Seg]---|       -----     | | |
| | |     RECEIVER    |---[Ack]----[Ack]--------&gt;|      SENDER     | | |
| | +-----------------+                          +-----------------+ | |
| |                                                                  | |
| | +-----------------+                          +-----------------+ | |
| | | Own Outbound    |-------[Seg]---[Seg]-----&gt;|  Peer Inbound   | | |
| | | Transfer Stream |&lt;---[Ack]----[Ack]-[Ack]--| Transfer Stream | | |
| | |       -----     |                          |       -----     | | |
| | |      SENDER     |   +--------------------+ |     RECEIVER    | | |
| | +-----------------+   |  |              |  | +-----------------+ | |
| +-----------------------+  |              |  +---------------------+ |
+----------------------------+              +--------------------------+
</artwork>
        </figure>
      </section>
    </section>
    <section anchor="sec-prococol" numbered="true" removeInRFC="false" toc="include" pn="section-3">
      <name slugifiedName="name-general-protocol-descriptio">General Protocol Description</name>
      <t indent="0" pn="section-3-1">
The service of this protocol is the transmission of DTN bundles via TCP.
This document specifies the encapsulation of bundles, procedures for TCP setup and teardown, and a set of messages and entity requirements.
The general operation of the protocol is as follows.
      </t>
      <section anchor="sec-cl-services" numbered="true" removeInRFC="false" toc="include" pn="section-3.1">
        <name slugifiedName="name-convergence-layer-services">Convergence-Layer Services</name>
        <t indent="0" pn="section-3.1-1">
This version of the TCPCL protocol provides the following services to support the overlaying BPA.
In all cases, this is not an API definition but a logical description of how the CL can interact with the BPA.
Each of these interactions can be associated with any number of additional metadata items as necessary to support the operation of the CL or BPA.
        </t>
        <dl newline="false" spacing="normal" indent="3" pn="section-3.1-2">
          <dt pn="section-3.1-2.1">Attempt Session:</dt>
          <dd pn="section-3.1-2.2">
The TCPCL allows a BPA to preemptively attempt to establish a TCPCL session with a peer entity.
Each session attempt can send a different set of session negotiation parameters as directed by the BPA.
            </dd>
          <dt pn="section-3.1-2.3">Terminate Session:</dt>
          <dd pn="section-3.1-2.4">
The TCPCL allows a BPA to preemptively terminate an established TCPCL session with a peer entity.
The terminate request is done on a per-session basis.
            </dd>
          <dt pn="section-3.1-2.5">Session State Changed:</dt>
          <dd pn="section-3.1-2.6">
            <t indent="0" pn="section-3.1-2.6.1">
The TCPCL entity indicates to the BPA when the session state changes.
The top-level session states indicated are as follows:
            </t>
            <dl newline="false" spacing="normal" indent="3" pn="section-3.1-2.6.2">
              <dt pn="section-3.1-2.6.2.1">Connecting:</dt>
              <dd pn="section-3.1-2.6.2.2">A TCP connection is being established. This state only applies to the active entity.</dd>
              <dt pn="section-3.1-2.6.2.3">Contact Negotiating:</dt>
              <dd pn="section-3.1-2.6.2.4">A TCP connection has been made (as either the active or passive entity), and contact negotiation has begun.</dd>
              <dt pn="section-3.1-2.6.2.5">Session Negotiating:</dt>
              <dd pn="section-3.1-2.6.2.6">Contact negotiation has been completed (including possible TLS use), and session negotiation has begun.</dd>
              <dt pn="section-3.1-2.6.2.7">Established:</dt>
              <dd pn="section-3.1-2.6.2.8">
The session has been fully established and is ready for its first transfer.
When the session is established, the peer node ID (along with an indication of whether or not it was authenticated) and the negotiated session parameters (see <xref target="sec-session-negotiate" format="default" sectionFormat="of" derivedContent="Section 4.7"/>) are also communicated to the BPA.
              </dd>
              <dt pn="section-3.1-2.6.2.9">Ending:</dt>
              <dd pn="section-3.1-2.6.2.10">The entity sent a SESS_TERM message and is in the Ending state.</dd>
              <dt pn="section-3.1-2.6.2.11">Terminated:</dt>
              <dd pn="section-3.1-2.6.2.12">The session has finished normal termination sequencing.</dd>
              <dt pn="section-3.1-2.6.2.13">Failed:</dt>
              <dd pn="section-3.1-2.6.2.14">The session ended without normal termination sequencing.</dd>
            </dl>
          </dd>
          <dt pn="section-3.1-2.7">Session Idle Changed:</dt>
          <dd pn="section-3.1-2.8">
The TCPCL entity indicates to the BPA when the Live/Idle substate of the session changes.
This occurs only when the top-level session state is "Established".
The session transitions from Idle to Live at the start of a transfer in either transfer stream; the session transitions from Live to Idle at the end of a transfer when the other transfer stream does not have an ongoing transfer.
Because the TCPCL transmits serially over a TCP connection, it suffers from "head-of-queue blocking", so a transfer in either direction can block an immediate start of a new transfer in the session.
            </dd>
          <dt pn="section-3.1-2.9">Begin Transmission:</dt>
          <dd pn="section-3.1-2.10">
The principal purpose of the TCPCL is to allow a BPA to transmit bundle data over an established TCPCL session.
Transmission requests are done on a per-session basis, and the CL does not necessarily perform any per-session or inter-session queueing.
Any queueing of transmissions is the obligation of the BPA.
            </dd>
          <dt pn="section-3.1-2.11">Transmission Success:</dt>
          <dd pn="section-3.1-2.12">
The TCPCL entity indicates to the BPA when a bundle has been fully transferred to a peer entity.
            </dd>
          <dt pn="section-3.1-2.13">Transmission Intermediate Progress:</dt>
          <dd pn="section-3.1-2.14">
The TCPCL entity indicates to the BPA the intermediate progress of a transfer to a peer entity.
This intermediate progress is at the granularity of each transferred segment.
            </dd>
          <dt pn="section-3.1-2.15">Transmission Failure:</dt>
          <dd pn="section-3.1-2.16">
The TCPCL entity indicates to the BPA certain reasons for bundle transmission failure, notably when the peer entity rejects the bundle or when a TCPCL session ends before transfer success.
The TCPCL itself does not have a notion of transfer timeout.
            </dd>
          <dt pn="section-3.1-2.17">Reception Initialized:</dt>
          <dd pn="section-3.1-2.18">
The TCPCL entity indicates this status to the receiving BPA just before any transmission data is sent.
This corresponds to reception of the XFER_SEGMENT message with the <tt>START</tt> flag set to 1.
            </dd>
          <dt pn="section-3.1-2.19">Interrupt Reception:</dt>
          <dd pn="section-3.1-2.20">
The TCPCL entity allows a BPA to interrupt an individual transfer before it has fully completed (successfully or not).
Interruption can occur any time after the reception is initialized.
            </dd>
          <dt pn="section-3.1-2.21">Reception Success:</dt>
          <dd pn="section-3.1-2.22">
The TCPCL entity indicates to the BPA when a bundle has been fully transferred from a peer entity.
            </dd>
          <dt pn="section-3.1-2.23">Reception Intermediate Progress:</dt>
          <dd pn="section-3.1-2.24">
The TCPCL entity indicates to the BPA the intermediate progress of a transfer from the peer entity.
This intermediate progress is at the granularity of each transferred segment.
An indication of intermediate reception gives a BPA the chance to inspect bundle header contents before the entire bundle is available and thus supports the "Interrupt Reception" capability.
            </dd>
          <dt pn="section-3.1-2.25">Reception Failure:</dt>
          <dd pn="section-3.1-2.26">
The TCPCL entity indicates to the BPA certain reasons for reception failure, notably when the local entity rejects an attempted transfer for some local policy reason or when a TCPCL session ends before transfer success.
The TCPCL itself does not have a notion of transfer timeout.
            </dd>
        </dl>
      </section>
      <section anchor="sec-protocol-session" numbered="true" removeInRFC="false" toc="include" pn="section-3.2">
        <name slugifiedName="name-tcpcl-session-overview">TCPCL Session Overview</name>
        <t indent="0" pn="section-3.2-1">
First, one entity establishes a TCPCL session to the other by initiating a TCP connection in accordance with <xref target="RFC0793" format="default" sectionFormat="of" derivedContent="RFC0793"/>.
After setup of the TCP connection is complete, an initial Contact Header is exchanged in both directions to establish a shared TCPCL version and negotiate the use of TLS security (as described in <xref target="sec-session-establishment" format="default" sectionFormat="of" derivedContent="Section 4"/>).
Once contact negotiation is complete, TCPCL messaging is available and the session negotiation is used to set parameters of the TCPCL session.
One of these parameters is a node ID; each TCPCL entity is acting on behalf of a BPA having a node ID.
This is used to assist in routing and forwarding messages by the BPA and is part of the authentication capability provided by TLS.
        </t>
        <t indent="0" pn="section-3.2-2">
Once negotiated, the parameters of a TCPCL session cannot change; if there is a desire by either peer to transfer data under different parameters, then a new session must be established.
This makes CL logic simpler but relies on the assumption that establishing a TCP connection is lightweight enough that TCP connection overhead is negligible compared to TCPCL data sizes.
        </t>
        <t indent="0" pn="section-3.2-3">
Once the TCPCL session is established and configured in this way, bundles can be transferred in either direction.
Each transfer is performed by segmenting the transfer data into one or more XFER_SEGMENT messages.
Multiple bundles can be transmitted consecutively in a single direction on a single TCPCL connection.
Segments from different bundles are never interleaved.
Bundle interleaving can be accomplished by fragmentation at the BP layer or by establishing multiple TCPCL sessions between the same peers.
There is no fundamental limit on the number of TCPCL sessions that a single entity can establish, beyond the limit imposed by the number of available (ephemeral) TCP ports of the active entity.
        </t>
        <t indent="0" pn="section-3.2-4">
One feature of this protocol is that the receiving entity can send acknowledgment (XFER_ACK) messages as bundle data segments arrive.
The rationale behind these acknowledgments is to enable the transmitting entity to determine how much of the bundle has been received, so that if the session is interrupted, it can perform reactive fragmentation to avoid resending the
already-transmitted part of the bundle.
In addition, there is no explicit flow control on the TCPCL.
        </t>
        <t indent="0" pn="section-3.2-5">
A TCPCL receiver can interrupt the transmission of a bundle at any point in time by replying with a XFER_REFUSE message, which causes the sender to stop transmission of the associated bundle (if it hasn't already finished transmission).
        </t>
        <aside pn="section-3.2-6">
          <t indent="0" pn="section-3.2-6.1">
Note: This enables a cross-layer optimization in that it allows a receiver that detects that it has already received a certain bundle to interrupt transmission as early as possible and thus save transmission capacity for other bundles.
          </t>
        </aside>
        <t indent="0" pn="section-3.2-7">
For sessions that are idle, a KEEPALIVE message is sent at a negotiated interval.
This is used to convey entity liveness information during otherwise messageless time intervals.
        </t>
        <t indent="0" pn="section-3.2-8">
A SESS_TERM message is used to initiate the ending of a TCPCL session (see <xref target="sec-SESS_TERM" format="default" sectionFormat="of" derivedContent="Section 6.1"/>).
During termination sequencing, in-progress transfers can be completed but no new transfers can be initiated.
A SESS_TERM message can also be used to refuse a session setup by a peer (see <xref target="sec-contact-negotiate" format="default" sectionFormat="of" derivedContent="Section 4.3"/>).
Regardless of the reason, session termination is initiated by one of the entities and  the other entity responds to it, as illustrated by Figures <xref target="fig-sessterm-init" format="counter" sectionFormat="of" derivedContent="13"/> and <xref target="fig-sessterm-respond" format="counter" sectionFormat="of" derivedContent="14"/> in the next subsection.
Even when there are no transfers queued or in progress, the session termination procedure allows each entity to distinguish between a clean end to a session and the TCP connection being closed because of some underlying network issue.
        </t>
        <t indent="0" pn="section-3.2-9">
Once a session is established, the TCPCL is a symmetric protocol between the peers.
Both sides can start sending data segments in a session, and one side's bundle transfer does not have to complete before the other side can start sending data segments on its own.
Hence, the protocol allows for a bidirectional mode of communication.
Note that in the case of concurrent bidirectional transmission, acknowledgment segments <bcp14>MAY</bcp14> be interleaved with data segments.
        </t>
      </section>
      <section anchor="sec-protocol-states" numbered="true" removeInRFC="false" toc="include" pn="section-3.3">
        <name slugifiedName="name-tcpcl-states-and-transition">TCPCL States and Transitions</name>
        <t indent="0" pn="section-3.3-1">
The states of a normal TCPCL session (i.e., without session failures) are indicated in <xref target="fig-session-states" format="default" sectionFormat="of" derivedContent="Figure 4"/>.
        </t>
        <figure anchor="fig-session-states" align="left" suppress-title="false" pn="figure-4">
          <name slugifiedName="name-top-level-states-of-a-tcpcl">Top-Level States of a TCPCL Session</name>
          <artwork align="center" type="ascii-art" pn="section-3.3-2.1">
  +-------+
  | START |
  +-------+
      |
  TCP Establishment
      |
      V
+-----------+            +---------------------+
|    TCP    |-----------&gt;|  Contact / Session  |
| Connected |            |     Negotiation     |
+-----------+            +---------------------+
                                    |
       +-----Session Parameters-----+
       |         Negotiated
       V
+-------------+                     +-------------+
| Established |----New Transfer----&gt;| Established |
|   Session   |                     |   Session   |
|    Idle     |&lt;---Transfers Done---|     Live    |
+-------------+                     +-------------+
      |                                    |
      +------------------------------------+
      |
      V
+-------------+
| Established |                    +-------------+
|   Session   |----Transfers------&gt;|     TCP     |
|   Ending    |      Done          | Terminating |
+-------------+                    +-------------+
                                           |
     +----------TCP Close Message----------+
     |
     V
 +-------+
 |  END  |
 +-------+
</artwork>
        </figure>
        <t indent="0" pn="section-3.3-3">
Notes on established session states:
        </t>
        <ul spacing="normal" bare="false" empty="false" indent="3" pn="section-3.3-4">
          <li pn="section-3.3-4.1">Session "Live" means transmitting or receiving over a transfer stream.</li>
          <li pn="section-3.3-4.2">Session "Idle" means no transmission/reception over a transfer stream.</li>
          <li pn="section-3.3-4.3">Session "Ending" means no new transfers will be allowed.</li>
        </ul>
        <t indent="0" pn="section-3.3-5">
Contact negotiation involves exchanging a Contact Header ("CH" in Figures <xref target="fig-contact-init-active" format="counter" sectionFormat="of" derivedContent="5"/>, <xref target="fig-contact-init-passive" format="counter" sectionFormat="of" derivedContent="6"/>, and <xref target="fig-contact-init-process" format="counter" sectionFormat="of" derivedContent="7"/>) in both directions and deriving a negotiated state from the two headers.
The contact negotiation sequencing is performed as either the active or passive entity and is illustrated in Figures <xref target="fig-contact-init-active" format="counter" sectionFormat="of" derivedContent="5"/> and <xref target="fig-contact-init-passive" format="counter" sectionFormat="of" derivedContent="6"/>, respectively, which both share the data validation and negotiation of the Processing of Contact Header ("[PCH]") activity (<xref target="fig-contact-init-process" format="default" sectionFormat="of" derivedContent="Figure 7"/>) and the "[TCPCLOSE]" activity, which indicates TCP connection close.
Successful negotiation results in one of the Session Initiation ("[SI]") activities being performed, as shown further below.
To avoid data loss, a Session Termination ("[ST]") exchange allows cleanly finishing transfers before a session is ended.
        </t>
        <figure anchor="fig-contact-init-active" align="left" suppress-title="false" pn="figure-5">
          <name slugifiedName="name-contact-initiation-as-activ">Contact Initiation as Active Entity</name>
          <artwork align="center" type="ascii-art" pn="section-3.3-6.1">
+-------+
| START |
+-------+
    |
TCP Connecting
    V
+-----------+
|    TCP    |            +---------+
| Connected |--Send CH--&gt;| Waiting |--Timeout--&gt;[TCPCLOSE]
+-----------+            +---------+
                              |
                          Received CH
                              V
                            [PCH]
</artwork>
        </figure>
        <figure anchor="fig-contact-init-passive" align="left" suppress-title="false" pn="figure-6">
          <name slugifiedName="name-contact-initiation-as-passi">Contact Initiation as Passive Entity</name>
          <artwork align="center" type="ascii-art" pn="section-3.3-7.1">
+-----------+             +---------+
|   TCP     |--Wait for--&gt;| Waiting |--Timeout--&gt;[TCPCLOSE]
| Connected |     CH      +---------+
+-----------+                  |
                          Received CH
                               V
                       +-----------------+
                       | Preparing reply |--Send CH--&gt;[PCH]
                       +-----------------+
</artwork>
        </figure>
        <figure anchor="fig-contact-init-process" align="left" suppress-title="false" pn="figure-7">
          <name slugifiedName="name-processing-of-contact-heade">Processing of Contact Header [PCH]</name>
          <artwork align="center" type="ascii-art" pn="section-3.3-8.1">
+-----------+
|  Peer CH  |
| available |
+-----------+
      |
 Validate and
  Negotiate
      V
 +------------+
 | Negotiated |--Failure--&gt;[TCPCLOSE]
 +------------+
    |       |
  No TLS    +----Negotiate---+      [ST]
    |               TLS      |       ^
    V                        |    Failure
  +-----------+              V       |
  |   TCPCL   |            +---------------+
  | Messaging |&lt;--Success--| TLS Handshake |
  | Available |            +---------------+
  +-----------+
</artwork>
        </figure>
        <t indent="0" pn="section-3.3-9">
Session negotiation involves exchanging a session initialization (SESS_INIT) message in both directions and deriving a negotiated state from the two messages.
The session negotiation sequencing is performed as either the active or passive entity and is illustrated in Figures <xref target="fig-sess-init-active" format="counter" sectionFormat="of" derivedContent="8"/> and <xref target="fig-sess-init-passive" format="counter" sectionFormat="of" derivedContent="9"/>, respectively (where "[PSI]" means "Processing of Session Initiation"), which both share the data validation and negotiation shown in <xref target="fig-sess-init-process" format="default" sectionFormat="of" derivedContent="Figure 10"/>.
The validation here includes certificate validation and authentication when TLS is used for the session.
        </t>
        <figure anchor="fig-sess-init-active" align="left" suppress-title="false" pn="figure-8">
          <name slugifiedName="name-session-initiation-si-as-ac">Session Initiation [SI] as Active Entity</name>
          <artwork align="center" type="ascii-art" pn="section-3.3-10.1">
+-----------+
|   TCPCL   |                   +---------+
| Messaging |--Send SESS_INIT--&gt;| Waiting |--Timeout--&gt;[ST]
| Available |                   +---------+
+-----------+                       |
                            Received SESS_INIT
                                    |
                                    V
                                  [PSI]
</artwork>
        </figure>
        <figure anchor="fig-sess-init-passive" align="left" suppress-title="false" pn="figure-9">
          <name slugifiedName="name-session-initiation-si-as-pa">Session Initiation [SI] as Passive Entity</name>
          <artwork align="center" type="ascii-art" pn="section-3.3-11.1">
+-----------+
|   TCPCL   |                  +---------+
| Messaging |----Wait for ----&gt;| Waiting |--Timeout--&gt;[ST]
| Available |    SESS_INIT     +---------+
+-----------+                       |
                            Received SESS_INIT
                                    |
                            +-----------------+
                            | Preparing reply |--Send SESS_INIT--&gt;[PSI]
                            +-----------------+
</artwork>
        </figure>
        <figure anchor="fig-sess-init-process" align="left" suppress-title="false" pn="figure-10">
          <name slugifiedName="name-processing-of-session-initi">Processing of Session Initiation [PSI]</name>
          <artwork align="center" type="ascii-art" pn="section-3.3-12.1">
+----------------+
| Peer SESS_INIT |
|   available    |
+----------------+
        |
   Validate and
    Negotiate
        V
   +------------+
   | Negotiated |---Failure---&gt;[ST]
   +------------+
        |
     Success
        V
  +--------------+
  | Established  |
  | Session Idle |
  +--------------+
</artwork>
        </figure>
        <t indent="0" pn="section-3.3-13">
Transfers can occur after a session is established and it's not in the Ending state.
Each transfer occurs within a single logical transfer stream between a sender and a receiver, as illustrated in Figures <xref target="fig-transfer-tx-states" format="counter" sectionFormat="of" derivedContent="11"/> and <xref target="fig-transfer-rx-states" format="counter" sectionFormat="of" derivedContent="12"/>, respectively.
        </t>
        <figure anchor="fig-transfer-tx-states" align="left" suppress-title="false" pn="figure-11">
          <name slugifiedName="name-transfer-sender-states">Transfer Sender States</name>
          <artwork align="center" type="ascii-art" pn="section-3.3-14.1">
                                       +--Send XFER_SEGMENT--+
+--------+                             |                     |
| Stream |                       +-------------+             |
|  Idle  |---Send XFER_SEGMENT--&gt;| In Progress |&lt;------------+
+--------+                       +-------------+
                                       |
     +---------All segments sent-------+
     |
     V
+---------+                       +--------+
| Waiting |---- Receive Final----&gt;| Stream |
| for Ack |       XFER_ACK        |  Idle  |
+---------+                       +--------+
</artwork>
        </figure>
        <aside pn="section-3.3-15">
          <t indent="0" pn="section-3.3-15.1">
Note on transfer sending: Pipelining of transfers can occur when the sending entity begins a new transfer while in the "Waiting for Ack" state.
          </t>
        </aside>
        <figure anchor="fig-transfer-rx-states" align="left" suppress-title="false" pn="figure-12">
          <name slugifiedName="name-transfer-receiver-states">Transfer Receiver States</name>
          <artwork align="center" type="ascii-art" pn="section-3.3-16.1">
                                         +-Receive XFER_SEGMENT-+
+--------+                               |    Send XFER_ACK     |
| Stream |                         +-------------+              |
|  Idle  |--Receive XFER_SEGMENT--&gt;| In Progress |&lt;-------------+
+--------+                         +-------------+
                                         |
     +--------Sent Final XFER_ACK--------+
     |
     V
+--------+
| Stream |
|  Idle  |
+--------+
</artwork>
        </figure>
        <t indent="0" pn="section-3.3-17">
Session termination involves one entity initiating the termination of the session and the other entity acknowledging the termination.
For either entity, it is the sending of the SESS_TERM message, which transitions the session to the Ending substate.
While a session is in the Ending state, only in-progress transfers can be completed and no new transfers can be started.
        </t>
        <figure anchor="fig-sessterm-init" align="left" suppress-title="false" pn="figure-13">
          <name slugifiedName="name-session-termination-st-from">Session Termination [ST] from the Initiator</name>
          <artwork align="center" type="ascii-art" pn="section-3.3-18.1">
+-----------+                   +---------+
|  Session  |--Send SESS_TERM--&gt;| Session |
| Live/Idle |                   | Ending  |
+-----------+                   +---------+
</artwork>
        </figure>
        <figure anchor="fig-sessterm-respond" align="left" suppress-title="false" pn="figure-14">
          <name slugifiedName="name-session-termination-st-from-">Session Termination [ST] from the Responder</name>
          <artwork align="center" type="ascii-art" pn="section-3.3-19.1">
+-----------+                   +---------+
|  Session  |--Send SESS_TERM--&gt;| Session |
| Live/Idle |                   | Ending  |
+-----------+&lt;------+           +---------+
      |             |
 Receive SESS_TERM  |
      |             |
      +-------------+
</artwork>
        </figure>
      </section>
      <section anchor="sec-pkix-env" numbered="true" removeInRFC="false" toc="include" pn="section-3.4">
        <name slugifiedName="name-pkix-environments-and-ca-po">PKIX Environments and CA Policy</name>
        <t indent="0" pn="section-3.4-1">
This specification defines requirements regarding how to use PKIX certificates issued by a Certificate Authority (CA) but does not define any mechanisms for how those certificates come to be.
The requirements regarding TCPCL certificate use are broad, to support two quite different PKIX environments:
        </t>
        <dl newline="false" spacing="normal" indent="3" pn="section-3.4-2">
          <dt pn="section-3.4-2.1">DTN-Aware CAs:</dt>
          <dd pn="section-3.4-2.2">
In the ideal case, the CA or CAs issuing certificates for TCPCL entities are aware of the end use of the certificate, have a mechanism for verifying ownership of a node ID, and are issuing certificates directly for that node ID.
In this environment, the ability to authenticate a peer entity node ID directly avoids the need to authenticate a network name or address and then implicitly trust the node ID of the peer.
The TCPCL authenticates the node ID whenever possible; this is preferred over lower-level PKIX identities.
          </dd>
          <dt pn="section-3.4-2.3">DTN-Ignorant CAs:</dt>
          <dd pn="section-3.4-2.4">
It is expected that Internet-scale "public" CAs will continue to focus on DNS names as the preferred PKIX identifier.
There are large infrastructures already in place for managing network-level authentication and protocols to manage identity verification in those environments <xref target="RFC8555" format="default" sectionFormat="of" derivedContent="RFC8555"/>.
The TCPCL allows for this type of environment by authenticating a lower-level identifier for a peer and requiring the entity to trust that the node ID given by the peer (during session initialization) is valid.
This situation is not ideal, as it allows the vulnerabilities described in <xref target="sec-threat-node-impersonation" format="default" sectionFormat="of" derivedContent="Section 7.9"/>, but it still provides some amount of mutual authentication to take place for a TCPCL session.
          </dd>
        </dl>
        <t indent="0" pn="section-3.4-3">
Even within a single TCPCL session, each entity may operate within different PKI environments and with different identifier limitations.
The requirements related to identifiers in a PKIX certificate are provided in <xref target="sec-tls-identification" format="default" sectionFormat="of" derivedContent="Section 4.4.1"/>.
        </t>
        <t indent="0" pn="section-3.4-4">
It is important for interoperability that a TCPCL entity have its own security policy tailored to accommodate the peers with which it is expected to operate.
Some security policy recommendations are given in <xref target="sec-tls-auth-policy-rec" format="default" sectionFormat="of" derivedContent="Section 4.4.5"/>, but these are meant as a starting point for tailoring.
A strict TLS security policy is appropriate for a private network with a single shared CA.
Operation on the Internet (such as inter-site BP gateways) could trade more lax TCPCL security with the use of encrypted bundle encapsulation <xref target="I-D.ietf-dtn-bibect" format="default" sectionFormat="of" derivedContent="DTN-BIBECT"/> to ensure strong bundle security.
        </t>
        <t indent="0" pn="section-3.4-5">
By using the Server Name Indication (SNI) DNS name (see <xref target="sec-tls-handshake" format="default" sectionFormat="of" derivedContent="Section 4.4.3"/>), a single passive entity can act as a convergence layer for multiple BPAs with distinct node IDs.
When this "virtual host" behavior is used, the DNS name is used as the indication of which BP node the active entity is attempting to communicate with.
A virtual host CL entity can be authenticated by a certificate containing all of the DNS names and/or node IDs being hosted or by several certificates each authenticating a single DNS name and/or node ID, using the SNI value from the peer to select which certificate to use.
The logic for mapping an SNI DNS name to an end-entity certificate is an implementation matter and can involve correlating a DNS name with a node ID or other certificate attributes.
        </t>
      </section>
      <section anchor="sec-session-keeping" numbered="true" removeInRFC="false" toc="include" pn="section-3.5">
        <name slugifiedName="name-session-keeping-policies">Session-Keeping Policies</name>
        <t indent="0" pn="section-3.5-1">
This specification defines requirements regarding how to initiate, sustain, and terminate a TCPCL session but does not impose any requirements on how sessions need to be managed by a BPA.
It is a network administration matter to determine an appropriate session-keeping policy, but guidance given here can be used to steer policy toward performance goals.
        </t>
        <dl newline="false" spacing="normal" indent="3" pn="section-3.5-2">
          <dt pn="section-3.5-2.1">Persistent Session:</dt>
          <dd pn="section-3.5-2.2">
This policy preemptively establishes a single session to known entities in the network and keeps the session active using KEEPALIVEs.
Benefits of this policy include reducing the total amount of TCP data that needs to be exchanged for a set of transfers (assuming that the KEEPALIVE size is significantly smaller than the transfer size) and allowing the session state to indicate peer connectivity.
Drawbacks include wasted network resources when a session is mostly idle or when  network connectivity is inconsistent (which requires that failed sessions be reestablished), and potential queueing issues when multiple transfers are requested simultaneously.
This policy assumes that there is agreement between pairs of entities as to which of the peers will initiate sessions; if there is no such agreement, there is potential for duplicate sessions to be established between peers.
            </dd>
          <dt pn="section-3.5-2.3">Ephemeral Sessions:</dt>
          <dd pn="section-3.5-2.4">
This policy only establishes a session when an outgoing transfer needs to be sent.
Benefits of this policy include not wasting network resources on sessions that are idle for long periods of time and avoiding potential queueing issues as can be seen when using a single persistent session. Drawbacks include the TCP and TLS overhead of establishing a new session for each transfer.
This policy assumes that each entity can function in a passive role to listen for session requests from any peer that needs to send a transfer; when that is not the case, the polling behavior discussed below needs to happen.
This policy can be augmented to keep the session established as long as any transfers are queued.
            </dd>
          <dt pn="section-3.5-2.5">Active-Only Polling Sessions:</dt>
          <dd pn="section-3.5-2.6">
When naming and/or addressing of one entity is variable (i.e., a dynamically assigned IP address or domain name) or when firewall or routing rules prevent incoming TCP connections, that entity can only function in the active role.
In these cases, sessions also need to be established when an incoming transfer is expected from a peer or based on a periodic schedule.
This polling behavior causes inefficiencies compared to as-needed ephemeral sessions.
            </dd>
        </dl>
        <t indent="0" pn="section-3.5-3">
Many other policies can be established in a TCPCL network between the two extremes of single persistent sessions and only ephemeral sessions.
Different policies can be applied to each peer entity and to each bundle as it needs to be transferred (e.g., for quality of service).
Additionally, future session extension types can apply further nuance to session policies and policy negotiation.
        </t>
      </section>
      <section anchor="sec-transfer-segmentation" numbered="true" removeInRFC="false" toc="include" pn="section-3.6">
        <name slugifiedName="name-transfer-segmentation-polic">Transfer Segmentation Policies</name>
        <t indent="0" pn="section-3.6-1">
Each TCPCL session allows a negotiated transfer segmentation policy to be applied in each transfer direction.
A receiving entity can set the Segment Maximum Receive Unit (MRU) in its SESS_INIT message to determine the largest acceptable segment size, and a transmitting entity can segment a transfer into any sizes smaller than the receiver's Segment MRU.
It is a network administration matter to determine an appropriate segmentation policy for entities using the TCPCL protocol, but guidance given here can be used to steer policy toward performance goals.
Administrators are also advised to consider the Segment MRU in relation to chunking/packetization performed by TLS, TCP, and any intermediate network-layer nodes.
        </t>
        <dl newline="false" spacing="normal" indent="3" pn="section-3.6-2">
          <dt pn="section-3.6-2.1">Minimum Overhead:</dt>
          <dd pn="section-3.6-2.2">
For a simple network expected to exchange relatively small bundles, the Segment MRU can be set to be identical to the Transfer MRU, which indicates that all transfers can be sent with a single data segment (i.e., no actual segmentation).
If the network is closed and all transmitters are known to follow a single-segment transfer policy, then receivers can avoid the necessity of segment reassembly.
Because this CL operates over a TCP stream, which suffers from a form of head-of-queue blocking between messages, while one entity is transmitting a single XFER_SEGMENT message it is not able to transmit any XFER_ACK or XFER_REFUSE messages for any associated received transfers.
            </dd>
          <dt pn="section-3.6-2.3">Predictable Message Sizing:</dt>
          <dd pn="section-3.6-2.4">
In situations where the maximum message size is desired to be well controlled, the Segment MRU can be set to the largest acceptable size (the message size less the XFER_SEGMENT header size) and transmitters can always segment a transfer into maximum-size chunks no larger than the Segment MRU.
This guarantees that any single XFER_SEGMENT will not monopolize the TCP stream for too long, which would prevent outgoing XFER_ACK and XFER_REFUSE messages associated with received transfers.
            </dd>
          <dt pn="section-3.6-2.5">Dynamic Segmentation:</dt>
          <dd pn="section-3.6-2.6">
Even after negotiation of a Segment MRU for each receiving entity, the actual transfer segmentation only needs to guarantee that any individual segment is no larger than that MRU.
In a situation where TCP throughput is dynamic, the transfer segmentation size can also be dynamic in order to control message transmission duration.
            </dd>
        </dl>
        <t indent="0" pn="section-3.6-3">
Many other policies can be established in a TCPCL network between the two extremes of minimum overhead (large MRU, single segment) and predictable message sizing (small MRU, highly segmented).
Different policies can be applied to each transfer stream to and from any particular entity.
Additionally, future session extension and transfer extension types can apply further nuance to transfer policies and policy negotiation.
        </t>
      </section>
      <section anchor="sec-protocol-example" numbered="true" removeInRFC="false" toc="include" pn="section-3.7">
        <name slugifiedName="name-example-message-exchange">Example Message Exchange</name>
        <t indent="0" pn="section-3.7-1">
<xref target="fig-contact-example" format="default" sectionFormat="of" derivedContent="Figure 15"/> depicts the protocol exchange for a simple session, showing the session establishment and the transmission of a single bundle split into three data segments (of lengths "L1", "L2", and "L3") from Entity A to Entity B.
        </t>
        <t indent="0" pn="section-3.7-2">
Note that the sending entity can transmit multiple XFER_SEGMENT messages without waiting for the corresponding XFER_ACK responses.
This enables pipelining of messages on a transfer stream.
Although this example only demonstrates a single bundle transmission, it is also possible to pipeline multiple XFER_SEGMENT messages for different bundles without necessarily waiting for XFER_ACK messages to be returned for each one.
However, interleaving data segments from different bundles is not allowed.
        </t>
        <t indent="0" pn="section-3.7-3">
No errors or rejections are shown in this example.
        </t>
        <figure anchor="fig-contact-example" align="left" suppress-title="false" pn="figure-15">
          <name slugifiedName="name-an-example-of-the-flow-of-p">An Example of the Flow of Protocol Messages on a Single TCP Session between Two Entities</name>
          <artwork align="center" type="ascii-art" pn="section-3.7-4.1">
             Entity A                             Entity B
             ========                             ========
    +-------------------------+
    |  Open TCP Connection    | -&gt;      +-------------------------+
    +-------------------------+      &lt;- |    Accept Connection    |
                                        +-------------------------+
    +-------------------------+
    |     Contact Header      | -&gt;      +-------------------------+
    +-------------------------+      &lt;- |     Contact Header      |
                                        +-------------------------+
    +-------------------------+
    |        SESS_INIT        | -&gt;      +-------------------------+
    +-------------------------+      &lt;- |        SESS_INIT        |
                                        +-------------------------+

    +-------------------------+
    |   XFER_SEGMENT (start)  | -&gt;
    |     Transfer ID [I1]    |
    |       Length [L1]       |
    |  Bundle Data 0..(L1-1)  |
    +-------------------------+
    +-------------------------+         +-------------------------+
    |     XFER_SEGMENT        | -&gt;   &lt;- |     XFER_ACK (start)    |
    |     Transfer ID [I1]    |         |     Transfer ID [I1]    |
    |       Length   [L2]     |         |        Length   [L1]    |
    |Bundle Data L1..(L1+L2-1)|         +-------------------------+
    +-------------------------+
    +-------------------------+         +-------------------------+
    |    XFER_SEGMENT (end)   | -&gt;   &lt;- |         XFER_ACK        |
    |     Transfer ID [I1]    |         |     Transfer ID [I1]    |
    |        Length   [L3]    |         |      Length   [L1+L2]   |
    |Bundle Data              |         +-------------------------+
    |    (L1+L2)..(L1+L2+L3-1)|
    +-------------------------+
                                        +-------------------------+
                                     &lt;- |      XFER_ACK (end)     |
                                        |     Transfer ID [I1]    |
                                        |     Length   [L1+L2+L3] |
                                        +-------------------------+

    +-------------------------+
    |       SESS_TERM         | -&gt;      +-------------------------+
    +-------------------------+      &lt;- |        SESS_TERM        |
                                        +-------------------------+
    +-------------------------+         +-------------------------+
    |        TCP Close        | -&gt;   &lt;- |        TCP Close        |
    +-------------------------+         +-------------------------+
</artwork>
        </figure>
      </section>
    </section>
    <section anchor="sec-session-establishment" numbered="true" removeInRFC="false" toc="include" pn="section-4">
      <name slugifiedName="name-session-establishment">Session Establishment</name>
      <t indent="0" pn="section-4-1">
For bundle transmissions to occur using the TCPCL, a TCPCL session <bcp14>MUST</bcp14> first be established between communicating entities.
It is up to the implementation to decide how and when session setup is triggered.
For example, some sessions can be opened proactively and maintained for as long as is possible given the network conditions, while other sessions will be opened only when there is a bundle that is queued for transmission and the routing algorithm selects a certain next-hop node.
      </t>
      <section anchor="sec-tcp-connection" numbered="true" removeInRFC="false" toc="include" pn="section-4.1">
        <name slugifiedName="name-tcp-connection">TCP Connection</name>
        <t indent="0" pn="section-4.1-1">
To establish a TCPCL session, an entity <bcp14>MUST</bcp14> first establish a TCP connection with the intended peer entity, typically by using the services provided by the operating system.
Destination port number 4556 has been assigned by IANA as the registered port number for the TCPCL; see <xref target="sec-iana-port" format="default" sectionFormat="of" derivedContent="Section 8.1"/>.
Other destination port numbers <bcp14>MAY</bcp14> be used per local configuration.
Determining a peer's destination port number (if different from the registered TCPCL port number) is left up to the implementation.
Any source port number <bcp14>MAY</bcp14> be used for TCPCL sessions.
Typically, an operating system assigned number in the TCP Ephemeral range (49152-65535) is used.
        </t>
        <t indent="0" pn="section-4.1-2">
If the entity is unable to establish a TCP connection for any reason, then it is an implementation matter to determine how to handle the connection failure.
An entity <bcp14>MAY</bcp14> decide to reattempt to establish the connection.
If it does so, it <bcp14>MUST NOT</bcp14> overwhelm its target with repeated connection attempts.
Therefore, the entity <bcp14>MUST NOT</bcp14> retry the connection setup earlier than some delay time from the last attempt, and it <bcp14>SHOULD</bcp14> use a (binary) exponential backoff mechanism to increase this delay in the case of repeated failures.
The upper limit on a reattempt backoff is implementation defined but <bcp14>SHOULD</bcp14> be no longer than one minute (60 seconds) before signaling to the BPA that a connection cannot be made.
        </t>
        <t indent="0" pn="section-4.1-3">
Once a TCP connection is established, the active entity <bcp14>SHALL</bcp14> immediately transmit its Contact Header. The passive entity <bcp14>SHALL</bcp14> wait for the active entity's Contact Header.
Upon reception of a Contact Header, the passive entity <bcp14>SHALL</bcp14> transmit its Contact Header.
If either entity does not receive a Contact Header after some implementation-defined time duration after the TCP connection is established, the waiting entity <bcp14>SHALL</bcp14> close the TCP connection. Entities <bcp14>SHOULD</bcp14> choose a Contact Header reception timeout interval no longer than one minute (60 seconds).
The ordering of the Contact Header exchange allows the passive entity to avoid allocating resources to a potential TCPCL session until after a valid Contact Header has been received from the active entity.
This ordering also allows the passive peer to adapt to alternate TCPCL protocol versions.
        </t>
        <t indent="0" pn="section-4.1-4">
The format of the Contact Header is described in <xref target="sec-contact-header" format="default" sectionFormat="of" derivedContent="Section 4.2"/>.
Because the TCPCL protocol version in use is part of the initial Contact Header, entities using TCPCL version 4 can coexist on a network with entities using earlier TCPCL versions (with some negotiation needed for interoperation, as described in <xref target="sec-contact-negotiate" format="default" sectionFormat="of" derivedContent="Section 4.3"/>).
        </t>
        <t indent="0" pn="section-4.1-5">
Within this specification, when an entity is said to "close" a TCP connection the entity <bcp14>SHALL</bcp14> use the TCP FIN mechanism and not the RST mechanism.
However, either mechanism, when received, will cause a TCP connection to become closed.
        </t>
      </section>
      <section anchor="sec-contact-header" numbered="true" removeInRFC="false" toc="include" pn="section-4.2">
        <name slugifiedName="name-contact-header">Contact Header</name>
        <t indent="0" pn="section-4.2-1">
This section describes the format of the Contact Header and the meaning of its fields.
        </t>
        <t indent="0" pn="section-4.2-2">
If the entity is configured to enable the exchange of messages according to TLS 1.3 <xref target="RFC8446" format="default" sectionFormat="of" derivedContent="RFC8446"/> or any successors that are compatible with that TLS ClientHello, the <tt>CAN_TLS</tt> flag within its Contact Header <bcp14>SHALL</bcp14> be set to 1.
The <bcp14>RECOMMENDED</bcp14> policy is to enable TLS for all sessions, even if security policy does not allow or require authentication.
This follows the "opportunistic security" model specified in <xref target="RFC7435" format="default" sectionFormat="of" derivedContent="RFC7435"/>, though an active attacker could interfere with the exchange in such cases (see <xref target="sec-threat-tls-strip" format="default" sectionFormat="of" derivedContent="Section 7.4"/>).
        </t>
        <t indent="0" pn="section-4.2-3">
Upon receipt of the Contact Header, both entities perform the validation and negotiation procedures defined in <xref target="sec-contact-negotiate" format="default" sectionFormat="of" derivedContent="Section 4.3"/>.
After receiving the Contact Header from the other entity, either entity <bcp14>MAY</bcp14> refuse the session by sending a SESS_TERM message with an appropriate reason code.
        </t>
        <t indent="0" pn="section-4.2-4">
The format for the Contact Header is as follows:
        </t>
        <figure anchor="fig-contact-header" align="left" suppress-title="false" pn="figure-16">
          <name slugifiedName="name-contact-header-format">Contact Header Format</name>
          <artwork align="center" type="ascii-art" pn="section-4.2-5.1">
                     1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+---------------+---------------+---------------+---------------+
|                          magic='dtn!'                         |
+---------------+---------------+---------------+---------------+
|     Version   |   Flags       |
+---------------+---------------+
</artwork>
        </figure>
        <t indent="0" pn="section-4.2-6">
See <xref target="sec-contact-negotiate" format="default" sectionFormat="of" derivedContent="Section 4.3"/> for details on the use of each of these Contact Header fields.
        </t>
        <t indent="0" pn="section-4.2-7">
The fields of the Contact Header are as follows:
        </t>
        <dl newline="false" spacing="normal" indent="3" pn="section-4.2-8">
          <dt pn="section-4.2-8.1">magic:</dt>
          <dd pn="section-4.2-8.2">
A four-octet field that always contains the octet sequence 0x64 0x74 0x6E 0x21, i.e., the text string "dtn!" in US-ASCII (and UTF-8).
            </dd>
          <dt pn="section-4.2-8.3">Version:</dt>
          <dd pn="section-4.2-8.4">
A one-octet field value containing the value 4 (current version of the TCPCL protocol).
            </dd>
          <dt pn="section-4.2-8.5">Flags:</dt>
          <dd pn="section-4.2-8.6">
A one-octet field of single-bit flags, interpreted according to the descriptions in <xref target="tab-contact-header-flags" format="default" sectionFormat="of" derivedContent="Table 1"/>.
All reserved header flag bits <bcp14>SHALL</bcp14> be set to 0 by the sender.
All reserved header flag bits <bcp14>SHALL</bcp14> be ignored by the receiver.
            </dd>
        </dl>
        <table align="center" anchor="tab-contact-header-flags" pn="table-1">
          <name slugifiedName="name-contact-header-flags">Contact Header Flags</name>
          <thead>
            <tr>
              <th align="left" colspan="1" rowspan="1">Name</th>
              <th align="left" colspan="1" rowspan="1">Code</th>
              <th align="left" colspan="1" rowspan="1">Description</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left" colspan="1" rowspan="1">
                <tt>CAN_TLS</tt></td>
              <td align="left" colspan="1" rowspan="1">0x01</td>
              <td align="left" colspan="1" rowspan="1">If this bit is set, it indicates that the sending peer has enabled TLS security.</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">Reserved</td>
              <td align="left" colspan="1" rowspan="1">others</td>
              <td align="left" colspan="1" rowspan="1"/>
            </tr>
          </tbody>
        </table>
      </section>
      <section anchor="sec-contact-negotiate" numbered="true" removeInRFC="false" toc="include" pn="section-4.3">
        <name slugifiedName="name-contact-validation-and-nego">Contact Validation and Negotiation</name>
        <t indent="0" pn="section-4.3-1">
Upon reception of the Contact Header, each entity follows the following procedures to ensure the validity of the TCPCL session and to negotiate values for the session parameters.
        </t>
        <t indent="0" pn="section-4.3-2">
If the "magic string" is not present or is not valid, the connection <bcp14>MUST</bcp14> be terminated.
The intent of the magic string is to provide some protection against an inadvertent TCP connection by a different protocol than the one described in this document.
To prevent a flood of repeated connections from a misconfigured application, a passive entity <bcp14>MAY</bcp14> deny new TCP connections from a specific peer address for a period of time after one or more connections fail to provide a decodable Contact Header.
        </t>
        <t indent="0" pn="section-4.3-3">
The first negotiation attempts to determine which TCPCL protocol version to use.
The active entity always sends its Contact Header first and waits for a response from the passive entity.
During contact initiation, the active TCPCL entity <bcp14>SHALL</bcp14> send the highest TCPCL protocol version on a first session attempt for a TCPCL peer.
If the active entity receives a Contact Header with a lower protocol version than the one sent earlier on the TCP connection, the TCP connection <bcp14>SHALL</bcp14> be closed.
If the active entity receives a SESS_TERM message with a reason code of "Version mismatch", that entity <bcp14>MAY</bcp14> attempt further TCPCL sessions with the peer using earlier protocol version numbers in decreasing order.
Managing multi-TCPCL-session state such as this is an implementation matter.
        </t>
        <t indent="0" pn="section-4.3-4">
If the passive entity receives a Contact Header containing a version that is not a version of the TCPCL protocol that the entity implements, then the entity <bcp14>SHALL</bcp14> send its Contact Header and immediately terminate the session with a reason code of "Version mismatch".
If the passive entity receives a Contact Header with a version that is lower than the latest version of the protocol that the entity implements, the entity <bcp14>MAY</bcp14> either terminate the session (with a reason code of "Version mismatch") or adapt its operation to conform to the older version of the protocol.
The decision of version fallback is an implementation matter.
        </t>
        <t indent="0" pn="section-4.3-5">
The negotiated contact parameters defined by this specification are described in the following paragraphs.
        </t>
        <dl newline="false" spacing="normal" indent="3" pn="section-4.3-6">
          <dt pn="section-4.3-6.1">TCPCL Version:</dt>
          <dd pn="section-4.3-6.2">
Both Contact Headers of a successful contact negotiation have identical TCPCL version numbers as described above.
Only upon response of a Contact Header from the passive entity is the TCPCL protocol version established and session negotiation begun.
          </dd>
          <dt pn="section-4.3-6.3">Enable TLS:</dt>
          <dd pn="section-4.3-6.4">
            <t indent="0" pn="section-4.3-6.4.1">
Negotiation of the Enable TLS parameter is performed by taking the logical AND of the two Contact Headers' <tt>CAN_TLS</tt> flags.
A local security policy is then applied to determine whether the negotiated value of Enable TLS is acceptable.
A reasonable security policy would require or disallow the use of TLS, depending upon the desired network flows.
The <bcp14>RECOMMENDED</bcp14> policy is to require TLS for all sessions, even if security policy does not allow or require authentication.
Because this state is negotiated over an unsecured medium, there is a risk of TLS Stripping as described in <xref target="sec-threat-tls-strip" format="default" sectionFormat="of" derivedContent="Section 7.4"/>.
            </t>
            <t indent="0" pn="section-4.3-6.4.2">
If the Enable TLS state is unacceptable, the entity <bcp14>SHALL</bcp14> terminate the session with a reason code of "Contact Failure".
Note that this "Contact Failure" reason is different than a failure of a TLS handshake or TLS authentication after an agreed-upon and acceptable Enable TLS state.
If the negotiated Enable TLS value is "true" and acceptable, then the TLS negotiation feature described in <xref target="sec-session-security" format="default" sectionFormat="of" derivedContent="Section 4.4"/> begins immediately following the Contact Header exchange.
            </t>
          </dd>
        </dl>
      </section>
      <section anchor="sec-session-security" numbered="true" removeInRFC="false" toc="include" pn="section-4.4">
        <name slugifiedName="name-session-security">Session Security</name>
        <t indent="0" pn="section-4.4-1">
This version of the TCPCL protocol supports establishing a TLS session within an existing TCP connection.
When TLS is used within the TCPCL, it affects the entire session.
Once TLS is established, there is no mechanism available to downgrade the TCPCL session to non-TLS operation.
        </t>
        <t indent="0" pn="section-4.4-2">
Once established, the lifetime of a TLS connection <bcp14>SHALL</bcp14> be bound to the lifetime of the underlying TCP connection.
Immediately prior to actively ending a TLS connection after TCPCL session termination, the peer that sent the original (non-reply) SESS_TERM message <bcp14>SHOULD</bcp14> follow the closure alert procedure provided in <xref target="RFC8446" format="default" sectionFormat="of" derivedContent="RFC8446"/> to cleanly terminate the TLS connection.
Because each TCPCL message is either fixed length or self-indicates its length, the lack of a TLS closure alert will not cause data truncation or corruption.
        </t>
        <t indent="0" pn="section-4.4-3">
Subsequent TCPCL session attempts to the same passive entity <bcp14>MAY</bcp14> attempt to use the TLS session resumption feature.
There is no guarantee that the passive entity will accept the request to resume a TLS session, and the active entity cannot assume any resumption outcome.
        </t>
        <section anchor="sec-tls-identification" numbered="true" removeInRFC="false" toc="include" pn="section-4.4.1">
          <name slugifiedName="name-entity-identification">Entity Identification</name>
          <t indent="0" pn="section-4.4.1-1">
The TCPCL uses TLS for certificate exchange in both directions to identify each entity and to allow each entity to authenticate its peer.
Each certificate can potentially identify multiple entities, and there is no problem using such a certificate as long as the identifiers are sufficient to meet authentication policy (as described in later sections) for the entity that presents it.
          </t>
          <t indent="0" pn="section-4.4.1-2">
Because the PKIX environment of each TCPCL entity is likely not controlled by the certificate end users (see <xref target="sec-pkix-env" format="default" sectionFormat="of" derivedContent="Section 3.4"/>), the TCPCL defines a prioritized list of what a certificate can identify regarding a TCPCL entity:
          </t>
          <dl newline="false" spacing="normal" indent="3" pn="section-4.4.1-3">
            <dt pn="section-4.4.1-3.1">Node ID:</dt>
            <dd pn="section-4.4.1-3.2">
The ideal certificate identity is the node ID of the entity using the NODE-ID, as defined below.
When the node ID is identified, there is no need for any lower-level identification to be present (though it can still be present, and if so it is also validated).
            </dd>
            <dt pn="section-4.4.1-3.3">DNS Name:</dt>
            <dd pn="section-4.4.1-3.4">
If CA policy forbids a certificate to contain an arbitrary NODE-ID but allows a DNS-ID to be identified, then one or more stable DNS names can be identified in the certificate.
The use of wildcard DNS-IDs is discouraged due to the complex rules for matching and dependence on implementation support for wildcard matching (see <xref section="6.4.3" target="RFC6125" format="default" sectionFormat="of" derivedLink="https://rfc-editor.org/rfc/rfc6125#section-6.4.3" derivedContent="RFC6125"/>).
            </dd>
            <dt pn="section-4.4.1-3.5">Network Address:</dt>
            <dd pn="section-4.4.1-3.6">
If no stable DNS name is available but a stable network address is available and CA policy allows a certificate to contain an IPADDR-ID (as defined below), then one or more network addresses can be identified in the certificate.
            </dd>
          </dl>
          <t indent="0" pn="section-4.4.1-4">
This specification defines a NODE-ID of a certificate as being the subjectAltName entry of type otherName with a name form of <tt>BundleEID</tt> (see <xref target="sec-pkix-oids" format="default" sectionFormat="of" derivedContent="Section 4.4.2.1"/>) and a value limited to a node ID.
An entity <bcp14>SHALL</bcp14> ignore any entry of type otherName with a name form of <tt>BundleEID</tt> and a value that is some URI other than a node ID.
The NODE-ID is similar to the URI-ID as defined in <xref target="RFC6125" format="default" sectionFormat="of" derivedContent="RFC6125"/> but is restricted to a node ID rather than a URI with a qualified-name authority part.
Unless specified otherwise by the definition of the URI scheme being authenticated, URI matching of a NODE-ID <bcp14>SHALL</bcp14> use the URI comparison logic provided in <xref target="RFC3986" format="default" sectionFormat="of" derivedContent="RFC3986"/> and scheme-based normalization of those schemes specified in <xref target="RFC9171" format="default" sectionFormat="of" derivedContent="RFC9171"/>.
A URI scheme can refine this "exact match" logic with rules regarding how node IDs within that scheme are to be compared with the certificate-authenticated NODE-ID.
          </t>
          <t indent="0" pn="section-4.4.1-5">
This specification reuses the DNS-ID definition in <xref section="1.8" target="RFC6125" format="default" sectionFormat="of" derivedLink="https://rfc-editor.org/rfc/rfc6125#section-1.8" derivedContent="RFC6125"/>, which is the subjectAltName entry of type dNSName whose value is encoded according to <xref target="RFC5280" format="default" sectionFormat="of" derivedContent="RFC5280"/>.
          </t>
          <t indent="0" pn="section-4.4.1-6">
This specification defines an IPADDR-ID of a certificate as being the subjectAltName entry of type iPAddress whose value is encoded according to <xref target="RFC5280" format="default" sectionFormat="of" derivedContent="RFC5280"/>.
          </t>
        </section>
        <section anchor="sec-tcpcl-cert-profile" numbered="true" removeInRFC="false" toc="include" pn="section-4.4.2">
          <name slugifiedName="name-certificate-profile-for-the">Certificate Profile for the TCPCL</name>
          <t indent="0" pn="section-4.4.2-1">
All end-entity certificates used by a TCPCL entity <bcp14>SHALL</bcp14> conform to <xref target="RFC5280" format="default" sectionFormat="of" derivedContent="RFC5280"/>, or any updates or successors to that profile.
When an end-entity certificate is supplied, the full certification chain <bcp14>SHOULD</bcp14> be included unless security policy indicates that is unnecessary.
An entity <bcp14>SHOULD</bcp14> omit the root CA certificate (the last item of the chain) when sending a certification chain, as the recipient already has the root CA to anchor its validation.
          </t>
          <t indent="0" pn="section-4.4.2-2">
The TCPCL requires version 3 certificates due to the extensions used by this profile.
TCPCL entities <bcp14>SHALL</bcp14> reject as invalid version 1 and version 2 end-entity certificates.
          </t>
          <t indent="0" pn="section-4.4.2-3">
TCPCL entities <bcp14>SHALL</bcp14> accept certificates that contain an empty Subject field or contain a Subject without a Common Name.
Identity information in end-entity certificates is contained entirely in the subjectAltName extension as defined in <xref target="sec-tls-identification" format="default" sectionFormat="of" derivedContent="Section 4.4.1"/> and discussed in the paragraphs below.
          </t>
          <t indent="0" pn="section-4.4.2-4">
All end-entity and CA certificates used for the TCPCL <bcp14>SHOULD</bcp14> contain both a subject key identifier and an authority key identifier extension in accordance with <xref target="RFC5280" format="default" sectionFormat="of" derivedContent="RFC5280"/>.
TCPCL entities <bcp14>SHOULD NOT</bcp14> rely on either a subject key identifier or an authority key identifier being present in any received certificate. Including key identifiers simplifies the work of an entity that needs to assemble a certification chain.
          </t>
          <t indent="0" pn="section-4.4.2-5">
Unless prohibited by CA policy, a TCPCL end-entity certificate <bcp14>SHALL</bcp14> contain a NODE-ID that authenticates the node ID of the peer.
When assigned one or more stable DNS names, a TCPCL end-entity certificate <bcp14>SHOULD</bcp14> contain a DNS-ID that authenticates those (fully qualified) names.
When assigned one or more stable network addresses, a TCPCL end-entity certificate <bcp14>MAY</bcp14> contain an IPADDR-ID that authenticates those addresses.
          </t>
          <t indent="0" pn="section-4.4.2-6">
When allowed by CA policy, a Bundle Protocol Security (BPSec; see <xref target="RFC9172" format="default" sectionFormat="of" derivedContent="RFC9172"/>) end-entity certificate <bcp14>SHOULD</bcp14> contain a PKIX Extended Key Usage (EKU) extension in accordance with <xref section="4.2.1.12" target="RFC5280" format="default" sectionFormat="of" derivedLink="https://rfc-editor.org/rfc/rfc5280#section-4.2.1.12" derivedContent="RFC5280"/>.
When the PKIX EKU extension is present, it <bcp14>SHOULD</bcp14> contain the key purpose <tt>id-kp-bundleSecurity</tt> (see <xref target="sec-pkix-oids" format="default" sectionFormat="of" derivedContent="Section 4.4.2.1"/>). 
Although not specifically required by the TCPCL, some networks or TLS implementations assume that <tt>id-kp-clientAuth</tt> and <tt>id-kp-serverAuth</tt> need to be used for the client side and the server side of TLS authentication, respectively.
For interoperability, a TCPCL end-entity certificate <bcp14>MAY</bcp14> contain an EKU with both <tt>id-kp-clientAuth</tt> and <tt>id-kp-serverAuth</tt> values.
          </t>
          <t indent="0" pn="section-4.4.2-7">
When allowed by CA policy, a TCPCL end-entity certificate <bcp14>SHOULD</bcp14> contain a PKIX key usage extension in accordance with <xref section="4.2.1.3" target="RFC5280" format="default" sectionFormat="of" derivedLink="https://rfc-editor.org/rfc/rfc5280#section-4.2.1.3" derivedContent="RFC5280"/>.
The PKIX key usage bit that is consistent with TCPCL security using TLS 1.3 is digitalSignature.
The specific algorithms used during the TLS handshake will determine which of those key uses are exercised.
Earlier versions of TLS can mandate the use of the keyEncipherment bit or the keyAgreement bit.
          </t>
          <t indent="0" pn="section-4.4.2-8">
When allowed by CA policy, a TCPCL end-entity certificate <bcp14>SHOULD</bcp14> contain an Online Certificate Status Protocol (OCSP) URI within an authority information access extension in accordance with <xref section="4.2.2.1" target="RFC5280" format="default" sectionFormat="of" derivedLink="https://rfc-editor.org/rfc/rfc5280#section-4.2.2.1" derivedContent="RFC5280"/>.
          </t>
          <section anchor="sec-pkix-oids" numbered="true" removeInRFC="false" toc="exclude" pn="section-4.4.2.1">
            <name slugifiedName="name-pkix-oid-allocations">PKIX OID Allocations</name>
            <t indent="0" pn="section-4.4.2.1-1">
This document defines a PKIX Other Name Form identifier, <tt>id-on-bundleEID</tt>, in <xref target="sec-asn1-mod" format="default" sectionFormat="of" derivedContent="Appendix B"/>; this identifier can be used as the <tt>type-id</tt> in a subjectAltName entry of type otherName.
The <tt>BundleEID</tt> value associated with the otherName type-id <tt>id-on-bundleEID</tt> <bcp14>SHALL</bcp14> be a URI, encoded as an IA5String, with a scheme that is present in the IANA "Bundle Protocol URI Scheme Types" registry <xref target="IANA-BUNDLE" format="default" sectionFormat="of" derivedContent="IANA-BUNDLE"/>.
Although this Other Name Form allows any endpoint ID to be present, the NODE-ID defined in <xref target="sec-tls-identification" format="default" sectionFormat="of" derivedContent="Section 4.4.1"/> limits its use to contain only a node ID.
            </t>
            <t indent="0" pn="section-4.4.2.1-2">
This document defines a PKIX EKU key purpose, <tt>id-kp-bundleSecurity</tt>, in <xref target="sec-asn1-mod" format="default" sectionFormat="of" derivedContent="Appendix B"/>; this purpose  can be used to restrict a certificate's use.
The <tt>id-kp-bundleSecurity</tt> purpose can be combined with other purposes in the same certificate.
            </t>
          </section>
        </section>
        <section anchor="sec-tls-handshake" numbered="true" removeInRFC="false" toc="include" pn="section-4.4.3">
          <name slugifiedName="name-tls-handshake">TLS Handshake</name>
          <t indent="0" pn="section-4.4.3-1">
The use of TLS is negotiated via the Contact Header, as described in <xref target="sec-contact-negotiate" format="default" sectionFormat="of" derivedContent="Section 4.3"/>.
After negotiating an Enable TLS parameter of "true", and before any other TCPCL messages are sent within the session, the session entities <bcp14>SHALL</bcp14> begin a TLS handshake in accordance with <xref target="RFC8446" format="default" sectionFormat="of" derivedContent="RFC8446"/>.
By convention, this protocol uses the entity that initiated the underlying TCP connection (the active peer) as the "client" role of the TLS handshake request.
          </t>
          <t indent="0" pn="section-4.4.3-2">
The TLS handshake, if it occurs, is considered to be part of the contact negotiation before the TCPCL session itself is established.
Specifics regarding exposure of sensitive data are discussed in <xref target="sec-security" format="default" sectionFormat="of" derivedContent="Section 7"/>.
          </t>
          <t indent="0" pn="section-4.4.3-3">
The parameters within each TLS negotiation are implementation dependent but any TCPCL entity <bcp14>SHALL</bcp14> follow all recommended practices specified in <xref target="RFC7525" format="default" sectionFormat="of" derivedContent="RFC7525">BCP 195</xref>, or any updates or successors that become part of BCP 195.
Within each TLS handshake, the following requirements apply (using the rough order in which they occur):
          </t>
          <dl newline="false" spacing="normal" indent="3" pn="section-4.4.3-4">
            <dt pn="section-4.4.3-4.1">ClientHello:</dt>
            <dd pn="section-4.4.3-4.2">
              <t indent="0" pn="section-4.4.3-4.2.1">
When a resolved DNS name was used to establish the TCP connection, the TLS ClientHello <bcp14>SHOULD</bcp14> include a "server_name" extension in accordance with <xref target="RFC6066" format="default" sectionFormat="of" derivedContent="RFC6066"/>.
When present, the server_name extension <bcp14>SHALL</bcp14> contain a "HostName" value taken from the DNS name (of the passive entity) that was resolved.
              </t>
              <aside pn="section-4.4.3-4.2.2">
                <t indent="0" pn="section-4.4.3-4.2.2.1">
Note: The "HostName" in the server_name extension is the network name for the passive entity, not the node ID of that entity.
                </t>
              </aside>
            </dd>
            <dt pn="section-4.4.3-4.3">Server Certificate:</dt>
            <dd pn="section-4.4.3-4.4">
The passive entity <bcp14>SHALL</bcp14> supply a certificate within the TLS handshake to allow authentication of its side of the session.
The supplied end-entity certificate <bcp14>SHALL</bcp14> conform to the profile described in <xref target="sec-tcpcl-cert-profile" format="default" sectionFormat="of" derivedContent="Section 4.4.2"/>.
The passive entity <bcp14>MAY</bcp14> use the SNI DNS name to choose an appropriate server-side certificate that authenticates that DNS name.
              </dd>
            <dt pn="section-4.4.3-4.5">Certificate Request:</dt>
            <dd pn="section-4.4.3-4.6">
During the TLS handshake, the passive entity <bcp14>SHALL</bcp14> request a client-side certificate.
              </dd>
            <dt pn="section-4.4.3-4.7">Client Certificate:</dt>
            <dd pn="section-4.4.3-4.8">
The active entity <bcp14>SHALL</bcp14> supply a certificate chain within the TLS handshake to allow authentication of its side of the session.
The supplied end-entity certificate <bcp14>SHALL</bcp14> conform to the profile described in <xref target="sec-tcpcl-cert-profile" format="default" sectionFormat="of" derivedContent="Section 4.4.2"/>.
              </dd>
          </dl>
          <t indent="0" pn="section-4.4.3-5">
If a TLS handshake cannot negotiate a TLS connection, both entities of the TCPCL session <bcp14>SHALL</bcp14> close the TCP connection.
At this point, the TCPCL session has not yet been established, so there is no TCPCL session to terminate.
          </t>
          <t indent="0" pn="section-4.4.3-6">
After a TLS connection is successfully established, the active entity <bcp14>SHALL</bcp14> send a SESS_INIT message to begin session negotiation.
This session negotiation and all subsequent messaging are secured.
          </t>
        </section>
        <section anchor="sec-tls-authentication" numbered="true" removeInRFC="false" toc="include" pn="section-4.4.4">
          <name slugifiedName="name-tls-authentication">TLS Authentication</name>
          <t indent="0" pn="section-4.4.4-1">
Using PKIX certificates exchanged during the TLS handshake, each of the entities can authenticate a peer node ID directly or authenticate the peer DNS name or network address.
The logic for handling certificates and certificate data is separated into the following phases:
          </t>
          <ol indent="adaptive" spacing="normal" start="1" type="1" pn="section-4.4.4-2">
            <li pn="section-4.4.4-2.1" derivedCounter="1.">Validating the certification path from the end-entity certificate up to a trusted root CA.</li>
            <li pn="section-4.4.4-2.2" derivedCounter="2.">Validating the EKU and other properties of the end-entity certificate.</li>
            <li pn="section-4.4.4-2.3" derivedCounter="3.">Authenticating identities from a valid end-entity certificate.</li>
            <li pn="section-4.4.4-2.4" derivedCounter="4.">Applying security policy to the result of each identity type authentication.</li>
          </ol>
          <t indent="0" pn="section-4.4.4-3">
The result of validating a peer identity (see <xref target="sec-tls-identification" format="default" sectionFormat="of" derivedContent="Section 4.4.1"/>) against one or more types of certificate claims is one of the following:
          </t>
          <dl newline="false" spacing="normal" indent="3" pn="section-4.4.4-4">
            <dt pn="section-4.4.4-4.1">Absent:</dt>
            <dd pn="section-4.4.4-4.2">
Indicating that no such claims are present in the certificate and the identity cannot be authenticated.
            </dd>
            <dt pn="section-4.4.4-4.3">Success:</dt>
            <dd pn="section-4.4.4-4.4">
Indicating that one or more such claims are present and at least one matches the peer identity value.
              </dd>
            <dt pn="section-4.4.4-4.5">Failure:</dt>
            <dd pn="section-4.4.4-4.6">
Indicating that one or more such claims are present and none match the peer identity.
              </dd>
          </dl>
          <section anchor="sec-tls-auth-valid-cert" numbered="true" removeInRFC="false" toc="exclude" pn="section-4.4.4.1">
            <name slugifiedName="name-certificate-path-and-purpos">Certificate Path and Purpose Validation</name>
            <t indent="0" pn="section-4.4.4.1-1">
For any peer end-entity certificate received during the TLS handshake, the entity <bcp14>SHALL</bcp14> perform the certification path validation described in <xref target="RFC5280" format="default" sectionFormat="of" derivedContent="RFC5280"/> up to one of the entity's trusted CA certificates.
If enabled by local policy, the entity <bcp14>SHALL</bcp14> perform an OCSP check of each certificate providing OCSP authority information in accordance with <xref target="RFC6960" format="default" sectionFormat="of" derivedContent="RFC6960"/>.
If certificate validation fails or if security policy disallows a certificate for any reason, the entity <bcp14>SHALL</bcp14> fail the TLS handshake with a "bad_certificate" alert.
Leaving out part of the certification chain can cause the entity to fail to validate a certificate if the certificates that were left out are unknown to the entity (see <xref target="sec-threat-untrust-cert" format="default" sectionFormat="of" derivedContent="Section 7.6"/>).
            </t>
            <t indent="0" pn="section-4.4.4.1-2">
For the end-entity peer certificate received during the TLS handshake, the entity <bcp14>SHALL</bcp14> apply security policy to the key usage extension (if present) and EKU extension (if present) in accordance with Sections <xref target="RFC5280" section="4.2.1.12" sectionFormat="bare" format="default" derivedLink="https://rfc-editor.org/rfc/rfc5280#section-4.2.1.12" derivedContent="RFC5280"/> and <xref target="RFC5280" section="4.2.1.3" sectionFormat="bare" format="default" derivedLink="https://rfc-editor.org/rfc/rfc5280#section-4.2.1.3" derivedContent="RFC5280"/> of <xref target="RFC5280" format="default" sectionFormat="of" derivedContent="RFC5280"/>, respectively, and with the profile discussed in <xref target="sec-tcpcl-cert-profile" format="default" sectionFormat="of" derivedContent="Section 4.4.2"/> of this document.</t>
          </section>
          <section anchor="sec-tls-auth-valid-netid" numbered="true" removeInRFC="false" toc="exclude" pn="section-4.4.4.2">
            <name slugifiedName="name-network-level-authenticatio">Network-Level Authentication</name>
            <t indent="0" pn="section-4.4.4.2-1">
Either during or immediately after the TLS handshake, each entity, if required by security policy, <bcp14>SHALL</bcp14> validate the following certificate identifiers together in accordance with <xref section="6" target="RFC6125" format="default" sectionFormat="of" derivedLink="https://rfc-editor.org/rfc/rfc6125#section-6" derivedContent="RFC6125"/>:
            </t>
            <ul bare="false" empty="false" indent="3" spacing="normal" pn="section-4.4.4.2-2">
              <li pn="section-4.4.4.2-2.1">
If the active entity resolved a DNS name (of the passive entity) in order to initiate the TCP connection, that DNS name <bcp14>SHALL</bcp14> be used as a DNS-ID reference identifier.
              </li>
              <li pn="section-4.4.4.2-2.2">
The IP address of the other side of the TCP connection <bcp14>SHALL</bcp14> be used as an IPADDR-ID reference identifier.
              </li>
            </ul>
            <t indent="0" pn="section-4.4.4.2-3">
If the network-level identifier's authentication result is Failure or if the result is Absent and security policy requires an authenticated network-level identifier, the entity <bcp14>SHALL</bcp14> terminate the session (with a reason code of "Contact Failure").
            </t>
          </section>
          <section anchor="sec-tls-auth-valid-nodeid" numbered="true" removeInRFC="false" toc="exclude" pn="section-4.4.4.3">
            <name slugifiedName="name-node-id-authentication">Node ID Authentication</name>
            <t indent="0" pn="section-4.4.4.3-1">
Immediately before session parameter negotiation, each entity, if required by security policy, <bcp14>SHALL</bcp14> validate the certificate NODE-ID in accordance with <xref section="6" target="RFC6125" format="default" sectionFormat="of" derivedLink="https://rfc-editor.org/rfc/rfc6125#section-6" derivedContent="RFC6125"/> using the node ID of the peer's SESS_INIT message as the NODE-ID reference identifier.
If the NODE-ID validation result is Failure or if the result is Absent and security policy requires an authenticated node ID, the entity <bcp14>SHALL</bcp14> terminate the session (with a reason code of "Contact Failure").
            </t>
          </section>
        </section>
        <section anchor="sec-tls-auth-policy-rec" numbered="true" removeInRFC="false" toc="include" pn="section-4.4.5">
          <name slugifiedName="name-policy-recommendations">Policy Recommendations</name>
          <t indent="0" pn="section-4.4.5-1">
A <bcp14>RECOMMENDED</bcp14> security policy encompasses the following:</t>
          <ul spacing="normal" bare="false" empty="false" indent="3" pn="section-4.4.5-2">
            <li pn="section-4.4.5-2.1">enabling the use of OCSP checking during the TLS handshake.</li>
            <li pn="section-4.4.5-2.2">instructing that, if an EKU extension is present, the extension needs to contain <tt>id-kp-bundleSecurity</tt> (<xref target="sec-pkix-oids" format="default" sectionFormat="of" derivedContent="Section 4.4.2.1"/>) to be usable with TCPCL security.</li>
            <li pn="section-4.4.5-2.3">requiring a validated node ID (<xref target="sec-tls-auth-valid-nodeid" format="default" sectionFormat="of" derivedContent="Section 4.4.4.3"/>) and  ignoring any network-level identifier (<xref target="sec-tls-auth-valid-netid" format="default" sectionFormat="of" derivedContent="Section 4.4.4.2"/>).</li>
          </ul>
          <t indent="0" pn="section-4.4.5-3">
This policy relies on and informs the certificate requirements provided in <xref target="sec-tls-handshake" format="default" sectionFormat="of" derivedContent="Section 4.4.3"/>.
This policy assumes that a DTN-aware CA (see <xref target="sec-pkix-env" format="default" sectionFormat="of" derivedContent="Section 3.4"/>) will only issue a certificate for a node ID when it has verified that the private key holder actually controls the bundle node; this is needed to avoid the threat identified in <xref target="sec-threat-node-impersonation" format="default" sectionFormat="of" derivedContent="Section 7.9"/>.
This policy requires that a certificate contain a NODE-ID and allows the certificate to also contain network-level identifiers.
A tailored policy on a more controlled network could relax the requirement on node ID validation and allow just network-level identifiers to authenticate a peer.
          </t>
        </section>
        <section numbered="true" removeInRFC="false" toc="include" pn="section-4.4.6">
          <name slugifiedName="name-example-tls-initiation">Example TLS Initiation</name>
          <t indent="0" pn="section-4.4.6-1">
A summary of a typical TLS initiation is shown in the sequence in <xref target="fig-tls-example" format="default" sectionFormat="of" derivedContent="Figure 17"/> below.
In this example, the active peer terminates the session, but termination can be initiated from either peer.
          </t>
          <figure anchor="fig-tls-example" align="left" suppress-title="false" pn="figure-17">
            <name slugifiedName="name-a-simple-visual-example-of-">A Simple Visual Example of TCPCL TLS Establishment between Two Entities</name>
            <artwork align="center" type="ascii-art" pn="section-4.4.6-2.1">
         Entity A                             Entity B
        active peer                         passive peer

+-------------------------+
|  Open TCP Connection    | -&gt;      +-------------------------+
+-------------------------+      &lt;- |    Accept Connection    |
                                    +-------------------------+
+-------------------------+
|     Contact Header      | -&gt;      +-------------------------+
+-------------------------+      &lt;- |     Contact Header      |
                                    +-------------------------+

+-------------------------+         +-------------------------+
|     TLS Negotiation     | -&gt;   &lt;- |     TLS Negotiation     |
|       (as client)       |         |       (as server)       |
+-------------------------+         +-------------------------+

           DNS-ID and IPADDR-ID authentication occurs.
               Secured TCPCL messaging can begin.

+-------------------------+
|        SESS_INIT        | -&gt;      +-------------------------+
+-------------------------+      &lt;- |        SESS_INIT        |
                                    +-------------------------+

                  NODE-ID authentication occurs.
           Session is established, transfers can begin.

+-------------------------+
|       SESS_TERM         | -&gt;      +-------------------------+
+-------------------------+      &lt;- |        SESS_TERM        |
                                    +-------------------------+
+-------------------------+
|    TLS Closure Alert    | -&gt;      +-------------------------+
+-------------------------+      &lt;- |    TLS Closure Alert    |
                                    +-------------------------+
+-------------------------+         +-------------------------+
|        TCP Close        | -&gt;   &lt;- |        TCP Close        |
+-------------------------+         +-------------------------+
</artwork>
          </figure>
        </section>
      </section>
      <section anchor="sec-msg-header" numbered="true" removeInRFC="false" toc="include" pn="section-4.5">
        <name slugifiedName="name-message-header">Message Header</name>
        <t indent="0" pn="section-4.5-1">
After the initial exchange of a Contact Header and (if TLS is negotiated to be used) the TLS handshake, all messages transmitted over the session are identified by a one-octet header with the following structure:
        </t>
        <figure anchor="fig-msg-header" align="left" suppress-title="false" pn="figure-18">
          <name slugifiedName="name-format-of-the-message-heade">Format of the Message Header</name>
          <artwork align="center" type="ascii-art" pn="section-4.5-2.1">
 0 1 2 3 4 5 6 7
+---------------+
| Message Type  |
+---------------+
</artwork>
        </figure>
        <t indent="0" pn="section-4.5-3">The Message Header contains the following field:</t>
        <dl newline="false" spacing="normal" indent="3" pn="section-4.5-4">
          <dt pn="section-4.5-4.1">Message Type:</dt>
          <dd pn="section-4.5-4.2">Indicates the type of the message as per <xref target="tab-msg-types" format="default" sectionFormat="of" derivedContent="Table 2"/> below.
Encoded values are listed in <xref target="sec-iana-message-types" format="default" sectionFormat="of" derivedContent="Section 8.5"/>.</dd>
        </dl>
        <table align="center" anchor="tab-msg-types" pn="table-2">
          <name slugifiedName="name-tcpcl-message-types">TCPCL Message Types</name>
          <thead>
            <tr>
              <th align="left" colspan="1" rowspan="1">Name</th>
              <th align="left" colspan="1" rowspan="1">Code</th>
              <th align="left" colspan="1" rowspan="1">Description</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left" colspan="1" rowspan="1">SESS_INIT</td>
              <td align="left" colspan="1" rowspan="1">0x07</td>
              <td align="left" colspan="1" rowspan="1">
Contains the session parameter inputs from one of the entities, as described in <xref target="sec-SESS_INIT" format="default" sectionFormat="of" derivedContent="Section 4.6"/>.
          </td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">SESS_TERM</td>
              <td align="left" colspan="1" rowspan="1">0x05</td>
              <td align="left" colspan="1" rowspan="1">
Indicates that one of the entities participating in the session wishes to cleanly terminate the session, as described in <xref target="sec-SESS_TERM" format="default" sectionFormat="of" derivedContent="Section 6.1"/>.
          </td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">XFER_SEGMENT</td>
              <td align="left" colspan="1" rowspan="1">0x01</td>
              <td align="left" colspan="1" rowspan="1">
Indicates the transmission of a segment of bundle data, as described in <xref target="sec-XFER_SEGMENT" format="default" sectionFormat="of" derivedContent="Section 5.2.2"/>.
          </td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">XFER_ACK</td>
              <td align="left" colspan="1" rowspan="1">0x02</td>
              <td align="left" colspan="1" rowspan="1">
Acknowledges reception of a data segment, as described in <xref target="sec-XFER_ACK" format="default" sectionFormat="of" derivedContent="Section 5.2.3"/>.
          </td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">XFER_REFUSE</td>
              <td align="left" colspan="1" rowspan="1">0x03</td>
              <td align="left" colspan="1" rowspan="1">
Indicates that the transmission of the current bundle <bcp14>SHALL</bcp14> be stopped, as described in <xref target="sec-XFER_REFUSE" format="default" sectionFormat="of" derivedContent="Section 5.2.4"/>.
          </td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">KEEPALIVE</td>
              <td align="left" colspan="1" rowspan="1">0x04</td>
              <td align="left" colspan="1" rowspan="1">
Used to keep the TCPCL session active, as described in <xref target="sec-KEEPALIVE" format="default" sectionFormat="of" derivedContent="Section 5.1.1"/>.
          </td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">MSG_REJECT</td>
              <td align="left" colspan="1" rowspan="1">0x06</td>
              <td align="left" colspan="1" rowspan="1">
Contains a TCPCL message rejection, as described in <xref target="sec-MSG_REJECT" format="default" sectionFormat="of" derivedContent="Section 5.1.2"/>.
          </td>
            </tr>
          </tbody>
        </table>
      </section>
      <section anchor="sec-SESS_INIT" numbered="true" removeInRFC="false" toc="include" pn="section-4.6">
        <name slugifiedName="name-session-initialization-mess">Session Initialization Message (SESS_INIT)</name>
        <t indent="0" pn="section-4.6-1">
Before a session is established and ready to transfer bundles, the session parameters are negotiated between the connected entities.
The SESS_INIT message is used to convey the per-entity parameters, which are used together to negotiate the per-session parameters as described in <xref target="sec-session-negotiate" format="default" sectionFormat="of" derivedContent="Section 4.7"/>.
        </t>
        <t indent="0" pn="section-4.6-2">
The format of a SESS_INIT message is shown in <xref target="fig-msg-SESS_INIT-fields" format="default" sectionFormat="of" derivedContent="Figure 19"/>.
        </t>
        <figure anchor="fig-msg-SESS_INIT-fields" align="left" suppress-title="false" pn="figure-19">
          <name slugifiedName="name-sess_init-format">SESS_INIT Format</name>
          <artwork align="center" type="ascii-art" pn="section-4.6-3.1">
+-----------------------------+
|       Message Header        |
+-----------------------------+
|   Keepalive Interval (U16)  |
+-----------------------------+
|       Segment MRU (U64)     |
+-----------------------------+
|      Transfer MRU (U64)     |
+-----------------------------+
|     Node ID Length (U16)    |
+-----------------------------+
|    Node ID Data (variable)  |
+-----------------------------+
|      Session Extension      |
|      Items Length (U32)     |
+-----------------------------+
|      Session Extension      |
|         Items (var.)        |
+-----------------------------+
</artwork>
        </figure>
        <t indent="0" pn="section-4.6-4">
The fields of the SESS_INIT message are as follows:
        </t>
        <dl newline="false" spacing="normal" indent="3" pn="section-4.6-5">
          <dt pn="section-4.6-5.1">Keepalive Interval:</dt>
          <dd pn="section-4.6-5.2">
A 16-bit unsigned integer indicating the minimum interval, in seconds, to negotiate as the Session Keepalive using the method described in <xref target="sec-session-negotiate" format="default" sectionFormat="of" derivedContent="Section 4.7"/>.
            </dd>
          <dt pn="section-4.6-5.3">Segment MRU:</dt>
          <dd pn="section-4.6-5.4">
A 64-bit unsigned integer indicating the largest allowable single-segment data payload size to be received in this session.
Any XFER_SEGMENT sent to this peer <bcp14>SHALL</bcp14> have a data payload no longer than the peer's Segment MRU.
The two entities of a single session <bcp14>MAY</bcp14> have different Segment MRUs, and no relationship between the two is required.
            </dd>
          <dt pn="section-4.6-5.5">Transfer MRU:</dt>
          <dd pn="section-4.6-5.6">
A 64-bit unsigned integer indicating the largest allowable total-bundle data size to be received in this session.
Any bundle transfer sent to this peer <bcp14>SHALL</bcp14> have a Total Bundle Length payload no longer than the peer's Transfer MRU.
This value can be used to perform proactive bundle fragmentation.
The two entities of a single session <bcp14>MAY</bcp14> have different Transfer MRUs, and no relationship between the two is required.
            </dd>
          <dt pn="section-4.6-5.7">Node ID Length and Node ID Data:</dt>
          <dd pn="section-4.6-5.8">
Together, these fields represent a variable-length text string.
The Node ID Length is a 16-bit unsigned integer indicating the number of octets of Node ID Data to follow.
A zero-length node ID <bcp14>SHALL</bcp14> be used to indicate the lack of a node ID rather than a truly empty node ID.
This case allows an entity to avoid exposing node ID information on an untrusted network.
A non-zero-length Node ID Data <bcp14>SHALL</bcp14> contain the UTF-8 encoded node ID of the entity that sent the SESS_INIT message.
Every node ID <bcp14>SHALL</bcp14> be a URI consistent with the requirements in <xref target="RFC3986" format="default" sectionFormat="of" derivedContent="RFC3986"/> and the URI schemes of the IANA "Bundle Protocol URI Scheme Types" registry <xref target="IANA-BUNDLE" format="default" sectionFormat="of" derivedContent="IANA-BUNDLE"/>.
The node ID itself can be authenticated as described in <xref target="sec-tls-authentication" format="default" sectionFormat="of" derivedContent="Section 4.4.4"/>.
            </dd>
          <dt pn="section-4.6-5.9">Session Extension Items Length and Session Extension Items list:  </dt>
          <dd pn="section-4.6-5.10">​ Together, these fields represent protocol extension data not defined by this specification.
The Session Extension Items Length is the total number of octets to follow that are used to encode the Session Extension Items list. The encoding of each Session Extension Item is within a consistent data container as described in <xref target="sec-session-extension" format="default" sectionFormat="of" derivedContent="Section 4.8"/>.
The full set of Session Extension Items apply for the duration of the TCPCL session to follow.
The order and multiplicity of these Session Extension Items are significant, as defined in the associated type specification(s).
If the content of the Session Extension Items list disagrees with the Session Extension Items Length (e.g., the last item claims to use more or fewer octets than are indicated in the Session Extension Items Length), the reception of the SESS_INIT is considered to have failed.
            </dd>
        </dl>
        <t indent="0" pn="section-4.6-6">
If an entity receives a peer node ID that is not authenticated (by the procedure described in <xref target="sec-tls-auth-valid-nodeid" format="default" sectionFormat="of" derivedContent="Section 4.4.4.3"/>), that node ID <bcp14>SHOULD NOT</bcp14> be used by a BPA for any discovery or routing functions.
Trusting an unauthenticated node ID can lead to the threat described in <xref target="sec-threat-node-impersonation" format="default" sectionFormat="of" derivedContent="Section 7.9"/>.
        </t>
        <t indent="0" pn="section-4.6-7">
When the active entity initiates a TCPCL session, it is likely based on routing information that binds a node ID to CL parameters used to initiate the session.
If the active entity receives a SESS_INIT with a different node ID than was intended for the TCPCL session, the session <bcp14>MAY</bcp14> be allowed to be established.
If allowed, such a session <bcp14>SHALL</bcp14> be associated with the node ID provided in the SESS_INIT message rather than any intended value.
        </t>
      </section>
      <section anchor="sec-session-negotiate" numbered="true" removeInRFC="false" toc="include" pn="section-4.7">
        <name slugifiedName="name-session-parameter-negotiati">Session Parameter Negotiation</name>
        <t indent="0" pn="section-4.7-1">
An entity calculates the parameters for a TCPCL session by negotiating the values from its own preferences (conveyed by the SESS_INIT it sent to the peer) with the preferences of the peer entity (expressed in the SESS_INIT that it received from the peer).
The negotiated parameters defined by this specification are described in the following paragraphs.
        </t>
        <dl newline="false" spacing="normal" indent="3" pn="section-4.7-2">
          <dt pn="section-4.7-2.1">Transfer MTU and Segment MTU:</dt>
          <dd pn="section-4.7-2.2">
The Maximum Transmission Unit (MTU) for whole transfers and individual segments is identical to the Transfer MRU and Segment MRU, respectively, of the received SESS_INIT message. A transmitting peer can send individual segments with any size smaller than the Segment MTU, depending on local policy, dynamic network conditions, etc.
Determining the size of each transmitted segment is an implementation matter.
If either the Transfer MRU or Segment MRU is unacceptable, the entity <bcp14>SHALL</bcp14> terminate the session with a reason code of "Contact Failure".
            </dd>
          <dt pn="section-4.7-2.3">Session Keepalive:</dt>
          <dd pn="section-4.7-2.4">
            <t indent="0" pn="section-4.7-2.4.1">
Negotiation of the Session Keepalive parameter is performed by taking the minimum of the two Keepalive Interval values from the two SESS_INIT messages.
The Session Keepalive Interval is a parameter for the behavior described in <xref target="sec-KEEPALIVE" format="default" sectionFormat="of" derivedContent="Section 5.1.1"/>.
If the Session Keepalive Interval is unacceptable, the entity <bcp14>SHALL</bcp14> terminate the session with a reason code of "Contact Failure".
            </t>
            <aside pn="section-4.7-2.4.2">
              <t indent="0" pn="section-4.7-2.4.2.1">
Note: A negotiated Session Keepalive of zero indicates that KEEPALIVEs are disabled.
              </t>
            </aside>
          </dd>
        </dl>
        <t indent="0" pn="section-4.7-3">
Once this process of parameter negotiation is completed, this protocol defines no additional mechanism to change the parameters of an established session; to effect such a change, the TCPCL session <bcp14>MUST</bcp14> be terminated and a new session established.
        </t>
      </section>
      <section anchor="sec-session-extension" numbered="true" removeInRFC="false" toc="include" pn="section-4.8">
        <name slugifiedName="name-session-extension-items">Session Extension Items</name>
        <t indent="0" pn="section-4.8-1">
Each of the Session Extension Items <bcp14>SHALL</bcp14> be encoded in an identical Type-Length-Value (TLV) container form as indicated in <xref target="fig-session-extension" format="default" sectionFormat="of" derivedContent="Figure 20"/>.
        </t>
        <t indent="0" pn="section-4.8-2">
The fields of the Session Extension Item are as follows:
        </t>
        <dl newline="false" spacing="normal" indent="3" pn="section-4.8-3">
          <dt pn="section-4.8-3.1">Item Flags:</dt>
          <dd pn="section-4.8-3.2">
A one-octet field containing generic bit flags related to the Item, which are listed in <xref target="tab-session-extension-flags" format="default" sectionFormat="of" derivedContent="Table 3"/>.
All reserved header flag bits <bcp14>SHALL</bcp14> be set to 0 by the sender.
All reserved header flag bits <bcp14>SHALL</bcp14> be ignored by the receiver.
If a TCPCL entity receives a Session Extension Item with an unknown Item Type and the <tt>CRITICAL</tt> flag set to 1, the entity <bcp14>SHALL</bcp14> terminate the TCPCL session with a SESS_TERM reason code of "Contact Failure".
If the <tt>CRITICAL</tt> flag is 0, an entity <bcp14>SHALL</bcp14> skip over and ignore any item with an unknown Item Type.
            </dd>
          <dt pn="section-4.8-3.3">Item Type:</dt>
          <dd pn="section-4.8-3.4">
A 16-bit unsigned integer field containing the type of the extension item.
This specification does not define any extension types directly but does create an IANA registry for such codes (see <xref target="sec-iana-session-extension-type" format="default" sectionFormat="of" derivedContent="Section 8.3"/>).
            </dd>
          <dt pn="section-4.8-3.5">Item Length:</dt>
          <dd pn="section-4.8-3.6">
A 16-bit unsigned integer field containing the number of Item Value octets to follow.
            </dd>
          <dt pn="section-4.8-3.7">Item Value:</dt>
          <dd pn="section-4.8-3.8">
A variable-length data field that is interpreted according to the associated Item Type.
This specification places no restrictions on an extension's use of available Item Value data.
Extension specifications <bcp14>SHOULD</bcp14> avoid the use of large data lengths, as no bundle transfers can begin until the full extension data is sent.
            </dd>
        </dl>
        <figure anchor="fig-session-extension" align="left" suppress-title="false" pn="figure-20">
          <name slugifiedName="name-session-extension-item-form">Session Extension Item Format</name>
          <artwork align="center" type="ascii-art" pn="section-4.8-4.1">
                     1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+---------------+---------------+---------------+---------------+
|  Item Flags   |           Item Type           | Item Length...|
+---------------+---------------+---------------+---------------+
| length contd. | Item Value...                                 |
+---------------+---------------+---------------+---------------+
</artwork>
        </figure>
        <table align="center" anchor="tab-session-extension-flags" pn="table-3">
          <name slugifiedName="name-session-extension-item-flag">Session Extension Item Flags</name>
          <thead>
            <tr>
              <th align="left" colspan="1" rowspan="1">Name</th>
              <th align="left" colspan="1" rowspan="1">Code</th>
              <th align="left" colspan="1" rowspan="1">Description</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left" colspan="1" rowspan="1">
                <tt>CRITICAL</tt></td>
              <td align="left" colspan="1" rowspan="1">0x01</td>
              <td align="left" colspan="1" rowspan="1">If this bit is set, it indicates that the receiving peer must handle the extension item.</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">Reserved</td>
              <td align="left" colspan="1" rowspan="1">others</td>
              <td align="left" colspan="1" rowspan="1"/>
            </tr>
          </tbody>
        </table>
      </section>
    </section>
    <section anchor="sec-session" numbered="true" removeInRFC="false" toc="include" pn="section-5">
      <name slugifiedName="name-established-session-operati">Established Session Operation</name>
      <t indent="0" pn="section-5-1">
This section describes the protocol operation for the duration of an established session, including the mechanism for transmitting bundles over the session.
      </t>
      <section anchor="sec-conn-upkeep" numbered="true" removeInRFC="false" toc="include" pn="section-5.1">
        <name slugifiedName="name-upkeep-and-status-messages">Upkeep and Status Messages</name>
        <section anchor="sec-KEEPALIVE" numbered="true" removeInRFC="false" toc="include" pn="section-5.1.1">
          <name slugifiedName="name-session-upkeep-keepalive">Session Upkeep (KEEPALIVE)</name>
          <t indent="0" pn="section-5.1.1-1">
The protocol includes a provision for transmission of KEEPALIVE messages over the TCPCL session to help determine if the underlying TCP connection has been disrupted.
          </t>
          <t indent="0" pn="section-5.1.1-2">
As described in <xref target="sec-session-negotiate" format="default" sectionFormat="of" derivedContent="Section 4.7"/>, a negotiated parameter of each session is the Session Keepalive Interval. If the negotiated Session Keepalive is zero (i.e., one or both SESS_INIT messages contain a zero Keepalive Interval), then the keepalive feature is disabled.
There is no logical minimum value for the Keepalive Interval (within the minimum imposed by the positive-value encoding), but when used for many sessions on an open, shared network, a short interval could lead to excessive traffic.
For shared network use, entities <bcp14>SHOULD</bcp14> choose a Keepalive Interval no shorter than 30 seconds.
There is no logical maximum value for the Keepalive Interval (within the maximum imposed by the fixed-size encoding), but an idle TCP connection is liable for closure by the host operating system if the keepalive time is longer than tens of minutes.
Entities <bcp14>SHOULD</bcp14> choose a Keepalive Interval no longer than 10 minutes (600 seconds).
          </t>
          <t indent="0" pn="section-5.1.1-3">
The chosen Keepalive Interval <bcp14>SHOULD NOT</bcp14> be too short, as TCP retransmissions may occur in the case of packet loss.
Those will have to be triggered by a timeout (TCP retransmission timeout (RTO)), which is dependent on the measured RTT for the TCP connection so that KEEPALIVE messages can experience noticeable latency.
          </t>
          <t indent="0" pn="section-5.1.1-4">
The format of a KEEPALIVE message is a one-octet Message Type code of KEEPALIVE (as described in <xref target="tab-msg-types" format="default" sectionFormat="of" derivedContent="Table 2"/>) with no additional data.
Both sides <bcp14>SHALL</bcp14> send a KEEPALIVE message whenever the negotiated interval has elapsed with no transmission of any message (KEEPALIVE or other).
          </t>
          <t indent="0" pn="section-5.1.1-5">
If no message (KEEPALIVE or other) has been received in a session after some implementation-defined time duration, then the entity <bcp14>SHALL</bcp14> terminate the session by transmitting a SESS_TERM message (as described in <xref target="sec-SESS_TERM" format="default" sectionFormat="of" derivedContent="Section 6.1"/>) with a reason code of "Idle timeout".
If configurable, the idle timeout duration <bcp14>SHOULD</bcp14> be no shorter than twice the Keepalive Interval.
If not configurable, the idle timeout duration <bcp14>SHOULD</bcp14> be exactly twice the Keepalive Interval.
          </t>
        </section>
        <section anchor="sec-MSG_REJECT" numbered="true" removeInRFC="false" toc="include" pn="section-5.1.2">
          <name slugifiedName="name-message-rejection-msg_rejec">Message Rejection (MSG_REJECT)</name>
          <t indent="0" pn="section-5.1.2-1">
This message type is not expected to be seen in a well-functioning session.
Its purpose is to aid in troubleshooting bad entity behavior by allowing the peer to observe why an entity is not responding as expected to its messages.
          </t>
          <t indent="0" pn="section-5.1.2-2">
If a TCPCL entity receives a message type that is unknown to it (possibly due to an unhandled protocol version mismatch or an incorrectly negotiated session extension that defines a new message type), the entity <bcp14>SHALL</bcp14> send a MSG_REJECT message with a reason code of "Message Type Unknown" and close the TCP connection.
If a TCPCL entity receives a message type that is known but is inappropriate for the negotiated session parameters (possibly due to an incorrectly negotiated session extension), the entity <bcp14>SHALL</bcp14> send a MSG_REJECT message with a reason code of "Message Unsupported".
If a TCPCL entity receives a message that is inappropriate for the current session state (e.g., a SESS_INIT after the session has already been established or a XFER_ACK message with an unknown Transfer ID), the entity <bcp14>SHALL</bcp14> send a MSG_REJECT message with a reason code of "Message Unexpected".
          </t>
          <t indent="0" pn="section-5.1.2-3">
The format of a MSG_REJECT message is shown in <xref target="fig-MSG_REJECT-fields" format="default" sectionFormat="of" derivedContent="Figure 21"/>.
          </t>
          <figure anchor="fig-MSG_REJECT-fields" align="left" suppress-title="false" pn="figure-21">
            <name slugifiedName="name-format-of-msg_reject-messag">Format of MSG_REJECT Messages</name>
            <artwork align="center" type="ascii-art" pn="section-5.1.2-4.1">
+-----------------------------+
|       Message Header        |
+-----------------------------+
|      Reason Code (U8)       |
+-----------------------------+
|   Rejected Message Header   |
+-----------------------------+
</artwork>
          </figure>
          <t indent="0" pn="section-5.1.2-5">
The fields of the MSG_REJECT message are as follows:
          </t>
          <dl newline="false" spacing="normal" indent="3" pn="section-5.1.2-6">
            <dt pn="section-5.1.2-6.1">Reason Code:</dt>
            <dd pn="section-5.1.2-6.2">
A one-octet refusal reason code interpreted according to the descriptions in <xref target="tab-MSG_REJECT-reasons" format="default" sectionFormat="of" derivedContent="Table 4"/>.
              </dd>
            <dt pn="section-5.1.2-6.3">Rejected Message Header:</dt>
            <dd pn="section-5.1.2-6.4">
The Rejected Message Header is a copy of the Message Header to which the MSG_REJECT message is sent as a response.
              </dd>
          </dl>
          <table align="center" anchor="tab-MSG_REJECT-reasons" pn="table-4">
            <name slugifiedName="name-msg_reject-reason-codes">MSG_REJECT Reason Codes</name>
            <thead>
              <tr>
                <th align="left" colspan="1" rowspan="1">Name</th>
                <th align="left" colspan="1" rowspan="1">Code</th>
                <th align="left" colspan="1" rowspan="1">Description</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td align="left" colspan="1" rowspan="1">Message Type Unknown</td>
                <td align="left" colspan="1" rowspan="1">0x01</td>
                <td align="left" colspan="1" rowspan="1">A message was received with a Message Type code unknown to the TCPCL entity.</td>
              </tr>
              <tr>
                <td align="left" colspan="1" rowspan="1">Message Unsupported</td>
                <td align="left" colspan="1" rowspan="1">0x02</td>
                <td align="left" colspan="1" rowspan="1">A message was received, but the TCPCL entity cannot comply with the message contents.</td>
              </tr>
              <tr>
                <td align="left" colspan="1" rowspan="1">Message Unexpected</td>
                <td align="left" colspan="1" rowspan="1">0x03</td>
                <td align="left" colspan="1" rowspan="1">A message was received while the session is in a state in which the message is not expected.</td>
              </tr>
            </tbody>
          </table>
        </section>
      </section>
      <section anchor="sec-transfer" numbered="true" removeInRFC="false" toc="include" pn="section-5.2">
        <name slugifiedName="name-bundle-transfer">Bundle Transfer</name>
        <t indent="0" pn="section-5.2-1">
All of the messages discussed in this section are directly associated with transferring a bundle between TCPCL entities.
        </t>
        <t indent="0" pn="section-5.2-2">
A single TCPCL transfer results in the exchange of a bundle (handled by the convergence layer as opaque data) between two entities.
In the TCPCL, a transfer is accomplished by dividing a single bundle up into "segments" based on the receiving-side Segment MRU, which is defined in <xref target="sec-SESS_INIT" format="default" sectionFormat="of" derivedContent="Section 4.6"/>.
The choice of the length to use for segments is an implementation matter, but each segment <bcp14>MUST NOT</bcp14> be larger than the receiving entity's Segment MRU.
The first segment for a bundle is indicated by the <tt>START</tt> flag, and the last segment is indicated by the <tt>END</tt> flag.
        </t>
        <t indent="0" pn="section-5.2-3">
A single transfer (and, by extension, a single segment) <bcp14>SHALL NOT</bcp14> contain data of more than a single bundle.
This requirement is imposed on the agent using the TCPCL, rather than on the TCPCL itself.
        </t>
        <t indent="0" pn="section-5.2-4">
If multiple bundles are transmitted on a single TCPCL connection, they <bcp14>MUST</bcp14> be transmitted consecutively, without the interleaving of segments from multiple bundles.
        </t>
        <section anchor="sec-transfer-id" numbered="true" removeInRFC="false" toc="include" pn="section-5.2.1">
          <name slugifiedName="name-bundle-transfer-id">Bundle Transfer ID</name>
          <t indent="0" pn="section-5.2.1-1">
Each of the bundle transfer messages contains a Transfer ID, which is used to correlate messages (from both sides of a transfer) for each bundle.
A Transfer ID does not attempt to address uniqueness of the bundle data itself and is not related to such concepts as bundle fragmentation.
Each invocation of the TCPCL by the BPA, requesting transmission of a bundle (fragmentary or otherwise), results in the initiation of a single TCPCL transfer.
Each transfer entails the sending of a sequence of some number of XFER_SEGMENT and XFER_ACK messages; all are correlated by the same Transfer ID.
The sending entity originates a Transfer ID, and the receiving entity uses that same Transfer ID in acknowledgments.
          </t>
          <t indent="0" pn="section-5.2.1-2">
Transfer IDs from each entity <bcp14>SHALL</bcp14> be unique within a single TCPCL session.
Upon exhaustion of the entire 64-bit Transfer ID space, the sending entity <bcp14>SHALL</bcp14> terminate the session with a SESS_TERM reason code of "Resource Exhaustion".
For bidirectional bundle transfers, a TCPCL entity <bcp14>SHOULD NOT</bcp14> rely on any relationship between Transfer IDs originating from each side of the TCPCL session.
          </t>
          <t indent="0" pn="section-5.2.1-3">
Although there is not a strict requirement for initial Transfer ID values or the ordering of Transfer IDs (see <xref target="sec-security-xferid" format="default" sectionFormat="of" derivedContent="Section 7.13"/>), in the absence of any other mechanism for generating Transfer IDs, an entity <bcp14>SHALL</bcp14> use the following algorithm: the initial Transfer ID from each entity is zero, and subsequent Transfer ID values are incremented from the prior Transfer ID value by one.
          </t>
        </section>
        <section anchor="sec-XFER_SEGMENT" numbered="true" removeInRFC="false" toc="include" pn="section-5.2.2">
          <name slugifiedName="name-data-transmission-xfer_segm">Data Transmission (XFER_SEGMENT)</name>
          <t indent="0" pn="section-5.2.2-1">
Each bundle is transmitted in one or more data segments.
The format of a XFER_SEGMENT message is shown in <xref target="fig-XFER_SEGMENT-fields" format="default" sectionFormat="of" derivedContent="Figure 22"/>.
          </t>
          <figure anchor="fig-XFER_SEGMENT-fields" align="left" suppress-title="false" pn="figure-22">
            <name slugifiedName="name-format-of-xfer_segment-mess">Format of XFER_SEGMENT Messages</name>
            <artwork align="center" type="ascii-art" pn="section-5.2.2-2.1">
+------------------------------+
|       Message Header         |
+------------------------------+
|     Message Flags (U8)       |
+------------------------------+
|      Transfer ID (U64)       |
+------------------------------+
|     Transfer Extension       |
|      Items Length (U32)      |
|   (only for START segment)   |
+------------------------------+
|     Transfer Extension       |
|         Items (var.)         |
|   (only for START segment)   |
+------------------------------+
|      Data length (U64)       |
+------------------------------+
| Data contents (octet string) |
+------------------------------+
</artwork>
          </figure>
          <t indent="0" pn="section-5.2.2-3">
The fields of the XFER_SEGMENT message are as follows:
          </t>
          <dl newline="false" spacing="normal" indent="3" pn="section-5.2.2-4">
            <dt pn="section-5.2.2-4.1">Message Flags:</dt>
            <dd pn="section-5.2.2-4.2">
A one-octet field of single-bit flags, interpreted according to the descriptions in <xref target="tab-XFER_SEGMENT-flags" format="default" sectionFormat="of" derivedContent="Table 5"/>.
All reserved header flag bits <bcp14>SHALL</bcp14> be set to 0 by the sender.
All reserved header flag bits <bcp14>SHALL</bcp14> be ignored by the receiver.
              </dd>
            <dt pn="section-5.2.2-4.3">Transfer ID:</dt>
            <dd pn="section-5.2.2-4.4">
A 64-bit unsigned integer identifying the transfer being made.
              </dd>
            <dt pn="section-5.2.2-4.5">Transfer Extension Items Length and Transfer Extension Items list:</dt>
            <dd pn="section-5.2.2-4.6">​ Together, these fields represent protocol extension data for this specification.
The Transfer Extension Items Length and Transfer Extension Items list <bcp14>SHALL</bcp14> only be present when the <tt>START</tt> flag is set to 1 on the message.
The Transfer Extension Items Length is the total number of octets to follow that are used to encode the Transfer Extension Items list.
The encoding of each Transfer Extension Item is within a consistent data container, as described in <xref target="sec-transfer-extension" format="default" sectionFormat="of" derivedContent="Section 5.2.5"/>.
The full set of Transfer Extension Items apply only to the associated single transfer.
The order and multiplicity of these Transfer Extension Items are significant, as defined in the associated type specification(s).
If the content of the Transfer Extension Items list disagrees with the Transfer Extension Items Length (e.g., the last item claims to use more or fewer octets than are indicated in the Transfer Extension Items Length), the reception of the XFER_SEGMENT is considered to have failed.
              </dd>
            <dt pn="section-5.2.2-4.7">Data length:</dt>
            <dd pn="section-5.2.2-4.8">
A 64-bit unsigned integer indicating the number of octets in Data contents to follow.
              </dd>
            <dt pn="section-5.2.2-4.9">Data contents:</dt>
            <dd pn="section-5.2.2-4.10">
The variable-length data payload of the message.
              </dd>
          </dl>
          <table align="center" anchor="tab-XFER_SEGMENT-flags" pn="table-5">
            <name slugifiedName="name-xfer_segment-flags">XFER_SEGMENT Flags</name>
            <thead>
              <tr>
                <th align="left" colspan="1" rowspan="1">Name</th>
                <th align="left" colspan="1" rowspan="1">Code</th>
                <th align="left" colspan="1" rowspan="1">Description</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td align="left" colspan="1" rowspan="1">
                  <tt>END</tt></td>
                <td align="left" colspan="1" rowspan="1">0x01</td>
                <td align="left" colspan="1" rowspan="1">If this bit is set, it indicates that this is the last segment of the transfer.</td>
              </tr>
              <tr>
                <td align="left" colspan="1" rowspan="1">
                  <tt>START</tt></td>
                <td align="left" colspan="1" rowspan="1">0x02</td>
                <td align="left" colspan="1" rowspan="1">If this bit is set, it indicates that this is the first segment of the transfer.</td>
              </tr>
              <tr>
                <td align="left" colspan="1" rowspan="1">Reserved</td>
                <td align="left" colspan="1" rowspan="1">others</td>
                <td align="left" colspan="1" rowspan="1"/>
              </tr>
            </tbody>
          </table>
          <t indent="0" pn="section-5.2.2-6">
The flags portion of the message contains two flag values in the two low-order bits, denoted <tt>START</tt> and <tt>END</tt> in <xref target="tab-XFER_SEGMENT-flags" format="default" sectionFormat="of" derivedContent="Table 5"/>.
The <tt>START</tt> flag <bcp14>SHALL</bcp14> be set to 1 when transmitting the first segment of a transfer.
The <tt>END</tt> flag <bcp14>SHALL</bcp14> be set to 1 when transmitting the last segment of a transfer.
In the case where an entire transfer is accomplished in a single segment, both the <tt>START</tt> flag and the <tt>END</tt> flag <bcp14>SHALL</bcp14> be set to 1.
          </t>
          <t indent="0" pn="section-5.2.2-7">
Once a transfer of a bundle has commenced, the entity <bcp14>MUST</bcp14> only send segments containing sequential portions of that bundle until it sends a segment with the <tt>END</tt> flag set to 1.
No interleaving of multiple transfers from the same entity is possible within a single TCPCL session.
Simultaneous transfers between two entities <bcp14>MAY</bcp14> be achieved using multiple TCPCL sessions.
          </t>
        </section>
        <section anchor="sec-XFER_ACK" numbered="true" removeInRFC="false" toc="include" pn="section-5.2.3">
          <name slugifiedName="name-data-acknowledgments-xfer_a">Data Acknowledgments (XFER_ACK)</name>
          <t indent="0" pn="section-5.2.3-1">
Although the TCP transport provides reliable transfer of data between transport peers, the typical BSD sockets interface provides no means to inform a sending application of when the receiving application has processed some amount of transmitted data.
Thus, after transmitting some data, the TCPCL needs an additional mechanism to determine whether the receiving agent has successfully received and fully processed the segment.
To this end, the TCPCL protocol provides feedback messaging whereby a receiving entity transmits acknowledgments of reception of data segments.
          </t>
          <t indent="0" pn="section-5.2.3-2">
The format of a XFER_ACK message is shown in <xref target="fig-XFER_ACK-fields" format="default" sectionFormat="of" derivedContent="Figure 23"/>.
          </t>
          <figure anchor="fig-XFER_ACK-fields" align="left" suppress-title="false" pn="figure-23">
            <name slugifiedName="name-format-of-xfer_ack-messages">Format of XFER_ACK Messages</name>
            <artwork align="center" type="ascii-art" pn="section-5.2.3-3.1">
+-----------------------------+
|       Message Header        |
+-----------------------------+
|     Message Flags (U8)      |
+-----------------------------+
|      Transfer ID (U64)      |
+-----------------------------+
| Acknowledged length (U64)   |
+-----------------------------+
</artwork>
          </figure>
          <t indent="0" pn="section-5.2.3-4">
The fields of the XFER_ACK message are as follows:
          </t>
          <dl newline="false" spacing="normal" indent="3" pn="section-5.2.3-5">
            <dt pn="section-5.2.3-5.1">Message Flags:</dt>
            <dd pn="section-5.2.3-5.2">
A one-octet field of single-bit flags, interpreted according to the descriptions in <xref target="tab-XFER_SEGMENT-flags" format="default" sectionFormat="of" derivedContent="Table 5"/>.
All reserved header flag bits <bcp14>SHALL</bcp14> be set to 0 by the sender.
All reserved header flag bits <bcp14>SHALL</bcp14> be ignored by the receiver.
              </dd>
            <dt pn="section-5.2.3-5.3">Transfer ID:</dt>
            <dd pn="section-5.2.3-5.4">
A 64-bit unsigned integer identifying the transfer being acknowledged.
              </dd>
            <dt pn="section-5.2.3-5.5">Acknowledged length:</dt>
            <dd pn="section-5.2.3-5.6">
A 64-bit unsigned integer indicating the total number of octets in the transfer that are being acknowledged.
              </dd>
          </dl>
          <t indent="0" pn="section-5.2.3-6">
A receiving TCPCL entity <bcp14>SHALL</bcp14> send a XFER_ACK message in response to each received XFER_SEGMENT message after the segment has been fully processed.
The flags portion of the XFER_ACK header <bcp14>SHALL</bcp14> be set to match the corresponding XFER_SEGMENT message being acknowledged (including flags not decodable to the entity).
The acknowledged length of each XFER_ACK contains the sum of the Data length fields of all XFER_SEGMENT messages received so far in the course of the indicated transfer.
The sending entity <bcp14>SHOULD</bcp14> transmit multiple XFER_SEGMENT messages without waiting for the corresponding XFER_ACK responses.
This enables pipelining of messages on a transfer stream.
          </t>
          <t indent="0" pn="section-5.2.3-7">
For example, suppose the sending entity transmits four segments of bundle data with lengths 100, 200, 500, and 1000, respectively.
After receiving the first segment, the entity sends an acknowledgment of length 100.
After the second segment is received, the entity sends an acknowledgment of length 300.
The third and fourth acknowledgments are of lengths 800 and 1800, respectively.
          </t>
          <t indent="0" pn="section-5.2.3-8">
          </t>
        </section>
        <section anchor="sec-XFER_REFUSE" numbered="true" removeInRFC="false" toc="include" pn="section-5.2.4">
          <name slugifiedName="name-transfer-refusal-xfer_refus">Transfer Refusal (XFER_REFUSE)</name>
          <t indent="0" pn="section-5.2.4-1">
The TCPCL supports a mechanism by which a receiving entity can indicate to the sender that it does not want to receive the corresponding bundle.
To do so, upon receiving a XFER_SEGMENT message, the entity <bcp14>MAY</bcp14> transmit a XFER_REFUSE message.
As data segments and acknowledgments can cross on the wire, the bundle that is being refused <bcp14>SHALL</bcp14> be identified by the Transfer ID of the refusal.
          </t>
          <t indent="0" pn="section-5.2.4-2">
There is no required relationship between the Transfer MRU of a TCPCL entity (which is supposed to represent a firm limitation of what the entity will accept) and the sending of a XFER_REFUSE message.
A XFER_REFUSE can be used in cases where the agent's bundle storage is temporarily depleted or somehow constrained.
A XFER_REFUSE can also be used after the bundle header or any bundle data is inspected by an agent and determined to be unacceptable.
          </t>
          <t indent="0" pn="section-5.2.4-3">
A transfer receiver <bcp14>MAY</bcp14> send a XFER_REFUSE message as soon as it receives any XFER_SEGMENT message.
The transfer sender <bcp14>MUST</bcp14> be prepared for this and <bcp14>MUST</bcp14> associate the refusal with the correct bundle via the Transfer ID fields.
          </t>
          <t indent="0" pn="section-5.2.4-4">
The TCPCL itself does not have any required behavior related to responding to a XFER_REFUSE based on its reason code; the refusal is passed up as an indication to the BPA that the transfer has been refused.
If a transfer refusal has a reason code that is not decodable to the BPA, the agent <bcp14>SHOULD</bcp14> treat the refusal as having a reason code of "Unknown".
          </t>
          <t indent="0" pn="section-5.2.4-5">
The format of the XFER_REFUSE message is shown in <xref target="fig-msg-XFER_REFUSE" format="default" sectionFormat="of" derivedContent="Figure 24"/>.
          </t>
          <figure anchor="fig-msg-XFER_REFUSE" align="left" suppress-title="false" pn="figure-24">
            <name slugifiedName="name-format-of-xfer_refuse-messa">Format of XFER_REFUSE Messages</name>
            <artwork align="center" type="ascii-art" pn="section-5.2.4-6.1">
+-----------------------------+
|       Message Header        |
+-----------------------------+
|      Reason Code (U8)       |
+-----------------------------+
|      Transfer ID (U64)      |
+-----------------------------+
</artwork>
          </figure>
          <t indent="0" pn="section-5.2.4-7">
The fields of the XFER_REFUSE message are as follows:
          </t>
          <dl newline="false" spacing="normal" indent="3" pn="section-5.2.4-8">
            <dt pn="section-5.2.4-8.1">Reason Code:</dt>
            <dd pn="section-5.2.4-8.2">
A one-octet refusal reason code interpreted according to the descriptions in <xref target="tab-XFER_REFUSE-reasons" format="default" sectionFormat="of" derivedContent="Table 6"/>.
              </dd>
            <dt pn="section-5.2.4-8.3">Transfer ID:</dt>
            <dd pn="section-5.2.4-8.4">
A 64-bit unsigned integer identifying the transfer being refused.
              </dd>
          </dl>
          <table align="center" anchor="tab-XFER_REFUSE-reasons" pn="table-6">
            <name slugifiedName="name-xfer_refuse-reason-codes">XFER_REFUSE Reason Codes</name>
            <thead>
              <tr>
                <th align="left" colspan="1" rowspan="1">Name</th>
                <th align="left" colspan="1" rowspan="1">Code</th>
                <th align="left" colspan="1" rowspan="1">Description</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td align="left" colspan="1" rowspan="1">Unknown</td>
                <td align="left" colspan="1" rowspan="1">0x00</td>
                <td align="left" colspan="1" rowspan="1">The reason for refusal is unknown or is not specified.</td>
              </tr>
              <tr>
                <td align="left" colspan="1" rowspan="1">Completed</td>
                <td align="left" colspan="1" rowspan="1">0x01</td>
                <td align="left" colspan="1" rowspan="1">The receiver already has the complete bundle. The sender <bcp14>MAY</bcp14> consider the bundle as completely received.</td>
              </tr>
              <tr>
                <td align="left" colspan="1" rowspan="1">No Resources</td>
                <td align="left" colspan="1" rowspan="1">0x02</td>
                <td align="left" colspan="1" rowspan="1">The receiver's resources are exhausted. The sender <bcp14>SHOULD</bcp14> apply reactive bundle fragmentation before retrying.</td>
              </tr>
              <tr>
                <td align="left" colspan="1" rowspan="1">Retransmit</td>
                <td align="left" colspan="1" rowspan="1">0x03</td>
                <td align="left" colspan="1" rowspan="1">The receiver has encountered a problem that requires the bundle to be retransmitted in its entirety.</td>
              </tr>
              <tr>
                <td align="left" colspan="1" rowspan="1">Not Acceptable</td>
                <td align="left" colspan="1" rowspan="1">0x04</td>
                <td align="left" colspan="1" rowspan="1">Some issue with the bundle data or the transfer extension data was encountered. The sender <bcp14>SHOULD NOT</bcp14> retry the same bundle with the same extensions.</td>
              </tr>
              <tr>
                <td align="left" colspan="1" rowspan="1">Extension Failure</td>
                <td align="left" colspan="1" rowspan="1">0x05</td>
                <td align="left" colspan="1" rowspan="1">A failure processing the Transfer Extension Items has occurred.</td>
              </tr>
              <tr>
                <td align="left" colspan="1" rowspan="1">Session Terminating</td>
                <td align="left" colspan="1" rowspan="1">0x06</td>
                <td align="left" colspan="1" rowspan="1">The receiving entity is in the process of terminating the session. The sender <bcp14>MAY</bcp14> retry the same bundle at a later time in a different session.</td>
              </tr>
            </tbody>
          </table>
          <t indent="0" pn="section-5.2.4-10">
The receiver <bcp14>MUST</bcp14>, for each transfer preceding the one to be refused, have either acknowledged all XFER_SEGMENT messages or refused the bundle transfer.
          </t>
          <t indent="0" pn="section-5.2.4-11">
The bundle transfer refusal <bcp14>MAY</bcp14> be sent before an entire data segment is received.
If a sender receives a XFER_REFUSE message, the sender <bcp14>MUST</bcp14> complete the transmission of any partially sent XFER_SEGMENT message.
There is no way to interrupt an individual TCPCL message partway through sending it.
The sender <bcp14>MUST NOT</bcp14> subsequently commence transmission of any further segments of the refused bundle.
Note, however, that this requirement does not ensure that an entity will not receive another XFER_SEGMENT for the same bundle after transmitting a XFER_REFUSE message, since messages can cross on the wire; if this happens, subsequent segments of the bundle <bcp14>SHALL</bcp14> also be refused with a XFER_REFUSE message.
          </t>
          <aside pn="section-5.2.4-12">
            <t indent="0" pn="section-5.2.4-12.1">
Note: If a bundle transmission is aborted in this way, the receiver does not receive a segment with the <tt>END</tt> flag set to 1 for the aborted bundle.
The beginning of the next bundle is identified by the <tt>START</tt> flag set to 1, indicating the start of a new transfer, and with a distinct Transfer ID value.
            </t>
          </aside>
        </section>
        <section anchor="sec-transfer-extension" numbered="true" removeInRFC="false" toc="include" pn="section-5.2.5">
          <name slugifiedName="name-transfer-extension-items">Transfer Extension Items</name>
          <t indent="0" pn="section-5.2.5-1">
Each of the Transfer Extension Items <bcp14>SHALL</bcp14> be encoded in an identical Type-Length-Value (TLV) container form as indicated in <xref target="fig-transfer-extension" format="default" sectionFormat="of" derivedContent="Figure 25"/>.
          </t>
          <t indent="0" pn="section-5.2.5-2">
The fields of the Transfer Extension Item are as follows:
          </t>
          <dl newline="false" spacing="normal" indent="3" pn="section-5.2.5-3">
            <dt pn="section-5.2.5-3.1">Item Flags:</dt>
            <dd pn="section-5.2.5-3.2">
A one-octet field containing generic bit flags related to the Item, which are listed in <xref target="tab-transfer-extension-flags" format="default" sectionFormat="of" derivedContent="Table 7"/>.
All reserved header flag bits <bcp14>SHALL</bcp14> be set to 0 by the sender.
All reserved header flag bits <bcp14>SHALL</bcp14> be ignored by the receiver.
If a TCPCL entity receives a Transfer Extension Item with an unknown Item Type and the <tt>CRITICAL</tt> flag is 1, the entity <bcp14>SHALL</bcp14> refuse the transfer with a XFER_REFUSE reason code of "Extension Failure".
If the <tt>CRITICAL</tt> flag is 0, an entity <bcp14>SHALL</bcp14> skip over and ignore any item with an unknown Item Type.
                </dd>
            <dt pn="section-5.2.5-3.3">Item Type:</dt>
            <dd pn="section-5.2.5-3.4">
A 16-bit unsigned integer field containing the type of the extension item.
This specification creates an IANA registry for such codes (see <xref target="sec-iana-transfer-extension-type" format="default" sectionFormat="of" derivedContent="Section 8.4"/>).
                </dd>
            <dt pn="section-5.2.5-3.5">Item Length:</dt>
            <dd pn="section-5.2.5-3.6">
A 16-bit unsigned integer field containing the number of Item Value octets to follow.
                </dd>
            <dt pn="section-5.2.5-3.7">Item Value:</dt>
            <dd pn="section-5.2.5-3.8">
A variable-length data field that is interpreted according to the associated Item Type.
This specification places no restrictions on an extension's use of available Item Value data.
Extension specifications <bcp14>SHOULD</bcp14> avoid the use of large data lengths, as the associated transfer cannot begin until the full extension data is sent.
                </dd>
          </dl>
          <figure anchor="fig-transfer-extension" align="left" suppress-title="false" pn="figure-25">
            <name slugifiedName="name-transfer-extension-item-for">Transfer Extension Item Format</name>
            <artwork align="center" type="ascii-art" pn="section-5.2.5-4.1">
                     1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+---------------+---------------+---------------+---------------+
|  Item Flags   |           Item Type           | Item Length...|
+---------------+---------------+---------------+---------------+
| length contd. | Item Value...                                 |
+---------------+---------------+---------------+---------------+
</artwork>
          </figure>
          <table align="center" anchor="tab-transfer-extension-flags" pn="table-7">
            <name slugifiedName="name-transfer-extension-item-fla">Transfer Extension Item Flags</name>
            <thead>
              <tr>
                <th align="left" colspan="1" rowspan="1">Name</th>
                <th align="left" colspan="1" rowspan="1">Code</th>
                <th align="left" colspan="1" rowspan="1">Description</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td align="left" colspan="1" rowspan="1">
                  <tt>CRITICAL</tt></td>
                <td align="left" colspan="1" rowspan="1">0x01</td>
                <td align="left" colspan="1" rowspan="1">If this bit is set, it indicates that the receiving peer must handle the extension item.</td>
              </tr>
              <tr>
                <td align="left" colspan="1" rowspan="1">Reserved</td>
                <td align="left" colspan="1" rowspan="1">others</td>
                <td align="left" colspan="1" rowspan="1"/>
              </tr>
            </tbody>
          </table>
          <section anchor="sec-transfer-extension-transfer-length" numbered="true" removeInRFC="false" toc="exclude" pn="section-5.2.5.1">
            <name slugifiedName="name-transfer-length-extension">Transfer Length Extension</name>
            <t indent="0" pn="section-5.2.5.1-1">
The purpose of the Transfer Length Extension is to allow entities to preemptively refuse bundles that would exceed their resources or to prepare storage on the receiving entity for the upcoming bundle data.
            </t>
            <t indent="0" pn="section-5.2.5.1-2">
Multiple Transfer Length Extension Items <bcp14>SHALL NOT</bcp14> occur within the same transfer.
The lack of a Transfer Length Extension Item in any transfer <bcp14>SHALL NOT</bcp14> imply anything regarding the potential length of the transfer.
The Transfer Length Extension <bcp14>SHALL</bcp14> use the IANA-assigned code point from <xref target="sec-iana-transfer-extension-type" format="default" sectionFormat="of" derivedContent="Section 8.4"/>.
            </t>
            <t indent="0" pn="section-5.2.5.1-3">
If a transfer occupies exactly one segment (i.e., both the <tt>START</tt> flag and the <tt>END</tt> flag are 1), the Transfer Length Extension <bcp14>SHOULD NOT</bcp14> be present.
The extension does not provide any additional information for single-segment transfers.
            </t>
            <t indent="0" pn="section-5.2.5.1-4">
The format of the Transfer Length Extension data is shown in <xref target="fig-Transfer-Length-fields" format="default" sectionFormat="of" derivedContent="Figure 26"/>.
            </t>
            <figure anchor="fig-Transfer-Length-fields" align="left" suppress-title="false" pn="figure-26">
              <name slugifiedName="name-format-of-transfer-length-e">Format of Transfer Length Extension Data</name>
              <artwork align="center" type="ascii-art" pn="section-5.2.5.1-5.1">
+----------------------+
|  Total Length (U64)  |
+----------------------+
</artwork>
            </figure>
            <t indent="0" pn="section-5.2.5.1-6">The Transfer Length Extension data contains the following field:</t>
            <dl newline="false" spacing="normal" indent="3" pn="section-5.2.5.1-7">
              <dt pn="section-5.2.5.1-7.1">Total Length:</dt>
              <dd pn="section-5.2.5.1-7.2">
A 64-bit unsigned integer indicating the size of the data to be transferred.
The Total Length field <bcp14>SHALL</bcp14> be treated as authoritative by the receiver.
If, for whatever reason, the actual total length of bundle data received differs from the value indicated by the Total Length value, the receiver <bcp14>SHALL</bcp14> treat the transmitted data as invalid and send a XFER_REFUSE with a reason code of "Not Acceptable".
                  </dd>
            </dl>
          </section>
        </section>
      </section>
    </section>
    <section anchor="sec-termination" numbered="true" removeInRFC="false" toc="include" pn="section-6">
      <name slugifiedName="name-session-termination">Session Termination</name>
      <t indent="0" pn="section-6-1">
This section describes the procedures for terminating a TCPCL session.
The purpose of terminating a session is to allow transfers to complete before the TCP connection is closed but not allow any new transfers to start.
A session state change is necessary for this to happen, because transfers can be in progress in either direction (transfer stream) within a session.
Waiting for a transfer to complete in one direction does not control or influence the possibility of a transfer in the other direction.
Either peer of a session can terminate an established session at any time.
      </t>
      <section anchor="sec-SESS_TERM" numbered="true" removeInRFC="false" toc="include" pn="section-6.1">
        <name slugifiedName="name-session-termination-message">Session Termination Message (SESS_TERM)</name>
        <t indent="0" pn="section-6.1-1">
To cleanly terminate a session, a SESS_TERM message <bcp14>SHALL</bcp14> be transmitted by either entity at any point following complete transmission of any other message.
When sent to initiate a termination, the <tt>REPLY</tt> flag of a SESS_TERM message <bcp14>SHALL</bcp14> be 0.
Upon receiving a SESS_TERM message after not sending a SESS_TERM message in the same session, an entity <bcp14>SHALL</bcp14> send an acknowledging SESS_TERM message.
When sent to acknowledge a termination, a SESS_TERM message <bcp14>SHALL</bcp14> have identical data content from the message being acknowledged except for the <tt>REPLY</tt> flag, which is set to 1 to indicate acknowledgment.
        </t>
        <t indent="0" pn="section-6.1-2">
Once a SESS_TERM message is sent, the state of that TCPCL session changes to Ending.
While the session is in the Ending state,
        </t>
        <ul spacing="normal" bare="false" empty="false" indent="3" pn="section-6.1-3">
          <li pn="section-6.1-3.1">an entity <bcp14>MAY</bcp14> finish an in-progress transfer in either direction.</li>
          <li pn="section-6.1-3.2">an entity <bcp14>SHALL NOT</bcp14> begin any new outgoing transfer for the remainder of the session.</li>
          <li pn="section-6.1-3.3">an entity <bcp14>SHALL NOT</bcp14> accept any new incoming transfer for the remainder of the session.</li>
        </ul>
        <t indent="0" pn="section-6.1-4">If a new incoming transfer is attempted while in the Ending state, the receiving entity <bcp14>SHALL</bcp14> send a XFER_REFUSE with a reason code of "Session Terminating".
        </t>
        <t indent="0" pn="section-6.1-5">
There are circumstances where an entity has an urgent need to close a TCP connection associated with a TCPCL session, without waiting for transfers to complete but also in a way that doesn't force timeouts to occur -- for example, due to impending shutdown of the underlying data-link layer.
Instead of following a clean termination sequence, after transmitting a SESS_TERM message, an entity <bcp14>MAY</bcp14> perform an unclean termination by immediately closing the associated TCP connection.
When performing an unclean termination, an entity <bcp14>SHOULD</bcp14> acknowledge all received XFER_SEGMENTs with a XFER_ACK before closing the TCP connection.
Not acknowledging received segments can result in unnecessary bundle or bundle fragment retransmissions.
Any delay between a request to close the TCP connection and the actual closing of the connection (a "half-closed" state) <bcp14>MAY</bcp14> be ignored by the TCPCL entity.
If the underlying TCP connection is closed during a transmission (in either transfer stream), the transfer <bcp14>SHALL</bcp14> be indicated to the BPA as failed (see the transmission failure and reception failure indications defined in <xref target="sec-cl-services" format="default" sectionFormat="of" derivedContent="Section 3.1"/>).
        </t>
        <t indent="0" pn="section-6.1-6">
The TCPCL itself does not have any required behavior related to responding to a SESS_TERM based on its reason code; the termination is passed up as an indication to the BPA that the session state has changed.
If a termination has a reason code that is not decodable to the BPA, the agent <bcp14>SHOULD</bcp14> treat the termination as having a reason code of "Unknown".
        </t>
        <t indent="0" pn="section-6.1-7">
The format of the SESS_TERM message is shown in <xref target="fig-msg-SESS_TERM-fields" format="default" sectionFormat="of" derivedContent="Figure 27"/>.
        </t>
        <figure anchor="fig-msg-SESS_TERM-fields" align="left" suppress-title="false" pn="figure-27">
          <name slugifiedName="name-format-of-sess_term-message">Format of SESS_TERM Messages</name>
          <artwork align="center" type="ascii-art" pn="section-6.1-8.1">
+-----------------------------+
|       Message Header        |
+-----------------------------+
|     Message Flags (U8)      |
+-----------------------------+
|      Reason Code (U8)       |
+-----------------------------+
</artwork>
        </figure>
        <t indent="0" pn="section-6.1-9">
The fields of the SESS_TERM message are as follows:
        </t>
        <dl newline="false" spacing="normal" indent="3" pn="section-6.1-10">
          <dt pn="section-6.1-10.1">Message Flags:</dt>
          <dd pn="section-6.1-10.2">
A one-octet field of single-bit flags, interpreted according to the descriptions in <xref target="tab-SESS_TERM-flags" format="default" sectionFormat="of" derivedContent="Table 8"/>.
All reserved header flag bits <bcp14>SHALL</bcp14> be set to 0 by the sender.
All reserved header flag bits <bcp14>SHALL</bcp14> be ignored by the receiver.
            </dd>
          <dt pn="section-6.1-10.3">Reason Code:</dt>
          <dd pn="section-6.1-10.4">
A one-octet refusal reason code interpreted according to the descriptions in <xref target="tab-SESS_TERM-reasons" format="default" sectionFormat="of" derivedContent="Table 9"/>.
            </dd>
        </dl>
        <table align="center" anchor="tab-SESS_TERM-flags" pn="table-8">
          <name slugifiedName="name-sess_term-flags">SESS_TERM Flags</name>
          <thead>
            <tr>
              <th align="left" colspan="1" rowspan="1">Name</th>
              <th align="left" colspan="1" rowspan="1">Code</th>
              <th align="left" colspan="1" rowspan="1">Description</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left" colspan="1" rowspan="1">
                <tt>REPLY</tt></td>
              <td align="left" colspan="1" rowspan="1">0x01</td>
              <td align="left" colspan="1" rowspan="1">If this bit is set, it indicates that this message is an acknowledgment of an earlier SESS_TERM message.</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">Reserved</td>
              <td align="left" colspan="1" rowspan="1">others</td>
              <td align="left" colspan="1" rowspan="1"/>
            </tr>
          </tbody>
        </table>
        <table align="center" anchor="tab-SESS_TERM-reasons" pn="table-9">
          <name slugifiedName="name-sess_term-reason-codes">SESS_TERM Reason Codes</name>
          <thead>
            <tr>
              <th align="left" colspan="1" rowspan="1">Name</th>
              <th align="left" colspan="1" rowspan="1">Code</th>
              <th align="left" colspan="1" rowspan="1">Description</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left" colspan="1" rowspan="1">Unknown</td>
              <td align="left" colspan="1" rowspan="1">0x00</td>
              <td align="left" colspan="1" rowspan="1">A termination reason is not available.</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">Idle timeout</td>
              <td align="left" colspan="1" rowspan="1">0x01</td>
              <td align="left" colspan="1" rowspan="1">The session is being terminated due to idleness.</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">Version mismatch</td>
              <td align="left" colspan="1" rowspan="1">0x02</td>
              <td align="left" colspan="1" rowspan="1">The entity cannot conform to the specified TCPCL protocol version.</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">Busy</td>
              <td align="left" colspan="1" rowspan="1">0x03</td>
              <td align="left" colspan="1" rowspan="1">The entity is too busy to handle the current session.</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">Contact Failure</td>
              <td align="left" colspan="1" rowspan="1">0x04</td>
              <td align="left" colspan="1" rowspan="1">The entity cannot interpret or negotiate a Contact Header or SESS_INIT option.</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">Resource Exhaustion</td>
              <td align="left" colspan="1" rowspan="1">0x05</td>
              <td align="left" colspan="1" rowspan="1">The entity has run into some resource limit and cannot continue the session.</td>
            </tr>
          </tbody>
        </table>
        <t indent="0" pn="section-6.1-13">
The earliest a TCPCL session termination <bcp14>MAY</bcp14> occur is immediately after transmission of a Contact Header (and prior to any further message transmissions).
This can, for example, be used as a notification that the entity is currently not able or willing to communicate.
However, an entity <bcp14>MUST</bcp14> always send the Contact Header to its peer before sending a SESS_TERM message.
        </t>
        <t indent="0" pn="section-6.1-14">
Termination of the TCP connection <bcp14>MAY</bcp14> occur prior to receiving the Contact Header as discussed in <xref target="sec-tcp-connection" format="default" sectionFormat="of" derivedContent="Section 4.1"/>.
If reception of the Contact Header itself somehow fails (e.g., an invalid magic string is received), an entity <bcp14>SHALL</bcp14> close the TCP connection without sending a SESS_TERM message.
        </t>
        <t indent="0" pn="section-6.1-15">
If a session is to be terminated before the sending of a protocol message has  completed, then the entity <bcp14>MUST NOT</bcp14> transmit the SESS_TERM message but still <bcp14>SHALL</bcp14> close the TCP connection.
Each TCPCL message is contiguous in the octet stream and has no ability to be cut short and/or preempted by another message.
This is particularly important when large segment sizes are being transmitted; either the entire XFER_SEGMENT is sent before a SESS_TERM message or the connection is simply terminated mid-XFER_SEGMENT.
        </t>
      </section>
      <section anchor="sec-idle-terminate" numbered="true" removeInRFC="false" toc="include" pn="section-6.2">
        <name slugifiedName="name-idle-session-termination">Idle Session Termination</name>
        <t indent="0" pn="section-6.2-1">
The protocol includes a provision for clean termination of idle sessions.
Determining the length of time to wait before terminating idle sessions, if they are to be terminated at all, is an implementation and configuration matter.
        </t>
        <t indent="0" pn="section-6.2-2">
If there is a configured time to terminate idle sessions and if no TCPCL messages (other than KEEPALIVE messages) have been received for at least that amount of time, then either entity <bcp14>MAY</bcp14> terminate the session by transmitting a SESS_TERM message with a reason code of "Idle timeout" (as described in <xref target="tab-SESS_TERM-reasons" format="default" sectionFormat="of" derivedContent="Table 9"/>).
        </t>
      </section>
    </section>
    <section anchor="sec-security" numbered="true" removeInRFC="false" toc="include" pn="section-7">
      <name slugifiedName="name-security-considerations">Security Considerations</name>
      <t indent="0" pn="section-7-1">
This section separates security considerations into threat categories based on guidance provided in <xref target="RFC3552" format="default" sectionFormat="of" derivedContent="RFC3552">BCP 72</xref>.
      </t>
      <section numbered="true" removeInRFC="false" toc="include" pn="section-7.1">
        <name slugifiedName="name-threat-passive-leak-of-node">Threat: Passive Leak of Node Data</name>
        <t indent="0" pn="section-7.1-1">
When used without TLS security, the TCPCL exposes the node ID and other configuration data to passive eavesdroppers.
This occurs even when no transfers occur within a TCPCL session.
This can be avoided by always using TLS, even if authentication is not available (see <xref target="sec-security-tlsalt" format="default" sectionFormat="of" derivedContent="Section 7.12"/>).
        </t>
      </section>
      <section numbered="true" removeInRFC="false" toc="include" pn="section-7.2">
        <name slugifiedName="name-threat-passive-leak-of-bund">Threat: Passive Leak of Bundle Data</name>
        <t indent="0" pn="section-7.2-1">
The TCPCL can be used to provide point-to-point transport security, but it does not provide security of data at rest and does not guarantee end-to-end bundle security.
The bundle security mechanisms defined in <xref target="RFC9172" format="default" sectionFormat="of" derivedContent="RFC9172"/> are to be used instead.
        </t>
        <t indent="0" pn="section-7.2-2">
When used without TLS security, the TCPCL exposes all bundle data to passive eavesdroppers.
This can be avoided by always using TLS, even if authentication is not available (see <xref target="sec-security-tlsalt" format="default" sectionFormat="of" derivedContent="Section 7.12"/>).
        </t>
      </section>
      <section numbered="true" removeInRFC="false" toc="include" pn="section-7.3">
        <name slugifiedName="name-threat-tcpcl-version-downgr">Threat: TCPCL Version Downgrade</name>
        <t indent="0" pn="section-7.3-1">
When a TCPCL entity supports multiple versions of the protocol, it is possible for a malicious or misconfigured peer to use an older version of the TCPCL protocol that does not support transport security.
An on-path attacker can also manipulate a Contact Header to present a lower protocol version than desired.
        </t>
        <t indent="0" pn="section-7.3-2">
It is up to security policies within each TCPCL entity to ensure that the negotiated TCPCL version meets transport security requirements.
        </t>
      </section>
      <section anchor="sec-threat-tls-strip" numbered="true" removeInRFC="false" toc="include" pn="section-7.4">
        <name slugifiedName="name-threat-transport-security-s">Threat: Transport Security Stripping</name>
        <t indent="0" pn="section-7.4-1">
When security policy allows non-TLS sessions, the TCPCL does not protect against active network attackers.
It is possible for an on-path attacker to set the <tt>CAN_TLS</tt> flag to 0 on either side of the Contact Header exchange, which will cause the negotiation discussed in <xref target="sec-contact-negotiate" format="default" sectionFormat="of" derivedContent="Section 4.3"/> to disable TLS.
This leads to the "SSL Stripping" attack described in <xref target="RFC7457" format="default" sectionFormat="of" derivedContent="RFC7457"/>.
        </t>
        <t indent="0" pn="section-7.4-2">
The purpose of the <tt>CAN_TLS</tt> flag is to allow the use of the TCPCL on entities that simply do not have a TLS implementation available.
When TLS is available on an entity, it is strongly encouraged that the security policy disallow non-TLS sessions.
This requires that the TLS handshake occur, regardless of the policy-driven parameters of the handshake and policy-driven handling of the handshake outcome.
        </t>
        <t indent="0" pn="section-7.4-3">
One mechanism to mitigate the possibility of TLS Stripping is the use of DNS-based Authentication of Named Entities (DANE) <xref target="RFC6698" format="default" sectionFormat="of" derivedContent="RFC6698"/> toward the passive peer.
This mechanism relies on DNS and is unidirectional, so it doesn't help with applying policy toward the active peer, but it can be useful in an environment using opportunistic security.
The configuration and use of DANE are outside of the scope of this document.
        </t>
        <t indent="0" pn="section-7.4-4">
The negotiated use of TLS is identical in behavior to the use of STARTTLS as described in <xref target="RFC2595" format="default" sectionFormat="of" derivedContent="RFC2595"/>, <xref target="RFC4511" format="default" sectionFormat="of" derivedContent="RFC4511"/>, and others.
        </t>
      </section>
      <section numbered="true" removeInRFC="false" toc="include" pn="section-7.5">
        <name slugifiedName="name-threat-weak-tls-configurati">Threat: Weak TLS Configurations</name>
        <t indent="0" pn="section-7.5-1">
Even when using TLS to secure the TCPCL session, the actual cipher suite negotiated between the TLS peers can be insecure.
Recommendations for using cipher suites are included in <xref target="RFC7525" format="default" sectionFormat="of" derivedContent="RFC7525">BCP 195</xref>.
It is up to security policies within each TCPCL entity to ensure that the negotiated TLS cipher suite meets transport security requirements.
        </t>
      </section>
      <section anchor="sec-threat-untrust-cert" numbered="true" removeInRFC="false" toc="include" pn="section-7.6">
        <name slugifiedName="name-threat-untrusted-end-entity">Threat: Untrusted End-Entity Certificate</name>
        <t indent="0" pn="section-7.6-1">
The authentication method discussed in <xref target="sec-tls-authentication" format="default" sectionFormat="of" derivedContent="Section 4.4.4"/> uses end-entity certificates chained to a trusted root CA. During a TLS handshake, either entity can send a certificate set that does not contain the full chain, possibly excluding intermediate or root CAs.
In an environment where peers are known to already contain needed root and intermediate CAs, there is no need to include those CAs, but this carries the risk of an entity not actually having one of the needed CAs.
        </t>
      </section>
      <section numbered="true" removeInRFC="false" toc="include" pn="section-7.7">
        <name slugifiedName="name-threat-certificate-validati">Threat: Certificate Validation Vulnerabilities</name>
        <t indent="0" pn="section-7.7-1">
Even when TLS itself is operating properly, an attacker can attempt to exploit vulnerabilities within certificate check algorithms or configuration to establish a secure TCPCL session using an invalid certificate.
A BPA treats the peer node ID within a TCPCL session as authoritative, and exploitation via an invalid certificate could lead to bundle data leaking and/or denial of service to the node ID being impersonated.
        </t>
        <t indent="0" pn="section-7.7-2">
There are many reasons, as described in <xref target="RFC5280" format="default" sectionFormat="of" derivedContent="RFC5280"/> and <xref target="RFC6125" format="default" sectionFormat="of" derivedContent="RFC6125"/>, why a certificate can fail to validate, including using the certificate outside of its valid time interval, using purposes for which it was not authorized, or using it after it has been revoked by its CA.
Validating a certificate is a complex task and can require network connectivity outside of the primary TCPCL network path(s) if a mechanism such as OCSP <xref target="RFC6960" format="default" sectionFormat="of" derivedContent="RFC6960"/> is used by the CA.
The configuration and use of particular certificate validation methods are outside of the scope of this document.
        </t>
      </section>
      <section numbered="true" removeInRFC="false" toc="include" pn="section-7.8">
        <name slugifiedName="name-threat-symmetric-key-limits">Threat: Symmetric Key Limits</name>
        <t indent="0" pn="section-7.8-1">Even with a secure block cipher and securely established session keys, there are limits to the amount of plaintext that can be safely encrypted with a given set of keys, as described in <xref target="AEAD-LIMITS" format="default" sectionFormat="of" derivedContent="AEAD-LIMITS"/>.
When permitted by the negotiated TLS version (see <xref target="RFC8446" format="default" sectionFormat="of" derivedContent="RFC8446"/>), it is advisable to take advantage of session key updates to avoid those limits.
        </t>
      </section>
      <section anchor="sec-threat-node-impersonation" numbered="true" removeInRFC="false" toc="include" pn="section-7.9">
        <name slugifiedName="name-threat-bp-node-impersonatio">Threat: BP Node Impersonation</name>
        <t indent="0" pn="section-7.9-1">
The certificates exchanged by TLS enable authentication of the peer DNS name and node ID, but it is possible that either a peer does not provide a valid certificate or the certificate does not validate either the DNS-ID/IPADDR-ID or NODE-ID of the peer (see <xref target="sec-pkix-env" format="default" sectionFormat="of" derivedContent="Section 3.4"/>).
Having a CA-validated certificate does not alone guarantee the identity of the network host or BP node from which the certificate is provided; additional validation procedures as provided in <xref target="sec-tls-authentication" format="default" sectionFormat="of" derivedContent="Section 4.4.4"/> bind the DNS-ID/IPADDR-ID or NODE-ID based on the contents of the certificate.
        </t>
        <t indent="0" pn="section-7.9-2">
The DNS-ID/IPADDR-ID validation is a weaker form of authentication, because even if a peer is operating on an authenticated network DNS name or IP address it can provide an invalid node ID and cause bundles to be "leaked" to an invalid node.
Especially in DTN environments, network names and addresses of nodes can be time-variable, so binding a certificate to a node ID results in a more stable identity.
        </t>
        <t indent="0" pn="section-7.9-3">
NODE-ID validation ensures that the peer to which a bundle is transferred is in fact the node that the BPA expects it to be.
In circumstances where certificates can only be issued to DNS names, node ID validation is not possible, but it could be reasonable to assume that a trusted host is not going to present an invalid node ID.
Determining when a DNS-ID/IPADDR-ID authentication can be trusted to validate a node ID is also a policy matter outside of the scope of this document.
        </t>
        <t indent="0" pn="section-7.9-4">
One mitigation regarding arbitrary entities with valid PKIX certificates impersonating arbitrary node IDs is the use of the PKIX EKU key purpose <tt>id-kp-bundleSecurity</tt> (<xref target="sec-pkix-oids" format="default" sectionFormat="of" derivedContent="Section 4.4.2.1"/>).
When this EKU is present in the certificate, it represents a stronger assertion that the private key holder should in fact be trusted to operate as a bundle node.
        </t>
      </section>
      <section numbered="true" removeInRFC="false" toc="include" pn="section-7.10">
        <name slugifiedName="name-threat-denial-of-service">Threat: Denial of Service</name>
        <t indent="0" pn="section-7.10-1">
The behaviors described in this section all amount to a potential denial of service to a TCPCL entity.
The denial of service could be limited to an individual TCPCL session, could affect other well-behaved sessions on an entity, or could affect all sessions on a host.
        </t>
        <t indent="0" pn="section-7.10-2">
A malicious entity can trigger timeouts by continually establishing TCPCL sessions and delaying the sending of protocol-required data.
The victim entity can block TCP connections from network peers that are thought to  behave incorrectly within the TCPCL.
        </t>
        <t indent="0" pn="section-7.10-3">
An entity can send a large amount of data over a TCPCL session, requiring the receiving entity to handle the data.
The victim entity can attempt to stop the flood of data by sending a XFER_REFUSE message or can forcibly terminate the session.
        </t>
        <t indent="0" pn="section-7.10-4">
A "data dribble" attack is also possible, in which an entity presents a very small Segment MRU that causes transfers to be split among a large number of very small segments and causes the resultant segmentation overhead to overwhelm the actual bundle data segments.
Similarly, an entity can present a very small Transfer MRU that will cause resources to be wasted on establishment and upkeep of a TCPCL session over which a bundle could never be transferred.
The victim entity can terminate the session during parameter negotiation (<xref target="sec-session-negotiate" format="default" sectionFormat="of" derivedContent="Section 4.7"/>) if the MRUs are unacceptable.
        </t>
        <t indent="0" pn="section-7.10-5">
An abusive entity could cause the keepalive mechanism to waste throughput within a network link that would otherwise be usable for bundle transmissions.
Due to the quantization of the Keepalive Interval parameter, the smallest Session Keepalive is one second, which should be long enough to not flood the link.
The victim entity can terminate the session during parameter negotiation (<xref target="sec-session-negotiate" format="default" sectionFormat="of" derivedContent="Section 4.7"/>) if the Keepalive Interval is unacceptable.
        </t>
        <t indent="0" pn="section-7.10-6">
Finally, an attacker or a misconfigured entity can cause issues at the TCP connection that will cause unnecessary TCP retransmissions or connection resets, effectively denying the use of the overlying TCPCL session.
        </t>
      </section>
      <section anchor="sec-security-tls-mandate" numbered="true" removeInRFC="false" toc="include" pn="section-7.11">
        <name slugifiedName="name-mandatory-to-implement-tls">Mandatory-to-Implement TLS</name>
        <t indent="0" pn="section-7.11-1">
Following IETF best current practice, TLS is mandatory to implement for all TCPCL implementations but TLS is optional to use for a given TCPCL session.
The policy recommendations in Sections <xref target="sec-contact-header" format="counter" sectionFormat="of" derivedContent="4.2"/> and <xref target="sec-contact-negotiate" format="counter" sectionFormat="of" derivedContent="4.3"/> both enable TLS and require TLS, but entities are permitted to disable and not require TLS based on local configuration. The configuration to enable or require TLS for an entity or a session is outside of the scope of this document.
The configuration to disable TLS is different from the threat of TLS Stripping as  described in <xref target="sec-threat-tls-strip" format="default" sectionFormat="of" derivedContent="Section 7.4"/>.
        </t>
      </section>
      <section anchor="sec-security-tlsalt" numbered="true" removeInRFC="false" toc="include" pn="section-7.12">
        <name slugifiedName="name-alternate-uses-of-tls">Alternate Uses of TLS</name>
        <t indent="0" pn="section-7.12-1">
This specification makes use of PKIX certificate validation and authentication within TLS.
There are alternate uses of TLS that are not necessarily incompatible with the security goals of this specification but that are outside of the scope of this document.
The following subsections give examples of alternate TLS uses.
        </t>
        <section anchor="sec-security-tlsnoauth" numbered="true" removeInRFC="false" toc="include" pn="section-7.12.1">
          <name slugifiedName="name-tls-without-authentication">TLS without Authentication</name>
          <t indent="0" pn="section-7.12.1-1"> In environments where PKI is available but there are restrictions on the issuance of certificates (including the contents of certificates), it may be possible to make use of TLS in a way that authenticates only the passive entity of a TCPCL session or that does not authenticate either entity.
Using TLS in a way that does not successfully authenticate some claim of both peer entities of a TCPCL session is outside of the scope of this document but does have  properties similar to the opportunistic security model <xref target="RFC7435" format="default" sectionFormat="of" derivedContent="RFC7435"/>.
          </t>
        </section>
        <section anchor="sec-security-tlsnopki" numbered="true" removeInRFC="false" toc="include" pn="section-7.12.2">
          <name slugifiedName="name-non-certificate-tls-use">Non-certificate TLS Use</name>
          <t indent="0" pn="section-7.12.2-1">
In environments where PKI is unavailable, alternate uses of TLS that do not require certificates such as pre-shared key (PSK) authentication <xref target="RFC5489" format="default" sectionFormat="of" derivedContent="RFC5489"/> and the use of raw public keys <xref target="RFC7250" format="default" sectionFormat="of" derivedContent="RFC7250"/> are available and can be used to ensure confidentiality within the TCPCL.
Using non-PKI node authentication methods is outside of the scope of this document.
          </t>
        </section>
      </section>
      <section anchor="sec-security-xferid" numbered="true" removeInRFC="false" toc="include" pn="section-7.13">
        <name slugifiedName="name-predictability-of-transfer-">Predictability of Transfer IDs</name>
        <t indent="0" pn="section-7.13-1">
The only requirement on Transfer IDs is that they be unique within each session from the sending peer only.
The trivial algorithm of the first transfer starting at zero and later transfers incrementing by one causes absolutely predictable Transfer IDs.
Even when a TCPCL session is not TLS secured and there is an on-path attacker causing denial of service with XFER_REFUSE messages, it is not possible to preemptively refuse a transfer, so there is no benefit in having unpredictable Transfer IDs within a session.
        </t>
      </section>
    </section>
    <section anchor="sec-iana" numbered="true" removeInRFC="false" toc="include" pn="section-8">
      <name slugifiedName="name-iana-considerations">IANA Considerations</name>
      <t indent="0" pn="section-8-1">
Registration procedures referred to in this section (e.g., the RFC Required policy) are defined in <xref target="RFC8126" format="default" sectionFormat="of" derivedContent="RFC8126"/>.
      </t>
      <t indent="0" pn="section-8-2">
Some of the registries have been defined as version specific for TCPCLv4, and these registries reuse some or all codepoints from TCPCLv3. This was done to disambiguate the use of these codepoints between TCPCLv3 and TCPCLv4 while preserving the semantics of some of the codepoints.
      </t>
      <section anchor="sec-iana-port" numbered="true" removeInRFC="false" toc="include" pn="section-8.1">
        <name slugifiedName="name-port-number">Port Number</name>
        <t indent="0" pn="section-8.1-1">
Within the "Service Name and Transport Protocol Port Number Registry" <xref target="IANA-PORTS" format="default" sectionFormat="of" derivedContent="IANA-PORTS"/>, TCP port number 4556 had previously been assigned as the default port for the TCPCL; see <xref target="RFC7242" format="default" sectionFormat="of" derivedContent="RFC7242"/>.
This assignment is unchanged by TCPCL version 4, but the assignment reference has been updated to point to this specification.
Each TCPCL entity identifies its TCPCL protocol version in its initial contact (see Sections <xref target="sec-protocol-session" format="counter" sectionFormat="of" derivedContent="3.2"/> and <xref target="sec-iana-protonum" format="counter" sectionFormat="of" derivedContent="8.2"/>), so there is no ambiguity regarding what protocol is being used.
The related assignments for UDP and DCCP port 4556 (both registered by <xref target="RFC7122" format="default" sectionFormat="of" derivedContent="RFC7122"/>) are unchanged.



        </t>
        <table align="center" pn="table-10">
          <name slugifiedName="name-tcp-port-number-for-the-tcp">TCP Port Number for the TCPCL</name>
          <thead>
            <tr>
              <th align="left" colspan="1" rowspan="1">Parameter</th>
              <th align="left" colspan="1" rowspan="1">Value</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left" colspan="1" rowspan="1">Service Name:</td>
              <td align="left" colspan="1" rowspan="1">dtn-bundle</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">Transport Protocol(s):</td>
              <td align="left" colspan="1" rowspan="1">TCP</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">Assignee:</td>
              <td align="left" colspan="1" rowspan="1">IESG (iesg@ietf.org)</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">Contact:</td>
              <td align="left" colspan="1" rowspan="1">IESG (iesg@ietf.org)</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">Description:</td>
              <td align="left" colspan="1" rowspan="1">DTN Bundle TCP CL Protocol</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">Reference:</td>
              <td align="left" colspan="1" rowspan="1">This specification</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">Port Number:</td>
              <td align="left" colspan="1" rowspan="1">4556</td>
            </tr>
          </tbody>
        </table>
      </section>
      <section anchor="sec-iana-protonum" numbered="true" removeInRFC="false" toc="include" pn="section-8.2">
        <name slugifiedName="name-protocol-versions">Protocol Versions</name>
        <t indent="0" pn="section-8.2-1">
IANA has registered the following value in the "Bundle Protocol TCP Convergence-Layer Version Numbers" registry <xref target="RFC7242" format="default" sectionFormat="of" derivedContent="RFC7242"/>.
        </t>
        <table align="center" pn="table-11">
          <name slugifiedName="name-new-tcpcl-version-number">New TCPCL Version Number</name>
          <thead>
            <tr>
              <th align="left" colspan="1" rowspan="1">Value</th>
              <th align="left" colspan="1" rowspan="1">Description</th>
              <th align="left" colspan="1" rowspan="1">Reference</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left" colspan="1" rowspan="1">4</td>
              <td align="left" colspan="1" rowspan="1">TCPCLv4</td>
              <td align="left" colspan="1" rowspan="1">This specification</td>
            </tr>
          </tbody>
        </table>
      </section>
      <section anchor="sec-iana-session-extension-type" numbered="true" removeInRFC="false" toc="include" pn="section-8.3">
        <name slugifiedName="name-session-extension-types">Session Extension Types</name>
        <t indent="0" pn="section-8.3-1">
Under the "Bundle Protocol" registry <xref target="IANA-BUNDLE" format="default" sectionFormat="of" derivedContent="IANA-BUNDLE"/>, IANA has created the "Bundle Protocol TCP Convergence-Layer Version 4 Session Extension Types" registry and populated it with the contents of <xref target="tab-iana-session-extension-type" format="default" sectionFormat="of" derivedContent="Table 12"/>.
The registration procedure is Expert Review within the lower range 0x0001-0x7FFF.
Values in the range 0x8000-0xFFFF are reserved for Private or Experimental Use, which are not recorded by IANA.
        </t>
        <t indent="0" pn="section-8.3-2">
Specifications of new session extension types need to define the encoding of the Item Value data as well as any meaning or restriction on the number of or order of instances of the type within an extension item list.
Specifications need to define how the extension functions when no instance of the new extension type is received during session negotiation.
        </t>
        <t indent="0" pn="section-8.3-3">
Experts are encouraged to be biased towards approving registrations unless they are abusive, frivolous, or actively harmful (not merely esthetically displeasing or architecturally dubious).
        </t>
        <table align="center" anchor="tab-iana-session-extension-type" pn="table-12">
          <name slugifiedName="name-session-extension-type-code">Session Extension Type Codes</name>
          <thead>
            <tr>
              <th align="left" colspan="1" rowspan="1">Code</th>
              <th align="left" colspan="1" rowspan="1">Session Extension Type</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left" colspan="1" rowspan="1">0x0000</td>
              <td align="left" colspan="1" rowspan="1">Reserved</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">0x0001-0x7FFF</td>
              <td align="left" colspan="1" rowspan="1">Unassigned</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">0x8000-0xFFFF</td>
              <td align="left" colspan="1" rowspan="1">Reserved for Private or Experimental Use</td>
            </tr>
          </tbody>
        </table>
      </section>
      <section anchor="sec-iana-transfer-extension-type" numbered="true" removeInRFC="false" toc="include" pn="section-8.4">
        <name slugifiedName="name-transfer-extension-types">Transfer Extension Types</name>
        <t indent="0" pn="section-8.4-1">
Under the "Bundle Protocol" registry <xref target="IANA-BUNDLE" format="default" sectionFormat="of" derivedContent="IANA-BUNDLE"/>, IANA has created the "Bundle Protocol TCP Convergence-Layer Version 4 Transfer Extension Types" registry and populated it with the contents of <xref target="tab-iana-transfer-extension-type" format="default" sectionFormat="of" derivedContent="Table 13"/>. The registration procedure is Expert Review within the lower range 0x0001-0x7FFF.
Values in the range 0x8000-0xFFFF are reserved for Private or Experimental Use, which are not recorded by 
IANA.
        </t>
        <t indent="0" pn="section-8.4-2">
Specifications of new transfer extension types need to define the encoding of the Item Value data as well as any meaning or restriction on the number of or order of instances of the type within an extension item list.
Specifications need to define how the extension functions when no instance of the new extension type is received in a transfer.
        </t>
        <t indent="0" pn="section-8.4-3">
Experts are encouraged to be biased towards approving registrations unless they are abusive, frivolous, or actively harmful (not merely esthetically displeasing or architecturally dubious).
        </t>
        <table align="center" anchor="tab-iana-transfer-extension-type" pn="table-13">
          <name slugifiedName="name-transfer-extension-type-cod">Transfer Extension Type Codes</name>
          <thead>
            <tr>
              <th align="left" colspan="1" rowspan="1">Code</th>
              <th align="left" colspan="1" rowspan="1">Transfer Extension Type</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left" colspan="1" rowspan="1">0x0000</td>
              <td align="left" colspan="1" rowspan="1">Reserved</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">0x0001</td>
              <td align="left" colspan="1" rowspan="1">Transfer Length Extension</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">0x0002-0x7FFF</td>
              <td align="left" colspan="1" rowspan="1">Unassigned</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">0x8000-0xFFFF</td>
              <td align="left" colspan="1" rowspan="1">Reserved for Private or Experimental Use</td>
            </tr>
          </tbody>
        </table>
      </section>
      <section anchor="sec-iana-message-types" numbered="true" removeInRFC="false" toc="include" pn="section-8.5">
        <name slugifiedName="name-message-types">Message Types</name>
        <t indent="0" pn="section-8.5-1">
Under the "Bundle Protocol" registry <xref target="IANA-BUNDLE" format="default" sectionFormat="of" derivedContent="IANA-BUNDLE"/>, IANA has created the "Bundle Protocol TCP Convergence-Layer Version 4 Message Types" registry and populated it with the contents of <xref target="tab-iana-message-types" format="default" sectionFormat="of" derivedContent="Table 14"/>.
The registration procedure is RFC Required within the lower range 0x01-0xEF.
Values in the range 0xF0-0xFF are reserved for Private or Experimental Use, which are not recorded by     
IANA.
        </t>
        <t indent="0" pn="section-8.5-2">
Specifications of new message types need to define the encoding of the message data as well as the purpose and relationship of the new message to existing session/transfer state within the baseline message sequencing.
The use of new message types needs to be negotiated between TCPCL entities within a session (using the session extension mechanism) so that the receiving entity can properly decode all message types used in the session.
        </t>
        <t indent="0" pn="section-8.5-3">
Experts are encouraged to favor new session/transfer extension types over new message types.
TCPCL messages are not self-delimiting, so care must be taken in introducing new message types.
If an entity receives an unknown message type, the only thing that can be done is to send a MSG_REJECT and close the TCP connection; not even a clean termination can be done at that point.
        </t>
        <table align="center" anchor="tab-iana-message-types" pn="table-14">
          <name slugifiedName="name-message-type-codes">Message Type Codes</name>
          <thead>
            <tr>
              <th align="left" colspan="1" rowspan="1">Code</th>
              <th align="left" colspan="1" rowspan="1">Message Type</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left" colspan="1" rowspan="1">0x00</td>
              <td align="left" colspan="1" rowspan="1">Reserved</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">0x01</td>
              <td align="left" colspan="1" rowspan="1">XFER_SEGMENT</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">0x02</td>
              <td align="left" colspan="1" rowspan="1">XFER_ACK</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">0x03</td>
              <td align="left" colspan="1" rowspan="1">XFER_REFUSE</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">0x04</td>
              <td align="left" colspan="1" rowspan="1">KEEPALIVE</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">0x05</td>
              <td align="left" colspan="1" rowspan="1">SESS_TERM</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">0x06</td>
              <td align="left" colspan="1" rowspan="1">MSG_REJECT</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">0x07</td>
              <td align="left" colspan="1" rowspan="1">SESS_INIT</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">0x08-0xEF</td>
              <td align="left" colspan="1" rowspan="1">Unassigned</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">0xF0-0xFF</td>
              <td align="left" colspan="1" rowspan="1">Reserved for Private or Experimental Use</td>
            </tr>
          </tbody>
        </table>
      </section>
      <section anchor="sec-iana-XFER_REFUSE-codes" numbered="true" removeInRFC="false" toc="include" pn="section-8.6">
        <name slugifiedName="name-xfer_refuse-reason-codes-2">XFER_REFUSE Reason Codes</name>
        <t indent="0" pn="section-8.6-1">
Under the "Bundle Protocol" registry <xref target="IANA-BUNDLE" format="default" sectionFormat="of" derivedContent="IANA-BUNDLE"/>, IANA has created the "Bundle Protocol TCP Convergence-Layer Version 4 XFER_REFUSE Reason Codes" registry and populated it with the contents of <xref target="tab-iana-XFER_REFUSE-codes" format="default" sectionFormat="of" derivedContent="Table 15"/>.
The registration procedure is Specification Required within the lower range 0x00-0xEF.
Values in the range 0xF0-0xFF are reserved for Private or Experimental Use, which are not recorded by
IANA. 
        </t>
        <t indent="0" pn="section-8.6-2">
Specifications of new XFER_REFUSE reason codes need to define the meaning of the reason and disambiguate it from preexisting reasons. Each refusal reason needs to be usable by the receiving BPA to make retransmission or rerouting decisions.
        </t>
        <t indent="0" pn="section-8.6-3">
Experts are encouraged to be biased towards approving registrations unless they are abusive, frivolous, or actively harmful (not merely esthetically displeasing or architecturally dubious).
        </t>
        <table align="center" anchor="tab-iana-XFER_REFUSE-codes" pn="table-15">
          <name slugifiedName="name-xfer_refuse-reason-codes-3">XFER_REFUSE Reason Codes</name>
          <thead>
            <tr>
              <th align="left" colspan="1" rowspan="1">Code</th>
              <th align="left" colspan="1" rowspan="1">Refusal Reason</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left" colspan="1" rowspan="1">0x00</td>
              <td align="left" colspan="1" rowspan="1">Unknown</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">0x01</td>
              <td align="left" colspan="1" rowspan="1">Completed</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">0x02</td>
              <td align="left" colspan="1" rowspan="1">No Resources</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">0x03</td>
              <td align="left" colspan="1" rowspan="1">Retransmit</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">0x04</td>
              <td align="left" colspan="1" rowspan="1">Not Acceptable</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">0x05</td>
              <td align="left" colspan="1" rowspan="1">Extension Failure</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">0x06</td>
              <td align="left" colspan="1" rowspan="1">Session Terminating</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">0x07-0xEF</td>
              <td align="left" colspan="1" rowspan="1">Unassigned</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">0xF0-0xFF</td>
              <td align="left" colspan="1" rowspan="1">Reserved for Private or Experimental Use</td>
            </tr>
          </tbody>
        </table>
      </section>
      <section anchor="sec-iana-SESS_TERM-codes" numbered="true" removeInRFC="false" toc="include" pn="section-8.7">
        <name slugifiedName="name-sess_term-reason-codes-2">SESS_TERM Reason Codes</name>
        <t indent="0" pn="section-8.7-1">
Under the "Bundle Protocol" registry <xref target="IANA-BUNDLE" format="default" sectionFormat="of" derivedContent="IANA-BUNDLE"/>, IANA has created the "Bundle Protocol TCP Convergence-Layer Version 4 SESS_TERM Reason Codes" registry and populated it with the contents of <xref target="tab-iana-SESS_TERM-codes" format="default" sectionFormat="of" derivedContent="Table 16"/>.
The registration procedure is Specification Required within the lower range 0x00-0xEF.
Values in the range 0xF0-0xFF are reserved for Private or Experimental Use, which are not recorded by 
IANA.
        </t>
        <t indent="0" pn="section-8.7-2">
Specifications of new SESS_TERM reason codes need to define the meaning of the reason and disambiguate it from preexisting reasons.
Each termination reason needs to be usable by the receiving BPA to make reconnection decisions.
        </t>
        <t indent="0" pn="section-8.7-3">
Experts are encouraged to be biased towards approving registrations unless they are abusive, frivolous, or actively harmful (not merely esthetically displeasing or architecturally dubious).
        </t>
        <table align="center" anchor="tab-iana-SESS_TERM-codes" pn="table-16">
          <name slugifiedName="name-sess_term-reason-codes-3">SESS_TERM Reason Codes</name>
          <thead>
            <tr>
              <th align="left" colspan="1" rowspan="1">Code</th>
              <th align="left" colspan="1" rowspan="1">Termination Reason</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left" colspan="1" rowspan="1">0x00</td>
              <td align="left" colspan="1" rowspan="1">Unknown</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">0x01</td>
              <td align="left" colspan="1" rowspan="1">Idle timeout</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">0x02</td>
              <td align="left" colspan="1" rowspan="1">Version mismatch</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">0x03</td>
              <td align="left" colspan="1" rowspan="1">Busy</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">0x04</td>
              <td align="left" colspan="1" rowspan="1">Contact Failure</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">0x05</td>
              <td align="left" colspan="1" rowspan="1">Resource Exhaustion</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">0x06-0xEF</td>
              <td align="left" colspan="1" rowspan="1">Unassigned</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">0xF0-0xFF</td>
              <td align="left" colspan="1" rowspan="1">Reserved for Private or Experimental Use</td>
            </tr>
          </tbody>
        </table>
      </section>
      <section anchor="sec-iana-MSG_REJECT-codes" numbered="true" removeInRFC="false" toc="include" pn="section-8.8">
        <name slugifiedName="name-msg_reject-reason-codes-2">MSG_REJECT Reason Codes</name>
        <t indent="0" pn="section-8.8-1">
Under the "Bundle Protocol" registry <xref target="IANA-BUNDLE" format="default" sectionFormat="of" derivedContent="IANA-BUNDLE"/>, IANA has created the "Bundle Protocol TCP Convergence-Layer Version 4 MSG_REJECT Reason Codes" registry and populated it with the contents of <xref target="tab-iana-MSG_REJECT-codes" format="default" sectionFormat="of" derivedContent="Table 17"/>.
The registration procedure is Specification Required within the lower range 0x01-0xEF.
Values in the range 0xF0-0xFF are reserved for Private or Experimental Use, which are not recorded 
by IANA.
        </t>
        <t indent="0" pn="section-8.8-2">
Specifications of new MSG_REJECT reason codes need to define the meaning of the reason and disambiguate it from preexisting reasons.
Each rejection reason needs to be usable by the receiving TCPCL entity to make message sequencing and/or session termination decisions.
        </t>
        <t indent="0" pn="section-8.8-3">
Experts are encouraged to be biased towards approving registrations unless they are abusive, frivolous, or actively harmful (not merely esthetically displeasing or architecturally dubious).
        </t>
        <table align="center" anchor="tab-iana-MSG_REJECT-codes" pn="table-17">
          <name slugifiedName="name-msg_reject-reason-codes-3">MSG_REJECT Reason Codes</name>
          <thead>
            <tr>
              <th align="left" colspan="1" rowspan="1">Code</th>
              <th align="left" colspan="1" rowspan="1">Rejection Reason</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left" colspan="1" rowspan="1">0x00</td>
              <td align="left" colspan="1" rowspan="1">Reserved</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">0x01</td>
              <td align="left" colspan="1" rowspan="1">Message Type Unknown</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">0x02</td>
              <td align="left" colspan="1" rowspan="1">Message Unsupported</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">0x03</td>
              <td align="left" colspan="1" rowspan="1">Message Unexpected</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">0x04-0xEF</td>
              <td align="left" colspan="1" rowspan="1">Unassigned</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">0xF0-0xFF</td>
              <td align="left" colspan="1" rowspan="1">Reserved for Private or Experimental Use</td>
            </tr>
          </tbody>
        </table>
      </section>
      <section anchor="sec-iana-smi-mod" numbered="true" removeInRFC="false" toc="include" pn="section-8.9">
        <name slugifiedName="name-object-identifier-for-pkix-">Object Identifier for PKIX Module Identifier</name>
        <t indent="0" pn="section-8.9-1">
IANA has registered the following in the "SMI Security for PKIX Module Identifier" registry <xref target="IANA-SMI" format="default" sectionFormat="of" derivedContent="IANA-SMI"/> for identifying the module described in <xref target="sec-asn1-mod" format="default" sectionFormat="of" derivedContent="Appendix B"/>.  
        </t>
        <table anchor="id-mod-dtn-tcpclv4-2021" align="center" pn="table-18">
          <name slugifiedName="name-new-smi-security-module">New SMI Security Module</name>
          <thead>
            <tr>
              <th align="left" colspan="1" rowspan="1">Decimal</th>
              <th align="left" colspan="1" rowspan="1">Description</th>
              <th align="left" colspan="1" rowspan="1">References</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left" colspan="1" rowspan="1">103</td>
              <td align="left" colspan="1" rowspan="1">id-mod-dtn-tcpclv4-2021</td>
              <td align="left" colspan="1" rowspan="1">This specification</td>
            </tr>
          </tbody>
        </table>
      </section>
      <section anchor="sec-iana-pkix-on-oid" numbered="true" removeInRFC="false" toc="include" pn="section-8.10">
        <name slugifiedName="name-object-identifier-for-pkix-o">Object Identifier for PKIX Other Name Forms</name>
        <t indent="0" pn="section-8.10-1">
IANA has registered the following in the "SMI Security for PKIX Other Name Forms" registry <xref target="IANA-SMI" format="default" sectionFormat="of" derivedContent="IANA-SMI"/> for 
identifying bundle endpoint IDs:
        </t>
        <table anchor="id-on-bundleEID" align="center" pn="table-19">
          <name slugifiedName="name-new-pkix-other-name-form">New PKIX Other Name Form</name>
          <thead>
            <tr>
              <th align="left" colspan="1" rowspan="1">Decimal</th>
              <th align="left" colspan="1" rowspan="1">Description</th>
              <th align="left" colspan="1" rowspan="1">References</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left" colspan="1" rowspan="1">11</td>
              <td align="left" colspan="1" rowspan="1">id-on-bundleEID</td>
              <td align="left" colspan="1" rowspan="1">This specification</td>
            </tr>
          </tbody>
        </table>
        <t indent="0" pn="section-8.10-3">The formal structure of the associated Other Name Form is provided in <xref target="sec-asn1-mod" format="default" sectionFormat="of" derivedContent="Appendix B"/>. The use of this OID is defined in Sections <xref target="sec-tls-identification" format="counter" sectionFormat="of" derivedContent="4.4.1"/> and <xref target="sec-tcpcl-cert-profile" format="counter" sectionFormat="of" derivedContent="4.4.2"/>.
        </t>
      </section>
      <section anchor="sec-iana-pkix-kp-oid" numbered="true" removeInRFC="false" toc="include" pn="section-8.11">
        <name slugifiedName="name-object-identifier-for-pkix-e">Object Identifier for PKIX Extended Key Usage</name>
        <t indent="0" pn="section-8.11-1">
IANA has registered the following in the "SMI Security for PKIX Extended Key Purpose" registry <xref target="IANA-SMI" format="default" sectionFormat="of" derivedContent="IANA-SMI"/> for securing BP bundles.
        </t>
        <table anchor="tbl-id-kp-bundleSecurity" align="center" pn="table-20">
          <name slugifiedName="name-new-pkix-extended-key-purpo">New PKIX Extended Key Purpose</name>
          <thead>
            <tr>
              <th align="left" colspan="1" rowspan="1">Decimal</th>
              <th align="left" colspan="1" rowspan="1">Description</th>
              <th align="left" colspan="1" rowspan="1">References</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left" colspan="1" rowspan="1">35</td>
              <td align="left" colspan="1" rowspan="1">id-kp-bundleSecurity</td>
              <td align="left" colspan="1" rowspan="1">This specification</td>
            </tr>
          </tbody>
        </table>
        <t indent="0" pn="section-8.11-3">The formal definition of this EKU is provided in <xref target="sec-asn1-mod" format="default" sectionFormat="of" derivedContent="Appendix B"/>. The use of this OID is defined in <xref target="sec-tcpcl-cert-profile" format="default" sectionFormat="of" derivedContent="Section 4.4.2"/>.</t>
      </section>
    </section>
  </middle>
  <back>
    <displayreference target="I-D.ietf-dtn-bibect" to="DTN-BIBECT"/>
    <references pn="section-9">
      <name slugifiedName="name-references">References</name>
      <references pn="section-9.1">
        <name slugifiedName="name-normative-references">Normative References</name>
        <reference anchor="IANA-BUNDLE" target="https://www.iana.org/assignments/bundle/" quoteTitle="true" derivedAnchor="IANA-BUNDLE">
          <front>
            <title>Bundle Protocol</title>
            <author>
              <organization showOnFrontPage="true">IANA</organization>
            </author>
            <date/>
          </front>
        </reference>
        <reference anchor="IANA-PORTS" target="https://www.iana.org/assignments/service-names-port-numbers/" quoteTitle="true" derivedAnchor="IANA-PORTS">
          <front>
            <title>Service Name and Transport Protocol Port Number Registry</title>
            <author>
              <organization showOnFrontPage="true">IANA</organization>
            </author>
            <date/>
          </front>
        </reference>
        <reference anchor="IANA-SMI" target="https://www.iana.org/assignments/smi-numbers/" quoteTitle="true" derivedAnchor="IANA-SMI">
          <front>
            <title>Structure of Management Information (SMI) Numbers (MIB Module Registrations)</title>
            <author>
              <organization showOnFrontPage="true">IANA</organization>
            </author>
            <date/>
          </front>
        </reference>
        <reference anchor="RFC0793" target="https://www.rfc-editor.org/info/rfc793" quoteTitle="true" derivedAnchor="RFC0793">
          <front>
            <title>Transmission Control Protocol</title>
            <author initials="J." surname="Postel" fullname="J. Postel">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="1981" month="September"/>
          </front>
          <seriesInfo name="STD" value="7"/>
          <seriesInfo name="RFC" value="793"/>
          <seriesInfo name="DOI" value="10.17487/RFC0793"/>
        </reference>
        <reference anchor="RFC1122" target="https://www.rfc-editor.org/info/rfc1122" quoteTitle="true" derivedAnchor="RFC1122">
          <front>
            <title>Requirements for Internet Hosts - Communication Layers</title>
            <author initials="R." surname="Braden" fullname="R. Braden" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="1989" month="October"/>
            <abstract>
              <t indent="0">This RFC is an official specification for the Internet community.  It incorporates by reference, amends, corrects, and supplements the primary protocol standards documents relating to hosts.  [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="STD" value="3"/>
          <seriesInfo name="RFC" value="1122"/>
          <seriesInfo name="DOI" value="10.17487/RFC1122"/>
        </reference>
        <reference anchor="RFC2119" target="https://www.rfc-editor.org/info/rfc2119" quoteTitle="true" derivedAnchor="RFC2119">
          <front>
            <title>Key words for use in RFCs to Indicate Requirement Levels</title>
            <author initials="S." surname="Bradner" fullname="S. Bradner">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="1997" month="March"/>
            <abstract>
              <t indent="0">In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t>
            </abstract>
          </front>
          <seriesInfo name="BCP" value="14"/>
          <seriesInfo name="RFC" value="2119"/>
          <seriesInfo name="DOI" value="10.17487/RFC2119"/>
        </reference>
        <reference anchor="RFC3986" target="https://www.rfc-editor.org/info/rfc3986" quoteTitle="true" derivedAnchor="RFC3986">
          <front>
            <title>Uniform Resource Identifier (URI): Generic Syntax</title>
            <author initials="T." surname="Berners-Lee" fullname="T. Berners-Lee">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="R." surname="Fielding" fullname="R. Fielding">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="L." surname="Masinter" fullname="L. Masinter">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2005" month="January"/>
            <abstract>
              <t indent="0">A Uniform Resource Identifier (URI) is a compact sequence of characters that identifies an abstract or physical resource.  This specification defines the generic URI syntax and a process for resolving URI references that might be in relative form, along with guidelines and security considerations for the use of URIs on the Internet.  The URI syntax defines a grammar that is a superset of all valid URIs, allowing an implementation to parse the common components of a URI reference without knowing the scheme-specific requirements of every possible identifier.  This specification does not define a generative grammar for URIs; that task is performed by the individual specifications of each URI scheme.  [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="STD" value="66"/>
          <seriesInfo name="RFC" value="3986"/>
          <seriesInfo name="DOI" value="10.17487/RFC3986"/>
        </reference>
        <reference anchor="RFC5280" target="https://www.rfc-editor.org/info/rfc5280" quoteTitle="true" derivedAnchor="RFC5280">
          <front>
            <title>Internet X.509 Public Key Infrastructure Certificate and Certificate Revocation List (CRL) Profile</title>
            <author initials="D." surname="Cooper" fullname="D. Cooper">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="S." surname="Santesson" fullname="S. Santesson">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="S." surname="Farrell" fullname="S. Farrell">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="S." surname="Boeyen" fullname="S. Boeyen">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="R." surname="Housley" fullname="R. Housley">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="W." surname="Polk" fullname="W. Polk">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2008" month="May"/>
            <abstract>
              <t indent="0">This memo profiles the X.509 v3 certificate and X.509 v2 certificate revocation list (CRL) for use in the Internet.  An overview of this approach and model is provided as an introduction.  The X.509 v3 certificate format is described in detail, with additional information regarding the format and semantics of Internet name forms.  Standard certificate extensions are described and two Internet-specific extensions are defined.  A set of required certificate extensions is specified.  The X.509 v2 CRL format is described in detail along with standard and Internet-specific extensions.  An algorithm for X.509 certification path validation is described.  An ASN.1 module and examples are provided in the appendices.  [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="5280"/>
          <seriesInfo name="DOI" value="10.17487/RFC5280"/>
        </reference>
        <reference anchor="RFC6066" target="https://www.rfc-editor.org/info/rfc6066" quoteTitle="true" derivedAnchor="RFC6066">
          <front>
            <title>Transport Layer Security (TLS) Extensions: Extension Definitions</title>
            <author initials="D." surname="Eastlake 3rd" fullname="D. Eastlake 3rd">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2011" month="January"/>
            <abstract>
              <t indent="0">This document provides specifications for existing TLS extensions.  It is a companion document for RFC 5246, "The Transport Layer Security (TLS) Protocol Version 1.2".  The extensions specified are server_name, max_fragment_length, client_certificate_url, trusted_ca_keys, truncated_hmac, and status_request.  [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="6066"/>
          <seriesInfo name="DOI" value="10.17487/RFC6066"/>
        </reference>
        <reference anchor="RFC6125" target="https://www.rfc-editor.org/info/rfc6125" quoteTitle="true" derivedAnchor="RFC6125">
          <front>
            <title>Representation and Verification of Domain-Based Application Service Identity within Internet Public Key Infrastructure Using X.509 (PKIX) Certificates in the Context of Transport Layer Security (TLS)</title>
            <author initials="P." surname="Saint-Andre" fullname="P. Saint-Andre">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="J." surname="Hodges" fullname="J. Hodges">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2011" month="March"/>
            <abstract>
              <t indent="0">Many application technologies enable secure communication between two entities by means of Internet Public Key Infrastructure Using X.509 (PKIX) certificates in the context of Transport Layer Security (TLS). This document specifies procedures for representing and verifying the identity of application services in such interactions.   [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="6125"/>
          <seriesInfo name="DOI" value="10.17487/RFC6125"/>
        </reference>
        <reference anchor="RFC6960" target="https://www.rfc-editor.org/info/rfc6960" quoteTitle="true" derivedAnchor="RFC6960">
          <front>
            <title>X.509 Internet Public Key Infrastructure Online Certificate Status Protocol - OCSP</title>
            <author initials="S." surname="Santesson" fullname="S. Santesson">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="M." surname="Myers" fullname="M. Myers">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="R." surname="Ankney" fullname="R. Ankney">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="A." surname="Malpani" fullname="A. Malpani">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="S." surname="Galperin" fullname="S. Galperin">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="C." surname="Adams" fullname="C. Adams">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2013" month="June"/>
            <abstract>
              <t indent="0">This document specifies a protocol useful in determining the current status of a digital certificate without requiring Certificate Revocation Lists (CRLs). Additional mechanisms addressing PKIX operational requirements are specified in separate documents.  This document obsoletes RFCs 2560 and 6277.  It also updates RFC 5912.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="6960"/>
          <seriesInfo name="DOI" value="10.17487/RFC6960"/>
        </reference>
        <reference anchor="RFC7525" target="https://www.rfc-editor.org/info/rfc7525" quoteTitle="true" derivedAnchor="RFC7525">
          <front>
            <title>Recommendations for Secure Use of Transport Layer Security (TLS) and Datagram Transport Layer Security (DTLS)</title>
            <author initials="Y." surname="Sheffer" fullname="Y. Sheffer">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="R." surname="Holz" fullname="R. Holz">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="P." surname="Saint-Andre" fullname="P. Saint-Andre">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2015" month="May"/>
            <abstract>
              <t indent="0">Transport Layer Security (TLS) and Datagram Transport Layer Security (DTLS) are widely used to protect data exchanged over application protocols such as HTTP, SMTP, IMAP, POP, SIP, and XMPP.  Over the last few years, several serious attacks on TLS have emerged, including attacks on its most commonly used cipher suites and their modes of operation.  This document provides recommendations for improving the security of deployed services that use TLS and DTLS. The recommendations are applicable to the majority of use cases.</t>
            </abstract>
          </front>
          <seriesInfo name="BCP" value="195"/>
          <seriesInfo name="RFC" value="7525"/>
          <seriesInfo name="DOI" value="10.17487/RFC7525"/>
        </reference>
        <reference anchor="RFC8126" target="https://www.rfc-editor.org/info/rfc8126" quoteTitle="true" derivedAnchor="RFC8126">
          <front>
            <title>Guidelines for Writing an IANA Considerations Section in RFCs</title>
            <author initials="M." surname="Cotton" fullname="M. Cotton">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="B." surname="Leiba" fullname="B. Leiba">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="T." surname="Narten" fullname="T. Narten">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2017" month="June"/>
            <abstract>
              <t indent="0">Many protocols make use of points of extensibility that use constants to identify various protocol parameters.  To ensure that the values in these fields do not have conflicting uses and to promote interoperability, their allocations are often coordinated by a central record keeper.  For IETF protocols, that role is filled by the Internet Assigned Numbers Authority (IANA).</t>
              <t indent="0">To make assignments in a given registry prudently, guidance describing the conditions under which new values should be assigned, as well as when and how modifications to existing values can be made, is needed.  This document defines a framework for the documentation of these guidelines by specification authors, in order to assure that the provided guidance for the IANA Considerations is clear and addresses the various issues that are likely in the operation of a registry.</t>
              <t indent="0">This is the third edition of this document; it obsoletes RFC 5226.</t>
            </abstract>
          </front>
          <seriesInfo name="BCP" value="26"/>
          <seriesInfo name="RFC" value="8126"/>
          <seriesInfo name="DOI" value="10.17487/RFC8126"/>
        </reference>
        <reference anchor="RFC8174" target="https://www.rfc-editor.org/info/rfc8174" quoteTitle="true" derivedAnchor="RFC8174">
          <front>
            <title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
            <author initials="B." surname="Leiba" fullname="B. Leiba">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2017" month="May"/>
            <abstract>
              <t indent="0">RFC 2119 specifies common key words that may be used in protocol  specifications.  This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the  defined special meanings.</t>
            </abstract>
          </front>
          <seriesInfo name="BCP" value="14"/>
          <seriesInfo name="RFC" value="8174"/>
          <seriesInfo name="DOI" value="10.17487/RFC8174"/>
        </reference>
        <reference anchor="RFC8446" target="https://www.rfc-editor.org/info/rfc8446" quoteTitle="true" derivedAnchor="RFC8446">
          <front>
            <title>The Transport Layer Security (TLS) Protocol Version 1.3</title>
            <author initials="E." surname="Rescorla" fullname="E. Rescorla">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2018" month="August"/>
            <abstract>
              <t indent="0">This document specifies version 1.3 of the Transport Layer Security (TLS) protocol.  TLS allows client/server applications to communicate over the Internet in a way that is designed to prevent eavesdropping, tampering, and message forgery.</t>
              <t indent="0">This document updates RFCs 5705 and 6066, and obsoletes RFCs 5077, 5246, and 6961.  This document also specifies new requirements for TLS 1.2 implementations.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8446"/>
          <seriesInfo name="DOI" value="10.17487/RFC8446"/>
        </reference>
        <reference anchor="RFC9171" target="https://www.rfc-editor.org/info/rfc9171" quoteTitle="true" derivedAnchor="RFC9171">
          <front>
            <title>Bundle Protocol Version 7</title>
            <author initials="S" surname="Burleigh" fullname="Scott Burleigh">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="K" surname="Fall" fullname="Kevin Fall">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="E." surname="Birrane, III" fullname="Edward J. Birrane, III">
              <organization showOnFrontPage="true"/>
            </author>
            <date month="January" year="2022"/>
          </front>
          <seriesInfo name="RFC" value="9171"/>
          <seriesInfo name="DOI" value="10.17487/RFC9171"/>
        </reference>
        <reference anchor="X.680" target="https://www.itu.int/rec/T-REC-X.680-202102-I/en" quoteTitle="true" derivedAnchor="X.680">
          <front>
            <title>Information technology - Abstract Syntax Notation One (ASN.1): Specification of basic notation</title>
            <author>
              <organization showOnFrontPage="true">ITU-T</organization>
            </author>
            <date month="February" year="2021"/>
          </front>
          <refcontent>ITU-T Recommendation X.680, ISO/IEC 8824-1:2021</refcontent>
        </reference>
      </references>
      <references pn="section-9.2">
        <name slugifiedName="name-informative-references">Informative References</name>
        <reference anchor="AEAD-LIMITS" target="https://www.isg.rhul.ac.uk/~kp/TLS-AEbounds.pdf" quoteTitle="true" derivedAnchor="AEAD-LIMITS">
          <front>
            <title>Limits on Authenticated Encryption Use in TLS</title>
            <author initials="A." surname="Luykx"/>
            <author initials="K." surname="Paterson"/>
            <date month="August" year="2017"/>
          </front>
        </reference>
        <reference anchor="RFC2595" target="https://www.rfc-editor.org/info/rfc2595" quoteTitle="true" derivedAnchor="RFC2595">
          <front>
            <title>Using TLS with IMAP, POP3 and ACAP</title>
            <author initials="C." surname="Newman" fullname="C. Newman">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="1999" month="June"/>
            <abstract>
              <t indent="0">Recognizing that such sites will desire simple password authentication in combination with TLS encryption, this specification defines the PLAIN SASL mechanism for use with protocols which lack a simple password authentication command such as ACAP and SMTP.  [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="2595"/>
          <seriesInfo name="DOI" value="10.17487/RFC2595"/>
        </reference>
        <reference anchor="RFC3552" target="https://www.rfc-editor.org/info/rfc3552" quoteTitle="true" derivedAnchor="RFC3552">
          <front>
            <title>Guidelines for Writing RFC Text on Security Considerations</title>
            <author initials="E." surname="Rescorla" fullname="E. Rescorla">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="B." surname="Korver" fullname="B. Korver">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2003" month="July"/>
            <abstract>
              <t indent="0">All RFCs are required to have a Security Considerations section. Historically, such sections have been relatively weak.  This document provides guidelines to RFC authors on how to write a good Security Considerations section.   This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t>
            </abstract>
          </front>
          <seriesInfo name="BCP" value="72"/>
          <seriesInfo name="RFC" value="3552"/>
          <seriesInfo name="DOI" value="10.17487/RFC3552"/>
        </reference>
        <reference anchor="RFC4511" target="https://www.rfc-editor.org/info/rfc4511" quoteTitle="true" derivedAnchor="RFC4511">
          <front>
            <title>Lightweight Directory Access Protocol (LDAP): The Protocol</title>
            <author initials="J." surname="Sermersheim" fullname="J. Sermersheim" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2006" month="June"/>
            <abstract>
              <t indent="0">This document describes the protocol elements, along with their semantics and encodings, of the Lightweight Directory Access Protocol (LDAP).  LDAP provides access to distributed directory services that act in accordance with X.500 data and service models.  These protocol elements are based on those described in the X.500 Directory Access Protocol (DAP).  [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="4511"/>
          <seriesInfo name="DOI" value="10.17487/RFC4511"/>
        </reference>
        <reference anchor="RFC4838" target="https://www.rfc-editor.org/info/rfc4838" quoteTitle="true" derivedAnchor="RFC4838">
          <front>
            <title>Delay-Tolerant Networking Architecture</title>
            <author initials="V." surname="Cerf" fullname="V. Cerf">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="S." surname="Burleigh" fullname="S. Burleigh">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="A." surname="Hooke" fullname="A. Hooke">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="L." surname="Torgerson" fullname="L. Torgerson">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="R." surname="Durst" fullname="R. Durst">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="K." surname="Scott" fullname="K. Scott">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="K." surname="Fall" fullname="K. Fall">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="H." surname="Weiss" fullname="H. Weiss">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2007" month="April"/>
            <abstract>
              <t indent="0">This document describes an architecture for delay-tolerant and disruption-tolerant networks, and is an evolution of the architecture originally designed for the Interplanetary Internet, a communication system envisioned to provide Internet-like services across interplanetary distances in support of deep space exploration.  This document describes an architecture that addresses a variety of problems with internetworks having operational and performance characteristics that make conventional (Internet-like) networking approaches either unworkable or impractical.  We define a message- oriented overlay that exists above the transport (or other) layers of the networks it interconnects.  The document presents a motivation for the architecture, an architectural overview, review of state management required for its operation, and a discussion of application design issues.  This document represents the consensus of the IRTF DTN research group and has been widely reviewed by that group.  This memo provides information for the Internet community.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="4838"/>
          <seriesInfo name="DOI" value="10.17487/RFC4838"/>
        </reference>
        <reference anchor="RFC5489" target="https://www.rfc-editor.org/info/rfc5489" quoteTitle="true" derivedAnchor="RFC5489">
          <front>
            <title>ECDHE_PSK Cipher Suites for Transport Layer Security (TLS)</title>
            <author initials="M." surname="Badra" fullname="M. Badra">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="I." surname="Hajjeh" fullname="I. Hajjeh">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2009" month="March"/>
            <abstract>
              <t indent="0">This document extends RFC 4279, RFC 4492, and RFC 4785 and specifies a set of cipher suites that use a pre-shared key (PSK) to authenticate an Elliptic Curve Diffie-Hellman exchange with Ephemeral keys (ECDHE).  These cipher suites provide Perfect Forward Secrecy (PFS).  This memo provides information for the Internet community.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="5489"/>
          <seriesInfo name="DOI" value="10.17487/RFC5489"/>
        </reference>
        <reference anchor="RFC5912" target="https://www.rfc-editor.org/info/rfc5912" quoteTitle="true" derivedAnchor="RFC5912">
          <front>
            <title>New ASN.1 Modules for the Public Key Infrastructure Using X.509 (PKIX)</title>
            <author initials="P." surname="Hoffman" fullname="P. Hoffman">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="J." surname="Schaad" fullname="J. Schaad">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2010" month="June"/>
            <abstract>
              <t indent="0">The Public Key Infrastructure using X.509 (PKIX) certificate format, and many associated formats, are expressed using ASN.1.  The current ASN.1 modules conform to the 1988 version of ASN.1.  This document updates those ASN.1 modules to conform to the 2002 version of ASN.1. There are no bits-on-the-wire changes to any of the formats; this is simply a change to the syntax.  This document is not an Internet  Standards Track specification; it is published for informational  purposes.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="5912"/>
          <seriesInfo name="DOI" value="10.17487/RFC5912"/>
        </reference>
        <reference anchor="RFC6698" target="https://www.rfc-editor.org/info/rfc6698" quoteTitle="true" derivedAnchor="RFC6698">
          <front>
            <title>The DNS-Based Authentication of Named Entities (DANE) Transport Layer Security (TLS) Protocol: TLSA</title>
            <author initials="P." surname="Hoffman" fullname="P. Hoffman">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="J." surname="Schlyter" fullname="J. Schlyter">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2012" month="August"/>
            <abstract>
              <t indent="0">Encrypted communication on the Internet often uses Transport Layer Security (TLS), which depends on third parties to certify the keys used.  This document improves on that situation by enabling the administrators of domain names to specify the keys used in that domain's TLS servers.  This requires matching improvements in TLS client software, but no change in TLS server software.  [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="6698"/>
          <seriesInfo name="DOI" value="10.17487/RFC6698"/>
        </reference>
        <reference anchor="RFC7122" target="https://www.rfc-editor.org/info/rfc7122" quoteTitle="true" derivedAnchor="RFC7122">
          <front>
            <title>Datagram Convergence Layers for the Delay- and Disruption-Tolerant Networking (DTN) Bundle Protocol and Licklider Transmission Protocol (LTP)</title>
            <author initials="H." surname="Kruse" fullname="H. Kruse">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="S." surname="Jero" fullname="S. Jero">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="S." surname="Ostermann" fullname="S. Ostermann">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2014" month="March"/>
            <abstract>
              <t indent="0">This document specifies the preferred method for transporting Delay- and Disruption-Tolerant Networking (DTN) protocol data over the Internet using datagrams.  It covers convergence layers for the Bundle Protocol (RFC 5050), as well as the transportation of segments using the Licklider Transmission Protocol (LTP) (RFC 5326).  UDP and the Datagram Congestion Control Protocol (DCCP) are the candidate datagram protocols discussed.  UDP can only be used on a local network or in cases where the DTN node implements explicit congestion control.  DCCP addresses the congestion control problem, and its use is recommended whenever possible.  This document is a product of the Delay-Tolerant Networking Research Group (DTNRG) and represents the consensus of the DTNRG.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="7122"/>
          <seriesInfo name="DOI" value="10.17487/RFC7122"/>
        </reference>
        <reference anchor="RFC7242" target="https://www.rfc-editor.org/info/rfc7242" quoteTitle="true" derivedAnchor="RFC7242">
          <front>
            <title>Delay-Tolerant Networking TCP Convergence-Layer Protocol</title>
            <author initials="M." surname="Demmer" fullname="M. Demmer">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="J." surname="Ott" fullname="J. Ott">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="S." surname="Perreault" fullname="S. Perreault">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2014" month="June"/>
            <abstract>
              <t indent="0">This document describes the protocol for the TCP-based convergence layer for Delay-Tolerant Networking (DTN).  It is the product of the IRTF's DTN Research Group (DTNRG).</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="7242"/>
          <seriesInfo name="DOI" value="10.17487/RFC7242"/>
        </reference>
        <reference anchor="RFC7250" target="https://www.rfc-editor.org/info/rfc7250" quoteTitle="true" derivedAnchor="RFC7250">
          <front>
            <title>Using Raw Public Keys in Transport Layer Security (TLS) and Datagram Transport Layer Security (DTLS)</title>
            <author initials="P." surname="Wouters" fullname="P. Wouters" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="H." surname="Tschofenig" fullname="H. Tschofenig" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="J." surname="Gilmore" fullname="J. Gilmore">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="S." surname="Weiler" fullname="S. Weiler">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="T." surname="Kivinen" fullname="T. Kivinen">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2014" month="June"/>
            <abstract>
              <t indent="0">This document specifies a new certificate type and two TLS extensions for exchanging raw public keys in Transport Layer Security (TLS) and Datagram Transport Layer Security (DTLS).  The new certificate type allows raw public keys to be used for authentication.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="7250"/>
          <seriesInfo name="DOI" value="10.17487/RFC7250"/>
        </reference>
        <reference anchor="RFC7435" target="https://www.rfc-editor.org/info/rfc7435" quoteTitle="true" derivedAnchor="RFC7435">
          <front>
            <title>Opportunistic Security: Some Protection Most of the Time</title>
            <author initials="V." surname="Dukhovni" fullname="V. Dukhovni">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2014" month="December"/>
            <abstract>
              <t indent="0">This document defines the concept "Opportunistic Security" in the context of communications protocols.  Protocol designs based on Opportunistic Security use encryption even when authentication is not available, and use authentication when possible, thereby removing barriers to the widespread use of encryption on the Internet.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="7435"/>
          <seriesInfo name="DOI" value="10.17487/RFC7435"/>
        </reference>
        <reference anchor="RFC7457" target="https://www.rfc-editor.org/info/rfc7457" quoteTitle="true" derivedAnchor="RFC7457">
          <front>
            <title>Summarizing Known Attacks on Transport Layer Security (TLS) and Datagram TLS (DTLS)</title>
            <author initials="Y." surname="Sheffer" fullname="Y. Sheffer">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="R." surname="Holz" fullname="R. Holz">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="P." surname="Saint-Andre" fullname="P. Saint-Andre">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2015" month="February"/>
            <abstract>
              <t indent="0">Over the last few years, there have been several serious attacks on Transport Layer Security (TLS), including attacks on its most commonly used ciphers and modes of operation.  This document summarizes these attacks, with the goal of motivating generic and protocol-specific recommendations on the usage of TLS and Datagram TLS (DTLS).</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="7457"/>
          <seriesInfo name="DOI" value="10.17487/RFC7457"/>
        </reference>
        <reference anchor="RFC8555" target="https://www.rfc-editor.org/info/rfc8555" quoteTitle="true" derivedAnchor="RFC8555">
          <front>
            <title>Automatic Certificate Management Environment (ACME)</title>
            <author initials="R." surname="Barnes" fullname="R. Barnes">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="J." surname="Hoffman-Andrews" fullname="J. Hoffman-Andrews">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="D." surname="McCarney" fullname="D. McCarney">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="J." surname="Kasten" fullname="J. Kasten">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2019" month="March"/>
            <abstract>
              <t indent="0">Public Key Infrastructure using X.509 (PKIX) certificates are used for a number of purposes, the most significant of which is the authentication of domain names.  Thus, certification authorities (CAs) in the Web PKI are trusted to verify that an applicant for a certificate legitimately represents the domain name(s) in the certificate.  As of this writing, this verification is done through a collection of ad hoc mechanisms.  This document describes a protocol that a CA and an applicant can use to automate the process of verification and certificate issuance.  The protocol also provides facilities for other certificate management functions, such as certificate revocation.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8555"/>
          <seriesInfo name="DOI" value="10.17487/RFC8555"/>
        </reference>
        <reference anchor="RFC9172" target="https://www.rfc-editor.org/info/rfc9172" quoteTitle="true" derivedAnchor="RFC9172">
          <front>
            <title>Bundle Protocol Security (BPSec)</title>
            <author initials="E." surname="Birrane, III" fullname="Edward J. Birrane, III">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="K" surname="McKeever" fullname="Kenneth McKeever">
              <organization showOnFrontPage="true"/>
            </author>
            <date month="January" year="2022"/>
          </front>
          <seriesInfo name="RFC" value="9172"/>
          <seriesInfo name="DOI" value="10.17487/RFC9172"/>
        </reference>
        <reference anchor="I-D.ietf-dtn-bibect" quoteTitle="true" target="https://datatracker.ietf.org/doc/html/draft-ietf-dtn-bibect-03" derivedAnchor="DTN-BIBECT">
          <front>
            <title>Bundle-in-Bundle Encapsulation</title>
            <author fullname="Scott Burleigh">
              <organization showOnFrontPage="true">JPL, Calif. Inst. Of Technology</organization>
            </author>
            <date month="February" day="18" year="2020"/>
            <abstract>
              <t indent="0">   This document describes Bundle-in-Bundle Encapsulation (BIBE), a
   Delay-Tolerant Networking (DTN) Bundle Protocol (BP) "convergence
   layer" protocol that tunnels BP "bundles" through encapsulating
   bundles.  The services provided by the BIBE convergence-layer
   protocol adapter encapsulate an outbound BP "bundle" in a BIBE
   convergence-layer protocol data unit for transmission as the payload
   of a bundle.  Security measures applied to the encapsulating bundle
   may augment those applied to the encapsulated bundle.  The protocol
   includes a mechanism for recovery from loss of an encapsulating
   bundle, called "custody transfer".  This mechanism is adapted from
   the custody transfer procedures described in the experimental Bundle
   Protocol specification developed by the Delay-Tolerant Networking
   Research Group of the Internet Research Task Force and documented in
   RFC 5050.

              </t>
            </abstract>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-ietf-dtn-bibect-03"/>
          <format type="TXT" target="https://www.ietf.org/archive/id/draft-ietf-dtn-bibect-03.txt"/>
          <refcontent>Work in Progress</refcontent>
        </reference>
      </references>
    </references>
    <section numbered="true" removeInRFC="false" toc="include" pn="section-appendix.a">
      <name slugifiedName="name-significant-changes-from-rf">Significant Changes from RFC 7242</name>
      <t indent="0" pn="section-appendix.a-1">
The areas in which changes from <xref target="RFC7242" format="default" sectionFormat="of" derivedContent="RFC7242"/> have been made to existing headers and messages are as follows:
      </t>
      <ul spacing="normal" bare="false" empty="false" indent="3" pn="section-appendix.a-2">
        <li pn="section-appendix.a-2.1">Split Contact Header into pre-TLS protocol negotiation and SESS_INIT parameter negotiation. The Contact Header is now fixed length.</li>
        <li pn="section-appendix.a-2.2">Changed Contact Header content to limit number of negotiated options.</li>
        <li pn="section-appendix.a-2.3">Added session option to negotiate maximum segment size (per each direction).</li>
        <li pn="section-appendix.a-2.4">Renamed "endpoint ID" to "node ID" to conform with BPv7 terminology.</li>
        <li pn="section-appendix.a-2.5">Added session extension capability.</li>
        <li pn="section-appendix.a-2.6">Added transfer extension capability. Moved transfer total length into an extension item.</li>
        <li pn="section-appendix.a-2.7">Defined new IANA registries for message / type / reason codes to allow renaming some codes for clarity.</li>
        <li pn="section-appendix.a-2.8">Pointed out that segments of all new IANA registries are reserved for private/experimental use.</li>
        <li pn="section-appendix.a-2.9">Expanded Message Header to octet-aligned fields instead of bit-packing.</li>
        <li pn="section-appendix.a-2.10">Added a bundle transfer identification number to all bundle-related messages (XFER_SEGMENT, XFER_ACK, XFER_REFUSE).</li>
        <li pn="section-appendix.a-2.11">Added flags in XFER_ACK to mirror flags from XFER_SEGMENT.</li>
        <li pn="section-appendix.a-2.12">Removed all uses of Self-Delimiting Numeric Value (SDNV) fields and replaced with fixed-bit-length (network byte order) fields.
</li>
        <li pn="section-appendix.a-2.13">Renamed SHUTDOWN to SESS_TERM to deconflict term "shutdown" related to TCP connections.</li>
        <li pn="section-appendix.a-2.14">Removed the notion of a reconnection delay parameter.</li>
      </ul>
      <t indent="0" pn="section-appendix.a-3">
The areas in which extensions from <xref target="RFC7242" format="default" sectionFormat="of" derivedContent="RFC7242"/> have been made as new messages and codes are as follows:
      </t>
      <ul spacing="normal" bare="false" empty="false" indent="3" pn="section-appendix.a-4">
        <li pn="section-appendix.a-4.1">Added MSG_REJECT message to indicate that an unknown or unhandled message was received.</li>
        <li pn="section-appendix.a-4.2">Added TLS connection security mechanism.</li>
        <li pn="section-appendix.a-4.3">Added "Not Acceptable", "Extension Failure", and "Session Terminating" XFER_REFUSE reason codes.</li>
        <li pn="section-appendix.a-4.4">Added "Contact Failure" (contact negotiation failure) and "Resource Exhaustion" SESS_TERM reason codes.</li>
      </ul>
    </section>
    <section anchor="sec-asn1-mod" numbered="true" removeInRFC="false" toc="include" pn="section-appendix.b">
      <name slugifiedName="name-asn1-module">ASN.1 Module</name>
      <t indent="0" pn="section-appendix.b-1">
The following ASN.1 module formally specifies the <tt>BundleEID</tt> structure, its Other Name Form, and the <tt>bundleSecurity</tt> EKU, using ASN.1 syntax per <xref target="X.680" format="default" sectionFormat="of" derivedContent="X.680"/>.
This specification uses the ASN.1 definitions from <xref target="RFC5912" format="default" sectionFormat="of" derivedContent="RFC5912"/> with the 2002 ASN.1 notation used in that document.
      </t>
      <sourcecode markers="true" type="asn.1" pn="section-appendix.b-2">
DTN-TCPCLv4-2021
  { iso(1) identified-organization(3) dod(6)
    internet(1) security(5) mechanisms(5) pkix(7) id-mod(0)
    id-mod-dtn-tcpclv4-2021(103) }

DEFINITIONS IMPLICIT TAGS ::=
BEGIN

IMPORTS
  OTHER-NAME
  FROM PKIX1Implicit-2009 -- [RFC5912]
    { iso(1) identified-organization(3) dod(6) internet(1)
      security(5) mechanisms(5) pkix(7) id-mod(0)
      id-mod-pkix1-implicit-02(59) }

  id-pkix
  FROM PKIX1Explicit-2009 -- [RFC5912]
    { iso(1) identified-organization(3) dod(6) internet(1)
      security(5) mechanisms(5) pkix(7) id-mod(0)
      id-mod-pkix1-explicit-02(51) } ;

id-kp OBJECT IDENTIFIER ::= { id-pkix 3 }

id-on OBJECT IDENTIFIER ::= { id-pkix 8 }

DTNOtherNames OTHER-NAME ::= { on-bundleEID, ... }

-- The otherName definition for BundleEID
on-bundleEID OTHER-NAME ::= {
    BundleEID IDENTIFIED BY { id-on-bundleEID }
}

id-on-bundleEID OBJECT IDENTIFIER ::= { id-on 11 }

-- Same encoding as GeneralName of uniformResourceIdentifier
BundleEID ::= IA5String

-- The Extended Key Usage key for bundle security
id-kp-bundleSecurity OBJECT IDENTIFIER ::= { id-kp 35 }

END
</sourcecode>
    </section>
    <section numbered="true" removeInRFC="false" toc="include" pn="section-appendix.c">
      <name slugifiedName="name-example-of-the-bundleeid-ot">Example of the BundleEID Other Name Form</name>
      <t indent="0" pn="section-appendix.c-1">
This non-normative example demonstrates an otherName with a name form of <tt>BundleEID</tt> to encode the node ID "dtn://example/".
      </t>
      <t indent="0" pn="section-appendix.c-2">
The hexadecimal form of the DER encoding of the otherName is as follows:
      </t>
      <sourcecode type="hex" markers="false" pn="section-appendix.c-3">
a01c06082b0601050507080ba010160e64746e3a2f2f6578616d706c652f
</sourcecode>
      <t indent="0" pn="section-appendix.c-4">
And the text decoding in <xref target="fig-example-dtneid" format="default" sectionFormat="of" derivedContent="Figure 28"/> is an output of Peter Gutmann's "dumpasn1" program.
      </t>
      <figure anchor="fig-example-dtneid" align="left" suppress-title="false" pn="figure-28">
        <name slugifiedName="name-visualized-decoding-of-the-">Visualized Decoding of the on-bundleEID</name>
        <artwork align="left" type="ascii-art" pn="section-appendix.c-5.1">
  0  28: [0] {
  2   8:   OBJECT IDENTIFIER '1 3 6 1 5 5 7 8 11'
 12  16:   [0] {
 14  14:     IA5String 'dtn://example/'
       :     }
       :   }
</artwork>
      </figure>
    </section>
    <section anchor="sec-doc-ack" numbered="false" removeInRFC="false" toc="include" pn="section-appendix.d">
      <name slugifiedName="name-acknowledgments">Acknowledgments</name>
      <t indent="0" pn="section-appendix.d-1">
This specification is based on comments regarding the implementation of <xref target="RFC7242" format="default" sectionFormat="of" derivedContent="RFC7242"/> as provided by <contact fullname="Scott Burleigh"/>.
      </t>
      <t indent="0" pn="section-appendix.d-2">
The ASN.1 module and its Other Name Form are based on a recommendation provided by <contact fullname="Russ Housley"/>.
      </t>
    </section>
    <section anchor="authors-addresses" numbered="false" removeInRFC="false" toc="include" pn="section-appendix.e">
      <name slugifiedName="name-authors-addresses">Authors' Addresses</name>
      <author fullname="Brian Sipos" initials="B." surname="Sipos">
        <organization abbrev="RKF Engineering" showOnFrontPage="true">RKF Engineering Solutions, LLC</organization>
        <address>
          <postal>
            <street>7500 Old Georgetown Road</street>
            <street>Suite 1275</street>
            <city>Bethesda</city>
            <region>MD</region>
            <code>20814-6198</code>
            <country>United States of America</country>
          </postal>
          <email>brian.sipos+ietf@gmail.com</email>
        </address>
      </author>
      <author fullname="Michael Demmer" initials="M." surname="Demmer">
        <address>
          <email>demmer@gmail.com</email>
        </address>
      </author>
      <author fullname="Jörg Ott" initials="J." surname="Ott">
        <organization showOnFrontPage="true">Technical University of Munich</organization>
        <address>
          <postal>
            <extaddr>Department of Informatics</extaddr>
            <extaddr>Chair of Connected Mobility</extaddr>
            <street>Boltzmannstrasse 3</street>
            <city>Garching</city>
            <code>DE-85748</code>
            <country>Germany</country>
          </postal>
          <email>ott@in.tum.de</email>
        </address>
      </author>
      <author fullname="Simon Perreault" initials="S." surname="Perreault">
        <organization showOnFrontPage="true">LogMeIn</organization>
        <address>
          <postal>
            <street>410 boulevard Charest Est</street>
            <street>Suite 250</street>
            <city>Quebec</city>
            <region>QC</region>
            <code>G1K 8G3</code>
            <country>Canada</country>
          </postal>
          <email>simon.perreault@logmein.com</email>
        </address>
      </author>
    </section>
  </back>
</rfc>
