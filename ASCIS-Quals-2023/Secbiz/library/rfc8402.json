{"draft":"draft-ietf-spring-segment-routing-15","doc_id":"RFC8402","title":"Segment Routing Architecture","authors":["C. Filsfils, Ed.","S. Previdi, Ed.","L. Ginsberg","B. Decraene","S. Litkowski","R. Shakir"],"format":["ASCII","HTML"],"page_count":"32","pub_status":"PROPOSED STANDARD","status":"PROPOSED STANDARD","source":"Source Packet Routing in Networking","abstract":"Segment Routing (SR) leverages the source routing paradigm.  A node\r\nsteers a packet through an ordered list of instructions, called\r\n\"segments\".  A segment can represent any instruction, topological or\r\nservice based.  A segment can have a semantic local to an SR node or\r\nglobal within an SR domain.  SR provides a mechanism that allows a\r\nflow to be restricted to a specific topological path, while\r\nmaintaining per-flow state only at the ingress node(s) to the SR\r\ndomain.\r\n\r\nSR can be directly applied to the MPLS architecture with no change to\r\nthe forwarding plane.  A segment is encoded as an MPLS label.  An\r\nordered list of segments is encoded as a stack of labels.  The\r\nsegment to process is on the top of the stack.  Upon completion of a\r\nsegment, the related label is popped from the stack.\r\n\r\nSR can be applied to the IPv6 architecture, with a new type of\r\nrouting header.  A segment is encoded as an IPv6 address.  An ordered\r\nlist of segments is encoded as an ordered list of IPv6 addresses in\r\nthe routing header.  The active segment is indicated by the\r\nDestination Address (DA) of the packet.  The next active segment is\r\nindicated by a pointer in the new routing header.","pub_date":"July 2018","keywords":[],"obsoletes":[],"obsoleted_by":[],"updates":[],"updated_by":["RFC9256"],"see_also":[],"doi":"10.17487\/RFC8402","errata_url":"https:\/\/www.rfc-editor.org\/errata\/rfc8402"}