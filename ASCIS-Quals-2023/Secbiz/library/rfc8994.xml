<?xml version='1.0' encoding='utf-8'?>
<rfc xmlns:xi="http://www.w3.org/2001/XInclude" version="3" category="std" consensus="true" docName="draft-ietf-anima-autonomic-control-plane-30" indexInclude="true" ipr="trust200902" number="8994" prepTime="2021-05-20T23:09:56" scripts="Common,Latin" sortRefs="true" submissionType="IETF" symRefs="true" tocDepth="5" tocInclude="true" xml:lang="en">
  <link href="https://datatracker.ietf.org/doc/draft-ietf-anima-autonomic-control-plane-30" rel="prev"/>
  <link href="https://dx.doi.org/10.17487/rfc8994" rel="alternate"/>
  <link href="urn:issn:2070-1721" rel="alternate"/>
  <front>
    <title abbrev="An Autonomic Control Plane (ACP)">An Autonomic Control Plane (ACP)</title>
    <seriesInfo name="RFC" value="8994" stream="IETF"/>
    <author role="editor" fullname="Toerless Eckert" surname="Eckert">
      <organization abbrev="Futurewei USA" showOnFrontPage="true">Futurewei Technologies Inc. USA</organization>
      <address>
        <postal>
          <street>2330 Central Expy</street>
          <city>Santa Clara</city>
          <region>CA</region>
          <code>95050</code>
          <country>United States of America</country>
        </postal>
        <email>tte+ietf@cs.fau.de</email>
      </address>
    </author>
    <author role="editor" fullname="Michael H. Behringer" initials="M." surname="Behringer">
      <address>
        <email>michael.h.behringer@gmail.com</email>
      </address>
    </author>
    <author fullname="Steinthor Bjarnason" initials="S." surname="Bjarnason">
      <organization showOnFrontPage="true">Arbor Networks</organization>
      <address>
        <postal>
          <street>2727 South State Street, Suite 200</street>
          <city>Ann Arbor</city>
          <region>MI</region>
          <code>48104</code>
          <country>United States of America</country>
        </postal>
        <email>sbjarnason@arbor.net</email>
      </address>
    </author>
    <date month="05" year="2021"/>
    <area>Operations and Management</area>
    <workgroup>ANIMA</workgroup>
    <keyword>addressing-scheme</keyword>
    <keyword>ANI</keyword>
    <keyword>autonomic networking</keyword>
    <keyword>autonomous operation</keyword>
    <keyword>BRSKI</keyword>
    <keyword>certificate</keyword>
    <keyword>Data-Plane</keyword>
    <keyword>domain</keyword>
    <keyword>DTLS</keyword>
    <keyword>DULL</keyword>
    <keyword>EST</keyword>
    <keyword>GRASP</keyword>
    <keyword>IDevID</keyword>
    <keyword>inband</keyword>
    <keyword>IPsec</keyword>
    <keyword>IPv6</keyword>
    <keyword>LDevID</keyword>
    <keyword>loopback-interface</keyword>
    <keyword>NOC</keyword>
    <keyword>OAM</keyword>
    <keyword>out-of-band</keyword>
    <keyword>registrar</keyword>
    <keyword>renewal</keyword>
    <keyword>RPL</keyword>
    <keyword>secure</keyword>
    <keyword>self-management</keyword>
    <keyword>ULA</keyword>
    <keyword>VPN</keyword>
    <keyword>VRF</keyword>
    <keyword/>
    <abstract pn="section-abstract">
      <t indent="0" pn="section-abstract-1">
                                Autonomic functions need a control plane to communicate, which depends on some addressing and routing.  This Autonomic Control Plane should ideally be self-managing and be as independent as possible of configuration.  This document defines such a plane and calls it the "Autonomic Control Plane", with the primary use as a control plane for autonomic functions.  It also serves as a "virtual out-of-band channel" for Operations, Administration, and Management (OAM) communications over a network that provides automatically configured, hop-by-hop authenticated and encrypted communications via automatically configured IPv6 even when the network is not configured or is misconfigured.
      </t>
    </abstract>
    <boilerplate>
      <section anchor="status-of-memo" numbered="false" removeInRFC="false" toc="exclude" pn="section-boilerplate.1">
        <name slugifiedName="name-status-of-this-memo">Status of This Memo</name>
        <t indent="0" pn="section-boilerplate.1-1">
            This is an Internet Standards Track document.
        </t>
        <t indent="0" pn="section-boilerplate.1-2">
            This document is a product of the Internet Engineering Task Force
            (IETF).  It represents the consensus of the IETF community.  It has
            received public review and has been approved for publication by
            the Internet Engineering Steering Group (IESG).  Further
            information on Internet Standards is available in Section 2 of 
            RFC 7841.
        </t>
        <t indent="0" pn="section-boilerplate.1-3">
            Information about the current status of this document, any
            errata, and how to provide feedback on it may be obtained at
            <eref target="https://www.rfc-editor.org/info/rfc8994" brackets="none"/>.
        </t>
      </section>
      <section anchor="copyright" numbered="false" removeInRFC="false" toc="exclude" pn="section-boilerplate.2">
        <name slugifiedName="name-copyright-notice">Copyright Notice</name>
        <t indent="0" pn="section-boilerplate.2-1">
            Copyright (c) 2021 IETF Trust and the persons identified as the
            document authors. All rights reserved.
        </t>
        <t indent="0" pn="section-boilerplate.2-2">
            This document is subject to BCP 78 and the IETF Trust's Legal
            Provisions Relating to IETF Documents
            (<eref target="https://trustee.ietf.org/license-info" brackets="none"/>) in effect on the date of
            publication of this document. Please review these documents
            carefully, as they describe your rights and restrictions with
            respect to this document. Code Components extracted from this
            document must include Simplified BSD License text as described in
            Section 4.e of the Trust Legal Provisions and are provided without
            warranty as described in the Simplified BSD License.
        </t>
      </section>
    </boilerplate>
    <toc>
      <section anchor="toc" numbered="false" removeInRFC="false" toc="exclude" pn="section-toc.1">
        <name slugifiedName="name-table-of-contents">Table of Contents</name>
        <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1">
          <li pn="section-toc.1-1.1">
            <t indent="0" keepWithNext="true" pn="section-toc.1-1.1.1"><xref derivedContent="1" format="counter" sectionFormat="of" target="section-1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-introduction-informative">Introduction (Informative)</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.1.2">
              <li pn="section-toc.1-1.1.2.1">
                <t indent="0" keepWithNext="true" pn="section-toc.1-1.1.2.1.1"><xref derivedContent="1.1" format="counter" sectionFormat="of" target="section-1.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-applicability-and-scope">Applicability and Scope</xref></t>
              </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.2">
            <t indent="0" keepWithNext="true" pn="section-toc.1-1.2.1"><xref derivedContent="2" format="counter" sectionFormat="of" target="section-2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-acronyms-and-terminology-in">Acronyms and Terminology (Informative)</xref></t>
          </li>
          <li pn="section-toc.1-1.3">
            <t indent="0" pn="section-toc.1-1.3.1"><xref derivedContent="3" format="counter" sectionFormat="of" target="section-3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-use-cases-for-an-autonomic-">Use Cases for an Autonomic Control Plane (Informative)</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.3.2">
              <li pn="section-toc.1-1.3.2.1">
                <t indent="0" pn="section-toc.1-1.3.2.1.1"><xref derivedContent="3.1" format="counter" sectionFormat="of" target="section-3.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-an-infrastructure-for-auton">An Infrastructure for Autonomic Functions</xref></t>
              </li>
              <li pn="section-toc.1-1.3.2.2">
                <t indent="0" pn="section-toc.1-1.3.2.2.1"><xref derivedContent="3.2" format="counter" sectionFormat="of" target="section-3.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-secure-bootstrap-over-an-un">Secure Bootstrap over an Unconfigured Network</xref></t>
              </li>
              <li pn="section-toc.1-1.3.2.3">
                <t indent="0" pn="section-toc.1-1.3.2.3.1"><xref derivedContent="3.3" format="counter" sectionFormat="of" target="section-3.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-permanent-reachability-inde">Permanent Reachability Independent of the Data Plane</xref></t>
              </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.4">
            <t indent="0" pn="section-toc.1-1.4.1"><xref derivedContent="4" format="counter" sectionFormat="of" target="section-4"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-requirements-informative">Requirements (Informative)</xref></t>
          </li>
          <li pn="section-toc.1-1.5">
            <t indent="0" pn="section-toc.1-1.5.1"><xref derivedContent="5" format="counter" sectionFormat="of" target="section-5"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-overview-informative">Overview (Informative)</xref></t>
          </li>
          <li pn="section-toc.1-1.6">
            <t indent="0" pn="section-toc.1-1.6.1"><xref derivedContent="6" format="counter" sectionFormat="of" target="section-6"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-self-creation-of-an-autonom">Self-Creation of an Autonomic Control Plane (ACP) (Normative)</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.6.2">
              <li pn="section-toc.1-1.6.2.1">
                <t indent="0" pn="section-toc.1-1.6.2.1.1"><xref derivedContent="6.1" format="counter" sectionFormat="of" target="section-6.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-requirements-for-the-use-of">Requirements for the Use of Transport Layer Security (TLS)</xref></t>
              </li>
              <li pn="section-toc.1-1.6.2.2">
                <t indent="0" pn="section-toc.1-1.6.2.2.1"><xref derivedContent="6.2" format="counter" sectionFormat="of" target="section-6.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-acp-domain-certificate-and-">ACP Domain, Certificate, and Network</xref></t>
                <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.6.2.2.2">
                  <li pn="section-toc.1-1.6.2.2.2.1">
                    <t indent="0" pn="section-toc.1-1.6.2.2.2.1.1"><xref derivedContent="6.2.1" format="counter" sectionFormat="of" target="section-6.2.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-acp-certificates">ACP Certificates</xref></t>
                  </li>
                  <li pn="section-toc.1-1.6.2.2.2.2">
                    <t indent="0" pn="section-toc.1-1.6.2.2.2.2.1"><xref derivedContent="6.2.2" format="counter" sectionFormat="of" target="section-6.2.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-acp-certificate-acpnodename">ACP Certificate AcpNodeName</xref></t>
                    <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.6.2.2.2.2.2">
                      <li pn="section-toc.1-1.6.2.2.2.2.2.1">
                        <t indent="0" pn="section-toc.1-1.6.2.2.2.2.2.1.1"><xref derivedContent="6.2.2.1" format="counter" sectionFormat="of" target="section-6.2.2.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-acpnodename-asn1-module">AcpNodeName ASN.1 Module</xref></t>
                      </li>
                    </ul>
                  </li>
                  <li pn="section-toc.1-1.6.2.2.2.3">
                    <t indent="0" pn="section-toc.1-1.6.2.2.2.3.1"><xref derivedContent="6.2.3" format="counter" sectionFormat="of" target="section-6.2.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-acp-domain-membership-check">ACP Domain Membership Check</xref></t>
                    <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.6.2.2.2.3.2">
                      <li pn="section-toc.1-1.6.2.2.2.3.2.1">
                        <t indent="0" pn="section-toc.1-1.6.2.2.2.3.2.1.1"><xref derivedContent="6.2.3.1" format="counter" sectionFormat="of" target="section-6.2.3.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-realtime-clock-and-time-val">Realtime Clock and Time Validation</xref></t>
                      </li>
                    </ul>
                  </li>
                  <li pn="section-toc.1-1.6.2.2.2.4">
                    <t indent="0" pn="section-toc.1-1.6.2.2.2.4.1"><xref derivedContent="6.2.4" format="counter" sectionFormat="of" target="section-6.2.4"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-trust-anchors-ta">Trust Anchors (TA)</xref></t>
                  </li>
                  <li pn="section-toc.1-1.6.2.2.2.5">
                    <t indent="0" pn="section-toc.1-1.6.2.2.2.5.1"><xref derivedContent="6.2.5" format="counter" sectionFormat="of" target="section-6.2.5"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-certificate-and-trust-ancho">Certificate and Trust Anchor Maintenance</xref></t>
                    <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.6.2.2.2.5.2">
                      <li pn="section-toc.1-1.6.2.2.2.5.2.1">
                        <t indent="0" pn="section-toc.1-1.6.2.2.2.5.2.1.1"><xref derivedContent="6.2.5.1" format="counter" sectionFormat="of" target="section-6.2.5.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-grasp-objective-for-est-ser">GRASP Objective for EST Server</xref></t>
                      </li>
                      <li pn="section-toc.1-1.6.2.2.2.5.2.2">
                        <t indent="0" pn="section-toc.1-1.6.2.2.2.5.2.2.1"><xref derivedContent="6.2.5.2" format="counter" sectionFormat="of" target="section-6.2.5.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-renewal">Renewal</xref></t>
                      </li>
                      <li pn="section-toc.1-1.6.2.2.2.5.2.3">
                        <t indent="0" pn="section-toc.1-1.6.2.2.2.5.2.3.1"><xref derivedContent="6.2.5.3" format="counter" sectionFormat="of" target="section-6.2.5.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-certificate-revocation-list">Certificate Revocation Lists (CRLs)</xref></t>
                      </li>
                      <li pn="section-toc.1-1.6.2.2.2.5.2.4">
                        <t indent="0" pn="section-toc.1-1.6.2.2.2.5.2.4.1"><xref derivedContent="6.2.5.4" format="counter" sectionFormat="of" target="section-6.2.5.4"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-lifetimes">Lifetimes</xref></t>
                      </li>
                      <li pn="section-toc.1-1.6.2.2.2.5.2.5">
                        <t indent="0" pn="section-toc.1-1.6.2.2.2.5.2.5.1"><xref derivedContent="6.2.5.5" format="counter" sectionFormat="of" target="section-6.2.5.5"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-reenrollment">Reenrollment</xref></t>
                      </li>
                      <li pn="section-toc.1-1.6.2.2.2.5.2.6">
                        <t indent="0" pn="section-toc.1-1.6.2.2.2.5.2.6.1"><xref derivedContent="6.2.5.6" format="counter" sectionFormat="of" target="section-6.2.5.6"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-failing-certificates">Failing Certificates</xref></t>
                      </li>
                    </ul>
                  </li>
                </ul>
              </li>
              <li pn="section-toc.1-1.6.2.3">
                <t indent="0" pn="section-toc.1-1.6.2.3.1"><xref derivedContent="6.3" format="counter" sectionFormat="of" target="section-6.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-acp-adjacency-table">ACP Adjacency Table</xref></t>
              </li>
              <li pn="section-toc.1-1.6.2.4">
                <t indent="0" pn="section-toc.1-1.6.2.4.1"><xref derivedContent="6.4" format="counter" sectionFormat="of" target="section-6.4"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-neighbor-discovery-with-dul">Neighbor Discovery with DULL GRASP</xref></t>
              </li>
              <li pn="section-toc.1-1.6.2.5">
                <t indent="0" pn="section-toc.1-1.6.2.5.1"><xref derivedContent="6.5" format="counter" sectionFormat="of" target="section-6.5"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-candidate-acp-neighbor-sele">Candidate ACP Neighbor Selection</xref></t>
              </li>
              <li pn="section-toc.1-1.6.2.6">
                <t indent="0" pn="section-toc.1-1.6.2.6.1"><xref derivedContent="6.6" format="counter" sectionFormat="of" target="section-6.6"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-channel-selection">Channel Selection</xref></t>
              </li>
              <li pn="section-toc.1-1.6.2.7">
                <t indent="0" pn="section-toc.1-1.6.2.7.1"><xref derivedContent="6.7" format="counter" sectionFormat="of" target="section-6.7"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-candidate-acp-neighbor-veri">Candidate ACP Neighbor Verification</xref></t>
              </li>
              <li pn="section-toc.1-1.6.2.8">
                <t indent="0" pn="section-toc.1-1.6.2.8.1"><xref derivedContent="6.8" format="counter" sectionFormat="of" target="section-6.8"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-security-association-secure">Security Association (Secure Channel) Protocols</xref></t>
                <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.6.2.8.2">
                  <li pn="section-toc.1-1.6.2.8.2.1">
                    <t indent="0" pn="section-toc.1-1.6.2.8.2.1.1"><xref derivedContent="6.8.1" format="counter" sectionFormat="of" target="section-6.8.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-general-considerations">General Considerations</xref></t>
                  </li>
                  <li pn="section-toc.1-1.6.2.8.2.2">
                    <t indent="0" pn="section-toc.1-1.6.2.8.2.2.1"><xref derivedContent="6.8.2" format="counter" sectionFormat="of" target="section-6.8.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-common-requirements">Common Requirements</xref></t>
                  </li>
                  <li pn="section-toc.1-1.6.2.8.2.3">
                    <t indent="0" pn="section-toc.1-1.6.2.8.2.3.1"><xref derivedContent="6.8.3" format="counter" sectionFormat="of" target="section-6.8.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-acp-via-ipsec">ACP via IPsec</xref></t>
                    <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.6.2.8.2.3.2">
                      <li pn="section-toc.1-1.6.2.8.2.3.2.1">
                        <t indent="0" pn="section-toc.1-1.6.2.8.2.3.2.1.1"><xref derivedContent="6.8.3.1" format="counter" sectionFormat="of" target="section-6.8.3.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-native-ipsec">Native IPsec</xref></t>
                        <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.6.2.8.2.3.2.1.2">
                          <li pn="section-toc.1-1.6.2.8.2.3.2.1.2.1">
                            <t indent="0" pn="section-toc.1-1.6.2.8.2.3.2.1.2.1.1"><xref derivedContent="6.8.3.1.1" format="counter" sectionFormat="of" target="section-6.8.3.1.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-rfc-8221-ipsec-esp">RFC 8221 (IPsec/ESP)</xref></t>
                          </li>
                          <li pn="section-toc.1-1.6.2.8.2.3.2.1.2.2">
                            <t indent="0" pn="section-toc.1-1.6.2.8.2.3.2.1.2.2.1"><xref derivedContent="6.8.3.1.2" format="counter" sectionFormat="of" target="section-6.8.3.1.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-rfc-8247-ikev2">RFC 8247 (IKEv2)</xref></t>
                          </li>
                        </ul>
                      </li>
                      <li pn="section-toc.1-1.6.2.8.2.3.2.2">
                        <t indent="0" pn="section-toc.1-1.6.2.8.2.3.2.2.1"><xref derivedContent="6.8.3.2" format="counter" sectionFormat="of" target="section-6.8.3.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-ipsec-with-gre-encapsulatio">IPsec with GRE Encapsulation</xref></t>
                      </li>
                    </ul>
                  </li>
                  <li pn="section-toc.1-1.6.2.8.2.4">
                    <t indent="0" pn="section-toc.1-1.6.2.8.2.4.1"><xref derivedContent="6.8.4" format="counter" sectionFormat="of" target="section-6.8.4"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-acp-via-dtls">ACP via DTLS</xref></t>
                  </li>
                  <li pn="section-toc.1-1.6.2.8.2.5">
                    <t indent="0" pn="section-toc.1-1.6.2.8.2.5.1"><xref derivedContent="6.8.5" format="counter" sectionFormat="of" target="section-6.8.5"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-acp-secure-channel-profiles">ACP Secure Channel Profiles</xref></t>
                  </li>
                </ul>
              </li>
              <li pn="section-toc.1-1.6.2.9">
                <t indent="0" pn="section-toc.1-1.6.2.9.1"><xref derivedContent="6.9" format="counter" sectionFormat="of" target="section-6.9"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-grasp-in-the-acp">GRASP in the ACP</xref></t>
                <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.6.2.9.2">
                  <li pn="section-toc.1-1.6.2.9.2.1">
                    <t indent="0" pn="section-toc.1-1.6.2.9.2.1.1"><xref derivedContent="6.9.1" format="counter" sectionFormat="of" target="section-6.9.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-grasp-as-a-core-service-of-">GRASP as a Core Service of the ACP</xref></t>
                  </li>
                  <li pn="section-toc.1-1.6.2.9.2.2">
                    <t indent="0" pn="section-toc.1-1.6.2.9.2.2.1"><xref derivedContent="6.9.2" format="counter" sectionFormat="of" target="section-6.9.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-acp-as-the-security-and-tra">ACP as the Security and Transport Substrate for GRASP</xref></t>
                    <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.6.2.9.2.2.2">
                      <li pn="section-toc.1-1.6.2.9.2.2.2.1">
                        <t indent="0" pn="section-toc.1-1.6.2.9.2.2.2.1.1"><xref derivedContent="6.9.2.1" format="counter" sectionFormat="of" target="section-6.9.2.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-discussion">Discussion</xref></t>
                      </li>
                    </ul>
                  </li>
                </ul>
              </li>
              <li pn="section-toc.1-1.6.2.10">
                <t indent="0" pn="section-toc.1-1.6.2.10.1"><xref derivedContent="6.10" format="counter" sectionFormat="of" target="section-6.10"/>. <xref derivedContent="" format="title" sectionFormat="of" target="name-context-separation">Context Separation</xref></t>
              </li>
              <li pn="section-toc.1-1.6.2.11">
                <t indent="0" pn="section-toc.1-1.6.2.11.1"><xref derivedContent="6.11" format="counter" sectionFormat="of" target="section-6.11"/>. <xref derivedContent="" format="title" sectionFormat="of" target="name-addressing-inside-the-acp">Addressing inside the ACP</xref></t>
                <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.6.2.11.2">
                  <li pn="section-toc.1-1.6.2.11.2.1">
                    <t indent="0" pn="section-toc.1-1.6.2.11.2.1.1"><xref derivedContent="6.11.1" format="counter" sectionFormat="of" target="section-6.11.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-fundamental-concepts-of-aut">Fundamental Concepts of Autonomic Addressing</xref></t>
                  </li>
                  <li pn="section-toc.1-1.6.2.11.2.2">
                    <t indent="0" pn="section-toc.1-1.6.2.11.2.2.1"><xref derivedContent="6.11.2" format="counter" sectionFormat="of" target="section-6.11.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-the-acp-addressing-base-sch">The ACP Addressing Base Scheme</xref></t>
                  </li>
                  <li pn="section-toc.1-1.6.2.11.2.3">
                    <t indent="0" pn="section-toc.1-1.6.2.11.2.3.1"><xref derivedContent="6.11.3" format="counter" sectionFormat="of" target="section-6.11.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-acp-zone-addressing-sub-sch">ACP Zone Addressing Sub-Scheme (ACP-Zone)</xref></t>
                  </li>
                  <li pn="section-toc.1-1.6.2.11.2.4">
                    <t indent="0" pn="section-toc.1-1.6.2.11.2.4.1"><xref derivedContent="6.11.4" format="counter" sectionFormat="of" target="section-6.11.4"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-acp-manual-addressing-sub-s">ACP Manual Addressing Sub-Scheme (ACP-Manual)</xref></t>
                  </li>
                  <li pn="section-toc.1-1.6.2.11.2.5">
                    <t indent="0" pn="section-toc.1-1.6.2.11.2.5.1"><xref derivedContent="6.11.5" format="counter" sectionFormat="of" target="section-6.11.5"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-acp-vlong-addressing-sub-sc">ACP Vlong Addressing Sub-Scheme (ACP-Vlong-8/ACP-Vlong-16)</xref></t>
                  </li>
                  <li pn="section-toc.1-1.6.2.11.2.6">
                    <t indent="0" pn="section-toc.1-1.6.2.11.2.6.1"><xref derivedContent="6.11.6" format="counter" sectionFormat="of" target="section-6.11.6"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-other-acp-addressing-sub-sc">Other ACP Addressing Sub-Schemes</xref></t>
                  </li>
                  <li pn="section-toc.1-1.6.2.11.2.7">
                    <t indent="0" pn="section-toc.1-1.6.2.11.2.7.1"><xref derivedContent="6.11.7" format="counter" sectionFormat="of" target="section-6.11.7"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-acp-registrars">ACP Registrars</xref></t>
                    <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.6.2.11.2.7.2">
                      <li pn="section-toc.1-1.6.2.11.2.7.2.1">
                        <t indent="0" pn="section-toc.1-1.6.2.11.2.7.2.1.1"><xref derivedContent="6.11.7.1" format="counter" sectionFormat="of" target="section-6.11.7.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-use-of-brski-or-other-mecha">Use of BRSKI or Other Mechanisms or Protocols</xref></t>
                      </li>
                      <li pn="section-toc.1-1.6.2.11.2.7.2.2">
                        <t indent="0" pn="section-toc.1-1.6.2.11.2.7.2.2.1"><xref derivedContent="6.11.7.2" format="counter" sectionFormat="of" target="section-6.11.7.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-unique-address-prefix-alloc">Unique Address/Prefix Allocation</xref></t>
                      </li>
                      <li pn="section-toc.1-1.6.2.11.2.7.2.3">
                        <t indent="0" pn="section-toc.1-1.6.2.11.2.7.2.3.1"><xref derivedContent="6.11.7.3" format="counter" sectionFormat="of" target="section-6.11.7.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-addressing-sub-scheme-polic">Addressing Sub-Scheme Policies</xref></t>
                      </li>
                      <li pn="section-toc.1-1.6.2.11.2.7.2.4">
                        <t indent="0" pn="section-toc.1-1.6.2.11.2.7.2.4.1"><xref derivedContent="6.11.7.4" format="counter" sectionFormat="of" target="section-6.11.7.4"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-address-prefix-persistence">Address/Prefix Persistence</xref></t>
                      </li>
                      <li pn="section-toc.1-1.6.2.11.2.7.2.5">
                        <t indent="0" pn="section-toc.1-1.6.2.11.2.7.2.5.1"><xref derivedContent="6.11.7.5" format="counter" sectionFormat="of" target="section-6.11.7.5"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-further-details">Further Details</xref></t>
                      </li>
                    </ul>
                  </li>
                </ul>
              </li>
              <li pn="section-toc.1-1.6.2.12">
                <t indent="0" pn="section-toc.1-1.6.2.12.1"><xref derivedContent="6.12" format="counter" sectionFormat="of" target="section-6.12"/>. <xref derivedContent="" format="title" sectionFormat="of" target="name-routing-in-the-acp">Routing in the ACP</xref></t>
                <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.6.2.12.2">
                  <li pn="section-toc.1-1.6.2.12.2.1">
                    <t indent="0" pn="section-toc.1-1.6.2.12.2.1.1"><xref derivedContent="6.12.1" format="counter" sectionFormat="of" target="section-6.12.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-acp-rpl-profile">ACP RPL Profile</xref></t>
                    <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.6.2.12.2.1.2">
                      <li pn="section-toc.1-1.6.2.12.2.1.2.1">
                        <t indent="0" pn="section-toc.1-1.6.2.12.2.1.2.1.1"><xref derivedContent="6.12.1.1" format="counter" sectionFormat="of" target="section-6.12.1.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-overview">Overview</xref></t>
                        <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.6.2.12.2.1.2.1.2">
                          <li pn="section-toc.1-1.6.2.12.2.1.2.1.2.1">
                            <t indent="0" pn="section-toc.1-1.6.2.12.2.1.2.1.2.1.1"><xref derivedContent="6.12.1.1.1" format="counter" sectionFormat="of" target="section-6.12.1.1.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-single-instance">Single Instance</xref></t>
                          </li>
                          <li pn="section-toc.1-1.6.2.12.2.1.2.1.2.2">
                            <t indent="0" pn="section-toc.1-1.6.2.12.2.1.2.1.2.2.1"><xref derivedContent="6.12.1.1.2" format="counter" sectionFormat="of" target="section-6.12.1.1.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-reconvergence">Reconvergence</xref></t>
                          </li>
                        </ul>
                      </li>
                      <li pn="section-toc.1-1.6.2.12.2.1.2.2">
                        <t indent="0" pn="section-toc.1-1.6.2.12.2.1.2.2.1"><xref derivedContent="6.12.1.2" format="counter" sectionFormat="of" target="section-6.12.1.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-rpl-instances">RPL Instances</xref></t>
                      </li>
                      <li pn="section-toc.1-1.6.2.12.2.1.2.3">
                        <t indent="0" pn="section-toc.1-1.6.2.12.2.1.2.3.1"><xref derivedContent="6.12.1.3" format="counter" sectionFormat="of" target="section-6.12.1.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-storing-vs-non-storing-mode">Storing vs. Non-Storing Mode</xref></t>
                      </li>
                      <li pn="section-toc.1-1.6.2.12.2.1.2.4">
                        <t indent="0" pn="section-toc.1-1.6.2.12.2.1.2.4.1"><xref derivedContent="6.12.1.4" format="counter" sectionFormat="of" target="section-6.12.1.4"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-dao-policy">DAO Policy</xref></t>
                      </li>
                      <li pn="section-toc.1-1.6.2.12.2.1.2.5">
                        <t indent="0" pn="section-toc.1-1.6.2.12.2.1.2.5.1"><xref derivedContent="6.12.1.5" format="counter" sectionFormat="of" target="section-6.12.1.5"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-path-metrics">Path Metrics</xref></t>
                      </li>
                      <li pn="section-toc.1-1.6.2.12.2.1.2.6">
                        <t indent="0" pn="section-toc.1-1.6.2.12.2.1.2.6.1"><xref derivedContent="6.12.1.6" format="counter" sectionFormat="of" target="section-6.12.1.6"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-objective-function">Objective Function</xref></t>
                      </li>
                      <li pn="section-toc.1-1.6.2.12.2.1.2.7">
                        <t indent="0" pn="section-toc.1-1.6.2.12.2.1.2.7.1"><xref derivedContent="6.12.1.7" format="counter" sectionFormat="of" target="section-6.12.1.7"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-dodag-repair">DODAG Repair</xref></t>
                      </li>
                      <li pn="section-toc.1-1.6.2.12.2.1.2.8">
                        <t indent="0" pn="section-toc.1-1.6.2.12.2.1.2.8.1"><xref derivedContent="6.12.1.8" format="counter" sectionFormat="of" target="section-6.12.1.8"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-multicast">Multicast</xref></t>
                      </li>
                      <li pn="section-toc.1-1.6.2.12.2.1.2.9">
                        <t indent="0" pn="section-toc.1-1.6.2.12.2.1.2.9.1"><xref derivedContent="6.12.1.9" format="counter" sectionFormat="of" target="section-6.12.1.9"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-security">Security</xref></t>
                      </li>
                      <li pn="section-toc.1-1.6.2.12.2.1.2.10">
                        <t indent="0" pn="section-toc.1-1.6.2.12.2.1.2.10.1"><xref derivedContent="6.12.1.10" format="counter" sectionFormat="of" target="section-6.12.1.10"/>. <xref derivedContent="" format="title" sectionFormat="of" target="name-p2p-communications">P2P Communications</xref></t>
                      </li>
                      <li pn="section-toc.1-1.6.2.12.2.1.2.11">
                        <t indent="0" pn="section-toc.1-1.6.2.12.2.1.2.11.1"><xref derivedContent="6.12.1.11" format="counter" sectionFormat="of" target="section-6.12.1.11"/>. <xref derivedContent="" format="title" sectionFormat="of" target="name-ipv6-address-configuration">IPv6 Address Configuration</xref></t>
                      </li>
                      <li pn="section-toc.1-1.6.2.12.2.1.2.12">
                        <t indent="0" pn="section-toc.1-1.6.2.12.2.1.2.12.1"><xref derivedContent="6.12.1.12" format="counter" sectionFormat="of" target="section-6.12.1.12"/>. <xref derivedContent="" format="title" sectionFormat="of" target="name-administrative-parameters">Administrative Parameters</xref></t>
                      </li>
                      <li pn="section-toc.1-1.6.2.12.2.1.2.13">
                        <t indent="0" pn="section-toc.1-1.6.2.12.2.1.2.13.1"><xref derivedContent="6.12.1.13" format="counter" sectionFormat="of" target="section-6.12.1.13"/>. <xref derivedContent="" format="title" sectionFormat="of" target="name-rpl-packet-information">RPL Packet Information</xref></t>
                      </li>
                      <li pn="section-toc.1-1.6.2.12.2.1.2.14">
                        <t indent="0" pn="section-toc.1-1.6.2.12.2.1.2.14.1"><xref derivedContent="6.12.1.14" format="counter" sectionFormat="of" target="section-6.12.1.14"/>. <xref derivedContent="" format="title" sectionFormat="of" target="name-unknown-destinations">Unknown Destinations</xref></t>
                      </li>
                    </ul>
                  </li>
                </ul>
              </li>
              <li pn="section-toc.1-1.6.2.13">
                <t indent="0" pn="section-toc.1-1.6.2.13.1"><xref derivedContent="6.13" format="counter" sectionFormat="of" target="section-6.13"/>. <xref derivedContent="" format="title" sectionFormat="of" target="name-general-acp-considerations">General ACP Considerations</xref></t>
                <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.6.2.13.2">
                  <li pn="section-toc.1-1.6.2.13.2.1">
                    <t indent="0" pn="section-toc.1-1.6.2.13.2.1.1"><xref derivedContent="6.13.1" format="counter" sectionFormat="of" target="section-6.13.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-performance">Performance</xref></t>
                  </li>
                  <li pn="section-toc.1-1.6.2.13.2.2">
                    <t indent="0" pn="section-toc.1-1.6.2.13.2.2.1"><xref derivedContent="6.13.2" format="counter" sectionFormat="of" target="section-6.13.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-addressing-of-secure-channe">Addressing of Secure Channels</xref></t>
                  </li>
                  <li pn="section-toc.1-1.6.2.13.2.3">
                    <t indent="0" pn="section-toc.1-1.6.2.13.2.3.1"><xref derivedContent="6.13.3" format="counter" sectionFormat="of" target="section-6.13.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-mtu">MTU</xref></t>
                  </li>
                  <li pn="section-toc.1-1.6.2.13.2.4">
                    <t indent="0" pn="section-toc.1-1.6.2.13.2.4.1"><xref derivedContent="6.13.4" format="counter" sectionFormat="of" target="section-6.13.4"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-multiple-links-between-node">Multiple Links between Nodes</xref></t>
                  </li>
                  <li pn="section-toc.1-1.6.2.13.2.5">
                    <t indent="0" pn="section-toc.1-1.6.2.13.2.5.1"><xref derivedContent="6.13.5" format="counter" sectionFormat="of" target="section-6.13.5"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-acp-interfaces">ACP Interfaces</xref></t>
                    <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.6.2.13.2.5.2">
                      <li pn="section-toc.1-1.6.2.13.2.5.2.1">
                        <t indent="0" pn="section-toc.1-1.6.2.13.2.5.2.1.1"><xref derivedContent="6.13.5.1" format="counter" sectionFormat="of" target="section-6.13.5.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-acp-loopback-interfaces">ACP Loopback Interfaces</xref></t>
                      </li>
                      <li pn="section-toc.1-1.6.2.13.2.5.2.2">
                        <t indent="0" pn="section-toc.1-1.6.2.13.2.5.2.2.1"><xref derivedContent="6.13.5.2" format="counter" sectionFormat="of" target="section-6.13.5.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-acp-virtual-interfaces">ACP Virtual Interfaces</xref></t>
                        <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.6.2.13.2.5.2.2.2">
                          <li pn="section-toc.1-1.6.2.13.2.5.2.2.2.1">
                            <t indent="0" pn="section-toc.1-1.6.2.13.2.5.2.2.2.1.1"><xref derivedContent="6.13.5.2.1" format="counter" sectionFormat="of" target="section-6.13.5.2.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-acp-point-to-point-virtual-">ACP Point-to-Point Virtual Interfaces</xref></t>
                          </li>
                          <li pn="section-toc.1-1.6.2.13.2.5.2.2.2.2">
                            <t indent="0" pn="section-toc.1-1.6.2.13.2.5.2.2.2.2.1"><xref derivedContent="6.13.5.2.2" format="counter" sectionFormat="of" target="section-6.13.5.2.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-acp-multi-access-virtual-in">ACP Multi-Access Virtual Interfaces</xref></t>
                          </li>
                        </ul>
                      </li>
                    </ul>
                  </li>
                </ul>
              </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.7">
            <t indent="0" pn="section-toc.1-1.7.1"><xref derivedContent="7" format="counter" sectionFormat="of" target="section-7"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-acp-support-on-l2-switches-">ACP Support on L2 Switches/Ports (Normative)</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.7.2">
              <li pn="section-toc.1-1.7.2.1">
                <t indent="0" pn="section-toc.1-1.7.2.1.1"><xref derivedContent="7.1" format="counter" sectionFormat="of" target="section-7.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-why-benefits-of-acp-on-l2-s">Why (Benefits of ACP on L2 Switches)</xref></t>
              </li>
              <li pn="section-toc.1-1.7.2.2">
                <t indent="0" pn="section-toc.1-1.7.2.2.1"><xref derivedContent="7.2" format="counter" sectionFormat="of" target="section-7.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-how-per-l2-port-dull-grasp">How (per L2 Port DULL GRASP)</xref></t>
              </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.8">
            <t indent="0" pn="section-toc.1-1.8.1"><xref derivedContent="8" format="counter" sectionFormat="of" target="section-8"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-support-for-non-acp-compone">Support for Non-ACP Components (Normative)</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.8.2">
              <li pn="section-toc.1-1.8.2.1">
                <t indent="0" pn="section-toc.1-1.8.2.1.1"><xref derivedContent="8.1" format="counter" sectionFormat="of" target="section-8.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-acp-connect">ACP Connect</xref></t>
                <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.8.2.1.2">
                  <li pn="section-toc.1-1.8.2.1.2.1">
                    <t indent="0" pn="section-toc.1-1.8.2.1.2.1.1"><xref derivedContent="8.1.1" format="counter" sectionFormat="of" target="section-8.1.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-non-acp-controller-and-or-n">Non-ACP Controller and/or Network Management System (NMS)</xref></t>
                  </li>
                  <li pn="section-toc.1-1.8.2.1.2.2">
                    <t indent="0" pn="section-toc.1-1.8.2.1.2.2.1"><xref derivedContent="8.1.2" format="counter" sectionFormat="of" target="section-8.1.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-software-components">Software Components</xref></t>
                  </li>
                  <li pn="section-toc.1-1.8.2.1.2.3">
                    <t indent="0" pn="section-toc.1-1.8.2.1.2.3.1"><xref derivedContent="8.1.3" format="counter" sectionFormat="of" target="section-8.1.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-autoconfiguration">Autoconfiguration</xref></t>
                  </li>
                  <li pn="section-toc.1-1.8.2.1.2.4">
                    <t indent="0" pn="section-toc.1-1.8.2.1.2.4.1"><xref derivedContent="8.1.4" format="counter" sectionFormat="of" target="section-8.1.4"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-combined-acp-and-data-plane">Combined ACP and Data Plane Interface (VRF Select)</xref></t>
                  </li>
                  <li pn="section-toc.1-1.8.2.1.2.5">
                    <t indent="0" pn="section-toc.1-1.8.2.1.2.5.1"><xref derivedContent="8.1.5" format="counter" sectionFormat="of" target="section-8.1.5"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-use-of-grasp">Use of GRASP</xref></t>
                  </li>
                </ul>
              </li>
              <li pn="section-toc.1-1.8.2.2">
                <t indent="0" pn="section-toc.1-1.8.2.2.1"><xref derivedContent="8.2" format="counter" sectionFormat="of" target="section-8.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-connecting-acp-islands-over">Connecting ACP Islands over Non-ACP L3 Networks (Remote ACP Neighbors)</xref></t>
                <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.8.2.2.2">
                  <li pn="section-toc.1-1.8.2.2.2.1">
                    <t indent="0" pn="section-toc.1-1.8.2.2.2.1.1"><xref derivedContent="8.2.1" format="counter" sectionFormat="of" target="section-8.2.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-configured-remote-acp-neigh">Configured Remote ACP Neighbor</xref></t>
                  </li>
                  <li pn="section-toc.1-1.8.2.2.2.2">
                    <t indent="0" pn="section-toc.1-1.8.2.2.2.2.1"><xref derivedContent="8.2.2" format="counter" sectionFormat="of" target="section-8.2.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-tunneled-remote-acp-neighbo">Tunneled Remote ACP Neighbor</xref></t>
                  </li>
                  <li pn="section-toc.1-1.8.2.2.2.3">
                    <t indent="0" pn="section-toc.1-1.8.2.2.2.3.1"><xref derivedContent="8.2.3" format="counter" sectionFormat="of" target="section-8.2.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-summary">Summary</xref></t>
                  </li>
                </ul>
              </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.9">
            <t indent="0" pn="section-toc.1-1.9.1"><xref derivedContent="9" format="counter" sectionFormat="of" target="section-9"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-acp-operations-informative">ACP Operations (Informative)</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.9.2">
              <li pn="section-toc.1-1.9.2.1">
                <t indent="0" pn="section-toc.1-1.9.2.1.1"><xref derivedContent="9.1" format="counter" sectionFormat="of" target="section-9.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-acp-and-brski-diagnostics">ACP (and BRSKI) Diagnostics</xref></t>
                <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.9.2.1.2">
                  <li pn="section-toc.1-1.9.2.1.2.1">
                    <t indent="0" pn="section-toc.1-1.9.2.1.2.1.1"><xref derivedContent="9.1.1" format="counter" sectionFormat="of" target="section-9.1.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-secure-channel-peer-diagnos">Secure Channel Peer Diagnostics</xref></t>
                  </li>
                </ul>
              </li>
              <li pn="section-toc.1-1.9.2.2">
                <t indent="0" pn="section-toc.1-1.9.2.2.1"><xref derivedContent="9.2" format="counter" sectionFormat="of" target="section-9.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-acp-registrars-2">ACP Registrars</xref></t>
                <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.9.2.2.2">
                  <li pn="section-toc.1-1.9.2.2.2.1">
                    <t indent="0" pn="section-toc.1-1.9.2.2.2.1.1"><xref derivedContent="9.2.1" format="counter" sectionFormat="of" target="section-9.2.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-registrar-interactions">Registrar Interactions</xref></t>
                  </li>
                  <li pn="section-toc.1-1.9.2.2.2.2">
                    <t indent="0" pn="section-toc.1-1.9.2.2.2.2.1"><xref derivedContent="9.2.2" format="counter" sectionFormat="of" target="section-9.2.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-registrar-parameters">Registrar Parameters</xref></t>
                  </li>
                  <li pn="section-toc.1-1.9.2.2.2.3">
                    <t indent="0" pn="section-toc.1-1.9.2.2.2.3.1"><xref derivedContent="9.2.3" format="counter" sectionFormat="of" target="section-9.2.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-certificate-renewal-and-lim">Certificate Renewal and Limitations</xref></t>
                  </li>
                  <li pn="section-toc.1-1.9.2.2.2.4">
                    <t indent="0" pn="section-toc.1-1.9.2.2.2.4.1"><xref derivedContent="9.2.4" format="counter" sectionFormat="of" target="section-9.2.4"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-acp-registrars-with-sub-ca">ACP Registrars with Sub-CA</xref></t>
                  </li>
                  <li pn="section-toc.1-1.9.2.2.2.5">
                    <t indent="0" pn="section-toc.1-1.9.2.2.2.5.1"><xref derivedContent="9.2.5" format="counter" sectionFormat="of" target="section-9.2.5"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-centralized-policy-control">Centralized Policy Control</xref></t>
                  </li>
                </ul>
              </li>
              <li pn="section-toc.1-1.9.2.3">
                <t indent="0" pn="section-toc.1-1.9.2.3.1"><xref derivedContent="9.3" format="counter" sectionFormat="of" target="section-9.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-enabling-and-disabling-the-">Enabling and Disabling the ACP and/or the ANI</xref></t>
                <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.9.2.3.2">
                  <li pn="section-toc.1-1.9.2.3.2.1">
                    <t indent="0" pn="section-toc.1-1.9.2.3.2.1.1"><xref derivedContent="9.3.1" format="counter" sectionFormat="of" target="section-9.3.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-filtering-for-non-acp-ani-p">Filtering for Non-ACP/ANI Packets</xref></t>
                  </li>
                  <li pn="section-toc.1-1.9.2.3.2.2">
                    <t indent="0" pn="section-toc.1-1.9.2.3.2.2.1"><xref derivedContent="9.3.2" format="counter" sectionFormat="of" target="section-9.3.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-admin-down-state">"admin down" State</xref></t>
                    <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.9.2.3.2.2.2">
                      <li pn="section-toc.1-1.9.2.3.2.2.2.1">
                        <t indent="0" pn="section-toc.1-1.9.2.3.2.2.2.1.1"><xref derivedContent="9.3.2.1" format="counter" sectionFormat="of" target="section-9.3.2.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-security-2">Security</xref></t>
                      </li>
                      <li pn="section-toc.1-1.9.2.3.2.2.2.2">
                        <t indent="0" pn="section-toc.1-1.9.2.3.2.2.2.2.1"><xref derivedContent="9.3.2.2" format="counter" sectionFormat="of" target="section-9.3.2.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-fast-state-propagation-and-">Fast State Propagation and Diagnostics</xref></t>
                      </li>
                      <li pn="section-toc.1-1.9.2.3.2.2.2.3">
                        <t indent="0" pn="section-toc.1-1.9.2.3.2.2.2.3.1"><xref derivedContent="9.3.2.3" format="counter" sectionFormat="of" target="section-9.3.2.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-low-level-link-diagnostics">Low-Level Link Diagnostics</xref></t>
                      </li>
                      <li pn="section-toc.1-1.9.2.3.2.2.2.4">
                        <t indent="0" pn="section-toc.1-1.9.2.3.2.2.2.4.1"><xref derivedContent="9.3.2.4" format="counter" sectionFormat="of" target="section-9.3.2.4"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-power-consumption-issues">Power Consumption Issues</xref></t>
                      </li>
                    </ul>
                  </li>
                  <li pn="section-toc.1-1.9.2.3.2.3">
                    <t indent="0" pn="section-toc.1-1.9.2.3.2.3.1"><xref derivedContent="9.3.3" format="counter" sectionFormat="of" target="section-9.3.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-enabling-interface-level-ac">Enabling Interface-Level ACP and ANI</xref></t>
                  </li>
                  <li pn="section-toc.1-1.9.2.3.2.4">
                    <t indent="0" pn="section-toc.1-1.9.2.3.2.4.1"><xref derivedContent="9.3.4" format="counter" sectionFormat="of" target="section-9.3.4"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-which-interfaces-to-auto-en">Which Interfaces to Auto-Enable?</xref></t>
                  </li>
                  <li pn="section-toc.1-1.9.2.3.2.5">
                    <t indent="0" pn="section-toc.1-1.9.2.3.2.5.1"><xref derivedContent="9.3.5" format="counter" sectionFormat="of" target="section-9.3.5"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-enabling-node-level-acp-and">Enabling Node-Level ACP and ANI</xref></t>
                    <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.9.2.3.2.5.2">
                      <li pn="section-toc.1-1.9.2.3.2.5.2.1">
                        <t indent="0" pn="section-toc.1-1.9.2.3.2.5.2.1.1"><xref derivedContent="9.3.5.1" format="counter" sectionFormat="of" target="section-9.3.5.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-brownfield-nodes">Brownfield Nodes</xref></t>
                      </li>
                      <li pn="section-toc.1-1.9.2.3.2.5.2.2">
                        <t indent="0" pn="section-toc.1-1.9.2.3.2.5.2.2.1"><xref derivedContent="9.3.5.2" format="counter" sectionFormat="of" target="section-9.3.5.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-greenfield-nodes">Greenfield Nodes</xref></t>
                      </li>
                    </ul>
                  </li>
                  <li pn="section-toc.1-1.9.2.3.2.6">
                    <t indent="0" pn="section-toc.1-1.9.2.3.2.6.1"><xref derivedContent="9.3.6" format="counter" sectionFormat="of" target="section-9.3.6"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-undoing-ani-acp-enable">Undoing "ANI/ACP enable"</xref></t>
                  </li>
                  <li pn="section-toc.1-1.9.2.3.2.7">
                    <t indent="0" pn="section-toc.1-1.9.2.3.2.7.1"><xref derivedContent="9.3.7" format="counter" sectionFormat="of" target="section-9.3.7"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-summary-2">Summary</xref></t>
                  </li>
                </ul>
              </li>
              <li pn="section-toc.1-1.9.2.4">
                <t indent="0" pn="section-toc.1-1.9.2.4.1"><xref derivedContent="9.4" format="counter" sectionFormat="of" target="section-9.4"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-partial-or-incremental-adop">Partial or Incremental Adoption</xref></t>
              </li>
              <li pn="section-toc.1-1.9.2.5">
                <t indent="0" pn="section-toc.1-1.9.2.5.1"><xref derivedContent="9.5" format="counter" sectionFormat="of" target="section-9.5"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-configuration-and-the-acp-s">Configuration and the ACP (Summary)</xref></t>
              </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.10">
            <t indent="0" pn="section-toc.1-1.10.1"><xref derivedContent="10" format="counter" sectionFormat="of" target="section-10"/>. <xref derivedContent="" format="title" sectionFormat="of" target="name-summary-benefits-informativ">Summary: Benefits (Informative)</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.10.2">
              <li pn="section-toc.1-1.10.2.1">
                <t indent="0" pn="section-toc.1-1.10.2.1.1"><xref derivedContent="10.1" format="counter" sectionFormat="of" target="section-10.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-self-healing-properties">Self-Healing Properties</xref></t>
              </li>
              <li pn="section-toc.1-1.10.2.2">
                <t indent="0" pn="section-toc.1-1.10.2.2.1"><xref derivedContent="10.2" format="counter" sectionFormat="of" target="section-10.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-self-protection-properties">Self-Protection Properties</xref></t>
                <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.10.2.2.2">
                  <li pn="section-toc.1-1.10.2.2.2.1">
                    <t indent="0" pn="section-toc.1-1.10.2.2.2.1.1"><xref derivedContent="10.2.1" format="counter" sectionFormat="of" target="section-10.2.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-from-the-outside">From the Outside</xref></t>
                  </li>
                  <li pn="section-toc.1-1.10.2.2.2.2">
                    <t indent="0" pn="section-toc.1-1.10.2.2.2.2.1"><xref derivedContent="10.2.2" format="counter" sectionFormat="of" target="section-10.2.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-from-the-inside">From the Inside</xref></t>
                  </li>
                </ul>
              </li>
              <li pn="section-toc.1-1.10.2.3">
                <t indent="0" pn="section-toc.1-1.10.2.3.1"><xref derivedContent="10.3" format="counter" sectionFormat="of" target="section-10.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-the-administrator-view">The Administrator View</xref></t>
              </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.11">
            <t indent="0" pn="section-toc.1-1.11.1"><xref derivedContent="11" format="counter" sectionFormat="of" target="section-11"/>. <xref derivedContent="" format="title" sectionFormat="of" target="name-security-considerations">Security Considerations</xref></t>
          </li>
          <li pn="section-toc.1-1.12">
            <t indent="0" pn="section-toc.1-1.12.1"><xref derivedContent="12" format="counter" sectionFormat="of" target="section-12"/>. <xref derivedContent="" format="title" sectionFormat="of" target="name-iana-considerations">IANA Considerations</xref></t>
          </li>
          <li pn="section-toc.1-1.13">
            <t indent="0" pn="section-toc.1-1.13.1"><xref derivedContent="13" format="counter" sectionFormat="of" target="section-13"/>. <xref derivedContent="" format="title" sectionFormat="of" target="name-references">References</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.13.2">
              <li pn="section-toc.1-1.13.2.1">
                <t indent="0" pn="section-toc.1-1.13.2.1.1"><xref derivedContent="13.1" format="counter" sectionFormat="of" target="section-13.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-normative-references">Normative References</xref></t>
              </li>
              <li pn="section-toc.1-1.13.2.2">
                <t indent="0" pn="section-toc.1-1.13.2.2.1"><xref derivedContent="13.2" format="counter" sectionFormat="of" target="section-13.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-informative-references">Informative References</xref></t>
              </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.14">
            <t indent="0" pn="section-toc.1-1.14.1"><xref derivedContent="Appendix A" format="default" sectionFormat="of" target="section-appendix.a"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-background-and-future-infor">Background and Future (Informative)</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.14.2">
              <li pn="section-toc.1-1.14.2.1">
                <t indent="0" pn="section-toc.1-1.14.2.1.1"><xref derivedContent="A.1" format="counter" sectionFormat="of" target="section-a.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-acp-address-space-schemes">ACP Address Space Schemes</xref></t>
              </li>
              <li pn="section-toc.1-1.14.2.2">
                <t indent="0" pn="section-toc.1-1.14.2.2.1"><xref derivedContent="A.2" format="counter" sectionFormat="of" target="section-a.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-brski-bootstrap-ani">BRSKI Bootstrap (ANI)</xref></t>
              </li>
              <li pn="section-toc.1-1.14.2.3">
                <t indent="0" pn="section-toc.1-1.14.2.3.1"><xref derivedContent="A.3" format="counter" sectionFormat="of" target="section-a.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-acp-neighbor-discovery-prot">ACP Neighbor Discovery Protocol Selection</xref></t>
                <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.14.2.3.2">
                  <li pn="section-toc.1-1.14.2.3.2.1">
                    <t indent="0" pn="section-toc.1-1.14.2.3.2.1.1"><xref derivedContent="A.3.1" format="counter" sectionFormat="of" target="section-a.3.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-lldp">LLDP</xref></t>
                  </li>
                  <li pn="section-toc.1-1.14.2.3.2.2">
                    <t indent="0" pn="section-toc.1-1.14.2.3.2.2.1"><xref derivedContent="A.3.2" format="counter" sectionFormat="of" target="section-a.3.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-mdns-and-l2-support">mDNS and L2 Support</xref></t>
                  </li>
                  <li pn="section-toc.1-1.14.2.3.2.3">
                    <t indent="0" pn="section-toc.1-1.14.2.3.2.3.1"><xref derivedContent="A.3.3" format="counter" sectionFormat="of" target="section-a.3.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-why-dull-grasp">Why DULL GRASP?</xref></t>
                  </li>
                </ul>
              </li>
              <li pn="section-toc.1-1.14.2.4">
                <t indent="0" pn="section-toc.1-1.14.2.4.1"><xref derivedContent="A.4" format="counter" sectionFormat="of" target="section-a.4"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-choice-of-routing-protocol-">Choice of Routing Protocol (RPL)</xref></t>
              </li>
              <li pn="section-toc.1-1.14.2.5">
                <t indent="0" pn="section-toc.1-1.14.2.5.1"><xref derivedContent="A.5" format="counter" sectionFormat="of" target="section-a.5"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-acp-information-distributio">ACP Information Distribution and Multicast</xref></t>
              </li>
              <li pn="section-toc.1-1.14.2.6">
                <t indent="0" pn="section-toc.1-1.14.2.6.1"><xref derivedContent="A.6" format="counter" sectionFormat="of" target="section-a.6"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-cas-domains-and-routing-sub">CAs, Domains, and Routing Subdomains</xref></t>
              </li>
              <li pn="section-toc.1-1.14.2.7">
                <t indent="0" pn="section-toc.1-1.14.2.7.1"><xref derivedContent="A.7" format="counter" sectionFormat="of" target="section-a.7"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-intent-for-the-acp">Intent for the ACP</xref></t>
              </li>
              <li pn="section-toc.1-1.14.2.8">
                <t indent="0" pn="section-toc.1-1.14.2.8.1"><xref derivedContent="A.8" format="counter" sectionFormat="of" target="section-a.8"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-adopting-acp-concepts-for-o">Adopting ACP Concepts for Other Environments</xref></t>
              </li>
              <li pn="section-toc.1-1.14.2.9">
                <t indent="0" pn="section-toc.1-1.14.2.9.1"><xref derivedContent="A.9" format="counter" sectionFormat="of" target="section-a.9"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-further-future-options">Further (Future) Options</xref></t>
                <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.14.2.9.2">
                  <li pn="section-toc.1-1.14.2.9.2.1">
                    <t indent="0" pn="section-toc.1-1.14.2.9.2.1.1"><xref derivedContent="A.9.1" format="counter" sectionFormat="of" target="section-a.9.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-auto-aggregation-of-routes">Auto-Aggregation of Routes</xref></t>
                  </li>
                  <li pn="section-toc.1-1.14.2.9.2.2">
                    <t indent="0" pn="section-toc.1-1.14.2.9.2.2.1"><xref derivedContent="A.9.2" format="counter" sectionFormat="of" target="section-a.9.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-more-options-for-avoiding-i">More Options for Avoiding IPv6 Data Plane Dependencies</xref></t>
                  </li>
                  <li pn="section-toc.1-1.14.2.9.2.3">
                    <t indent="0" pn="section-toc.1-1.14.2.9.2.3.1"><xref derivedContent="A.9.3" format="counter" sectionFormat="of" target="section-a.9.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-acp-apis-and-operational-mo">ACP APIs and Operational Models (YANG)</xref></t>
                  </li>
                  <li pn="section-toc.1-1.14.2.9.2.4">
                    <t indent="0" pn="section-toc.1-1.14.2.9.2.4.1"><xref derivedContent="A.9.4" format="counter" sectionFormat="of" target="section-a.9.4"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-rpl-enhancements">RPL Enhancements</xref></t>
                  </li>
                  <li pn="section-toc.1-1.14.2.9.2.5">
                    <t indent="0" pn="section-toc.1-1.14.2.9.2.5.1"><xref derivedContent="A.9.5" format="counter" sectionFormat="of" target="section-a.9.5"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-role-assignments">Role Assignments</xref></t>
                  </li>
                  <li pn="section-toc.1-1.14.2.9.2.6">
                    <t indent="0" pn="section-toc.1-1.14.2.9.2.6.1"><xref derivedContent="A.9.6" format="counter" sectionFormat="of" target="section-a.9.6"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-autonomic-l3-transit">Autonomic L3 Transit</xref></t>
                  </li>
                  <li pn="section-toc.1-1.14.2.9.2.7">
                    <t indent="0" pn="section-toc.1-1.14.2.9.2.7.1"><xref derivedContent="A.9.7" format="counter" sectionFormat="of" target="section-a.9.7"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-diagnostics">Diagnostics</xref></t>
                  </li>
                  <li pn="section-toc.1-1.14.2.9.2.8">
                    <t indent="0" pn="section-toc.1-1.14.2.9.2.8.1"><xref derivedContent="A.9.8" format="counter" sectionFormat="of" target="section-a.9.8"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-avoiding-and-dealing-with-c">Avoiding and Dealing with Compromised ACP Nodes</xref></t>
                  </li>
                  <li pn="section-toc.1-1.14.2.9.2.9">
                    <t indent="0" pn="section-toc.1-1.14.2.9.2.9.1"><xref derivedContent="A.9.9" format="counter" sectionFormat="of" target="section-a.9.9"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-detecting-acp-secure-channe">Detecting ACP Secure Channel Downgrade Attacks</xref></t>
                  </li>
                </ul>
              </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.15">
            <t indent="0" pn="section-toc.1-1.15.1"><xref derivedContent="" format="none" sectionFormat="of" target="section-appendix.b"/><xref derivedContent="" format="title" sectionFormat="of" target="name-acknowledgements">Acknowledgements</xref></t>
          </li>
          <li pn="section-toc.1-1.16">
            <t indent="0" pn="section-toc.1-1.16.1"><xref derivedContent="" format="none" sectionFormat="of" target="section-appendix.c"/><xref derivedContent="" format="title" sectionFormat="of" target="name-contributors">Contributors</xref></t>
          </li>
          <li pn="section-toc.1-1.17">
            <t indent="0" pn="section-toc.1-1.17.1"><xref derivedContent="" format="none" sectionFormat="of" target="section-appendix.d"/><xref derivedContent="" format="title" sectionFormat="of" target="name-authors-addresses">Authors' Addresses</xref></t>
          </li>
        </ul>
      </section>
    </toc>
  </front>
  <middle>
    <section anchor="intro" numbered="true" toc="include" removeInRFC="false" pn="section-1">
      <name slugifiedName="name-introduction-informative">Introduction (Informative)</name>
      <t indent="0" pn="section-1-1">Autonomic Networking is a concept of self-management: autonomic functions self-configure, and negotiate parameters and settings across the network. "<xref target="RFC7575" format="title" sectionFormat="of" derivedContent="Autonomic Networking: Definitions and Design Goals"/>" <xref target="RFC7575" format="default" sectionFormat="of" derivedContent="RFC7575"/> defines the fundamental ideas and design goals of Autonomic Networking.  A gap analysis of Autonomic Networking is given in "<xref target="RFC7576" format="title" sectionFormat="of" derivedContent="General Gap Analysis for Autonomic Networking"/>" <xref target="RFC7576" format="default" sectionFormat="of" derivedContent="RFC7576"/>.  The reference architecture for Autonomic Networking in the IETF is specified in the document "<xref target="RFC8993" format="title" sectionFormat="of" derivedContent="A Reference Model for Autonomic Networking"/>" <xref target="RFC8993" format="default" sectionFormat="of" derivedContent="RFC8993"/>.</t>
      <t indent="0" pn="section-1-2">Autonomic functions need an autonomically built communications
      infrastructure.  This infrastructure needs to be secure, resilient, and
      reusable by all autonomic functions.  <xref target="RFC7575" sectionFormat="of" section="5" format="default" derivedLink="https://rfc-editor.org/rfc/rfc7575#section-5" derivedContent="RFC7575"/> introduces that infrastructure and calls it the Autonomic Control Plane (ACP).  More descriptively, it could be called the "Autonomic communications infrastructure for OAM and control".  For naming consistency with that prior document, this document continues to use the name ACP.</t>
      <t indent="0" pn="section-1-3">Today, the OAM and control plane of IP networks is what is typically called in-band management and/or signaling: its management and control protocol traffic depends on the routing and forwarding tables, security, policy, QoS, and potentially other configuration that first has to be established through the very same management and control protocols. Misconfigurations, including unexpected side effects or mutual  dependencies, can disrupt OAM and control operations and especially disrupt remote management access to the affected node itself and potentially disrupt access to a much larger number of nodes for which the affected node is on the network path.</t>
      <t indent="0" pn="section-1-4">For an example of in-band management failing in the face of operator-induced misconfiguration, see <xref target="FCC" format="default" sectionFormat="of" derivedContent="FCC"/>, for example, Section III.B.15 on page 8:</t>
      <blockquote pn="section-1-5">...engineers almost immediately recognized that they had misdiagnosed the problem.  However, they were unable to resolve the issue by restoring the link because the network management tools required to do so remotely relied on the same paths they had just disabled.</blockquote>
      <t indent="0" pn="section-1-6">Traditionally, physically separate, so-called out-of-band (management) networks have been used to avoid these problems or at least to allow recovery from such problems. In the worst-case scenario, personnel are sent on site to access devices through out-of-band management ports (also called craft ports, serial consoles, or management Ethernet ports).  However, both options are expensive.</t>
      <t indent="0" pn="section-1-7">In increasingly automated networks, both centralized management systems 
and distributed autonomic service agents in the network require a control plane that is independent of the configuration of the network they manage, to avoid impacting their own operations through the configuration actions they take.</t>
      <t indent="0" pn="section-1-8">This document describes a modular design for a self-forming, self-managing, and self-protecting ACP,  which is a virtual out-of-band network designed to be as independent as possible of configuration, addressing, and routing to avoid the self-dependency problems of current IP  networks while still operating in-band on the same physical network that it is controlling and managing. The ACP design is therefore intended to combine as well as possible the resilience of out-of-band management networks with the low cost of traditional IP in-band network management.  The details of how this is achieved are described in <xref target="self-creation" format="default" sectionFormat="of" derivedContent="Section 6"/>.</t>
      <t indent="0" pn="section-1-9">In a fully Autonomic Network without legacy control or management functions and/or protocols, the data plane would be just a forwarding plane for "data" IPv6 packets, which are packets other than those control and  management plane packets forwarded by the ACP itself.  In such a network, there would be no non-autonomous control of nodes nor a non-autonomous management plane.</t>
      <t indent="0" pn="section-1-10">Routing protocols would be built inside the ACP as autonomous functions via autonomous service agents, leveraging the following ACP functions instead of implementing them separately for each protocol: discovery; automatically established, authenticated, and encrypted local and distant peer connectivity for control and management traffic; and common session and presentation functions of the control and management protocol.</t>
      <t indent="0" pn="section-1-11">When ACP functionality is added to nodes that do not have autonomous management plane and/or control plane functions (henceforth called non-autonomous nodes), the ACP instead is best abstracted as a special Virtual Routing and Forwarding (VRF) instance (or virtual router), and the complete, preexisting, non-autonomous management and/or control plane is considered to be part of the data plane to avoid introducing more complex terminology only for this case.</t>
      <t indent="0" pn="section-1-12">Like the forwarding plane for "data" packets, the non-autonomous control and management plane functions can then be managed and/or used via the ACP. This terminology is consistent with preexisting documents such as "<xref target="RFC8368" format="title" sectionFormat="of" derivedContent="Using an Autonomic Control Plane for Stable Connectivity of Network Operations, Administration, and Maintenance (OAM)"/>" <xref target="RFC8368" format="default" sectionFormat="of" derivedContent="RFC8368"/>.</t>
      <t indent="0" pn="section-1-13">In both autonomous and non-autonomous instances, the ACP is built such that it operates in the absence of the data plane.
The ACP also operates in the presence of any (mis)configured non-autonomous management and/or control components in the data plane.</t>
      <t indent="0" pn="section-1-14">The ACP serves several purposes simultaneously:
      </t>
      <ol type="1" spacing="normal" indent="adaptive" start="1" pn="section-1-15">
        <li pn="section-1-15.1" derivedCounter="1.">Autonomic functions communicate over the ACP.  The ACP therefore directly supports Autonomic Networking functions, as described in <xref target="RFC8993" format="default" sectionFormat="of" derivedContent="RFC8993"/>.  For example, GRASP ("<xref target="RFC8990" format="title" sectionFormat="of" derivedContent="GeneRic Autonomic Signaling Protocol (GRASP)"/>" <xref target="RFC8990" format="default" sectionFormat="of" derivedContent="RFC8990"/>) runs securely inside the ACP and depends on the ACP as its "security and transport substrate".</li>
        <li pn="section-1-15.2" derivedCounter="2.">A controller or network management system can use ACP to securely bootstrap network devices in remote locations, even if the (data plane) network in between is not yet configured; no bootstrap configuration that is dependent on the data plane is required.  An example of such a secure bootstrap process is described in "<xref target="RFC8995" format="title" sectionFormat="of" derivedContent="Bootstrapping Remote Secure Key Infrastructure (BRSKI)"/>" <xref target="RFC8995" format="default" sectionFormat="of" derivedContent="RFC8995"/>.</li>
        <li pn="section-1-15.3" derivedCounter="3.">An operator can use ACP to access remote devices using protocols such as Secure SHell (SSH) or Network Configuration Protocol (NETCONF), even if the network is misconfigured or unconfigured.</li>
      </ol>
      <t indent="0" pn="section-1-16">This document describes these purposes as use cases for the ACP in <xref target="usage" format="default" sectionFormat="of" derivedContent="Section 3"/>, and it defines the requirements in <xref target="requirements" format="default" sectionFormat="of" derivedContent="Section 4"/>. <xref target="overview" format="default" sectionFormat="of" derivedContent="Section 5"/> gives an overview of how the ACP is constructed.</t>
      <t indent="0" pn="section-1-17">The normative part of this document starts with <xref target="self-creation" format="default" sectionFormat="of" derivedContent="Section 6"/>, where the ACP is specified. <xref target="acp-l2-switches" format="default" sectionFormat="of" derivedContent="Section 7"/> explains how to support ACP on Layer 2 (L2) switches (normative). <xref target="workarounds" format="default" sectionFormat="of" derivedContent="Section 8"/> explains how non-ACP nodes and networks can be integrated (normative).</t>
      <t indent="0" pn="section-1-18">The remaining sections are non-normative. <xref target="benefit" format="default" sectionFormat="of" derivedContent="Section 10"/> reviews the benefits of the ACP (after all the details have been defined). <xref target="operational" format="default" sectionFormat="of" derivedContent="Section 9"/> provides operational recommendations. <xref target="further" format="default" sectionFormat="of" derivedContent="Appendix A"/> 
   provides additional background and describes possible 
   extensions that were not applicable for this specification but were 
   considered important to document.  
There are no dependencies on <xref target="further" format="default" sectionFormat="of" derivedContent="Appendix A"/> in order to build a complete working and interoperable
ACP according to this document.</t>
      <t indent="0" pn="section-1-19">The ACP provides secure IPv6 connectivity; therefore, it can be used for secure connectivity not only for self-management as required for the ACP in <xref target="RFC7575" format="default" sectionFormat="of" derivedContent="RFC7575"/> but also for traditional (centralized) management. The ACP can be implemented and operated without any other components of Autonomic Networks, except for GRASP. ACP relies on per-link Discovery Unsolicited Link-Local (DULL) GRASP (see <xref target="discovery-grasp" format="default" sectionFormat="of" derivedContent="Section 6.4"/>) to auto-discover ACP neighbors and includes the ACP GRASP instance to provide service discovery for clients of the ACP (see <xref target="GRASP" format="default" sectionFormat="of" derivedContent="Section 6.9"/>), including for its own maintenance of ACP certificates.</t>
      <t indent="0" pn="section-1-20">The document <xref target="RFC8368" format="default" sectionFormat="of" derivedContent="RFC8368"/> describes how the ACP can be used alone to provide secure and stable connectivity for autonomic and non-autonomic OAM applications, specifically for the case of current non-autonomic networks and/or nodes. That document also explains how existing management solutions can leverage the ACP in parallel with traditional management models, when to use the ACP, and how to integrate with potentially IPv4-only OAM backends.</t>
      <t indent="0" pn="section-1-21">Combining ACP with Bootstrapping Remote Secure Key Infrastructure (BRSKI) (see <xref target="RFC8995" format="default" sectionFormat="of" derivedContent="RFC8995"/>) results in the "Autonomic Network Infrastructure" (ANI) as defined in <xref target="RFC8993" format="default" sectionFormat="of" derivedContent="RFC8993"/>, which provides autonomic connectivity (from ACP) with secure zero-touch (automated) bootstrap from BRSKI.  The ANI itself does not constitute an Autonomic Network, but it allows the building of more or less Autonomic Networks on top of it, using either centralized automation in SDN style (see "<xref target="RFC7426" format="title" sectionFormat="of" derivedContent="Software-Defined Networking (SDN): Layers and Architecture Terminology"/>" <xref target="RFC7426" format="default" sectionFormat="of" derivedContent="RFC7426"/>) or distributed automation via Autonomic Service Agents (ASA) and/or Autonomic Functions (AF), or a mixture of both.  See <xref target="RFC8993" format="default" sectionFormat="of" derivedContent="RFC8993"/> for more information.</t>
      <section anchor="applicability" numbered="true" toc="include" removeInRFC="false" pn="section-1.1">
        <name slugifiedName="name-applicability-and-scope">Applicability and Scope</name>
        <t indent="0" pn="section-1.1-1">Please see the following Terminology section (<xref target="terminology" format="default" sectionFormat="of" derivedContent="Section 2"/>) for explanations of terms used in this section.</t>
        <t indent="0" pn="section-1.1-2">The design of the ACP as defined in this document is considered to
	be applicable to all types of "professionally managed" networks:
	Service Provider, Local Area Network (LAN), Metropolitan Area Network (MAN/Metro),
	Wide Area Network (WAN), Enterprise Information Technology (IT) and
	<xref target="ot" format="none" sectionFormat="of" derivedContent="">Operational Technology</xref> (OT) networks. The ACP can operate equally on Layer 3 (L3) equipment and on L2 equipment such as bridges (see <xref target="acp-l2-switches" format="default" sectionFormat="of" derivedContent="Section 7"/>). The hop-by-hop authentication, integrity protection, and confidentiality mechanism used by the ACP is defined to be negotiable; therefore, it can be extended  to environments with different protocol preferences. The minimum implementation requirements in this document attempt to achieve maximum interoperability by requiring support for multiple options depending on the type of device: IPsec (see "<xref target="RFC4301" format="title" sectionFormat="of" derivedContent="Security Architecture for the Internet Protocol"/>" <xref target="RFC4301" format="default" sectionFormat="of" derivedContent="RFC4301"/>) and Datagram Transport Layer Security (DTLS, see <xref target="DTLS" format="default" sectionFormat="of" derivedContent="Section 6.8.4"/>).</t>
        <t indent="0" pn="section-1.1-3">The implementation footprint of the ACP consists of Public Key Infrastructure (PKI) code for the ACP certificate including EST (see "<xref target="RFC7030" format="title" sectionFormat="of" derivedContent="Enrollment over Secure Transport"/>" <xref target="RFC7030" format="default" sectionFormat="of" derivedContent="RFC7030"/>), GRASP, UDP, TCP, and Transport Layer Security (TLS, see <xref target="tls" format="default" sectionFormat="of" derivedContent="Section 6.1"/>). For more information regarding the security and reliability of GRASP and for EST, the ACP secure channel protocol used (such as IPsec or DTLS), and an instance of IPv6 packet forwarding and routing via RPL, see "<xref target="RFC6550" format="title" sectionFormat="of" derivedContent="RPL: IPv6 Routing Protocol for Low-Power and Lossy Networks"/>" <xref target="RFC6550" format="default" sectionFormat="of" derivedContent="RFC6550"/>, which is separate from routing and forwarding for the data plane (user traffic).</t>
        <t indent="0" pn="section-1.1-4">The ACP uses only IPv6 to avoid the complexity of dual-stack (both IPv6 and IPv4) ACP operations. Nevertheless, it can be integrated without any changes to otherwise IPv4-only network devices. The data plane itself would not need to change, and it could continue to be IPv4 only. For such IPv4-only devices, IPv6 itself would be additional implementation footprint that is only required for the ACP.</t>
        <t indent="0" pn="section-1.1-5">The protocol choices of the ACP are primarily based on wide use and support in networks and devices, well-understood security properties, and required scalability. The ACP design is an attempt to produce the lowest risk combination of existing technologies and protocols to build a widely applicable, operational network management solution.</t>
        <t indent="0" pn="section-1.1-6">RPL was chosen because it requires a smaller routing table footprint in large networks compared to other routing protocols with an autonomically configured single area. The deployment experience of large-scale Internet of Things (IoT) networks serves as the basis for wide deployment experience with RPL. The profile chosen for RPL in the ACP does not leverage any RPL-specific forwarding plane features (IPv6 extension headers), making its implementation a pure control plane software requirement.</t>
        <t indent="0" pn="section-1.1-7">GRASP is the only completely novel protocol used in the ACP, and this choice was necessary because there is no existing protocol suitable for providing the necessary functions to the ACP, so GRASP was developed to fill that gap.</t>
        <t indent="0" pn="section-1.1-8">The ACP design can be applicable to devices constrained with respect to CPU and memory, and to networks constrained with respect to bitrate and reliability,
but this document does not attempt to define the most constrained type of devices or networks to which the ACP is applicable. RPL and DTLS for ACP secure channels are two protocol choices already making ACP more applicable to constrained environments. Support for constrained devices in this specification is opportunistic, but not complete, because the reliable transport for GRASP (see <xref target="GRASP-substrate" format="default" sectionFormat="of" derivedContent="Section 6.9.2"/>) only specifies TCP/TLS.  See <xref target="reuse-acp" format="default" sectionFormat="of" derivedContent="Appendix A.8"/> for discussions about how future standards or proprietary extensions and/or variations of the ACP could better meet expectations that are different from those upon which the current design is based, including supporting constrained devices better.</t>
      </section>
    </section>
    <section anchor="terminology" numbered="true" toc="include" removeInRFC="false" pn="section-2">
      <name slugifiedName="name-acronyms-and-terminology-in">Acronyms and Terminology (Informative)</name>
      <t indent="0" pn="section-2-1">This document serves both as a normative specification for ACP
        node behavior as well as an explanation of the context by providing descriptions of requirements, benefits,
        architecture, and operational aspects. 
        Normative sections are labeled "(Normative)" and use BCP 14 keywords. 
        Other sections are labeled "(Informative)" and do not use those normative
        keywords.</t>
      <t indent="0" pn="section-2-2">In the rest of the document, we will refer to systems that use the ACP as "nodes".  Typically, such a node is a physical (network equipment) device, but it can equally be some virtualized system.  Therefore, we do not refer to them as devices unless the context specifically calls for a physical system.</t>
      <t indent="0" pn="section-2-3">This document introduces or uses the following terms (sorted alphabetically).  Introduced terms are
        explained on first use, so this list is for reference only.</t>
      <dl spacing="normal" newline="false" indent="3" pn="section-2-4">
        <dt pn="section-2-4.1">ACP:</dt>
        <dd pn="section-2-4.2">Autonomic Control Plane.  The <xref target="af-def" format="none" sectionFormat="of" derivedContent="">autonomic function</xref> as defined in this document.
            It provides secure, zero-touch (automated) transitive (network-wide) IPv6 connectivity for all nodes in the same ACP domain as well as a GRASP instance running across this ACP IPv6 connectivity.
            The ACP is primarily meant to be used as a component of the <xref target="ani-def" format="none" sectionFormat="of" derivedContent="">ANI</xref> to enable <xref target="an-def" format="none" sectionFormat="of" derivedContent="">Autonomic Networks</xref>,
            but it can equally be used in simple ANI networks (with no other autonomic functions) or
            completely by itself.
            </dd>
        <dt pn="section-2-4.3">ACP address:</dt>
        <dd pn="section-2-4.4">An IPv6 address assigned to the ACP node.  It is stored
            in the <xref target="acp-node-name-def" format="none" sectionFormat="of" derivedContent="">acp-node-name</xref> of the <xref target="domcert-def" format="none" sectionFormat="of" derivedContent="">ACP certificate</xref>.
            </dd>
        <dt pn="section-2-4.5">ACP address range or set:</dt>
        <dd pn="section-2-4.6">The ACP address may imply a range or set of addresses that the node can assign for different purposes.  This address range or set is derived by the node from the format of the ACP address called the addressing sub-scheme.
            </dd>
        <dt anchor="domcert-def" pn="section-2-4.7">ACP certificate:</dt>
        <dd pn="section-2-4.8">A Local Device IDentity (<xref target="ldevid" format="none" sectionFormat="of" derivedContent="">LDevID</xref>) certificate conforming to "<xref target="RFC5280" format="title" sectionFormat="of" derivedContent="Internet X.509 Public Key Infrastructure Certificate and Certificate Revocation List (CRL) Profile"/>" <xref target="RFC5280" format="default" sectionFormat="of" derivedContent="RFC5280"/> that carries the <xref target="acp-node-name-def" format="none" sectionFormat="of" derivedContent="">acp-node-name</xref>, which is used by the ACP to learn its address in the ACP and to derive and cryptographically assert its membership in the ACP domain.  In the context of the ANI, the ACP certificate is also called the ANI certificate.
In the context of AN, the ACP certificate is also called the AN certificate. </dd>
        <dt pn="section-2-4.9">ACP connect interface:</dt>
        <dd pn="section-2-4.10">An interface on an ACP node that provides access to the ACP for non-ACP-capable nodes without using an ACP secure channel.  See <xref target="NMS" format="default" sectionFormat="of" derivedContent="Section 8.1.1"/>.
            </dd>
        <dt pn="section-2-4.11">ACP domain:</dt>
        <dd pn="section-2-4.12">The ACP domain is the set of nodes with <xref target="domcert-def" format="none" sectionFormat="of" derivedContent="">ACP certificates</xref> that allow them to authenticate each other as members of the ACP domain.  See also <xref target="certcheck" format="default" sectionFormat="of" derivedContent="Section 6.2.3"/>.</dd>
        <dt anchor="acp-loopback-def" pn="section-2-4.13">ACP loopback interface:</dt>
        <dd pn="section-2-4.14">The loopback interface in the ACP <xref target="vrf-def" format="none" sectionFormat="of" derivedContent="">VRF</xref> that has the ACP address assigned to it. See <xref target="ACP-loopback" format="default" sectionFormat="of" derivedContent="Section 6.13.5.1"/>.
            </dd>
        <dt pn="section-2-4.15">ACP network:</dt>
        <dd pn="section-2-4.16">The ACP network comprises all the nodes that have access to the ACP.
            It is the set of active and transitively connected nodes of an ACP domain plus all nodes that get access to 
            the ACP of that domain via ACP edge nodes.
            </dd>
        <dt pn="section-2-4.17">ACP (ULA) prefix(es):</dt>
        <dd pn="section-2-4.18">The /48 IPv6 address prefixes used across the ACP.  In the normal or simple case, the ACP has one <xref target="ula-def" format="none" sectionFormat="of" derivedContent="">Unique Local Address (ULA)</xref> prefix, see <xref target="addressing" format="default" sectionFormat="of" derivedContent="Section 6.11"/>.  The ACP routing table may include multiple ULA prefixes if the rsub option is used to create addresses from more than one ULA prefix.  See <xref target="domcert-acpinfo" format="default" sectionFormat="of" derivedContent="Section 6.2.2"/>.  The ACP may also include non-ULA prefixes if those are configured on ACP connect interfaces.  See <xref target="NMS" format="default" sectionFormat="of" derivedContent="Section 8.1.1"/>.
            </dd>
        <dt pn="section-2-4.19">ACP secure channel:</dt>
        <dd pn="section-2-4.20">A channel authenticated via <xref target="domcert-def" format="none" sectionFormat="of" derivedContent="">ACP certificates</xref> providing integrity protection and confidentiality through encryption. These channels are established between (normally) adjacent ACP nodes to carry ACP <xref target="vrf-def" format="none" sectionFormat="of" derivedContent="">VRF</xref> traffic in-band over the same links and paths as data plane traffic but isolate it from the data plane traffic and secure it.
            </dd>
        <dt pn="section-2-4.21">ACP secure channel protocol:</dt>
        <dd pn="section-2-4.22">The protocol used to build an ACP secure channel,
            e.g., Internet Key Exchange Protocol version 2 (IKEv2) with IPsec or DTLS.
            </dd>
        <dt pn="section-2-4.23">ACP virtual interface:</dt>
        <dd pn="section-2-4.24">An interface in the ACP <xref target="vrf-def" format="none" sectionFormat="of" derivedContent="">VRF</xref> mapped to one or more
            ACP secure channels.  See <xref target="ACP_interfaces" format="default" sectionFormat="of" derivedContent="Section 6.13.5"/>.
            </dd>
        <dt anchor="acp-node-name-def" pn="section-2-4.25">acp-node-name field:</dt>
        <dd pn="section-2-4.26">An information field in the <xref target="domcert-def" format="none" sectionFormat="of" derivedContent="">ACP certificate</xref> in which the following ACP-relevant information is encoded: the ACP domain name, the ACP IPv6 address of the node, and optional additional role attributes about the node.  </dd>
        <dt anchor="an-def" pn="section-2-4.27">AN:</dt>
        <dd pn="section-2-4.28">Autonomic Network. A network according to <xref target="RFC8993" format="default" sectionFormat="of" derivedContent="RFC8993"/>.
            Its main components are <xref target="ani-def" format="none" sectionFormat="of" derivedContent="">ANI</xref>, <xref target="af-def" format="none" sectionFormat="of" derivedContent="">autonomic functions</xref>, and <xref target="intent-def" format="none" sectionFormat="of" derivedContent="">Intent</xref>.
            </dd>
        <dt pn="section-2-4.29">(AN) Domain Name:</dt>
        <dd pn="section-2-4.30">An FQDN (Fully Qualified Domain Name) in the acp-node-name of the domain certificate.  See <xref target="domcert-acpinfo" format="default" sectionFormat="of" derivedContent="Section 6.2.2"/>.
            </dd>
        <dt anchor="ani-def" pn="section-2-4.31">ANI (nodes/network):</dt>
        <dd pn="section-2-4.32">Autonomic Network Infrastructure. 
            The ANI is the infrastructure to enable <xref target="an-def" format="none" sectionFormat="of" derivedContent="">Autonomic Networks</xref>.  It includes ACP, BRSKI, and GRASP. 
            Every Autonomic Network includes the ANI, but not every ANI network needs to include <xref target="af-def" format="none" sectionFormat="of" derivedContent="">autonomic functions</xref> beyond the ANI (nor <xref target="intent-def" format="none" sectionFormat="of" derivedContent="">Intent</xref>).  An ANI network without further autonomic functions can, for example, support secure zero-touch (automated) bootstrap
            and stable connectivity for SDN networks, see <xref target="RFC8368" format="default" sectionFormat="of" derivedContent="RFC8368"/>.
            </dd>
        <dt pn="section-2-4.33">ANIMA:</dt>
        <dd pn="section-2-4.34">Autonomic Networking Integrated Model and Approach.
            ACP, BRSKI, and GRASP are specifications of the IETF ANIMA Working Group.
            </dd>
        <dt pn="section-2-4.35">ASA:</dt>
        <dd pn="section-2-4.36">Autonomic Service Agent.  Autonomic software modules running on
            an <xref target="ani-def" format="none" sectionFormat="of" derivedContent="">ANI</xref> device.  The components making up the ANI (BRSKI, ACP, and GRASP) are also described as ASAs.
            </dd>
        <dt anchor="af-def" pn="section-2-4.37">autonomic function:</dt>
        <dd pn="section-2-4.38">A function and/or service in an Autonomic Network (AN)
            composed of one or more ASAs across one or more ANI nodes.
            </dd>
        <dt pn="section-2-4.39">BRSKI:</dt>
        <dd pn="section-2-4.40">Bootstrapping Remote Secure Key Infrastructure
            <xref target="RFC8995" format="default" sectionFormat="of" derivedContent="RFC8995"/>.  A protocol extending <xref target="est-def" format="none" sectionFormat="of" derivedContent="">EST</xref> to
            enable secure zero-touch bootstrap in conjunction with ACP.  ANI nodes use ACP, BRSKI, and GRASP.
            </dd>
        <dt anchor="ca-def" pn="section-2-4.41">CA:</dt>
        <dd pn="section-2-4.42">Certification Authority. An entity that issues digital certificates. A CA uses its private key to sign the certificates it issues. Relying parties use the public key in the CA certificate to validate the signature.</dd>
        <dt pn="section-2-4.43">CRL:</dt>
        <dd pn="section-2-4.44">Certificate Revocation List. A list of revoked certificates is required to revoke certificates before their lifetime expires.
            </dd>
        <dt pn="section-2-4.45">data plane:</dt>
        <dd pn="section-2-4.46">The counterpoint to the ACP <xref target="vrf-def" format="none" sectionFormat="of" derivedContent="">VRF</xref> in an ACP node: the forwarding of user traffic 
            in non-autonomous nodes and/or networks and also any non-autonomous control and/or management plane functions.
            In a fully <xref target="an-def" format="none" sectionFormat="of" derivedContent="">Autonomic Network</xref> node, the data plane is managed autonomically via <xref target="af-def" format="none" sectionFormat="of" derivedContent="">autonomic
            functions</xref> and <xref target="intent-def" format="none" sectionFormat="of" derivedContent="">Intent</xref>. See <xref target="intro" format="default" sectionFormat="of" derivedContent="Section 1"/> for more details.
            </dd>
        <dt pn="section-2-4.47">device:</dt>
        <dd pn="section-2-4.48">A physical system or physical node.</dd>
        <dt anchor="enrollment-def" pn="section-2-4.49">enrollment:</dt>
        <dd pn="section-2-4.50">The process by which a node authenticates itself to a
            network with an initial identity, which is often called an <xref target="idevid-def" format="none" sectionFormat="of" derivedContent="">Initial Device IDentity (IDevID)</xref> certificate, and acquires from the network
            a network-specific identity, which is often called an <xref target="ldevid" format="none" sectionFormat="of" derivedContent="">LDevID</xref> certificate, and certificates of one or more <xref target="ta-def" format="none" sectionFormat="of" derivedContent="">trust anchor(s)</xref>.
            In the ACP, the LDevID certificate is called the <xref target="domcert-def" format="none" sectionFormat="of" derivedContent="">ACP certificate</xref>.
            </dd>
        <dt anchor="est-def" pn="section-2-4.51">EST:</dt>
        <dd pn="section-2-4.52">Enrollment over Secure Transport <xref target="RFC7030" format="default" sectionFormat="of" derivedContent="RFC7030"/>.  IETF
            Standards Track protocol for enrollment of a node with an <xref target="ldevid" format="none" sectionFormat="of" derivedContent="">LDevID</xref> certificate.  BRSKI is based on EST.
            </dd>
        <dt pn="section-2-4.53">GRASP:</dt>
        <dd pn="section-2-4.54">GeneRic Autonomic Signaling Protocol.  An extensible signaling
            protocol required by the ACP for ACP neighbor discovery.</dd>
        <dt pn="section-2-4.55"/>
        <dd pn="section-2-4.56">The ACP also provides the
            "security and transport substrate" for the "ACP instance of GRASP". This instance 
            of GRASP runs across the ACP secure channels to support BRSKI and other NOC and/or OAM or
            <xref target="af-def" format="none" sectionFormat="of" derivedContent="">autonomic functions</xref>.  See <xref target="RFC8990" format="default" sectionFormat="of" derivedContent="RFC8990"/>.
            </dd>
        <dt anchor="idevid-def" pn="section-2-4.57">IDevID:</dt>
        <dd pn="section-2-4.58">An Initial Device IDentity X.509 certificate installed by
            the vendor on new equipment.  The IDevID certificate contains information that establishes the identity of the
            node in the context of its vendor and/or manufacturer such as device model and/or type
            and serial number.  See <xref target="AR8021" format="default" sectionFormat="of" derivedContent="AR8021"/>. The IDevID certificate cannot be used as a node identifier for the
            ACP because they are not provisioned by the owner of the network, so they can
            not directly indicate an ACP domain they belong to.
            </dd>
        <dt anchor="in-band-def" pn="section-2-4.59">in-band (as in management or signaling):</dt>
        <dd pn="section-2-4.60">
            In-band management traffic and/or control plane signaling uses the same network
            resources such as routers and/or switches and network links that it manages and/or controls.
            In-band is the standard management and signaling mechanism in IP networks.
            Compared to <xref target="out-of-band-def" format="none" sectionFormat="of" derivedContent="">out-of-band</xref>, the in-band mechanism
            requires no additional physical resources, but it introduces potentially circular
            dependencies for its correct operations.
            See <xref target="intro" format="default" sectionFormat="of" derivedContent="Section 1"/>.
            </dd>
        <dt anchor="intent-def" pn="section-2-4.61">Intent:</dt>
        <dd pn="section-2-4.62">The policy language of an Autonomic Network according to <xref target="RFC8993" format="default" sectionFormat="of" derivedContent="RFC8993"/>.
            </dd>
        <dt pn="section-2-4.63">Loopback interface:</dt>
        <dd pn="section-2-4.64">See 
            <xref target="acp-loopback-def" format="none" sectionFormat="of" derivedContent="">ACP loopback interface</xref>.
            </dd>
        <dt anchor="ldevid" pn="section-2-4.65">LDevID:</dt>
        <dd pn="section-2-4.66">A Local Device IDentity is an X.509 certificate installed during
            <xref target="enrollment-def" format="none" sectionFormat="of" derivedContent="">enrollment</xref>.  The <xref target="domcert-def" format="none" sectionFormat="of" derivedContent="">domain certificate</xref> used by the ACP is an LDevID certificate.  See <xref target="AR8021" format="default" sectionFormat="of" derivedContent="AR8021"/>.
            </dd>
        <dt pn="section-2-4.67">management:</dt>
        <dd pn="section-2-4.68">Used in this document as another word for <xref target="OAM" format="none" sectionFormat="of" derivedContent="">OAM</xref>.
            </dd>
        <dt pn="section-2-4.69">MASA (service):</dt>
        <dd pn="section-2-4.70">Manufacturer Authorized Signing Authority.  A vendor and/or manufacturer
            or delegated cloud service on the Internet used as part of the BRSKI protocol.
            </dd>
        <dt pn="section-2-4.71">MIC:</dt>
        <dd pn="section-2-4.72">Manufacturer Installed Certificate.  A synonym for an <xref target="idevid-def" format="none" sectionFormat="of" derivedContent="">IDevID</xref> in referenced materials. This term is not used in this document.
            </dd>
        <dt pn="section-2-4.73">native interface:</dt>
        <dd pn="section-2-4.74">Interfaces existing on a node without configuration of the already running node.  On physical nodes, these are usually physical interfaces; on virtual nodes, their equivalent.
            </dd>
        <dt pn="section-2-4.75">NOC:</dt>
        <dd pn="section-2-4.76">Network Operations Center.
            </dd>
        <dt pn="section-2-4.77">node:</dt>
        <dd pn="section-2-4.78">A system supporting the ACP according to this document.  A node can be virtual or physical.  Physical nodes are called devices.
            </dd>
        <dt anchor="node-id" pn="section-2-4.79">Node-ID:</dt>
        <dd pn="section-2-4.80">
            The identifier of an ACP node inside that ACP. It is either the last 64 bits (see <xref target="zone-scheme" format="default" sectionFormat="of" derivedContent="Section 6.11.3"/>) or 78 bits (see <xref target="Vlong" format="default" sectionFormat="of" derivedContent="Section 6.11.5"/>) of the ACP address.
            </dd>
        <dt anchor="OAM" pn="section-2-4.81">OAM:</dt>
        <dd pn="section-2-4.82">Operations, Administration, and Management. Includes network monitoring.
            </dd>
        <dt anchor="ot" pn="section-2-4.83">Operational Technology (OT):</dt>
        <dd pn="section-2-4.84">
             "The hardware and software dedicated to detecting or causing changes
              in physical processes through direct monitoring and/or control of physical
              devices such as valves, pumps, etc." <xref target="OP-TECH" format="default" sectionFormat="of" derivedContent="OP-TECH"/>. In most cases today, OT networks are 
              well separated from Information Technology (IT) networks.
             </dd>
        <dt anchor="out-of-band-def" pn="section-2-4.85">out-of-band (management) network:</dt>
        <dd pn="section-2-4.86">
             An out-of-band network is a secondary network
             used to manage a primary network. The equipment of the primary network is connected to
             the out-of-band network via dedicated management ports on the primary network equipment.
             Serial (console) management ports were historically most common; however, higher-end network equipment
             now also has Ethernet ports dedicated only to management. An out-of-band network provides
             management access to the primary network independent of the configuration state of the primary
             network.  See <xref target="intro" format="default" sectionFormat="of" derivedContent="Section 1"/>.</dd>
        <dt anchor="virtual-out-of-band-def" pn="section-2-4.87">out-of-band network, virtual:</dt>
        <dd pn="section-2-4.88">
             The ACP can be called a virtual out-of-band network for management and control
             because it attempts to provide the benefits of a (physical)
             <xref target="out-of-band-def" format="none" sectionFormat="of" derivedContent="">out-of-band network</xref>
             even though it is physically carried <xref target="in-band-def" format="none" sectionFormat="of" derivedContent="">in-band</xref>.
             See <xref target="intro" format="default" sectionFormat="of" derivedContent="Section 1"/>.
            </dd>
        <dt pn="section-2-4.89">root CA:</dt>
        <dd pn="section-2-4.90">root Certification Authority. A <xref target="ca-def" format="none" sectionFormat="of" derivedContent="">CA</xref> for which the root CA key update
	procedures of <xref target="RFC7030" sectionFormat="comma" section="4.4" format="default" derivedLink="https://rfc-editor.org/rfc/rfc7030#section-4.4" derivedContent="RFC7030"/>, can be applied.
            </dd>
        <dt pn="section-2-4.91">RPL:</dt>
        <dd pn="section-2-4.92">IPv6 Routing Protocol for Low-Power and Lossy Networks.  The routing protocol used in the ACP. See <xref target="RFC6550" format="default" sectionFormat="of" derivedContent="RFC6550"/>.
            </dd>
        <dt pn="section-2-4.93">registrar (ACP, ANI/BRSKI):</dt>
        <dd pn="section-2-4.94">
            An ACP registrar is an entity (software and/or person) that orchestrates
            the <xref target="enrollment-def" format="none" sectionFormat="of" derivedContent="">enrollment</xref> of ACP nodes with the <xref target="domcert-def" format="none" sectionFormat="of" derivedContent="">ACP certificate</xref>. ANI nodes use
            BRSKI, so ANI registrars are also called BRSKI registrars. For non-ANI ACP nodes,
            the registrar mechanisms are not defined in this document. See <xref target="acp-registrars" format="default" sectionFormat="of" derivedContent="Section 6.11.7"/>. 
            Renewal and other maintenance (such as revocation) of ACP certificates
            may be performed by entities other than registrars. EST must be supported for
            ACP certificate renewal (see <xref target="domcert-maint" format="default" sectionFormat="of" derivedContent="Section 6.2.5"/>). BRSKI
            is an extension of EST, so ANI/BRSKI registrars can easily support ACP domain
            certificate renewal in addition to initial enrollment.
            </dd>
        <dt pn="section-2-4.95">RPI:</dt>
        <dd pn="section-2-4.96">RPL Packet Information. Network extension headers for use with  
            <xref target="rpl-def" format="none" sectionFormat="of" derivedContent="">RPL</xref>.
            Not used with RPL in the ACP. See <xref target="rpl-Data-Plane" format="default" sectionFormat="of" derivedContent="Section 6.12.1.13"/>.
            </dd>
        <dt anchor="rpl-def" pn="section-2-4.97">RPL:</dt>
        <dd pn="section-2-4.98">Routing Protocol for Low-Power and Lossy Networks. The routing protocol used in the ACP.  See <xref target="routing" format="default" sectionFormat="of" derivedContent="Section 6.12"/>.
            </dd>
        <dt anchor="sudi" pn="section-2-4.99">sUDI:</dt>
        <dd pn="section-2-4.100">secured Unique Device Identifier.  This is a synonym of IDevID in referenced material.  This term is not used in this document.
            </dd>
        <dt anchor="ta-def" pn="section-2-4.101">TA:</dt>
        <dd pn="section-2-4.102">Trust Anchor. A TA is an entity that
	is trusted for the purpose of certificate validation. TA 
	information such as self-signed certificate(s) of the TA is
	configured into the ACP node as part of <xref target="enrollment-def" format="none" sectionFormat="of" derivedContent="">enrollment</xref>. See <xref target="RFC5280" sectionFormat="comma" section="6.1.1" format="default" derivedLink="https://rfc-editor.org/rfc/rfc5280#section-6.1.1" derivedContent="RFC5280"/>.
            </dd>
        <dt pn="section-2-4.103">UDI:</dt>
        <dd pn="section-2-4.104">Unique Device Identifier.  In the context of this document, unsecured
            identity information of a node typically consists of at least a device model and/or type and a
            serial number, often in a vendor-specific format.  See <xref target="sudi" format="none" sectionFormat="of" derivedContent="">sUDI</xref> and <xref target="ldevid" format="none" sectionFormat="of" derivedContent="">LDevID</xref>.
            </dd>
        <dt anchor="ula-def" pn="section-2-4.105">ULA (Global ID prefix):</dt>
        <dd pn="section-2-4.106">
            A Unique Local Address is an IPv6
            address in the block fc00::/7, defined in "<xref target="RFC4193" format="title" sectionFormat="of" derivedContent="Unique Local IPv6 Unicast Addresses"/>" <xref target="RFC4193" format="default" sectionFormat="of" derivedContent="RFC4193"/>.  ULA is the
            IPv6 successor of the IPv4 private address space ("<xref target="RFC1918" format="title" sectionFormat="of" derivedContent="Address Allocation for Private Internets"/>" <xref target="RFC1918" format="default" sectionFormat="of" derivedContent="RFC1918"/>).
            ULAs have important differences over IPv4 private addresses that
            are beneficial for and exploited by the ACP, such as the locally
            assigned Global ID prefix, which is the first 48 bits of a ULA
            address <xref target="RFC4193" sectionFormat="comma" section="3.2.1" format="default" derivedLink="https://rfc-editor.org/rfc/rfc4193#section-3.2.1" derivedContent="RFC4193"/>.
            In this document, this prefix is abbreviated as "ULA prefix".                  
            </dd>
        <dt anchor="vrf-def" pn="section-2-4.107">(ACP) VRF:</dt>
        <dd pn="section-2-4.108">The ACP is modeled in this document as a Virtual Routing and Forwarding instance. This means that it is based on a "virtual router" consisting of a separate IPv6 forwarding table to which the ACP virtual interfaces are attached and an associated IPv6 routing table separate from the data plane. Unlike the VRFs on MPLS/VPN Provider Edge ("<xref target="RFC4364" format="title" sectionFormat="of" derivedContent="BGP/MPLS IP Virtual Private Networks (VPNs)"/>" <xref target="RFC4364" format="default" sectionFormat="of" derivedContent="RFC4364"/>) or LISP xTR ("<xref target="RFC6830" format="title" sectionFormat="of" derivedContent="The Locator/ID Separation Protocol (LISP)"/>" <xref target="RFC6830" format="default" sectionFormat="of" derivedContent="RFC6830"/>), the ACP VRF does not have any special "core facing" functionality or routing and/or mapping protocols shared across multiple VRFs. In vendor products, a VRF such as the ACP VRF may also be referred to as a VRF-lite.
            </dd>
        <dt pn="section-2-4.109">(ACP) Zone:</dt>
        <dd pn="section-2-4.110">An ACP zone is a set of ACP nodes using the same zone field value in their ACP address according to <xref target="zone-scheme" format="default" sectionFormat="of" derivedContent="Section 6.11.3"/>. Zones are a mechanism to support structured addressing of ACP addresses within the same /48 ULA prefix. 
            </dd>
      </dl>
      <t indent="0" pn="section-2-5">
    The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>", "<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>", "<bcp14>SHALL NOT</bcp14>", "<bcp14>SHOULD</bcp14>", "<bcp14>SHOULD NOT</bcp14>", "<bcp14>RECOMMENDED</bcp14>", "<bcp14>NOT RECOMMENDED</bcp14>",
    "<bcp14>MAY</bcp14>", and "<bcp14>OPTIONAL</bcp14>" in this document are to be interpreted as
    described in BCP 14 <xref target="RFC2119" format="default" sectionFormat="of" derivedContent="RFC2119"/> <xref target="RFC8174" format="default" sectionFormat="of" derivedContent="RFC8174"/> 
    when, and only when, they appear in all capitals, as shown here.
      </t>
    </section>
    <section anchor="usage" numbered="true" toc="include" removeInRFC="false" pn="section-3">
      <name slugifiedName="name-use-cases-for-an-autonomic-">Use Cases for an Autonomic Control Plane (Informative)</name>
      <t indent="0" pn="section-3-1">This section summarizes the use cases that are intended to be supported by an ACP. To understand how these are derived from and relate to the larger set of use cases for Autonomic Networks, please refer to "<xref target="RFC8316" format="title" sectionFormat="of" derivedContent="Autonomic Networking Use Case for Distributed Detection of Service Level Agreement (SLA) Violations"/>" <xref target="RFC8316" format="default" sectionFormat="of" derivedContent="RFC8316"/>.</t>
      <section anchor="infrastructure" numbered="true" toc="include" removeInRFC="false" pn="section-3.1">
        <name slugifiedName="name-an-infrastructure-for-auton">An Infrastructure for Autonomic Functions</name>
        <t indent="0" pn="section-3.1-1">Autonomic functions need a stable infrastructure to run on, and all autonomic functions should use the same infrastructure to minimize the complexity of the network.  In this way, there is only need for a single discovery mechanism, a single security mechanism, and single instances of other processes that distributed functions require.</t>
      </section>
      <section anchor="secure-bootstrap" numbered="true" toc="include" removeInRFC="false" pn="section-3.2">
        <name slugifiedName="name-secure-bootstrap-over-an-un">Secure Bootstrap over an Unconfigured Network</name>
        <t indent="0" pn="section-3.2-1">Today, bootstrapping a new node typically requires all nodes between a controlling node such as an SDN controller (see <xref target="RFC7426" format="default" sectionFormat="of" derivedContent="RFC7426"/>) and the new node to be completely and correctly addressed, configured, and secured.  Bootstrapping and configuration of a network happens in rings around the controller -- configuring each ring of devices before the next one can be bootstrapped.  Without console access (for example, through an out-of-band network), it is not possible today to make devices securely reachable before having configured the entire network leading up to them.</t>
        <t indent="0" pn="section-3.2-2">With the ACP, secure bootstrap of new devices and whole new networks can happen without requiring any configuration of unconfigured devices along the path. As long as all devices along the path support ACP and a zero-touch bootstrap mechanism such as BRSKI, the ACP across a whole network of unconfigured devices can be brought up without operator and/or provisioning intervention. The ACP also offers additional security for any bootstrap mechanism because it can provide the encrypted discovery (via ACP GRASP) of registrars or other bootstrap servers by bootstrap proxies connecting to nodes that are to be bootstrapped. The ACP encryption hides the identities of the communicating entities (pledge and registrar), making it more difficult to learn which network node might be attackable. The ACP certificate can also be used to end-to-end encrypt the bootstrap communication between such proxies and server. Note that bootstrapping here includes not only the first step that can be provided by BRSKI (secure keys), but also later stages where configuration is bootstrapped.</t>
      </section>
      <section anchor="reachability" numbered="true" toc="include" removeInRFC="false" pn="section-3.3">
        <name slugifiedName="name-permanent-reachability-inde">Permanent Reachability Independent of the Data Plane</name>
        <t indent="0" pn="section-3.3-1">Today, most critical control plane protocols and OAM protocols use the data plane of the network.  This leads to often undesirable dependencies between the control and OAM plane on one side and the data plane on the other: only if the forwarding and control plane of the data plane are configured correctly, will the data plane and the OAM and/or control plane work as expected.</t>
        <t indent="0" pn="section-3.3-2">Data plane connectivity can be affected by errors and faults. Examples include misconfigurations that make AAA (Authentication, Authorization, and Accounting) servers unreachable or that can lock an administrator out of a device; routing or addressing issues can make a device unreachable; and shutting down interfaces over which a current management session is running can lock an administrator irreversibly out of the device.  Traditionally only out-of-band access via a serial console or Ethernet management port can help recover from such issues.</t>
        <t indent="0" pn="section-3.3-3">Data plane dependencies also affect applications in a NOC such as SDN controller applications: certain network changes are hard to implement today because the change itself may affect reachability of the devices.  Examples include address or mask changes, routing changes, or security policies.  Today such changes require precise, hop-by-hop planning.</t>
        <t indent="0" pn="section-3.3-4">Note that specific control plane functions for the data plane often depend on the ability to forward their packets via the data plane: sending aliveness and routing protocol signaling packets across the data plane to verify reachability, using IPv4 signaling packets for IPv4 routing and IPv6 signaling packets for IPv6 routing.</t>
        <t indent="0" pn="section-3.3-5">Assuming appropriate implementation (see <xref target="general_addressing" format="default" sectionFormat="of" derivedContent="Section 6.13.2"/> for more details), the ACP provides reachability that is independent of the data plane. This  allows the control plane and OAM plane to operate more robustly:
        </t>
        <ul spacing="normal" bare="false" empty="false" indent="3" pn="section-3.3-6">
          <li pn="section-3.3-6.1">For management plane protocols, the ACP provides the functionality of a Virtual out-of-Band (VooB) channel, by providing connectivity to all nodes regardless of their data plane configuration, and routing and forwarding tables.</li>
          <li pn="section-3.3-6.2">For control plane protocols, the ACP allows their operation even when the data plane is temporarily faulty, or during transitional events, such as routing changes, which may affect the control plane at least temporarily.  This is specifically important for autonomic service agents, which could affect data plane connectivity.</li>
        </ul>
        <t indent="0" pn="section-3.3-7">The document <xref target="RFC8368" format="default" sectionFormat="of" derivedContent="RFC8368">"Using Autonomic Control Plane for Stable Connectivity of Network OAM"</xref> explains this use case for the ACP in significantly more detail and explains how the ACP can be used in practical network operations.</t>
      </section>
    </section>
    <section anchor="requirements" numbered="true" toc="include" removeInRFC="false" pn="section-4">
      <name slugifiedName="name-requirements-informative">Requirements (Informative)</name>
      <t indent="0" pn="section-4-1">The following requirements were identified for the design of the ACP based on the above use cases (<xref target="usage" format="default" sectionFormat="of" derivedContent="Section 3"/>). These requirements are informative. The ACP as specified in the normative parts of this document is meeting or exceeding these use case requirements:</t>
      <ol type="ACP%d:" spacing="normal" indent="10" start="1" pn="section-4-2">
        <li anchor="acp1" pn="section-4-2.1" derivedCounter="ACP1:">The ACP should provide robust connectivity: as far as possible, it should be independent of configured addressing, configuration, and routing.  Requirements 2 and 3 build on this requirement, but they also have value on their own.</li>
        <li pn="section-4-2.2" derivedCounter="ACP2:">The ACP must have a separate address space from the data plane.  This separate address space provides traceability, ease of debugging, separation from data plane, and infrastructure security (filtering based on known address space).</li>
        <li pn="section-4-2.3" derivedCounter="ACP3:">The ACP must use an autonomically managed address space.  An autonomically managed address space provides ease of bootstrap and setup ("autonomic"), and robustness (the administrator cannot break network easily).  This document uses ULA for this purpose, see <xref target="RFC4193" format="default" sectionFormat="of" derivedContent="RFC4193"/>.</li>
        <li anchor="acp4" pn="section-4-2.4" derivedCounter="ACP4:">The ACP must be generic, that is, it must be usable by all the functions and protocols of the ANI.  Clients of the ACP must not be tied to a particular application or transport protocol.</li>
        <li pn="section-4-2.5" derivedCounter="ACP5:">The ACP must provide security: messages coming through the ACP must be authenticated to be from a trusted node, and it is very strongly recommended that they be encrypted.</li>
      </ol>
      <t indent="0" pn="section-4-3">The explanation for <xref target="acp4" format="none" sectionFormat="of" derivedContent="">ACP4</xref> is as follows: in a fully Autonomic Network (AN), all newly written ASAs could potentially communicate with each other exclusively via GRASP, and if that were the only requirement for the ACP, it would not need to provide IPv6-layer connectivity between nodes, but only GRASP connectivity. Nevertheless, because ACP also intends to support non-autonomous networks, it is crucial to support IPv6-layer connectivity across the ACP to support any transport-layer and application-layer protocols.</t>
      <t indent="0" pn="section-4-4">The ACP operates hop-by-hop because this interaction can be built on IPv6 link-local addressing, which is autonomic, and has no dependency on configuration (requirement <xref target="acp1" format="none" sectionFormat="of" derivedContent="">ACP1</xref>).  It may be necessary to have ACP connectivity across non-ACP nodes, for example, to link ACP nodes over the general Internet.  This is possible, but it introduces a dependency on stable and/or resilient routing over the non-ACP hops (see <xref target="remote-acp-neighbors" format="default" sectionFormat="of" derivedContent="Section 8.2"/>).</t>
    </section>
    <section anchor="overview" numbered="true" toc="include" removeInRFC="false" pn="section-5">
      <name slugifiedName="name-overview-informative">Overview (Informative)</name>
      <t indent="0" pn="section-5-1">When a node has an ACP certificate (see <xref target="acp-certificates" format="default" sectionFormat="of" derivedContent="Section 6.2.1"/>) and is enabled to bring up the ACP (see <xref target="node-enable" format="default" sectionFormat="of" derivedContent="Section 9.3.5"/>), it will create its ACP without any configuration as follows. For details, see <xref target="self-creation" format="default" sectionFormat="of" derivedContent="Section 6"/> and following sections:
      </t>
      <ol type="1" spacing="normal" indent="adaptive" start="1" pn="section-5-2">
        <li pn="section-5-2.1" derivedCounter="1.">The node creates a VRF instance or a similar virtual context for the ACP.</li>
        <li pn="section-5-2.2" derivedCounter="2.">The node assigns its ULA IPv6 address (prefix) (see <xref target="addressing" format="default" sectionFormat="of" derivedContent="Section 6.11"/>), which is learned from the acp-node-name (see <xref target="domcert-acpinfo" format="default" sectionFormat="of" derivedContent="Section 6.2.2"/>) of its ACP certificate (see <xref target="acp-certificates" format="default" sectionFormat="of" derivedContent="Section 6.2.1"/>), to an ACP loopback interface (see <xref target="addressing" format="default" sectionFormat="of" derivedContent="Section 6.11"/>) and connects this interface to the ACP VRF.</li>
        <li pn="section-5-2.3" derivedCounter="3.">The node establishes a list of candidate peer adjacencies and candidate channel types to try for the adjacency. This is automatic for all candidate link-local adjacencies (see <xref target="discovery-grasp" format="default" sectionFormat="of" derivedContent="Section 6.4"/>) across all native interfaces (see <xref target="if-enable-auto" format="default" sectionFormat="of" derivedContent="Section 9.3.4"/>). If a candidate peer is discovered via multiple interfaces, this will result in one adjacency per interface. If the ACP node has multiple interfaces connecting to the same subnet across which it is also operating as an L2 switch in the data plane, it employs methods for ACP with L2 switching, see <xref target="acp-l2-switches" format="default" sectionFormat="of" derivedContent="Section 7"/>.</li>
        <li pn="section-5-2.4" derivedCounter="4.">For each entry in the candidate adjacency list, the node negotiates a secure tunnel using the candidate channel types.  See <xref target="channel-selection" format="default" sectionFormat="of" derivedContent="Section 6.6"/>.</li>
        <li pn="section-5-2.5" derivedCounter="5.">The node authenticates the peer node during secure channel setup and authorizes it to become part of the ACP according to <xref target="certcheck" format="default" sectionFormat="of" derivedContent="Section 6.2.3"/>.</li>
        <li pn="section-5-2.6" derivedCounter="6.">Unsuccessful authentication of a candidate peer results in throttled connection retries for as long as the candidate peer is discoverable. See <xref target="neighbor_verification" format="default" sectionFormat="of" derivedContent="Section 6.7"/>.</li>
        <li pn="section-5-2.7" derivedCounter="7.">Each successfully established secure channel is mapped to an ACP virtual interface, which is placed into the ACP VRF.  See <xref target="ACP-virtual-interfaces" format="default" sectionFormat="of" derivedContent="Section 6.13.5.2"/>.</li>
        <li pn="section-5-2.8" derivedCounter="8.">Each node runs a lightweight routing protocol (see <xref target="routing" format="default" sectionFormat="of" derivedContent="Section 6.12"/>) to announce reachability of the ACP loopback address (or prefix) across the ACP.</li>
        <li pn="section-5-2.9" derivedCounter="9.">This completes the creation of the ACP with hop-by-hop secure tunnels, auto-addressing, and auto-routing. The node is now an ACP node with a running ACP.</li>
      </ol>
      <t indent="0" pn="section-5-3">Note:
      </t>
      <ul spacing="normal" bare="false" empty="false" indent="3" pn="section-5-4">
        <li pn="section-5-4.1">None of the above operations (except the following explicitly configured ones) are reflected in the configuration of the node.</li>
        <li anchor="sec5bt2" pn="section-5-4.2">Non-ACP network management systems (NMS) or SDN controllers have to be explicitly configured for connection to the ACP.</li>
        <li pn="section-5-4.3">Additional candidate peer adjacencies for ACP connections across non-ACP Layer 3 clouds requires explicit configuration. See <xref target="remote-acp-neighbors" format="default" sectionFormat="of" derivedContent="Section 8.2"/>.</li>
      </ul>
      <t indent="0" pn="section-5-5"><xref target="acp" format="default" sectionFormat="of" derivedContent="Figure 1"/> illustrates the ACP.</t>
      <figure anchor="acp" align="left" suppress-title="false" pn="figure-1">
        <name slugifiedName="name-acp-vrf-and-secure-channels">ACP VRF and Secure Channels</name>
        <artwork name="" type="" align="left" alt="" pn="section-5-6.1">
          ACP Node 1                          ACP Node 2
       ...................               ...................
secure .                 .   secure      .                 .  secure
channel:  +-----------+  :   channel     :  +-----------+  : channel
..--------| ACP VRF   |---------------------| ACP VRF   |---------..
       : / \         / \   &lt;--routing--&gt;   / \         / \ :
       : \ /         \ /                   \ /         \ / :
..--------| loopback  |---------------------| loopback  |---------..
       :  | interface |  :               :  | interface |  :
       :  +-----------+  :               :  +-----------+  :
       :                 :               :                 :
       :   Data Plane    :...............:   Data Plane    :
       :                 :    link       :                 :
       :.................:               :.................:
</artwork>
      </figure>
      <t indent="0" pn="section-5-7">The resulting overlay network is normally based exclusively on hop-by-hop tunnels.  This is because addressing used on links is IPv6 link-local addressing, which does not require any prior setup.  In this way, the ACP can be built even if there is no configuration on the node, or if the data plane has issues such as addressing or routing problems.</t>
    </section>
    <section anchor="self-creation" numbered="true" toc="include" removeInRFC="false" pn="section-6">
      <name slugifiedName="name-self-creation-of-an-autonom">Self-Creation of an Autonomic Control Plane (ACP) (Normative)</name>
      <t indent="0" pn="section-6-1">This section specifies the components and steps to set up an ACP. The ACP is automatically self-creating, which makes it "indestructible" against most changes to the data plane, including misconfigurations of routing, addressing, NAT, firewall, or any other traffic policy filters that would inadvertently or otherwise unavoidably also impact the management plane traffic, such as the actual operator command-line interface (CLI) session or controller NETCONF session through which the configuration changes to the data plane are executed.</t>
      <t indent="0" pn="section-6-2">Physical misconfiguration of wiring between ACP nodes will also not break the ACP. As long as there is a transitive physical path between ACP nodes, the ACP should be able to recover given that it automatically operates across all interfaces of the ACP nodes and automatically determines paths between them.</t>
      <t indent="0" pn="section-6-3">Attacks against the network via incorrect routing or addressing information for the data plane will not impact the ACP. Even impaired ACP nodes will have a significantly reduced attack surface against malicious misconfiguration because only very limited ACP or interface up/down configuration can affect the ACP, and depending on their specific designs, these types of attacks could also be eliminated. See more in <xref target="enabling-acp" format="default" sectionFormat="of" derivedContent="Section 9.3"/> and <xref target="security" format="default" sectionFormat="of" derivedContent="Section 11"/>.</t>
      <t indent="0" pn="section-6-4">An ACP node can be a router, switch, controller, NMS host, or any other IPv6-capable node.  Initially, it <bcp14>MUST</bcp14> have its ACP certificate, as well as an (empty) ACP adjacency table (described in <xref target="adj-table" format="default" sectionFormat="of" derivedContent="Section 6.3"/>).  It then can start to discover ACP neighbors and build the ACP.  This is described step by step in the following sections.</t>
      <section anchor="tls" numbered="true" toc="include" removeInRFC="false" pn="section-6.1">
        <name slugifiedName="name-requirements-for-the-use-of">Requirements for the Use of Transport Layer Security (TLS)</name>
        <t indent="0" pn="section-6.1-1">The following requirements apply to TLS that is required or used by ACP components. Applicable ACP components include ACP certificate maintenance via EST (see <xref target="domcert-maint" format="default" sectionFormat="of" derivedContent="Section 6.2.5"/>), TLS connections for CRL Distribution Point (CRLDP) or Online Certificate Status Protocol (OCSP) responder (if used, see <xref target="certcheck" format="default" sectionFormat="of" derivedContent="Section 6.2.3"/>), and ACP GRASP (see <xref target="GRASP-substrate" format="default" sectionFormat="of" derivedContent="Section 6.9.2"/>). On ANI nodes, these requirements also apply to BRSKI.</t>
        <t indent="0" pn="section-6.1-2">TLS <bcp14>MUST</bcp14> comply with "<xref target="RFC7525" format="title" sectionFormat="of" derivedContent="Recommendations for Secure Use of Transport Layer Security (TLS) and Datagram Transport Layer Security (DTLS)"/>" <xref target="RFC7525" format="default" sectionFormat="of" derivedContent="RFC7525"/> except that TLS 1.2 ("<xref target="RFC5246" format="title" sectionFormat="of" derivedContent="The Transport Layer Security (TLS) Protocol Version 1.2"/>" <xref target="RFC5246" format="default" sectionFormat="of" derivedContent="RFC5246"/>) is <bcp14>REQUIRED</bcp14> and that older versions of TLS <bcp14>MUST NOT</bcp14> be used.  TLS 1.3 ("<xref target="RFC8446" format="title" sectionFormat="of" derivedContent="The Transport Layer Security (TLS) Protocol Version 1.3"/>" <xref target="RFC8446" format="default" sectionFormat="of" derivedContent="RFC8446"/>) <bcp14>SHOULD</bcp14> be supported. The choice for TLS 1.2 as the lowest common denominator for the ACP is based on the currently expected and most likely availability across the wide range of candidate ACP node types, potentially with non-agile operating system TCP/IP stacks.</t>
        <t indent="0" pn="section-6.1-3">TLS <bcp14>MUST</bcp14> offer TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384 and TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384 and <bcp14>MUST NOT</bcp14> offer options with less than 256-bit symmetric key strength or hash strength of less than 384 bits.  When TLS 1.3 is  supported, TLS_AES_256_GCM_SHA384 <bcp14>MUST</bcp14> be offered and TLS_CHACHA20_POLY1305_SHA256 <bcp14>MAY</bcp14> be offered.</t>
        <t indent="0" pn="section-6.1-4">TLS <bcp14>MUST</bcp14> also include the "Supported Elliptic Curves" extension, and it <bcp14>MUST</bcp14> support the NIST P-256 (secp256r1(22)) and P-384 (secp384r1(24)) curves "<xref target="RFC8422" format="title" sectionFormat="of" derivedContent="Elliptic Curve Cryptography (ECC) Cipher Suites for Transport Layer Security (TLS) Versions 1.2 and Earlier"/>" <xref target="RFC8422" format="default" sectionFormat="of" derivedContent="RFC8422"/>.  In addition, TLS 1.2 clients <bcp14>SHOULD</bcp14> send an ec_point_format extension with a single element, "uncompressed".</t>
      </section>
      <section anchor="domcert" numbered="true" toc="include" removeInRFC="false" pn="section-6.2">
        <name slugifiedName="name-acp-domain-certificate-and-">ACP Domain, Certificate, and Network</name>
        <t indent="0" pn="section-6.2-1">The ACP relies on group security.  An ACP domain is a group of nodes that trust
each other to participate in ACP operations such as creating ACP secure channels
in an autonomous, peer-to-peer fashion between ACP domain members via protocols such as IPsec. 
To authenticate and authorize another ACP member node with access to the ACP domain, each ACP member requires
keying material: an ACP node <bcp14>MUST</bcp14> have an LDevID certificate
and information about one or more TAs
as required for the ACP domain membership check (<xref target="certcheck" format="default" sectionFormat="of" derivedContent="Section 6.2.3"/>).</t>
        <t indent="0" pn="section-6.2-2">Manual keying via shared secrets is not usable for an ACP domain because it would require a single shared secret across all current and future ACP domain members to meet the expectation of autonomous, peer-to-peer establishment of ACP secure channels between any ACP domain members. Such a single shared secret would be an unacceptable security weakness. Asymmetric keying material (public keys) without certificates does not provide the mechanism to authenticate ACP domain membership in an autonomous, peer-to-peer fashion for current and future ACP domain members.</t>
        <t indent="0" pn="section-6.2-3">The LDevID certificate is henceforth called the ACP certificate. The TA is the CA root certificate of the ACP domain.</t>
        <t indent="0" pn="section-6.2-4">The ACP does not mandate specific mechanisms by which this keying material is provisioned into the ACP node. It only requires that the certificate comply with <xref target="acp-certificates" format="default" sectionFormat="of" derivedContent="Section 6.2.1"/>, specifically that it have the acp-node-name as specified in <xref target="domcert-acpinfo" format="default" sectionFormat="of" derivedContent="Section 6.2.2"/> in its domain certificate as well as those of candidate ACP peers.  See <xref target="bootstrap" format="default" sectionFormat="of" derivedContent="Appendix A.2"/> for more information about enrollment or provisioning options.</t>
        <t indent="0" pn="section-6.2-5">This document uses the term ACP in many places where the Autonomic Networking reference documents <xref target="RFC7575" format="default" sectionFormat="of" derivedContent="RFC7575"/> and <xref target="RFC8993" format="default" sectionFormat="of" derivedContent="RFC8993"/> use the word autonomic.  This is done because those reference documents consider (only) fully Autonomic Networks and nodes, but the support of ACP does not require the support for other components of Autonomic Networks except for the reliance on GRASP and the providing of security and transport for GRASP.  Therefore, the word autonomic might be misleading to operators interested in only the ACP.</t>
        <t indent="0" pn="section-6.2-6"><xref target="RFC7575" format="default" sectionFormat="of" derivedContent="RFC7575"/> defines the term "autonomic domain" as a collection of autonomic nodes.  ACP nodes do not need to be fully autonomic, but when they are, then the ACP domain is an autonomic domain.  Likewise, <xref target="RFC8993" format="default" sectionFormat="of" derivedContent="RFC8993"/> defines the term "domain certificate" as the certificate used in an autonomic domain.  The ACP certificate is that domain certificate when ACP nodes are (fully) autonomic nodes.  Finally, this document uses the term ACP network to refer to the network created by active ACP nodes in an ACP domain.  The ACP network itself can extend beyond ACP nodes through the mechanisms described in <xref target="ACPconnect" format="default" sectionFormat="of" derivedContent="Section 8.1"/>.</t>
        <section anchor="acp-certificates" numbered="true" toc="include" removeInRFC="false" pn="section-6.2.1">
          <name slugifiedName="name-acp-certificates">ACP Certificates</name>
          <t indent="0" pn="section-6.2.1-1">ACP certificates <bcp14>MUST</bcp14> be <xref target="RFC5280" format="default" sectionFormat="of" derivedContent="RFC5280"/> compliant X.509 v3 <xref target="X.509" format="default" sectionFormat="of" derivedContent="X.509"/> certificates.</t>
          <t indent="0" pn="section-6.2.1-2">ACP nodes <bcp14>MUST</bcp14> support handling ACP certificates, TA certificates, and certificate chain certificates (henceforth just called certificates in this section) with RSA public keys and certificates with Elliptic Curve Cryptography (ECC) public keys.</t>
          <t indent="0" pn="section-6.2.1-3">ACP nodes <bcp14>MUST NOT</bcp14> support certificates with RSA public keys of less than a 2048-bit modulus or curves with group order of less than 256 bits. They <bcp14>MUST</bcp14> support certificates with RSA public keys with 2048-bit modulus and <bcp14>MAY</bcp14> support longer RSA keys. They <bcp14>MUST</bcp14> support certificates with ECC public keys using NIST P-256 curves and <bcp14>SHOULD</bcp14> support P-384 and P-521 curves.</t>
          <t indent="0" pn="section-6.2.1-4">ACP nodes <bcp14>MUST NOT</bcp14> support certificates with RSA public keys whose
          modulus is less than 2048 bits, or certificates whose ECC public keys
          are in groups whose order is less than 256 bits.  RSA signing
          certificates with 2048-bit public keys <bcp14>MUST</bcp14> be supported, and such
          certificates with longer public keys <bcp14>MAY</bcp14> be supported.  ECDSA
          certificates using the NIST P-256 curve <bcp14>MUST</bcp14> be supported, and such
          certificates using the P-384 and P-521 curves <bcp14>SHOULD</bcp14> be supported.</t>
          <t indent="0" pn="section-6.2.1-5">ACP nodes <bcp14>MUST</bcp14> support RSA certificates that are signed by RSA
          signatures over the SHA-256 digest of the contents and <bcp14>SHOULD</bcp14>
          additionally support SHA-384 and SHA-512 digests in such signatures.
          The same requirements for digest usage in certificate signatures apply to Elliptic Curve Digital Signature Algorithm (ECDSA)
          certificates, and additionally, ACP nodes <bcp14>MUST</bcp14> support ECDSA
          signatures on ECDSA certificates.</t>
          <t indent="0" pn="section-6.2.1-6">The ACP certificate <bcp14>SHOULD</bcp14> use an RSA key and an RSA signature when the ACP certificate is intended to be used not only for ACP authentication but also for other purposes. The ACP certificate <bcp14>MAY</bcp14> use an ECC key and an ECDSA signature if the ACP certificate is only used for ACP and ANI authentication and authorization.</t>
          <t indent="0" pn="section-6.2.1-7">Any secure channel protocols used for the ACP as specified in this document or extensions of this document <bcp14>MUST</bcp14> therefore support authentication (e.g., signing), starting with these types of certificates. See <xref target="RFC8422" format="default" sectionFormat="of" derivedContent="RFC8422"/> for more information.</t>
          <t indent="0" pn="section-6.2.1-8">The reason for these choices are as follows: as of 2020, RSA is still more widely used than ECC, therefore the <bcp14>MUST</bcp14>-level requirements for RSA. ECC offers equivalent security at (logarithmically) shorter key lengths (see <xref target="RFC8422" format="default" sectionFormat="of" derivedContent="RFC8422"/>). This can be beneficial especially in the presence of constrained bandwidth or constrained nodes in an ACP/ANI network. Some ACP functions such as GRASP peer-to-peer across the ACP require end-to-end/any-to-any authentication and authorization, therefore ECC can only reliably be used in the ACP when it <bcp14>MUST</bcp14> be supported on all ACP nodes. RSA signatures are mandatory to be supported also for ECC certificates because the CAs themselves may not support ECC yet.</t>
          <t indent="0" pn="section-6.2.1-9">The ACP certificate <bcp14>SHOULD</bcp14> be used for any authentication between nodes with ACP
domain certificates (ACP nodes and NOC nodes) where a required authorization condition is ACP domain membership, such as ACP node to NOC/OAM end-to-end security and ASA to ASA end-to-end security.
<xref target="certcheck" format="default" sectionFormat="of" derivedContent="Section 6.2.3"/> defines this "ACP domain membership check".
The uses of this check that are standardized in this document are for the establishment of
hop-by-hop ACP secure channels (<xref target="associations" format="default" sectionFormat="of" derivedContent="Section 6.8"/>) and for ACP GRASP (<xref target="GRASP-substrate" format="default" sectionFormat="of" derivedContent="Section 6.9.2"/>) end to end via TLS.</t>
          <t indent="0" pn="section-6.2.1-10">The ACP domain membership check requires a minimum number of elements in a certificate as described in <xref target="certcheck" format="default" sectionFormat="of" derivedContent="Section 6.2.3"/>. The identity of a node in the ACP is carried via the acp-node-name as defined in <xref target="domcert-acpinfo" format="default" sectionFormat="of" derivedContent="Section 6.2.2"/>.</t>
          <t indent="0" pn="section-6.2.1-11">To support Elliptic Curve Diffie-Hellman (ECDH) directly with the key in the ACP certificate,
ACP certificates with ECC keys need to indicate that they are ECDH 
capable: if the X.509 v3 keyUsage extension is present, the keyAgreement bit
must then be set. Note that this option is not required for any of the
required ciphersuites in this document and may not be supported by all CAs.</t>
          <t indent="0" pn="section-6.2.1-12">Any other fields of the ACP certificate are to be populated as required by <xref target="RFC5280" format="default" sectionFormat="of" derivedContent="RFC5280"/>. As long as they are compliant with <xref target="RFC5280" format="default" sectionFormat="of" derivedContent="RFC5280"/>, any other field of an ACP certificate can be set as desired by the operator of the ACP domain through the appropriate ACP registrar and/or ACP CA procedures. For example, other fields may be required for purposes other than those that the ACP certificate is intended to be used for (such as elements of a SubjectName).</t>
          <t indent="0" pn="section-6.2.1-13">For further certificate details, ACP certificates may follow the recommendations from <xref target="CABFORUM" format="default" sectionFormat="of" derivedContent="CABFORUM"/>.</t>
          <t indent="0" pn="section-6.2.1-14">For diagnostic and other operational purposes, it is beneficial
	  to copy the device-identifying fields of the node's IDevID
	  certificate into the ACP certificate, such as the 
"serialNumber" attribute 
(<xref target="X.520" format="default" sectionFormat="of" derivedContent="X.520"/>, Section 6.2.9) 
in the subject field distinguished name encoding. Note
	  that this is not the certificate serial-number.  See also <xref target="RFC8995" sectionFormat="comma" section="2.3.1" format="default" derivedLink="https://rfc-editor.org/rfc/rfc8995#section-2.3.1" derivedContent="RFC8995"/>. This can be done, for example, if it would be acceptable for the device's "serialNumber" to be signaled via the Link Layer Discovery Protocol <xref target="LLDP" format="default" sectionFormat="of" derivedContent="LLDP"/> because, like LLDP-signaled information, the ACP certificate information can be retrieved by neighboring nodes without further authentication and can be used either for beneficial diagnostics or for malicious attacks. Retrieval of the ACP certificate is possible via a (failing) attempt to set up an ACP secure channel, and the "serialNumber" usually contains device type information that may help to more quickly determine working exploits/attacks against the device.</t>
          <t indent="0" pn="section-6.2.1-15">Note that there is no intention to constrain authorization within the ACP or Autonomic Networks using the ACP to just the ACP domain membership check as defined in this document. It can be extended or modified with additional requirements. Such future authorizations can use and require additional elements in certificates or policies or even additional certificates. See <xref target="domcert-maint" format="default" sectionFormat="of" derivedContent="Section 6.2.5"/> for the additional check against the id-kp-cmcRA extended key usage attribute ("<xref target="RFC6402" format="title" sectionFormat="of" derivedContent="Certificate Management over CMS (CMC) Updates"/>" <xref target="RFC6402" format="default" sectionFormat="of" derivedContent="RFC6402"/>), and  see <xref target="role-assignments" format="default" sectionFormat="of" derivedContent="Appendix A.9.5"/> for possible future extensions.</t>
        </section>
        <section anchor="domcert-acpinfo" numbered="true" toc="include" removeInRFC="false" pn="section-6.2.2">
          <name slugifiedName="name-acp-certificate-acpnodename">ACP Certificate AcpNodeName</name>
          <figure anchor="acp-dominfo-abnf" align="left" suppress-title="false" pn="figure-2">
            <name slugifiedName="name-acp-node-name-abnf">ACP Node Name ABNF</name>
            <sourcecode name="" type="abnf" markers="false" pn="section-6.2.2-1.1">
  acp-node-name = local-part "@" acp-domain-name
  local-part = [ acp-address ] [ "+" rsub extensions ]
  acp-address = 32HEXDIG / "0" ; HEXDIG as of [RFC5234], Appendix B.1
  rsub = [ &lt;subdomain&gt; ] ; &lt;subdomain&gt; as of [RFC1034], Section 3.5
  acp-domain-name = &lt;domain&gt; ; as of [RFC1034], Section 3.5
  extensions = *( "+" extension )
  extension  = 1*etext  ; future standard definition.
  etext      = ALPHA / DIGIT /  ; Printable US-ASCII
               "!" / "#" / "$" / "%" / "&amp;" / "'" /
               "*" / "-" / "/" / "=" / "?" / "^" /
               "_" / "`" / "{" / "|" / "}" / "~"

  routing-subdomain = [ rsub "." ] acp-domain-name
</sourcecode>
          </figure>
          <t indent="0" pn="section-6.2.2-2">Example:</t>
          <t indent="0" pn="section-6.2.2-3">Given an ACP address of fd89:b714:f3db:0:200:0:6400:0000,
    an ACP domain name of acp.example.com,
    and an rsub extension of area51.research, then this results in the following:</t>
          <artwork align="left" pn="section-6.2.2-4">
  acp-node-name      = fd89b714f3db00000200000064000000
                       +area51.research@acp.example.com
  acp-domain-name    = acp.example.com
  routing-subdomain  = area51.research.acp.example.com
</artwork>
          <t indent="0" pn="section-6.2.2-5">The acp-node-name in <xref target="acp-dominfo-abnf" format="default" sectionFormat="of" derivedContent="Figure 2"/> is the ABNF definition ("<xref target="RFC5234" format="title" sectionFormat="of" derivedContent="Augmented BNF for Syntax Specifications: ABNF"/>" <xref target="RFC5234" format="default" sectionFormat="of" derivedContent="RFC5234"/>) of the ACP Node Name. An ACP certificate <bcp14>MUST</bcp14> carry this information. It <bcp14>MUST</bcp14> contain an otherName field in the X.509 Subject Alternative Name extension, and the otherName <bcp14>MUST</bcp14> contain an AcpNodeName as described in <xref target="domcert-acpinfo" format="default" sectionFormat="of" derivedContent="Section 6.2.2"/>.</t>
          <t indent="0" pn="section-6.2.2-6">Nodes complying with this specification <bcp14>MUST</bcp14> be able to receive their ACP address through the domain certificate, in which case their own ACP certificate <bcp14>MUST</bcp14> have a 32HEXDIG acp-address field. The acp-address field is case insensitive because ABNF HEXDIG is. It is recommended to encode acp-address with lowercase letters. Nodes complying with this specification <bcp14>MUST</bcp14> also be able to authenticate nodes as ACP domain members or ACP secure channel peers when they have a zero-value acp-address field and as ACP domain members (but not as ACP secure channel peers) when the acp-address field is omitted from their AcpNodeName.  See <xref target="certcheck" format="default" sectionFormat="of" derivedContent="Section 6.2.3"/>.</t>
          <t indent="0" pn="section-6.2.2-7">The acp-domain-name is used to indicate the ACP domain across which ACP nodes authenticate and authorize each other, for example, to build ACP secure channels to each other, see <xref target="certcheck" format="default" sectionFormat="of" derivedContent="Section 6.2.3"/>. The acp-domain-name <bcp14>SHOULD</bcp14> be the FQDN of an Internet domain owned by the network administration of the ACP and ideally reserved to only be used for the ACP. In this specification, it serves as a name for the ACP that ideally is globally unique.  When acp-domain-name is a globally unique name, collision of ACP addresses across different ACP domains can only happen due to ULA hash collisions (see <xref target="scheme" format="default" sectionFormat="of" derivedContent="Section 6.11.2"/>). Using different acp-domain-names, operators can distinguish multiple ACPs even when using the same TA.</t>
          <t indent="0" pn="section-6.2.2-8">To keep the encoding simple, there is no consideration for internationalized acp-domain-names. The acp-node-name is not intended for end-user consumption. There is no protection against an operator picking any domain name for an ACP whether or not the operator can claim to own the domain name. Instead, the domain name only serves as a hash seed for the ULA and for diagnostics for the operator. Therefore, any operator owning only an internationalized domain name should be able to pick an equivalently unique 7-bit ASCII acp-domain-name string representing the internationalized domain name.</t>
          <t indent="0" pn="section-6.2.2-9">The routing-subdomain is a string that can be constructed from the acp-node-name, and it is used in the hash creation of the ULA (see <xref target="scheme" format="default" sectionFormat="of" derivedContent="Section 6.11.2"/>).  The presence of the rsub component allows a single ACP domain to employ multiple /48 ULA prefixes.  See <xref target="domain-usage" format="default" sectionFormat="of" derivedContent="Appendix A.6"/> for example use cases.</t>
          <t indent="0" pn="section-6.2.2-10">The optional extensions field is used for future standardized extensions to this specification.  It <bcp14>MUST</bcp14> be ignored if present and not understood.</t>
          <t indent="0" pn="section-6.2.2-11">The following points explain and justify the encoding choices described:
          </t>
          <ol type="1" spacing="normal" indent="adaptive" start="1" pn="section-6.2.2-12">
            <li pn="section-6.2.2-12.1" derivedCounter="1.">
              <t indent="0" pn="section-6.2.2-12.1.1">Formatting notes:
              </t>
              <ol type="1.%d" spacing="normal" indent="adaptive" start="1" pn="section-6.2.2-12.1.2">
                <li pn="section-6.2.2-12.1.2.1" derivedCounter="1.1">The rsub component needs to be in the local-part: if the format just had routing-subdomain as the domain part of the acp-node-name, rsub and acp-domain-name could not be separated from each other to determine in the ACP domain membership check which part is the acp-domain-name and which is solely for creating a different ULA prefix.</li>
                <li pn="section-6.2.2-12.1.2.2" derivedCounter="1.2">If both acp-address and rsub are omitted from AcpNodeName, the local-part will have the format "++extension(s)". The two plus characters are necessary so the node can unambiguously parse that both acp-address and rsub are omitted.</li>
              </ol>
            </li>
            <li pn="section-6.2.2-12.2" derivedCounter="2.">
              <t indent="0" pn="section-6.2.2-12.2.1">The encoding of the ACP domain name and ACP address as described in this section is used for the following reasons: 

              </t>
              <ol type="2.%d" spacing="normal" indent="adaptive" start="1" pn="section-6.2.2-12.2.2">
                <li pn="section-6.2.2-12.2.2.1" derivedCounter="2.1">The acp-node-name is the identifier of a node's ACP. It includes the necessary components to identify a node's ACP both from within the ACP as well as from the outside of the ACP.</li>
                <li pn="section-6.2.2-12.2.2.2" derivedCounter="2.2">For manual and/or automated diagnostics and backend management of devices and ACPs, it is necessary to have an easily human-readable and software-parsable standard, single string representation of the information in the acp-node-name. For example, inventory or other backend systems can always identify an entity by one unique string field but not by a combination of multiple fields, which would be necessary if there were no single string representation.</li>
                <li pn="section-6.2.2-12.2.2.3" derivedCounter="2.3">If the encoding was not such a string, it would be necessary to define a second standard encoding to provide this format (standard string encoding) for operator consumption.</li>
                <li pn="section-6.2.2-12.2.2.4" derivedCounter="2.4">Addresses of the form &lt;local&gt;@&lt;domain&gt; have become the preferred format for identifiers of entities in many systems, including the majority of user identifiers in web or mobile applications such as multi-domain single-sign-on systems.</li>
              </ol>
            </li>
            <li pn="section-6.2.2-12.3" derivedCounter="3.">
              <t indent="0" pn="section-6.2.2-12.3.1">Compatibilities:

              </t>
              <ol type="3.%d" spacing="normal" indent="adaptive" start="1" pn="section-6.2.2-12.3.2">
                <li pn="section-6.2.2-12.3.2.1" derivedCounter="3.1">It should be possible to use the ACP certificate as an LDevID certificate on the system for uses besides the ACP.  Therefore, the information element required for the ACP should be encoded so that it minimizes the possibility of creating incompatibilities with other such uses. The attributes of the subject field, for example, are often used in non-ACP applications and therefore should not be occupied by new ACP values.</li>
                <li pn="section-6.2.2-12.3.2.2" derivedCounter="3.2">The element should not require additional ASN.1 encoding and/or decoding because libraries for accessing certificate information, especially for embedded devices, may not support extended ASN.1 decoding beyond predefined, mandatory fields. subjectAltName / otherName is already used with a single string parameter for several otherNames (see "<xref target="RFC6120" format="title" sectionFormat="of" derivedContent="Extensible Messaging and Presence Protocol (XMPP): Core"/>" <xref target="RFC6120" format="default" sectionFormat="of" derivedContent="RFC6120"/>, "<xref target="RFC7585" format="title" sectionFormat="of" derivedContent="Dynamic Peer Discovery for RADIUS/TLS and RADIUS/DTLS Based on the Network Access Identifier (NAI)"/>" <xref target="RFC7585" format="default" sectionFormat="of" derivedContent="RFC7585"/>, "<xref target="RFC4985" format="title" sectionFormat="of" derivedContent="Internet X.509 Public Key Infrastructure Subject Alternative Name for Expression of Service Name"/>" <xref target="RFC4985" format="default" sectionFormat="of" derivedContent="RFC4985"/>, "<xref target="RFC8398" format="title" sectionFormat="of" derivedContent="Internationalized Email Addresses in X.509 Certificates"/>" <xref target="RFC8398" format="default" sectionFormat="of" derivedContent="RFC8398"/>).</li>
                <li pn="section-6.2.2-12.3.2.3" derivedCounter="3.3">The element required for the ACP should minimize the risk of being misinterpreted by other uses of the LDevID certificate.  It also must not be misinterpreted as an email address, hence the use of the otherName / rfc822Name option in the certificate would be inappropriate.</li>
              </ol>
            </li>
          </ol>
          <t indent="0" pn="section-6.2.2-13">See <xref target="RFC5280" sectionFormat="of" section="4.2.1.6" format="default" derivedLink="https://rfc-editor.org/rfc/rfc5280#section-4.2.1.6" derivedContent="RFC5280"/> for details on the subjectAltName field.</t>
          <section anchor="asn1" numbered="true" toc="include" removeInRFC="false" pn="section-6.2.2.1">
            <name slugifiedName="name-acpnodename-asn1-module">AcpNodeName ASN.1 Module</name>
            <t indent="0" pn="section-6.2.2.1-1">The following ASN.1 module normatively specifies the AcpNodeName structure.
This specification uses the ASN.1 definitions from "<xref target="RFC5912" format="title" sectionFormat="of" derivedContent="New ASN.1 Modules for the Public Key Infrastructure Using X.509 (PKIX)"/>" <xref target="RFC5912" format="default" sectionFormat="of" derivedContent="RFC5912"/>
with the 2002 ASN.1 notation used in that document.  <xref target="RFC5912" format="default" sectionFormat="of" derivedContent="RFC5912"/>
updates normative documents using older ASN.1 notation.</t>
            <figure align="left" suppress-title="false" pn="figure-3">
              <name slugifiedName="name-acpnodename-asn1-module-2">AcpNodeName ASN.1 Module</name>
              <sourcecode name="" type="asn.1" markers="false" pn="section-6.2.2.1-2.1">
ANIMA-ACP-2020
  { iso(1) identified-organization(3) dod(6)
    internet(1) security(5) mechanisms(5) pkix(7) id-mod(0)
    id-mod-anima-acpnodename-2020(97) }

DEFINITIONS IMPLICIT TAGS ::=
BEGIN

IMPORTS
  OTHER-NAME
  FROM PKIX1Implicit-2009
    { iso(1) identified-organization(3) dod(6) internet(1)
      security(5) mechanisms(5) pkix(7) id-mod(0)
      id-mod-pkix1-implicit-02(59) }

  id-pkix
  FROM PKIX1Explicit-2009
    { iso(1) identified-organization(3) dod(6) internet(1)
      security(5) mechanisms(5) pkix(7) id-mod(0)
      id-mod-pkix1-explicit-02(51) } ;

  id-on OBJECT IDENTIFIER ::= { id-pkix 8 }

  AcpNodeNameOtherNames OTHER-NAME ::= { on-AcpNodeName, ... }

  on-AcpNodeName OTHER-NAME ::= {
      AcpNodeName IDENTIFIED BY id-on-AcpNodeName
  }

  id-on-AcpNodeName OBJECT IDENTIFIER ::= { id-on 10 }

  AcpNodeName ::= IA5String (SIZE (1..MAX))
   -- AcpNodeName as specified in this document carries the
   -- acp-node-name as specified in the ABNF in Section 6.2.2

END
</sourcecode>
            </figure>
          </section>
        </section>
        <section anchor="certcheck" numbered="true" toc="include" removeInRFC="false" pn="section-6.2.3">
          <name slugifiedName="name-acp-domain-membership-check">ACP Domain Membership Check</name>
          <t indent="0" pn="section-6.2.3-1">The following points constitute the ACP domain membership check of a candidate peer via its certificate:
          </t>
          <ol spacing="normal" group="acp" start="1" indent="adaptive" type="1" pn="section-6.2.3-2">
            <li anchor="step1" pn="section-6.2.3-2.1" derivedCounter="1.">The peer has proved ownership of the private key associated
	    with the certificate's public key. This check is performed by the
	    security association protocol used, for example, Section <xref target="RFC7296" section="2.15" sectionFormat="bare" format="default" derivedLink="https://rfc-editor.org/rfc/rfc7296#section-2.15" derivedContent="RFC7296"/> of <xref target="RFC7296" format="default" sectionFormat="of" derivedContent="RFC7296">"Internet Key Exchange Protocol Version 2 (IKEv2)"</xref>.</li>
            <li anchor="step2" pn="section-6.2.3-2.2" derivedCounter="2.">The peer's certificate passes certificate path validation as
	    defined in <xref target="RFC5280" sectionFormat="comma" section="6" format="default" derivedLink="https://rfc-editor.org/rfc/rfc5280#section-6" derivedContent="RFC5280"/>, against one of the TAs associated with the ACP node's ACP certificate (see <xref target="trust-anchors" format="default" sectionFormat="of" derivedContent="Section 6.2.4"/>). This includes verification of the validity (lifetime) of the certificates in the path.</li>
            <li anchor="step3" pn="section-6.2.3-2.3" derivedCounter="3.">
              <t indent="0" pn="section-6.2.3-2.3.1">If the peer's certificate indicates a CRLDP
             (<xref target="RFC5280" sectionFormat="comma" section="4.2.1.13" format="default" derivedLink="https://rfc-editor.org/rfc/rfc5280#section-4.2.1.13" derivedContent="RFC5280"/>) or OCSP responder
             (<xref target="RFC5280" sectionFormat="comma" section="4.2.2.1" format="default" derivedLink="https://rfc-editor.org/rfc/rfc5280#section-4.2.2.1" derivedContent="RFC5280"/>), then the peer's certificate <bcp14>MUST</bcp14> be valid according to those
             mechanisms when they are available: an OCSP check for the peer's certificate across the ACP must succeed, or the peer's certificate must not be listed in the CRL retrieved from the CRLDP. These mechanisms are not available 
             when the ACP node has no ACP or non-ACP connectivity to retrieve a current CRL
             or has no access an OCSP responder, and the security association protocol itself also has no way to communicate the CRL or OCSP check.</t>
              <t indent="0" pn="section-6.2.3-2.3.2">Retries to learn revocation via OCSP or CRL <bcp14>SHOULD</bcp14> be made using the same backoff as described in <xref target="neighbor_verification" format="default" sectionFormat="of" derivedContent="Section 6.7"/>. If and when the ACP node then learns that an ACP peer's certificate is invalid for which <xref target="step3" format="none" sectionFormat="of" derivedContent="">Rule 3</xref> had to be skipped during ACP secure channel establishment, then the ACP secure channel to that peer <bcp14>MUST</bcp14> be closed even if this peer is the only connectivity to access CRL/OCSP. This applies (of course) to all ACP secure channels to this peer if there are multiple.  The ACP secure channel connection <bcp14>MUST</bcp14> be retried periodically to support the case that the neighbor acquires a new, valid certificate.</t>
            </li>
            <li anchor="step4" pn="section-6.2.3-2.4" derivedCounter="4.">The peer's certificate has a syntactically valid acp-node-name field,
             and the acp-domain-name in that peer's acp-node-name is the same as in this ACP node's certificate (lowercase normalized).</li>
          </ol>
          <t indent="0" pn="section-6.2.3-3">When checking a candidate peer's certificate for the purpose of establishing an ACP secure channel,
         one additional check is performed:
          </t>
          <ol group="acp" start="5" indent="adaptive" spacing="normal" type="1" pn="section-6.2.3-4">
<li anchor="step5" pn="section-6.2.3-4.1" derivedCounter="5.">The acp-address field of the candidate peer certificate's AcpNodeName is not omitted but is either 32HEXDIG or 0, according to <xref target="acp-dominfo-abnf" format="default" sectionFormat="of" derivedContent="Figure 2"/>.</li>
          </ol>
          <t indent="0" pn="section-6.2.3-5">Technically, ACP secure channels can only be built with nodes that
         have an acp-address. <xref target="step5" format="none" sectionFormat="of" derivedContent="">Rule 5</xref> ensures that this is taken into account
         during ACP domain membership check.</t>
          <t indent="0" pn="section-6.2.3-6">Nodes with an omitted acp-address field can only use their ACP domain
         certificate for non-ACP secure channel authentication purposes.
         This includes, for example, NMS type nodes permitted to communicate
         into the ACP via <xref target="ACPconnect" format="default" sectionFormat="of" derivedContent="Section 8.1">ACP connect</xref></t>
          <t indent="0" pn="section-6.2.3-7"> The special value "0" in an ACP certificate's acp-address field
          is used for nodes that can and should determine their ACP address
          through mechanisms other than learning it through the acp-address
          field in their ACP certificate. These ACP nodes are permitted
          to establish ACP secure channels. Mechanisms for those nodes to
          determine their ACP address are outside the scope of this
          specification, but this option is defined here so that any 
          ACP nodes can build ACP secure channels to them according to <xref target="step5" format="none" sectionFormat="of" derivedContent="">Rule 5.</xref></t>
          <t indent="0" pn="section-6.2.3-8">The optional rsub field of the AcpNodeName is not relevant to the
          ACP domain membership check because it only serves to structure routing and 
          addressing within an ACP but not to segment mutual authentication and authorization 
          (hence the name "routing subdomain").</t>
          <t indent="0" pn="section-6.2.3-9">In summary:
          </t>
          <ul spacing="normal" bare="false" empty="false" indent="3" pn="section-6.2.3-10">
            <li pn="section-6.2.3-10.1">
              <xref target="step1" format="none" sectionFormat="of" derivedContent="">Steps 1 through 4</xref> constitute standard certificate validity verification and private key authentication as defined by <xref target="RFC5280" format="default" sectionFormat="of" derivedContent="RFC5280"/> and security association protocols (such as <xref target="RFC7296" format="default" sectionFormat="of" derivedContent="RFC7296">IKEv2</xref>) when leveraging certificates. </li>
            <li pn="section-6.2.3-10.2">Except for its public key, <xref target="step1" format="none" sectionFormat="of" derivedContent="">Steps 1 through 4</xref> do not include the verification of any preexisting
	    form of a certificate's identity
      elements, such as a web server's domain name prefix, which is
      often encoded in the certificate common name. <xref target="step5" format="none" sectionFormat="of" derivedContent="">Step 5</xref> is an equivalent step for the AcpNodeName.</li>
            <li pn="section-6.2.3-10.3">
              <xref target="step4" format="none" sectionFormat="of" derivedContent="">Step 4</xref> constitutes standard CRL and OCSP checks refined for the case of missing connectivity and limited-functionality security association protocols.</li>
            <li pn="section-6.2.3-10.4">
              <xref target="step1" format="none" sectionFormat="of" derivedContent="">Steps 1 through 4</xref> authorize the building of any secure connection between members of the same ACP domain except for ACP secure channels.</li>
            <li pn="section-6.2.3-10.5">
              <xref target="step5" format="none" sectionFormat="of" derivedContent="">Step 5</xref> is the additional verification of the presence of an ACP address as necessary for ACP secure channels.</li>
            <li pn="section-6.2.3-10.6">
              <xref target="step1" format="none" sectionFormat="of" derivedContent="">Steps 1 through 5</xref> therefore authorize the building of an ACP secure channel.</li>
          </ul>
          <t indent="0" pn="section-6.2.3-11">For brevity, the remainder of this document refers to this process only as authentication instead of as authentication and authorization.</t>
          <section anchor="cert-time" numbered="true" toc="include" removeInRFC="false" pn="section-6.2.3.1">
            <name slugifiedName="name-realtime-clock-and-time-val">Realtime Clock and Time Validation</name>
            <t indent="0" pn="section-6.2.3.1-1">An ACP node with a realtime clock in which it has confidence <bcp14>MUST</bcp14>
            check the timestamps when performing an ACP domain membership check, such
            as checking the certificate validity period in <xref target="step1" format="none" sectionFormat="of" derivedContent="">Step 1</xref> and the respective
            times in <xref target="step4" format="none" sectionFormat="of" derivedContent="">Step 4</xref> for revocation information (e.g., signingTimes in Cryptographic Message Syntax (CMS) signatures).</t>
            <t indent="0" pn="section-6.2.3.1-2">An ACP node without such a realtime clock <bcp14>MAY</bcp14> ignore those timestamp 
            validation steps if it does not know the current time.
            Such an ACP node <bcp14>SHOULD</bcp14> obtain the current time in a
            secured fashion, such as via NTP signaled through the ACP.
            It then ignores timestamp validation only until the current time is known.
            In the absence of implementing a secured mechanism, such an ACP node <bcp14>MAY</bcp14>
            use a current time learned in an insecure fashion in the ACP domain membership
            check.</t>
            <t indent="0" pn="section-6.2.3.1-3">Current time <bcp14>MAY</bcp14> be learned in an unsecured fashion, for example, via NTP ("<xref target="RFC5905" format="title" sectionFormat="of" derivedContent="Network Time Protocol Version 4: Protocol and Algorithms Specification"/>" <xref target="RFC5905" format="default" sectionFormat="of" derivedContent="RFC5905"/>)
            over the same link-local IPv6 addresses used for the ACP from neighboring ACP nodes.
            ACP nodes that do provide unsecured NTP over their link-local addresses <bcp14>SHOULD</bcp14>
            primarily run NTP across the ACP and provide NTP time across the ACP only
            when they have a trusted time source. Details for such NTP procedures are beyond the
            scope of this specification.</t>
            <t indent="0" pn="section-6.2.3.1-4">Besides the ACP domain membership check, the ACP itself has no
            dependency on knowing the current time, but protocols
            and services using the ACP, for example, event logging, will likely need to know
            the current time.</t>
          </section>
        </section>
        <section anchor="trust-anchors" numbered="true" toc="include" removeInRFC="false" pn="section-6.2.4">
          <name slugifiedName="name-trust-anchors-ta">Trust Anchors (TA)</name>
          <t indent="0" pn="section-6.2.4-1">ACP nodes need TA information according to <xref target="RFC5280" sectionFormat="comma" section="6.1.1" format="default" derivedLink="https://rfc-editor.org/rfc/rfc5280#section-6.1.1" derivedContent="RFC5280"/> (d), typically in the form of one or more certificates of the TA to perform certificate
path validation as required by <xref target="step2" format="none" sectionFormat="of" derivedContent="">Section 6.2.3, Rule 2</xref>.
TA information <bcp14>MUST</bcp14> be provisioned to an ACP node (together with its ACP
domain certificate) by an ACP registrar during initial enrollment of a candidate
ACP node. ACP nodes <bcp14>MUST</bcp14> also support the renewal of TA information via 
EST as described in <xref target="domcert-maint" format="default" sectionFormat="of" derivedContent="Section 6.2.5"/>.</t>
          <t indent="0" pn="section-6.2.4-2">The required information about a TA can consist of 
one or more
certificates as required for dealing with CA certificate renewals
as explained in Section <xref target="RFC4210" section="4.4" sectionFormat="bare" format="default" derivedLink="https://rfc-editor.org/rfc/rfc4210#section-4.4" derivedContent="RFC4210"/> of <xref target="RFC4210" format="default" sectionFormat="of" derivedContent="RFC4210">"Internet X.509 Public Key Infrastructure Certificate Management Protocol (CMP)"</xref>).</t>
          <t indent="0" pn="section-6.2.4-3">A certificate path is a chain of certificates starting at
the ACP certificate (the leaf and/or end entity), followed by zero or more
intermediate CA certificates, and ending with the TA information,
which is typically one or two self-signed certificates of the TA. The
CA that signs the ACP certificate is called the assigning CA.
If there are no intermediate CAs, then the assigning CA is the TA.
Certificate path validation authenticates that the TA associated with the ACP permits the ACP certificate, either directly or indirectly via one or more intermediate
CA.</t>
          <t indent="0" pn="section-6.2.4-4">Note that different ACP nodes may have different intermediate CAs
in their certificate path and even different TA. The set of TAs for
an ACP domain must be consistent across all ACP members so that any ACP node
can authenticate any other ACP node.  The protocols through which the 
ACP domain membership check <xref target="step1" format="none" sectionFormat="of" derivedContent="">Rules 1 through 3</xref> are performed need to support
the exchange not only of the ACP nodes certificates but also the exchange of
the intermediate TA.</t>
          <t indent="0" pn="section-6.2.4-5">For the ACP domain membership check, ACP nodes <bcp14>MUST</bcp14> support certificate path 
validation with zero or one intermediate CA. They <bcp14>SHOULD</bcp14> support two intermediate CAs
and two TAs (to permit migration from one TA to another TA).</t>
          <t indent="0" pn="section-6.2.4-6">Certificates for an ACP <bcp14>MUST</bcp14> only be given to nodes that are allowed
to be members of that ACP. When the signing CA relies on an ACP registrar, 
the CA <bcp14>MUST</bcp14> only sign certificates with acp-node-name
through trusted ACP registrars. In this setup, any existing CA, unaware of the formatting
of acp-node-name, can be used.</t>
          <t indent="0" pn="section-6.2.4-7">These requirements can be achieved by using a TA private to the owner of
the ACP domain or potentially through appropriate contractual agreements between
the involved parties (registrar and CA).  Using a public CA is out of scope of this
document.  </t>
          <t indent="0" pn="section-6.2.4-8">A single owner can operate multiple, independent ACP domains from the same
set of TAs. Registrars must then know into which ACP a node needs to be enrolled.</t>
        </section>
        <section anchor="domcert-maint" numbered="true" toc="include" removeInRFC="false" pn="section-6.2.5">
          <name slugifiedName="name-certificate-and-trust-ancho">Certificate and Trust Anchor Maintenance</name>
          <t indent="0" pn="section-6.2.5-1">ACP nodes <bcp14>MUST</bcp14> support renewal of their certificate and TA information via EST
and <bcp14>MAY</bcp14> support other mechanisms.  See <xref target="tls" format="default" sectionFormat="of" derivedContent="Section 6.1"/> for TLS requirements.
An ACP network <bcp14>MUST</bcp14> have at least one ACP node supporting EST server functionality across the ACP so that EST
renewal is usable.</t>
          <t indent="0" pn="section-6.2.5-2">ACP nodes <bcp14>SHOULD</bcp14> remember the GRASP O_IPv6_LOCATOR parameters of
   the EST server with which they last renewed their ACP certificate.
They <bcp14>SHOULD</bcp14> provide the ability
for these EST server parameters to also be set by the ACP registrar
(see <xref target="acp-registrars" format="default" sectionFormat="of" derivedContent="Section 6.11.7"/>) that initially enrolled the ACP
device with its ACP certificate. When BRSKI 
is used (see <xref target="RFC8995" format="default" sectionFormat="of" derivedContent="RFC8995"/>), the IPv6 locator of the BRSKI registrar from the BRSKI TLS
connection <bcp14>SHOULD</bcp14> be remembered and used for the next renewal via
EST if that registrar also announces itself as an EST server
via GRASP on its ACP address (see <xref target="domcert-grasp" format="default" sectionFormat="of" derivedContent="Section 6.2.5.1"/>).</t>
          <t indent="0" pn="section-6.2.5-3">The EST server <bcp14>MUST</bcp14> present a certificate that passes the ACP domain
membership check in its TLS connection setup (<xref target="step1" format="none" sectionFormat="of" derivedContent="">Section 6.2.3, rules 1 through 4</xref>, not <xref target="step5" format="none" sectionFormat="of" derivedContent="">rule 5</xref> as this is not for an ACP secure channel setup).
The EST server certificate <bcp14>MUST</bcp14> also contain the id-kp-cmcRA 
extended key usage attribute <xref target="RFC6402" format="default" sectionFormat="of" derivedContent="RFC6402"/>, and the EST client <bcp14>MUST</bcp14> check its presence.</t>
          <t indent="0" pn="section-6.2.5-4">The additional check against the id-kp-cmcRA extended key usage extension field
ensures that clients do not fall prey to an illicit EST server.  While such
illicit EST servers should not be able to support certificate signing requests (as they
are not able to elicit a signing response from a valid CA), such an illicit EST server would
be able to provide faked CA certificates to EST clients that need to renew their
CA certificates when they expire.</t>
          <t indent="0" pn="section-6.2.5-5">Note that EST servers supporting multiple ACP domains will need to have 
a separate certificate for each of these ACP domains and respond on a different transport
address (IPv6 address and/or TCP port). This is easily automated on the
EST server if the CA allows registrars to request certificates 
with the id-kp-cmcRA extended usage extension for themselves.</t>
          <section anchor="domcert-grasp" numbered="true" toc="include" removeInRFC="false" pn="section-6.2.5.1">
            <name slugifiedName="name-grasp-objective-for-est-ser">GRASP Objective for EST Server</name>
            <t indent="0" pn="section-6.2.5.1-1">ACP nodes that are EST servers <bcp14>MUST</bcp14> announce their service in the ACP via GRASP 
Flood Synchronization (M_FLOOD) messages. See <xref target="RFC8990" sectionFormat="comma" section="2.8.11" format="default" derivedLink="https://rfc-editor.org/rfc/rfc8990#section-2.8.11" derivedContent="RFC8990"/> for the definition of this message type
and <xref target="est-example" format="default" sectionFormat="of" derivedContent="Figure 4"/> for an example.</t>
            <figure anchor="est-example" align="left" suppress-title="false" pn="figure-4">
              <name slugifiedName="name-grasp-srvest-objective-exam">GRASP "SRV.est" Objective Example</name>
              <sourcecode name="" type="" markers="false" pn="section-6.2.5.1-2.1">
   [M_FLOOD, 12340815, h'fd89b714f3db0000200000064000001', 210000,
       [["SRV.est", 4, 255 ],
       [O_IPv6_LOCATOR,
            h'fd89b714f3db0000200000064000001', IPPROTO_TCP, 443]]
   ]
</sourcecode>
            </figure>
            <t indent="0" pn="section-6.2.5.1-3"> The formal definition of the objective in CDDL
   (see "<xref target="RFC8610" format="title" sectionFormat="of" derivedContent="Concise Data Definition Language (CDDL): A Notational Convention to Express Concise Binary Object Representation (CBOR) and JSON Data Structures"/>" <xref target="RFC8610" format="default" sectionFormat="of" derivedContent="RFC8610"/>) is as follows: </t>
            <figure anchor="est-def-fig" align="left" suppress-title="false" pn="figure-5">
              <name slugifiedName="name-grasp-srvest-definition">GRASP "SRV.est" Definition</name>
              <sourcecode name="" type="cddl" markers="false" pn="section-6.2.5.1-4.1">
flood-message = [M_FLOOD, session-id, initiator, ttl,
                 +[objective, (locator-option / [])]]
                             ; See example above and explanation
                             ; below for initiator and ttl.

objective = ["SRV.est", objective-flags, loop-count,
                                       objective-value]

objective-flags = sync-only  ; As in [RFC8990].
sync-only       = 4          ; M_FLOOD only requires synchronization.
loop-count      = 255        ; Recommended as there is no mechanism
                             ; to discover network diameter.
objective-value = any        ; Reserved for future extensions.
</sourcecode>
            </figure>
            <t indent="0" pn="section-6.2.5.1-5">The objective name "SRV.est" indicates that the objective is an EST server compliant with
<xref target="RFC7030" format="default" sectionFormat="of" derivedContent="RFC7030"/> because "est" is a
registered service name ("<xref target="RFC6335" format="title" sectionFormat="of" derivedContent="Internet Assigned Numbers Authority (IANA) Procedures for the Management of the Service Name and Transport Protocol Port Number Registry"/>" <xref target="RFC6335" format="default" sectionFormat="of" derivedContent="RFC6335"/>) for <xref target="RFC7030" format="default" sectionFormat="of" derivedContent="RFC7030"/>.
The 'objective-value' field <bcp14>MUST</bcp14> be ignored if present. Backward-compatible extensions to
<xref target="RFC7030" format="default" sectionFormat="of" derivedContent="RFC7030"/> <bcp14>MAY</bcp14> be indicated through 'objective-value'.
Certificate renewal options that are incompatible with <xref target="RFC7030" format="default" sectionFormat="of" derivedContent="RFC7030"/> <bcp14>MUST</bcp14> use a different 'objective-name'.
Unrecognized 'objective-value' fields (or parts thereof if it is a partially understood structure) <bcp14>MUST</bcp14> be ignored.</t>
            <t indent="0" pn="section-6.2.5.1-6">The M_FLOOD message <bcp14>MUST</bcp14> be sent periodically.  The default <bcp14>SHOULD</bcp14> be 60 seconds;
the value <bcp14>SHOULD</bcp14> be operator configurable but <bcp14>SHOULD</bcp14> be
not smaller than 60 seconds.  The frequency of sending <bcp14>MUST</bcp14> be such
that the aggregate amount of periodic M_FLOODs from all flooding sources
cause only negligible traffic across the ACP.  The time-to-live (ttl) parameter <bcp14>SHOULD</bcp14> be 3.5 times the period so that up
to three consecutive messages can be dropped before an announcement is considered expired.
In the example above, the ttl is 210000 msec, that is, 3.5 times 60 seconds. When a service announcer
using these parameters unexpectedly dies immediately after sending the M_FLOOD,
receivers would consider it expired 210 seconds later. When a receiver tries to
connect to this dead service before this timeout, it will experience a failing connection and
use that as an indication that the service instance is dead and select another instance of the
same service instead (from another GRASP announcement).</t>
            <t indent="0" pn="section-6.2.5.1-7">The "SRV.est" objective(s) <bcp14>SHOULD</bcp14> only be announced when the ACP node knows that it can successfully
communicate with a CA to perform the EST renewal and/or rekeying operations for the ACP domain. See also
<xref target="security" format="default" sectionFormat="of" derivedContent="Section 11"/>.</t>
          </section>
          <section anchor="domcert-renewal" numbered="true" toc="include" removeInRFC="false" pn="section-6.2.5.2">
            <name slugifiedName="name-renewal">Renewal</name>
            <t indent="0" pn="section-6.2.5.2-1">When performing renewal, the node <bcp14>SHOULD</bcp14> attempt to connect to the remembered EST server. 
If that fails, it <bcp14>SHOULD</bcp14> attempt to connect to an EST server learned via GRASP.  The server
with which certificate renewal succeeds <bcp14>SHOULD</bcp14> be remembered for the next renewal.</t>
            <t indent="0" pn="section-6.2.5.2-2">Remembering the last renewal server and preferring it provides stickiness
that can help diagnostics.  It also provides some protection against off-path,
compromised ACP members announcing bogus information into GRASP.</t>
            <t indent="0" pn="section-6.2.5.2-3">Renewal of certificates <bcp14>SHOULD</bcp14> start after less than 50% of the domain certificate
lifetime so that network operations have ample time to investigate and
resolve any problems that cause a node to not renew its domain certificate
in time, and to allow prolonged periods of running parts of a network
disconnected from any CA.</t>
          </section>
          <section anchor="domcert-crl" numbered="true" toc="include" removeInRFC="false" pn="section-6.2.5.3">
            <name slugifiedName="name-certificate-revocation-list">Certificate Revocation Lists (CRLs)</name>
            <t indent="0" pn="section-6.2.5.3-1">The ACP node <bcp14>SHOULD</bcp14> support revocation through CRL(s) via HTTP from one
or more CRL Distribution Points (CRLDP).  The CRLDP(s) <bcp14>MUST</bcp14> be indicated
in the domain certificate when used.  If the CRLDP URL uses an IPv6 address
(ULA address when using the addressing rules specified in this document),
the ACP node will connect to the CRLDP via the ACP.  If the CRLDP uses a
domain name, the ACP node will connect to the CRLDP via the data plane.</t>
            <t indent="0" pn="section-6.2.5.3-2">It is common to use domain names for CRLDP(s), but there is no requirement
for the ACP to support DNS. Any DNS lookup in the data plane is
not only a possible security issue, but it would also not indicate whether
the resolved address is meant to be reachable across the ACP. Therefore,
the use of an IPv6 address versus the use of a DNS name doubles as an
indicator whether or not to reach the CRLDP via the ACP.</t>
            <t indent="0" pn="section-6.2.5.3-3">A CRLDP can be reachable across the ACP either by running it on a
node with ACP or by connecting its node via an ACP connect interface (see <xref target="ACPconnect" format="default" sectionFormat="of" derivedContent="Section 8.1"/>).</t>
            <t indent="0" pn="section-6.2.5.3-4">When using a private PKI for ACP certificates, the CRL may be need-to-know, for example,
to prohibit insight into the operational practices of the domain by tracking
the growth of the CRL.  In this case, HTTPS may be chosen to provide
confidentiality, especially when making the CRL available via the data plane.
Authentication and authorization <bcp14>SHOULD</bcp14> use ACP certificates and the ACP domain membership check (<xref target="certcheck" format="default" sectionFormat="of" derivedContent="Section 6.2.3"/>).
The CRLDP <bcp14>MAY</bcp14> omit the CRL verification during authentication of the peer to permit
CRL retrieval by an ACP node with a revoked ACP certificate, which can allow the 
(ex) ACP node to quickly discover its ACP certificate revocation. This may violate
the desired need-to-know requirement, though. ACP nodes <bcp14>MAY</bcp14> support CRLDP operations
via HTTPS.</t>
          </section>
          <section anchor="domcert-lifetime" numbered="true" toc="include" removeInRFC="false" pn="section-6.2.5.4">
            <name slugifiedName="name-lifetimes">Lifetimes</name>
            <t indent="0" pn="section-6.2.5.4-1">The certificate lifetime may be set to shorter lifetimes than customary
(one year) because certificate renewal is fully automated via ACP and EST.
The primary limiting factor for shorter certificate lifetimes 
is the load on the EST server(s) and CA.  It is therefore recommended that
ACP certificates are managed via a CA chain where the assigning
CA has enough performance to manage short-lived certificates. See also
<xref target="sub-ca" format="default" sectionFormat="of" derivedContent="Section 9.2.4"/> for a discussion about an example setup achieving
this. See also "<xref target="RFC8739" format="title" sectionFormat="of" derivedContent="Support for Short-Term, Automatically Renewed (STAR) Certificates in the Automated Certificate Management Environment (ACME)"/>" <xref target="RFC8739" format="default" sectionFormat="of" derivedContent="RFC8739"/>.</t>
            <t indent="0" pn="section-6.2.5.4-2">When certificate lifetimes are sufficiently short, such as few hours,
certificate revocation may not be necessary, allowing the simplification of the overall
certificate maintenance infrastructure.</t>
            <t indent="0" pn="section-6.2.5.4-3">See <xref target="bootstrap" format="default" sectionFormat="of" derivedContent="Appendix A.2"/> for further optimizations of certificate
maintenance when BRSKI can be used <xref target="RFC8995" format="default" sectionFormat="of" derivedContent="RFC8995"/>.</t>
          </section>
          <section anchor="domcert-re-enroll" numbered="true" toc="include" removeInRFC="false" pn="section-6.2.5.5">
            <name slugifiedName="name-reenrollment">Reenrollment</name>
            <t indent="0" pn="section-6.2.5.5-1">An ACP node may determine that its ACP certificate
has expired, for example, because the ACP node was powered down or
disconnected longer than its certificate lifetime. In this case, the ACP
node <bcp14>SHOULD</bcp14> convert to a role of a reenrolling candidate ACP node.</t>
            <t indent="0" pn="section-6.2.5.5-2">In this role, the node maintains the TA and certificate
chain associated with its ACP certificate exclusively for the purpose
of reenrollment, and it attempts (or waits) to get reenrolled with a new ACP
certificate.  The details depend on the mechanisms and protocols used
by the ACP registrars.</t>
            <t indent="0" pn="section-6.2.5.5-3">Please refer to <xref target="acp-registrars" format="default" sectionFormat="of" derivedContent="Section 6.11.7"/> and <xref target="RFC8995" format="default" sectionFormat="of" derivedContent="RFC8995"/>
for explanations about ACP registrars and vouchers as used in the following text.
When ACP is intended to be used without BRSKI, the details about BRSKI and
vouchers in the following text can be skipped.</t>
            <t indent="0" pn="section-6.2.5.5-4">When BRSKI is used (i.e., on ACP nodes that are ANI nodes), the reenrolling
candidate ACP node attempts to enroll like a candidate ACP node (BRSKI pledge), 
but instead of using the ACP node's IDevID certificate, it <bcp14>SHOULD</bcp14> first attempt to use its ACP domain
certificate in the BRSKI TLS authentication.  The BRSKI registrar <bcp14>MAY</bcp14> honor
this certificate beyond its expiration date purely for the purpose of
reenrollment. Using the ACP node's domain certificate allows the BRSKI
registrar to learn that node's acp-node-name
so that the BRSKI registrar can reassign the same ACP address information 
to the ACP node in the new ACP certificate.</t>
            <t indent="0" pn="section-6.2.5.5-5">If the BRSKI registrar denies the use of the old ACP certificate,
the reenrolling candidate ACP node <bcp14>MUST</bcp14> reattempt reenrollment using
its IDevID certificate as defined in BRSKI during the TLS connection setup.</t>
            <t indent="0" pn="section-6.2.5.5-6">When the BRSKI connection is attempted with either with the old ACP certificate
or the IDevID certificate, the reenrolling candidate ACP node <bcp14>SHOULD</bcp14> authenticate
the BRSKI registrar during TLS connection setup based on its existing TA
certificate chain information associated with its old ACP certificate.
The reenrolling candidate ACP node <bcp14>SHOULD</bcp14> only fall back to requesting a voucher from the BRSKI registrar 
when this authentication fails during TLS connection setup. 
As a countermeasure against attacks that attempt to force the ACP node to forget its prior (expired) certificate
and TA, the ACP node should alternate between attempting to reenroll using
its old keying material and attempting to reenroll with its IDevID and requesting
a voucher.</t>
            <t indent="0" pn="section-6.2.5.5-7">When mechanisms other than BRSKI are used for ACP certificate 
enrollment, the principles of the reenrolling candidate ACP node are the same.
The reenrolling candidate ACP node attempts to authenticate any ACP registrar peers
using reenrollment protocols and/or mechanisms via its existing certificate chain and/or TA information
and provides its existing ACP certificate and other identification
(such as the IDevID certificate) as necessary to the registrar.</t>
            <t indent="0" pn="section-6.2.5.5-8">Maintaining existing TA information is especially important
when using enrollment mechanisms that do not leverage
a mechanism to authenticate the ACP registrar (such as the voucher in BRSKI), 
and when the injection of certificate failures could otherwise make the ACP vulnerable to remote 
attacks by returning the ACP node to a "duckling" state in which
it accepts enrollment by any network it connects to. The (expired) ACP
certificate and ACP TA <bcp14>SHOULD</bcp14> therefore be maintained and attempted to be used as one possible credential for reenrollment
until new keying material is acquired.</t>
            <t indent="0" pn="section-6.2.5.5-9">When using BRSKI or other protocols and/or mechanisms that support vouchers,
maintaining existing TA information allows for lighter-weight reenrollment
of expired ACP certificates, especially in
environments where repeated acquisition of vouchers during the lifetime
of ACP nodes may be operationally expensive or otherwise undesirable.</t>
          </section>
          <section anchor="domcert-failing" numbered="true" toc="include" removeInRFC="false" pn="section-6.2.5.6">
            <name slugifiedName="name-failing-certificates">Failing Certificates</name>
            <t indent="0" pn="section-6.2.5.6-1">An ACP certificate is called failing in this document
if or when the ACP node to which the certificate was issued can determine that it was revoked (or explicitly
not renewed), or in the absence of such explicit local diagnostics,
when the ACP node fails to connect to other ACP nodes in the same ACP
domain using its ACP certificate. To
determine that the ACP certificate is the culprit of a connection failure, the peer
should pass the domain membership check (<xref target="certcheck" format="default" sectionFormat="of" derivedContent="Section 6.2.3"/>),
and connection error diagnostics should exclude other reasons for the connection failure.</t>
            <t indent="0" pn="section-6.2.5.6-2">This type of failure can happen during the setup or refreshment of a secure ACP channel
connection or during any other use of the ACP certificate, such as for the
TLS connection to an EST server for the renewal of the ACP domain
certificate.</t>
            <t indent="0" pn="section-6.2.5.6-3">The following are examples of failing certificates that the ACP node can only
discover through connection failure: the domain certificate or
any of its signing certificates could have been revoked or may have expired,
but the ACP node cannot diagnose this condition directly by itself. Revocation
information or clock synchronization may only be available across the ACP,
but the ACP node cannot build ACP secure channels because the ACP peers reject
the ACP node's domain certificate.</t>
            <t indent="0" pn="section-6.2.5.6-4">An ACP node <bcp14>SHOULD</bcp14> support the option to determine whether its ACP
certificate is failing, and when it does, put itself into the role of a
reenrolling candidate ACP node as explained in <xref target="domcert-re-enroll" format="default" sectionFormat="of" derivedContent="Section 6.2.5.5"/>.</t>
          </section>
        </section>
      </section>
      <section anchor="adj-table" numbered="true" toc="include" removeInRFC="false" pn="section-6.3">
        <name slugifiedName="name-acp-adjacency-table">ACP Adjacency Table</name>
        <t indent="0" pn="section-6.3-1">To know to which nodes to establish an ACP channel, every ACP node maintains an adjacency table.  The adjacency table contains information about adjacent ACP nodes, at a minimum: Node-ID (the identifier of the node inside the ACP, see <xref target="zone-scheme" format="default" sectionFormat="of" derivedContent="Section 6.11.3"/> and <xref target="Vlong" format="default" sectionFormat="of" derivedContent="Section 6.11.5"/>), the interface on which neighbor was discovered (by GRASP as explained below), the link-local IPv6 address of the neighbor on that interface, and the certificate (including acp-node-name).  An ACP node <bcp14>MUST</bcp14> maintain this adjacency table.  This table is used to determine to which neighbor an ACP connection is established.</t>
        <t indent="0" pn="section-6.3-2">When the next ACP node is not directly adjacent (i.e., not on a link
connected to this node), the information in the adjacency table can be supplemented by configuration.  For example, the Node-ID and IP address could be configured. See <xref target="remote-acp-neighbors" format="default" sectionFormat="of" derivedContent="Section 8.2"/>.</t>
        <t indent="0" pn="section-6.3-3">The adjacency table <bcp14>MAY</bcp14> contain information about the validity and trust of the adjacent ACP node's certificate.  However, subsequent steps <bcp14>MUST</bcp14> always start with the ACP domain membership check against the peer (see <xref target="certcheck" format="default" sectionFormat="of" derivedContent="Section 6.2.3"/>).</t>
        <t indent="0" pn="section-6.3-4">The adjacency table contains information about adjacent ACP nodes in general, independent of their domain and trust status.  The next step determines to which of those ACP nodes an ACP connection should be established.</t>
      </section>
      <section anchor="discovery-grasp" numbered="true" toc="include" removeInRFC="false" pn="section-6.4">
        <name slugifiedName="name-neighbor-discovery-with-dul">Neighbor Discovery with DULL GRASP</name>
        <t indent="0" pn="section-6.4-1">Discovery Unsolicited Link-Local (DULL) GRASP is a limited subset of GRASP intended to operate across an
insecure link-local scope.  See <xref target="RFC8990" sectionFormat="of" section="2.5.2" format="default" derivedLink="https://rfc-editor.org/rfc/rfc8990#section-2.5.2" derivedContent="RFC8990"/> for its
formal definition.  The ACP uses one instance of DULL GRASP for every L2 interface
of the ACP node to discover candidate ACP neighbors that are link-level adjacent.  Unless modified
by policy as noted earlier (<xref target="sec5bt2" format="none" sectionFormat="of" derivedContent="">Section 5, bullet point 2</xref>), native interfaces
(e.g., physical interfaces on physical nodes) <bcp14>SHOULD</bcp14> be initialized automatically to a state in which
ACP discovery can be performed, and any native interfaces with ACP neighbors can
then be brought into the ACP even if the interface is otherwise unconfigured.
Reception of packets on such otherwise unconfigured interfaces <bcp14>MUST</bcp14> be limited so that
at first only SLAAC ("<xref target="RFC4862" format="title" sectionFormat="of" derivedContent="IPv6 Stateless Address Autoconfiguration"/>" <xref target="RFC4862" format="default" sectionFormat="of" derivedContent="RFC4862"/>)
 and DULL GRASP work, and then only
the following ACP secure channel setup packets work, but not any other unnecessary traffic
(e.g., no other link-local IPv6 transport stack responders, for example).</t>
        <t indent="0" pn="section-6.4-2">Note that the use of the IPv6 link-local multicast address (ALL_GRASP_NEIGHBORS) implies
the need to use MLDv2 (see "<xref target="RFC3810" format="title" sectionFormat="of" derivedContent="Multicast Listener Discovery Version 2 (MLDv2) for IPv6"/>" <xref target="RFC3810" format="default" sectionFormat="of" derivedContent="RFC3810"/>)
to announce the desire to receive packets for
that address.  Otherwise, DULL GRASP could fail to operate correctly in the presence of
MLD-snooping switches ("<xref target="RFC4541" format="title" sectionFormat="of" derivedContent="Considerations for Internet Group Management Protocol (IGMP) and Multicast Listener Discovery (MLD) Snooping Switches"/>" <xref target="RFC4541" format="default" sectionFormat="of" derivedContent="RFC4541"/>) that either do not support ACP or are not ACP enabled because those switches would stop forwarding DULL GRASP packets.
Switches that do not support MLD snooping simply need to operate as pure L2 bridges for
IPv6 multicast packets for DULL GRASP to work.</t>
        <t indent="0" pn="section-6.4-3">ACP discovery <bcp14>SHOULD NOT</bcp14> be enabled by default on non-native interfaces.  In particular, ACP discovery <bcp14>MUST NOT</bcp14> run inside the ACP across ACP virtual interfaces.  See <xref target="enabling-acp" format="default" sectionFormat="of" derivedContent="Section 9.3"/> for further non-normative suggestions on how to enable and disable ACP at the node and interface level.  See <xref target="conf-tunnel" format="default" sectionFormat="of" derivedContent="Section 8.2.2"/> for more details about tunnels (typical non-native interfaces).  See <xref target="acp-l2-switches" format="default" sectionFormat="of" derivedContent="Section 7"/> for extending ACP on devices operating (also) as L2 bridges.</t>
        <t indent="0" pn="section-6.4-4">Note: if an ACP node also implements BRSKI to enroll its ACP certificate
(see <xref target="bootstrap" format="default" sectionFormat="of" derivedContent="Appendix A.2"/> for a summary), then the above considerations also apply to 
GRASP discovery for BRSKI.  Each DULL instance of GRASP
set up for ACP is then also used for the discovery of a bootstrap proxy via BRSKI when the node
does not have a domain certificate.
Discovery of ACP neighbors happens only when the node does have the certificate.  The node
therefore never needs to discover both a bootstrap proxy and an ACP neighbor at the same time.</t>
        <t indent="0" pn="section-6.4-5">An ACP node announces itself to potential ACP peers by use of the "AN_ACP" objective.
This is a synchronization objective intended to be flooded on a single link using the
GRASP Flood Synchronization (M_FLOOD) message.  In accordance with the design of the Flood Synchronization message,
a locator consisting of a specific link-local IP address, IP protocol number, and port number
will be distributed with the flooded objective.  An example of the message is informally:</t>
        <figure anchor="an-acp-example" align="left" suppress-title="false" pn="figure-6">
          <name slugifiedName="name-grasp-an_acp-objective-exam">GRASP "AN_ACP" Objective Example</name>
          <sourcecode name="" type="" markers="false" pn="section-6.4-6.1">
   [M_FLOOD, 12340815, h'fe80000000000000c0011001feef0000', 210000,
     [["AN_ACP", 4, 1, "IKEv2" ],
      [O_IPv6_LOCATOR,
           h'fe80000000000000c0011001feef0000', IPPROTO_UDP, 15000]]
     [["AN_ACP", 4, 1, "DTLS" ],
      [O_IPv6_LOCATOR,
           h'fe80000000000000c0011001feef0000', IPPROTO_UDP, 17000]]
   ]
</sourcecode>
        </figure>
        <t indent="0" pn="section-6.4-7"> The formal CDDL definition is: </t>
        <figure anchor="an-acp-def" align="left" suppress-title="false" pn="figure-7">
          <name slugifiedName="name-grasp-an_acp-definition">GRASP "AN_ACP" Definition</name>
          <sourcecode name="" type="cddl" markers="false" pn="section-6.4-8.1">
  flood-message = [M_FLOOD, session-id, initiator, ttl,
                   +[objective, (locator-option / [])]]

  objective = ["AN_ACP", objective-flags, loop-count,
                                         objective-value]

  objective-flags = sync-only ; as in [RFC8990]
  sync-only =  4    ; M_FLOOD only requires synchronization
  loop-count = 1    ; limit to link-local operation

  objective-value = method-name / [ method, *extension ]
  method = method-name / [ method-name, *method-param ]
  method-name = "IKEv2" / "DTLS" / id
  extension = any
  method-param = any
  id = text .regexp "[A-Za-z@_$]([-.]*[A-Za-z0-9@_$])*"
</sourcecode>
        </figure>
        <t indent="0" pn="section-6.4-9">The 'objective-flags' field is set to indicate synchronization.</t>
        <t indent="0" pn="section-6.4-10">The 'loop-count' is fixed at 1 since this is a link-local operation.</t>
        <t indent="0" pn="section-6.4-11">In the above example, the <bcp14>RECOMMENDED</bcp14> period of sending of the
    objective is 60 seconds. The indicated 'ttl' of 210000 msec means
    that the objective would be cached by ACP nodes even when two
     out of three messages are dropped in transit.</t>
        <t indent="0" pn="section-6.4-12">The 'session-id' is a random number used for loop prevention (distinguishing a message from a prior instance of the same message).  In DULL this field is irrelevant but has to be set according to the GRASP specification.</t>
        <t indent="0" pn="section-6.4-13">The originator <bcp14>MUST</bcp14> be the IPv6 link-local address of the originating ACP node on the sending interface.</t>
        <t indent="0" pn="section-6.4-14">The 'method-name' in the 'objective-value' parameter is a string indicating the protocol available at the specified or implied locator. It is a protocol supported by the node to negotiate a secure channel. "IKEv2" as shown in <xref target="an-acp-example" format="default" sectionFormat="of" derivedContent="Figure 6"/> is the protocol used to negotiate an IPsec secure channel.</t>
        <t indent="0" pn="section-6.4-15">The 'method-param' parameter allows method-specific parameters to be carried. This specification does not define any 'method-param'(s) for "IKEv2" or "DTLS". Any method-params for these two methods that are not understood by an ACP node <bcp14>MUST</bcp14> be ignored by it.</t>
        <t indent="0" pn="section-6.4-16">The 'extension' parameter allows the definition of method-independent parameters. This specification does not define any extensions. Extensions not understood by an ACP node <bcp14>MUST</bcp14> be ignored by it.</t>
        <t indent="0" pn="section-6.4-17">The 'locator-option' is optional and is only required when the secure channel protocol is not offered at a well-defined port number, or if there is no well-defined port number.</t>
        <t indent="0" pn="section-6.4-18">IKEv2 is the actual protocol used to negotiate an IPsec connection.  GRASP therefore indicates "IKEv2" and not "IPsec". If "IPsec" was used, this could mean the use of the obsolete, older version IKE (v1) ("<xref target="RFC2409" format="title" sectionFormat="of" derivedContent="The Internet Key Exchange (IKE)"/>" <xref target="RFC2409" format="default" sectionFormat="of" derivedContent="RFC2409"/>).  IKEv2 has an IANA-assigned port number 500, but in <xref target="an-acp-example" format="default" sectionFormat="of" derivedContent="Figure 6"/>, the candidate ACP neighbor is offering ACP secure channel negotiation via IKEv2 on port 15000 (purely to show through the example that GRASP allows the indication of a port number, and it does not have to be IANA assigned).</t>
        <t indent="0" pn="section-6.4-19">There is no default UDP port for DTLS, it is always locally assigned by the node. For further details about the "DTLS" secure channel protocol, see <xref target="DTLS" format="default" sectionFormat="of" derivedContent="Section 6.8.4"/>.</t>
        <t indent="0" pn="section-6.4-20">If a locator is included, it <bcp14>MUST</bcp14> be an O_IPv6_LOCATOR, and the IPv6 address <bcp14>MUST</bcp14> be the same as the initiator address (these are DULL requirements to minimize third-party DoS attacks).</t>
        <t indent="0" pn="section-6.4-21">The secure channel methods defined in this document use "IKEv2" and "DTLS" for 'objective-value'.  There is no distinction between IKEv2 native and GRE-IKEv2 because this is purely negotiated via IKEv2.</t>
        <t indent="0" pn="section-6.4-22">A node that supports more than one secure channel protocol method needs to flood multiple versions
    of the "AN_ACP" objective so that each method can be accompanied by its own 'locator-option'.  This can use a single GRASP M_FLOOD message as shown in <xref target="an-acp-example" format="default" sectionFormat="of" derivedContent="Figure 6"/>.</t>
        <t indent="0" pn="section-6.4-23">The primary use of DULL GRASP is to discover the link-local IPv6 address of candidate ACP peers on subnets. The signaling of the supported secure channel option is primarily for diagnostic purposes, but it is also necessary for discovery when the protocol has no well-known transport address, such as in the case of DTLS.  </t>
        <t indent="0" pn="section-6.4-24">Note that a node serving both as an ACP node and BRSKI Join Proxy may choose to distribute the "AN_ACP" objective and the respective BRSKI in the same M_FLOOD message, since GRASP allows multiple objectives in one message.  This may be impractical, though, if ACP and BRSKI operations are implemented via separate software modules and/or ASAs.</t>
        <t indent="0" pn="section-6.4-25">The result of the discovery is the IPv6 link-local address of the neighbor as well as its supported secure channel protocols (and the non-standard port they are running on).  It is stored in the ACP adjacency table (see <xref target="adj-table" format="default" sectionFormat="of" derivedContent="Section 6.3"/>), which then drives the further building of the ACP to that neighbor.</t>
        <t indent="0" pn="section-6.4-26">Note that the described DULL GRASP objective intentionally does not include the ACP node's ACP certificate, even though this would be useful for diagnostics and to simplify the security exchange in ACP secure channel security association protocols (see <xref target="associations" format="default" sectionFormat="of" derivedContent="Section 6.8"/>). The reason is that DULL GRASP messages are periodically multicast across IPv6 subnets, and full certificates could easily lead to fragmented IPv6 DULL GRASP multicast packets due to the size of a certificate.  This would be highly undesirable.</t>
      </section>
      <section anchor="selection" numbered="true" toc="include" removeInRFC="false" pn="section-6.5">
        <name slugifiedName="name-candidate-acp-neighbor-sele">Candidate ACP Neighbor Selection</name>
        <t indent="0" pn="section-6.5-1">An ACP node determines to which other ACP nodes in the adjacency table it should attempt to build an ACP connection.  This is based on the information in the ACP adjacency table.</t>
        <t indent="0" pn="section-6.5-2">The ACP is established exclusively between nodes in the same domain.  This includes all routing subdomains. <xref target="domain-usage" format="default" sectionFormat="of" derivedContent="Appendix A.6"/> explains how ACP connections across multiple routing subdomains are special.</t>
        <t indent="0" pn="section-6.5-3">The result of the candidate ACP neighbor selection process is a list of adjacent or configured autonomic neighbors to which an ACP channel should be established.  The next step begins that channel establishment.</t>
      </section>
      <section anchor="channel-selection" numbered="true" toc="include" removeInRFC="false" pn="section-6.6">
        <name slugifiedName="name-channel-selection">Channel Selection</name>
        <t indent="0" pn="section-6.6-1">To avoid attacks, the initial discovery of candidate ACP peers cannot include any unprotected negotiation.  To avoid reinventing and validating security association mechanisms, the next step after discovering the address of a candidate neighbor is to establish a security association with that neighbor using a well-known security association method.</t>
        <t indent="0" pn="section-6.6-2">It seems clear from the use cases that not all types of ACP nodes can or need to connect directly to each other, nor are they able to support or prefer all possible mechanisms. 
  For example, IoT devices that are codespace limited may only support DTLS because that code exists already on them for end-to-end security, but low-end, in-ceiling L2 switches may only want to support Media Access Control Security (MacSec, see 802.1AE <xref target="MACSEC" format="default" sectionFormat="of" derivedContent="MACSEC"/>) because that is also supported in their chips.  Only a flexible gateway device may need to support both of these mechanisms and potentially more.  Note that MacSec is not required by any profiles of the ACP in this specification. Instead, MacSec is mentioned as an interesting potential secure channel protocol.  Note also that the security model allows and requires any-to-any authentication and authorization between all ACP nodes because there is not only hop-by-hop but also end-to-end authentication for secure channels.</t>
        <t indent="0" pn="section-6.6-3">To support extensible selection of the secure channel protocol without a single common mandatory-to-implement (MTI) protocol, an ACP node <bcp14>MUST</bcp14> try all the ACP secure channel protocols it supports and that are also announced by the candidate ACP neighbor via its "AN_ACP" GRASP parameters (these are called the "feasible" ACP secure channel protocols).</t>
        <t indent="0" pn="section-6.6-4">To ensure that the selection of the secure channel protocols always succeeds in a predictable fashion without blocking, the following rules apply:
</t>
        <ul spacing="normal" bare="false" empty="false" indent="3" pn="section-6.6-5">
          <li pn="section-6.6-5.1">An ACP node may choose to attempt to initiate the different feasible ACP secure channel protocols it supports according to its local policies sequentially or in parallel, but it <bcp14>MUST</bcp14> support acting as a responder to all of them in parallel.</li>
          <li pn="section-6.6-5.2">Once the first ACP secure channel protocol connection to a specific peer IPv6 address passes peer authentication, the two peers know each other's certificate because those ACP certificates are used by all secure channel protocols for mutual authentication.  The peer with the higher Node-ID in the AcpNodeName of its ACP certificate takes on the role of the Decider towards the peer. The other peer takes on the role of the Follower. The Decider selects which secure channel protocol to ultimately use.</li>
          <li pn="section-6.6-5.3">The Follower becomes passive: it does not attempt to further initiate ACP secure channel protocol connections with the Decider and does not consider it to be an error when the Decider closes secure channels.  The Decider becomes the active party, continuing to attempt the setup of secure channel protocols with the Follower. This process terminates when the Decider arrives at the "best"
 ACP secure channel connection option that also works with the Follower ("best" from the Decider's point of view).</li>
          <li pn="section-6.6-5.4">A peer with a "0" acp-address in its AcpNodeName takes on the role of Follower when peering with a node that has a non-"0" acp-address (note that this specification does not fully define the behavior of ACP secure channel negotiation for nodes with a "0" ACP address field, it only defines interoperability with such ACP nodes).</li>
        </ul>
        <t indent="0" pn="section-6.6-6">In a simple example, ACP peer Node 1 attempts to initiate an IPsec connection via IKEv2 to peer Node 2.  The IKEv2 authentication succeeds. Node 1 has the lower ACP address and becomes the Follower. Node 2 becomes the Decider. IKEv2 might not be the preferred ACP secure channel protocol for the Decider Node 2. Node 2 would therefore proceed to attempt secure channel setups with more preferred protocol options (in its view, e.g., DTLS/UDP). If any such preferred ACP secure channel connection of the Decider succeeds, it would close the IPsec connection.  If Node 2 has no preferred protocol option over IPsec, or no such connection attempt from Node 2 to Node 1 succeeds, Node 2 would keep the IPsec connection and use it.</t>
        <t indent="0" pn="section-6.6-7">The Decider <bcp14>SHOULD NOT</bcp14> send actual payload packets across a secure channel until it has decided to use it. The Follower <bcp14>MAY</bcp14> delay linking the ACP secure channel to the ACP virtual interface until it sees the first payload packet from the Decider up to a maximum of 5 seconds to avoid unnecessarily linking a secure channel that will be terminated as undesired by the Decider shortly afterward.</t>
        <t keepWithNext="true" indent="0" pn="section-6.6-8">The following sequence of steps show this example in more detail. Each step is tagged with [&lt;step#&gt;{:&lt;connection&gt;}]. The connection is included to more easily distinguish which of the two competing connections the step belongs to, one initiated by Node 1, one initiated by Node 2.
        </t>
        <dl newline="false" indent="10" spacing="normal" pn="section-6.6-9">
          <dt pn="section-6.6-9.1">[1]</dt>
          <dd pn="section-6.6-9.2">Node 1 sends GRASP "AN_ACP" message to announce itself.</dd>
          <dt pn="section-6.6-9.3">[2]</dt>
          <dd pn="section-6.6-9.4">Node 2 sends GRASP "AN_ACP" message to announce itself.</dd>
          <dt pn="section-6.6-9.5">[3]</dt>
          <dd pn="section-6.6-9.6">Node 2 receives [1] from Node 1.</dd>
          <dt pn="section-6.6-9.7">[4:C1]</dt>
          <dd pn="section-6.6-9.8">Because of [3], Node 2 starts as initiator on its preferred
secure channel protocol towards Node 1. Connection C1.</dd>
          <dt pn="section-6.6-9.9">[5]</dt>
          <dd pn="section-6.6-9.10">Node 1 receives [2] from Node 2.</dd>
          <dt pn="section-6.6-9.11">[6:C2]</dt>
          <dd pn="section-6.6-9.12">Because of [5], Node 1 starts as initiator on its preferred secure channel protocol towards Node 2. Connection C2.</dd>
          <dt pn="section-6.6-9.13">[7:C1]</dt>
          <dd pn="section-6.6-9.14">Node 1 and Node 2 have authenticated each other's certificate on connection C1 as valid ACP peers.</dd>
          <dt pn="section-6.6-9.15">[8:C1]</dt>
          <dd pn="section-6.6-9.16">Node 1's certificate has a lower ACP Node-ID than Node 2's, therefore Node 1 considers itself the Follower and Node 2 the Decider on connection C1. Connection setup C1 is completed.</dd>
          <dt pn="section-6.6-9.17">[9]</dt>
          <dd pn="section-6.6-9.18">Node 1 refrains from attempting any further secure channel connections to Node
2 (the Decider) as learned from [2] because it knows from [8:C1] that it is the Follower relative to Node 2.
</dd>
          <dt pn="section-6.6-9.19">[10:C2]</dt>
          <dd pn="section-6.6-9.20">Node 1 and Node 2 have authenticated each other's certificate on connection C2 (like [7:C1]).</dd>
          <dt pn="section-6.6-9.21">[11:C2]</dt>
          <dd pn="section-6.6-9.22">Node 1's certificate has a lower ACP Node-ID than Node 2's, therefore Node 1
considers itself the Follower and Node 2 the Decider on connection C2, but
they also identify that C2 is to the same mutual peer as their C1, so this has
no further impact: the roles Decider and Follower where already assigned
between these two peers by [8:C1].</dd>
          <dt pn="section-6.6-9.23">[12:C2]</dt>
          <dd pn="section-6.6-9.24">Node 2 (the Decider) closes C1. Node 1 is fine with this, because of its role as the Follower (from [8:C1]).</dd>
          <dt pn="section-6.6-9.25">[13]</dt>
          <dd pn="section-6.6-9.26">Node 2 (the Decider) and Node 1 (the Follower) start data
transfer across C2, which makes it become a secure channel for the ACP.</dd>
        </dl>
        <t indent="0" pn="section-6.6-10">All this negotiation is in the context of an L2 interface.  The Decider and Follower will build ACP connections to each other on every L2 interface that they both connect to.  An autonomic node <bcp14>MUST NOT</bcp14> assume that neighbors with the same L2 or link-local IPv6 addresses on different L2 interfaces are the same node.  This can only be determined after examining the certificate after a successful security association attempt.</t>
        <t indent="0" pn="section-6.6-11">The Decider <bcp14>SHOULD NOT</bcp14> suppress attempting a particular ACP secure channel protocol connection on one L2 interface because this type of ACP secure channel connection has failed to the peer with the same ACP certificate on another L2 interface: not only may the supported ACP secure channel protocol options be different on the same ACP peer across different L2 interfaces, but also error conditions may cause inconsistent failures across different L2 interfaces. Avoiding such connection attempt optimizations can therefore help to increase robustness in the case of errors.</t>
      </section>
      <section anchor="neighbor_verification" numbered="true" toc="include" removeInRFC="false" pn="section-6.7">
        <name slugifiedName="name-candidate-acp-neighbor-veri">Candidate ACP Neighbor Verification</name>
        <t indent="0" pn="section-6.7-1">Independent of the security association protocol chosen, candidate ACP neighbors need to be authenticated based on their domain certificate.  This implies that any secure channel protocol <bcp14>MUST</bcp14> support certificate-based authentication that can support the ACP domain membership check as defined in <xref target="certcheck" format="default" sectionFormat="of" derivedContent="Section 6.2.3"/>.  If it fails, the connection attempt is aborted and an error logged. Attempts to reconnect <bcp14>MUST</bcp14> be throttled. The <bcp14>RECOMMENDED</bcp14> default is exponential base-two backoff with an initial retransmission time (IRT) of 10 seconds and a maximum retransmission time (MRT) of 640 seconds.</t>
        <t indent="0" pn="section-6.7-2">Failure to authenticate an ACP neighbor when acting in the role of a responder
of the security authentication protocol <bcp14>MUST NOT</bcp14> impact the attempts of the ACP node
to attempt establishing a connection as an initiator. Only failed connection attempts as
an initiator must cause throttling. This rule is meant to increase resilience
of secure channel creation. <xref target="channel-selection" format="default" sectionFormat="of" derivedContent="Section 6.6"/> shows how simultaneous mutual
secure channel setup collisions are resolved.</t>
      </section>
      <section anchor="associations" numbered="true" toc="include" removeInRFC="false" pn="section-6.8">
        <name slugifiedName="name-security-association-secure">Security Association (Secure Channel) Protocols</name>
        <t indent="0" pn="section-6.8-1">This section describes how ACP nodes establish secured data connections to automatically discovered or configured peers in the ACP. <xref target="discovery-grasp" format="default" sectionFormat="of" derivedContent="Section 6.4"/> describes how peers that are adjacent on an IPv6 subnet are discovered automatically. <xref target="remote-acp-neighbors" format="default" sectionFormat="of" derivedContent="Section 8.2"/> describes how to configure peers that are not adjacent on an IPv6 subnet.</t>
        <t indent="0" pn="section-6.8-2"><xref target="ACP-virtual-interfaces" format="default" sectionFormat="of" derivedContent="Section 6.13.5.2"/> describes how secure channels are mapped to virtual IPv6 subnet interfaces in the ACP. The simple case is to map every ACP secure channel to a separate ACP point-to-point virtual interface (<xref target="ACP-p2p-virtual-interfaces" format="default" sectionFormat="of" derivedContent="Section 6.13.5.2.1"/>). When a single subnet has multiple ACP peers, this results in multiple ACP point-to-point virtual interfaces across that underlying multiparty IPv6 subnet. This can be optimized with ACP multi-access virtual interfaces (<xref target="ACP-ma-virtual-interfaces" format="default" sectionFormat="of" derivedContent="Section 6.13.5.2.2"/>), but the benefits of that optimization may not justify the complexity of that option.</t>
        <section anchor="general-considerations" numbered="true" toc="include" removeInRFC="false" pn="section-6.8.1">
          <name slugifiedName="name-general-considerations">General Considerations</name>
          <t indent="0" pn="section-6.8.1-1">Due to channel selection (<xref target="channel-selection" format="default" sectionFormat="of" derivedContent="Section 6.6"/>), ACP can support an evolving set of security association protocols and does not require support for a single network-wide MTI.  ACP nodes only need to implement those protocols required to interoperate with their candidate peers, not with potentially any node in the ACP domain. See <xref target="Profiles" format="default" sectionFormat="of" derivedContent="Section 6.8.5"/> for an example of this.</t>
          <t indent="0" pn="section-6.8.1-2">The degree of security required on every hop of an ACP network needs to be consistent across the network so that there is no designated "weakest link" because it is that "weakest link" that would otherwise become the designated point of attack. When the secure channel protection on one link is compromised, it can be used to send and/or receive packets across the whole ACP network. Therefore, even though the security association protocols can be different, their minimum degree of security should be comparable.</t>
          <t indent="0" pn="section-6.8.1-3">Secure channel protocols do not need to always support arbitrary Layer 3 (L3) connectivity between peers, but can leverage the fact that the standard use case for ACP secure channels is an L2 adjacency. Hence, L2 dependent mechanisms could be adopted for use as secure channel association protocols.</t>
          <t indent="0" pn="section-6.8.1-4">L2 mechanisms such as strong encrypted radio technologies or <xref target="MACSEC" format="default" sectionFormat="of" derivedContent="MACSEC"/> may offer equivalent encryption, and the ACP security association protocol may only be required to authenticate ACP domain membership of a peer and/or derive a key for the L2 mechanism. Mechanisms that leverage such underlying L2 security to auto-discover and associate ACP peers are possible and desirable to avoid duplication of encryption, but none are specified in this document.</t>
          <t indent="0" pn="section-6.8.1-5">Strong physical security of a link may stand in where cryptographic security is infeasible. As there is no secure mechanism to automatically discover strong physical security solely between two peers, it can only be used with explicit configuration, and that configuration too could become an attack vector. This document therefore specifies with <xref target="ACPconnect" format="default" sectionFormat="of" derivedContent="Section 8.1">ACP connect</xref> only one explicitly configured mechanism without any secure channel association protocol for the case where both the link and the nodes attached to it have strong physical security.</t>
        </section>
        <section anchor="common-requirements" numbered="true" toc="include" removeInRFC="false" pn="section-6.8.2">
          <name slugifiedName="name-common-requirements">Common Requirements</name>
          <t indent="0" pn="section-6.8.2-1">The authentication of peers in any security association protocol <bcp14>MUST</bcp14> use the ACP certificate according to <xref target="certcheck" format="default" sectionFormat="of" derivedContent="Section 6.2.3"/>.  Because auto-discovery of candidate ACP neighbors via GRASP (see <xref target="discovery-grasp" format="default" sectionFormat="of" derivedContent="Section 6.4"/>) as specified in this document does not communicate the neighbor's ACP certificate, and ACP nodes may not (yet) have any other network connectivity to retrieve certificates, any security association protocol <bcp14>MUST</bcp14> use a mechanism to communicate the certificate directly instead of relying on a referential mechanism such as communicating only a hash and/or URL for the certificate.</t>
          <t indent="0" pn="section-6.8.2-2">A security association protocol <bcp14>MUST</bcp14> use Forward Secrecy (whether inherently or as part of a profile of the security association protocol). </t>
          <t indent="0" pn="section-6.8.2-3">Because the ACP payload of legacy protocol payloads inside the ACP and hop-by-hop ACP flooded GRASP information is unencrypted, the ACP secure channel protocol requires confidentiality. Symmetric encryption for the transmission of secure channel data <bcp14>MUST</bcp14> use encryption schemes considered to be security wise equal to or better than 256-bit key strength, such as AES-256. There <bcp14>MUST NOT</bcp14> be support for NULL encryption. </t>
          <t indent="0" pn="section-6.8.2-4">Security association protocols typically only signal the end entity certificate
(e.g., the ACP certificate) and any possible intermediate CA certificates
for successful mutual authentication.  The TA has to be mutually known and
trusted, and therefore its certificate does not need to be signaled for successful
mutual authentication. Nevertheless, for use with ACP secure channel setup,
there <bcp14>SHOULD</bcp14> be the option to include the TA certificate in the signaling 
to aid troubleshooting, see <xref target="ta-troubleshoot" format="default" sectionFormat="of" derivedContent="Section 9.1.1"/>.</t>
          <t indent="0" pn="section-6.8.2-5">Signaling of TA certificates may not be appropriate when the deployment relies on
 a security model where the TA certificate content is considered confidential, and only its hash
is appropriate for signaling. ACP nodes <bcp14>SHOULD</bcp14> have a mechanism to select whether
the TA certificate is signaled or not, assuming that both options are possible with
a specific secure channel protocol.</t>
          <t indent="0" pn="section-6.8.2-6">An ACP secure channel <bcp14>MUST</bcp14> immediately be terminated when the lifetime of any certificate in the chain used to authenticate the neighbor expires or becomes revoked.  This may not be standard behavior in secure channel protocols because the certificate authentication may only influence the setup of the secure channel in these protocols, but may not be revalidated during the lifetime of the secure connection in the absence of this requirement.</t>
          <t indent="0" pn="section-6.8.2-7">When specifying an additional security association protocol for ACP secure channels beyond those covered in this document, any protocol options that are unnecessary for the support of devices that are expected to be able to support the ACP <bcp14>SHOULD</bcp14> be eliminated in order to minimize implementation complexity. For example, definitions for security protocols often include old and/or inferior security options required only to interoperate with existing devices that cannot update to the currently preferred security options. Such old and/or inferior security options do not need to be supported when a security association protocol is first specified for the ACP, thus strengthening the "weakest link" and simplifying ACP implementation overhead.</t>
        </section>
        <section anchor="IPsec-group" numbered="true" toc="include" removeInRFC="false" pn="section-6.8.3">
          <name slugifiedName="name-acp-via-ipsec">ACP via IPsec</name>
          <t indent="0" pn="section-6.8.3-1">An ACP node announces its ability to support IPsec, negotiated via IKEv2, as the ACP secure channel protocol using the "IKEv2" 'objective-value' in the "AN_ACP" GRASP objective.</t>
          <t indent="0" pn="section-6.8.3-2">The ACP usage of IPsec and IKEv2 mandates a profile with a narrow set of options of the current Standards Track usage guidance for IPsec ("<xref target="RFC8221" format="title" sectionFormat="of" derivedContent="Cryptographic Algorithm Implementation Requirements and Usage Guidance for Encapsulating Security Payload (ESP) and Authentication Header (AH)"/>" <xref target="RFC8221" format="default" sectionFormat="of" derivedContent="RFC8221"/>) and IKEv2 ("<xref target="RFC8247" format="title" sectionFormat="of" derivedContent="Algorithm Implementation Requirements and Usage Guidance for the Internet Key Exchange Protocol Version 2 (IKEv2)"/>" <xref target="RFC8247" format="default" sectionFormat="of" derivedContent="RFC8247"/>).  These options result in stringent security properties and can exclude deprecated and legacy algorithms because there is no need for interoperability with legacy equipment for ACP secure channels.  Any such backward compatibility would lead only to an increased attack surface and implementation complexity, for no benefit.</t>
          <section anchor="IPsec" toc="include" numbered="true" removeInRFC="false" pn="section-6.8.3.1">
            <name slugifiedName="name-native-ipsec">Native IPsec</name>
            <t indent="0" pn="section-6.8.3.1-1"> An ACP node that is supporting native IPsec
	    <bcp14>MUST</bcp14> use IPsec in tunnel mode, negotiated via
	    IKEv2, and with IPv6 payload (e.g., ESP Next Header of 41). It
	    <bcp14>MUST</bcp14> use local and peer link-local IPv6 addresses
	    for encapsulation.  Manual keying <bcp14>MUST NOT</bcp14> be used,
	    see <xref target="domcert" format="default" sectionFormat="of" derivedContent="Section 6.2"/>. Traffic Selectors
	    are:</t>
            <artwork name="" type="" align="left" alt="" pn="section-6.8.3.1-2">
TSi = (0, 0-65535, :: - FFFF:FFFF:FFFF:FFFF:FFFF:FFFF:FFFF:FFFF)
TSr = (0, 0-65535, :: - FFFF:FFFF:FFFF:FFFF:FFFF:FFFF:FFFF:FFFF)
</artwork>
            <t indent="0" pn="section-6.8.3.1-3">IPsec tunnel mode is required because the ACP will route and/or forward packets received from any other ACP node across the ACP secure channels, and not only its own generated ACP packets.  With IPsec transport mode (and no additional encapsulation header in the ESP payload), it would only be possible to send packets originated by the ACP node itself because the IPv6 addresses of the ESP must be the same as that of the outer IPv6 header.</t>
            <section anchor="rfc8221req" toc="include" numbered="true" removeInRFC="false" pn="section-6.8.3.1.1">
              <name slugifiedName="name-rfc-8221-ipsec-esp">RFC 8221 (IPsec/ESP)</name>
              <t indent="0" pn="section-6.8.3.1.1-1">ACP IPsec implementations <bcp14>MUST</bcp14> comply with <xref target="RFC8221" format="default" sectionFormat="of" derivedContent="RFC8221"/> and any specifications that update it. The requirements from above and this section amend and supersede its requirements.</t>
              <t indent="0" pn="section-6.8.3.1.1-2">The IP Authentication Header (AH) <bcp14>MUST NOT</bcp14> be used (because it does not provide confidentiality).</t>
              <t indent="0" pn="section-6.8.3.1.1-3">For the required ESP encryption algorithms in <xref target="RFC8221" sectionFormat="of" section="5" format="default" derivedLink="https://rfc-editor.org/rfc/rfc8221#section-5" derivedContent="RFC8221"/>, the following guidance applies:
</t>
              <ul spacing="normal" bare="false" empty="false" indent="3" pn="section-6.8.3.1.1-4">
                <li pn="section-6.8.3.1.1-4.1">ENCR_NULL AH <bcp14>MUST NOT</bcp14> be used (because it does not provide confidentiality).</li>
                <li pn="section-6.8.3.1.1-4.2">ENCR_AES_GCM_16 is the only MTI ESP encryption algorithm for ACP via IPsec/ESP (it is already listed as <bcp14>MUST</bcp14> in <xref target="RFC8221" format="default" sectionFormat="of" derivedContent="RFC8221"/>).</li>
                <li pn="section-6.8.3.1.1-4.3">ENCR_AES_CBC with AUTH_HMAC_SHA2_256_128 (as the ESP authentication algorithm) and ENCR_AES_CCM_8 <bcp14>MAY</bcp14> be supported. If either provides higher performance than ENCR_AES_GCM_16, it <bcp14>SHOULD</bcp14> be supported.</li>
                <li pn="section-6.8.3.1.1-4.4">ENCR_CHACHA20_POLY1305 <bcp14>SHOULD</bcp14> be supported at equal or higher performance than ENCR_AES_GCM_16. If that performance is not feasible, it <bcp14>MAY</bcp14> be supported.</li>
              </ul>
              <t indent="0" pn="section-6.8.3.1.1-5">IKEv2 indicates an order for the offered algorithms.  The algorithms <bcp14>SHOULD</bcp14> be ordered by performance.  The first algorithm supported by both sides is generally chosen.</t>
              <t indent="0" pn="section-6.8.3.1.1-6"> Explanations:
</t>
              <ul spacing="normal" bare="false" empty="false" indent="3" pn="section-6.8.3.1.1-7">
                <li pn="section-6.8.3.1.1-7.1">
      There is no requirement to interoperate with legacy equipment in ACP
      secure channels, so a single MTI encryption algorithm for IPsec in ACP
      secure channels is sufficient for interoperability and allows for
      the most lightweight implementations.
    </li>
                <li pn="section-6.8.3.1.1-7.2">
      ENCR_AES_GCM_16 is an Authenticated Encryption with Associated Data (AEAD) cipher
      mode, so no additional ESP authentication algorithm is needed, simplifying
      the MTI requirements of IPsec for the ACP.
    </li>
                <li pn="section-6.8.3.1.1-7.3">There is no MTI requirement for the support of ENCR_AES_CBC because
      ENCR_AES_GCM_16 is assumed to be feasible with less cost and/or higher
      performance in modern devices' hardware-accelerated implementations
      compared to ENCR-AES_CBC.
    </li>
                <li pn="section-6.8.3.1.1-7.4">
      ENCR_CHACHA20_POLY1305 is mandatory in <xref target="RFC8221" format="default" sectionFormat="of" derivedContent="RFC8221"/> because
      of its target use as a fallback algorithm in case weaknesses in AES are
      uncovered. Unfortunately, there is currently no way to automatically
      propagate across an ACP a policy to disallow use of AES-based algorithms,
      so this target benefit of ENCR_CHACHA20_POLY1305 cannot fully be adopted
      yet for the ACP.  Therefore, this algorithm is only recommended. Changing 
      from AES to this algorithm with a potentially big drop in performance could
      also render the ACP inoperable. Therefore, there is a performance requirement against
      this algorithm so that it could become an effective security backup to AES
      for the ACP once a policy to switch over to it or prefer it is available in an ACP framework.
    </li>
              </ul>
              <t indent="0" pn="section-6.8.3.1.1-8">
  <xref target="RFC8221" format="default" sectionFormat="of" derivedContent="RFC8221"/> allows for 128-bit or 256-bit AES keys.
  This document mandates that only 256-bit AES keys <bcp14>MUST</bcp14> be supported.
</t>
              <t indent="0" pn="section-6.8.3.1.1-9">
When <xref target="RFC8221" format="default" sectionFormat="of" derivedContent="RFC8221"/> is updated, ACP implementations will need to
consider legacy interoperability.
</t>
            </section>
            <section anchor="rfc4247req" toc="include" numbered="true" removeInRFC="false" pn="section-6.8.3.1.2">
              <name slugifiedName="name-rfc-8247-ikev2">RFC 8247 (IKEv2)</name>
              <t indent="0" pn="section-6.8.3.1.2-1">
<xref target="RFC8247" format="default" sectionFormat="of" derivedContent="RFC8247"/> provides a baseline recommendation for mandatory-to-implement ciphers, integrity checks, pseudorandom functions, and Diffie-Hellman mechanisms.
Those recommendations, and the recommendations of subsequent documents, apply as well to the ACP.
Because IKEv2 for ACP secure channels is sufficient to be implemented in control plane software rather than in Application-Specific Integrated Circuit (ASIC) hardware, and ACP nodes supporting IKEv2 are not assumed to be code space constrained, and because existing IKEv2 implementations are expected to support <xref target="RFC8247" format="default" sectionFormat="of" derivedContent="RFC8247"/> recommendations, this document makes no attempt to simplify its recommendations for use with the ACP.
</t>
              <t indent="0" pn="section-6.8.3.1.2-2">See <xref target="IKEV2IANA" format="default" sectionFormat="of" derivedContent="IKEV2IANA"/> for IANA IKEv2 parameter names used in this text.</t>
              <t indent="0" pn="section-6.8.3.1.2-3">
ACP nodes supporting IKEv2 <bcp14>MUST</bcp14> comply with <xref target="RFC8247" format="default" sectionFormat="of" derivedContent="RFC8247"/> amended by the following requirements, which constitute a policy statement as permitted by <xref target="RFC8247" format="default" sectionFormat="of" derivedContent="RFC8247"/>.
</t>
              <t indent="0" pn="section-6.8.3.1.2-4">To signal the ACP certificate chain (including TA) as required by <xref target="common-requirements" format="default" sectionFormat="of" derivedContent="Section 6.8.2"/>, the "X.509 Certificate - Signature" payload in IKEv2 can be used. It is mandatory according to <xref target="RFC7296" sectionFormat="comma" section="3.6" format="default" derivedLink="https://rfc-editor.org/rfc/rfc7296#section-3.6" derivedContent="RFC7296"/>.</t>
              <t indent="0" pn="section-6.8.3.1.2-5">ACP nodes <bcp14>SHOULD</bcp14> set up IKEv2 to only use the ACP certificate and TA when acting as an IKEv2 responder on the IPv6 link-local address and port number indicated in the "AN_ACP" DULL GRASP announcements (see <xref target="discovery-grasp" format="default" sectionFormat="of" derivedContent="Section 6.4"/>).</t>
              <t indent="0" pn="section-6.8.3.1.2-6">When CERTREQ is received from a peer, and it does not indicate any of this 
ACP node's TA certificates, the ACP node <bcp14>SHOULD</bcp14> ignore the CERTREQ and 
continue sending its certificate chain including its TA as subject to 
the requirements and explanations in <xref target="common-requirements" format="default" sectionFormat="of" derivedContent="Section 6.8.2"/>. This will not result in successful mutual authentication but assists diagnostics.</t>
              <t indent="0" pn="section-6.8.3.1.2-7">Note that with IKEv2, failing authentication will only result in the responder
receiving the certificate chain from the initiator, but not vice versa. Because
ACP secure channel setup is symmetric (see <xref target="neighbor_verification" format="default" sectionFormat="of" derivedContent="Section 6.7"/>),
every non-malicious ACP neighbor will attempt to connect as an initiator, though,
allowing it to obtain the diagnostic information about the neighbor's certificate.</t>
              <t indent="0" pn="section-6.8.3.1.2-8">In IKEv2, ACP nodes are identified by their ACP addresses.
The ID_IPv6_ADDR IKEv2 identification payload <bcp14>MUST</bcp14> be used and <bcp14>MUST</bcp14> convey the ACP address.
If the peer's ACP certificate includes a 32HEXDIG ACP address in the acp-node-name (not "0" or omitted), the address in the IKEv2 identification payload <bcp14>MUST</bcp14> match it.
See <xref target="certcheck" format="default" sectionFormat="of" derivedContent="Section 6.2.3"/> for more information about "0" or omitted ACP address fields in the acp-node-name.
</t>
              <t indent="0" pn="section-6.8.3.1.2-9">
IKEv2 authentication <bcp14>MUST</bcp14> use authentication method 14 ("Digital Signature") for ACP certificates; this authentication method can be used with both RSA and ECDSA certificates, indicated by an ASN.1 object AlgorithmIdentifier.
</t>
              <t indent="0" pn="section-6.8.3.1.2-10">The Digital Signature hash SHA2-512 <bcp14>MUST</bcp14> be supported (in addition to SHA2-256).</t>
              <t indent="0" pn="section-6.8.3.1.2-11">
The IKEv2 Diffie-Hellman key exchange group 19 (256-bit random ECP), <bcp14>MUST</bcp14> be supported.  Reason: ECC provides a similar security level to finite-field (modular exponentiation (MODP)) key exchange with a shorter key length, so is generally preferred absent other considerations.
</t>
            </section>
          </section>
          <section anchor="IPsec-GRE" toc="include" numbered="true" removeInRFC="false" pn="section-6.8.3.2">
            <name slugifiedName="name-ipsec-with-gre-encapsulatio">IPsec with GRE Encapsulation</name>
            <t indent="0" pn="section-6.8.3.2-1">In network devices, it is often more common to implement high-performance virtual interfaces on top of GRE encapsulation than on top of a "native" IPsec association (without any other encapsulation than those defined by IPsec).  On those devices, it may be beneficial to run the ACP secure channel on top of GRE protected by the IPsec association.</t>
            <t indent="0" pn="section-6.8.3.2-2">The requirements for ESP/IPsec/IKEv2 with GRE are the same as
	    for native IPsec (see <xref target="IPsec" format="default" sectionFormat="of" derivedContent="Section 6.8.3.1"/>)
	    except that IPsec transport mode and next protocol GRE (47) are to
	    be negotiated. Tunnel mode is not required because of GRE. Traffic
	    Selectors are:</t>
            <artwork name="" type="" align="left" alt="" pn="section-6.8.3.2-3">
TSi = (47, 0-65535, Initiator-IPv6-LL-addr ... Initiator-IPv6-LL-addr)
TSr = (47, 0-65535, Responder-IPv6-LL-addr ... Responder-IPv6-LL-addr)
</artwork>
            <t indent="0" pn="section-6.8.3.2-4">If the IKEv2 initiator and responder support IPsec over GRE, it will be preferred over native IPsec because of how IKEv2 negotiates transport mode (as used by this IPsec over GRE profile) versus tunnel mode as used by native IPsec (see <xref target="RFC7296" sectionFormat="of" section="1.3.1" format="default" derivedLink="https://rfc-editor.org/rfc/rfc7296#section-1.3.1" derivedContent="RFC7296"/>).  The ACP IPv6 traffic has to be carried across GRE according to "<xref target="RFC7676" format="title" sectionFormat="of" derivedContent="IPv6 Support for Generic Routing Encapsulation (GRE)"/>" <xref target="RFC7676" format="default" sectionFormat="of" derivedContent="RFC7676"/>.</t>
          </section>
        </section>
        <section anchor="DTLS" numbered="true" toc="include" removeInRFC="false" pn="section-6.8.4">
          <name slugifiedName="name-acp-via-dtls">ACP via DTLS</name>
          <t indent="0" pn="section-6.8.4-1">This document defines the use of ACP via DTLS on the assumption that it is likely the first transport encryption supported in some classes of constrained devices: DTLS is commonly used in constrained devices when IPsec is not. Code space on those devices may be also be too limited to support more than the minimum number of required protocols.</t>
          <t indent="0" pn="section-6.8.4-2">An ACP node announces its ability to support DTLS version 1.2 ("<xref target="RFC6347" format="title" sectionFormat="of" derivedContent="Datagram Transport Layer Security Version 1.2"/>" <xref target="RFC6347" format="default" sectionFormat="of" derivedContent="RFC6347"/>) compliant with the requirements defined in this document as an ACP secure channel protocol in GRASP through the "DTLS" 'objective-value' in the "AN_ACP" objective (see <xref target="discovery-grasp" format="default" sectionFormat="of" derivedContent="Section 6.4"/>).</t>
          <t indent="0" pn="section-6.8.4-3">To run ACP via UDP and DTLS, a locally assigned UDP port is used that is announced as a parameter in the GRASP "AN_ACP" objective to candidate neighbors.  This port can also be any newer version of DTLS as long as that version can negotiate a DTLS 1.2 connection in the presence of a peer that only supports DTLS 1.2.</t>
          <t indent="0" pn="section-6.8.4-4">All ACP nodes supporting DTLS as a secure channel protocol <bcp14>MUST</bcp14> adhere to the DTLS implementation recommendations and security considerations of <xref target="RFC7525" format="default" sectionFormat="of" derivedContent="RFC7525">BCP 195</xref> except with respect to the DTLS version. ACP nodes supporting DTLS <bcp14>MUST</bcp14> support DTLS 1.2. They <bcp14>MUST NOT</bcp14> support older versions of DTLS.</t>
          <t indent="0" pn="section-6.8.4-5">Unlike for IPsec, no attempts are made to simplify the requirements of the recommendations in <xref target="RFC7525" format="default" sectionFormat="of" derivedContent="RFC7525">BCP 195</xref> because the expectation is that DTLS would use software-only implementations where the ability to reuse widely adopted implementations is more important than the ability to minimize the complexity of a hardware-accelerated implementation, which is known to be important for IPsec.</t>
          <t indent="0" pn="section-6.8.4-6">DTLS 1.3 <xref target="I-D.ietf-tls-dtls13" format="default" sectionFormat="of" derivedContent="TLS-DTLS13"/> is "backward compatible" with
DTLS 1.2 (see <xref target="I-D.ietf-tls-dtls13" sectionFormat="of" section="1" format="default" derivedLink="https://tools.ietf.org/html/draft-ietf-tls-dtls13-43#section-1" derivedContent="TLS-DTLS13"/>).  A DTLS implementation supporting both
DTLS 1.2 and DTLS 1.3 does comply with the above requirements of negotiating to
DTLS 1.2 in the presence of a DTLS 1.2 only peer, but using DTLS 1.3 when
booth peers support it.</t>
          <t indent="0" pn="section-6.8.4-7">Version 1.2 is the MTI version of DTLS in this specification because of the following:
</t>
          <ul spacing="normal" bare="false" empty="false" indent="3" pn="section-6.8.4-8">
            <li pn="section-6.8.4-8.1">There is more experience with DTLS 1.2 across the spectrum of target ACP nodes.</li>
            <li pn="section-6.8.4-8.2">Firmware of lower-end, embedded ACP nodes may not support a newer version for a long time.</li>
            <li pn="section-6.8.4-8.3">There are significant changes with DTLS 1.3, such as a different record layer requiring time to gain implementation and deployment experience especially on lower-end devices with limited code space.</li>
            <li pn="section-6.8.4-8.4">The existing BCP <xref target="RFC7525" format="default" sectionFormat="of" derivedContent="RFC7525"/> for DTLS 1.2 may take an equally longer time to be updated with experience from a newer DTLS version.</li>
            <li pn="section-6.8.4-8.5"> There are no significant benefits of DTLS 1.3 over DTLS 1.2 that are use-case relevant in the
      context of the ACP options for DTLS. For example, signaling performance improvements for session setup in
      DTLS 1.3 is not important for the ACP given the long-lived nature of ACP secure channel connections and
      the fact that DTLS connections are mostly link local (short RTT).</li>
          </ul>
          <t indent="0" pn="section-6.8.4-9">Nevertheless, newer versions of DTLS, such as DTLS 1.3, have stricter security requirements, and the use of the latest standard protocol version is in general recommended for IETF security standards. Therefore, ACP implementations are advised to support all the newer versions of DTLS that can still negotiate down to DTLS 1.2.</t>
          <t indent="0" pn="section-6.8.4-10">There is no additional session setup or other security association besides this simple DTLS setup.  As soon as the DTLS session is functional, the ACP peers will exchange ACP IPv6 packets as the payload of the DTLS transport connection.  Any DTLS-defined security association mechanisms such as rekeying are used as they would be for any transport application relying solely on DTLS.</t>
        </section>
        <section anchor="Profiles" numbered="true" toc="include" removeInRFC="false" pn="section-6.8.5">
          <name slugifiedName="name-acp-secure-channel-profiles">ACP Secure Channel Profiles</name>
          <t indent="0" pn="section-6.8.5-1">As explained in the beginning of <xref target="channel-selection" format="default" sectionFormat="of" derivedContent="Section 6.6"/>, there is no single secure channel mechanism mandated for all ACP nodes. Instead, this section defines two ACP profiles, "baseline" and "constrained", for ACP nodes that do introduce such requirements.</t>
          <t indent="0" pn="section-6.8.5-2">An ACP node supporting the baseline profile <bcp14>MUST</bcp14> support IPsec natively and <bcp14>MAY</bcp14> support IPsec via GRE. An ACP node supporting the constrained profile that cannot support IPsec <bcp14>MUST</bcp14> support DTLS.  An ACP node connecting an area of constrained ACP nodes with an area of baseline ACP nodes needs to support both IPsec and DTLS and therefore supports both the baseline and constrained profiles.</t>
          <t indent="0" pn="section-6.8.5-3">Explanation: not all types of ACP nodes are able to or need to connect directly to each other, nor are they able to support or prefer all possible secure channel mechanisms.  For example, IoT devices with limited code space may only support DTLS because that code already exists on them for end-to-end security, but high-end core routers may not want to support DTLS because they can perform IPsec in accelerated hardware, but they would need to support DTLS in an underpowered CPU forwarding path shared with critical control plane operations. This is not a deployment issue for a single ACP across these types of nodes as long as there are also appropriate gateway ACP nodes that sufficiently support many secure channel mechanisms to allow interconnecting areas of ACP nodes with a more constrained set of secure channel protocols. On the edge between IoT areas and high-end core networks, general-purpose routers that act as those gateways and that can support a variety of secure channel protocols are the norm already.</t>
          <t indent="0" pn="section-6.8.5-4">Native IPsec with tunnel mode provides the shortest encapsulation overhead. GRE may be preferred by legacy implementations because, in the past, the virtual interfaces required by ACP design in conjunction with secure channels have been implemented more often for GRE than purely for native IPsec.</t>
          <t indent="0" pn="section-6.8.5-5">ACP nodes need to specify the set of secure ACP mechanisms they support in documentation and should declare which profile they support according to the above requirements.</t>
        </section>
      </section>
      <section anchor="GRASP" numbered="true" toc="include" removeInRFC="false" pn="section-6.9">
        <name slugifiedName="name-grasp-in-the-acp">GRASP in the ACP</name>
        <section anchor="GRASP-core" numbered="true" toc="include" removeInRFC="false" pn="section-6.9.1">
          <name slugifiedName="name-grasp-as-a-core-service-of-">GRASP as a Core Service of the ACP</name>
          <t indent="0" pn="section-6.9.1-1">The ACP <bcp14>MUST</bcp14> run an instance of GRASP inside of it.  It is a key part of the
        ACP services.  The function in GRASP that makes it fundamental as a service of the ACP
        is the ability to provide ACP-wide service discovery (using objectives in GRASP).</t>
          <t indent="0" pn="section-6.9.1-2">ACP provides IP unicast routing via RPL (see <xref target="routing" format="default" sectionFormat="of" derivedContent="Section 6.12"/>).</t>
          <t indent="0" pn="section-6.9.1-3">The ACP does not use IP multicast routing nor does it provide generic IP multicast services
        (the handling of GRASP link-local multicast messages is explained in <xref target="GRASP-substrate" format="default" sectionFormat="of" derivedContent="Section 6.9.2"/>).
        Instead, the ACP provides service discovery via the objective discovery/announcement and
        negotiation mechanisms of the ACP GRASP instance (services are a form of objectives).
        These mechanisms use hop-by-hop reliable flooding of GRASP messages for both service discovery
        (GRASP M_DISCOVERY messages) and service announcement (GRASP M_FLOOD messages).</t>
          <t indent="0" pn="section-6.9.1-4">See <xref target="acp-grasp" format="default" sectionFormat="of" derivedContent="Appendix A.5"/> for discussion about this design choice
        of the ACP.</t>
        </section>
        <section anchor="GRASP-substrate" numbered="true" toc="include" removeInRFC="false" pn="section-6.9.2">
          <name slugifiedName="name-acp-as-the-security-and-tra">ACP as the Security and Transport Substrate for GRASP</name>
          <t indent="0" pn="section-6.9.2-1">In the terminology of GRASP <xref target="RFC8990" format="default" sectionFormat="of" derivedContent="RFC8990"/>, the ACP is the
        security and transport substrate for the GRASP instance run inside the ACP ("ACP GRASP").</t>
          <t indent="0" pn="section-6.9.2-2">This means that the ACP is responsible for ensuring that this instance of GRASP is
        only sending messages across the ACP GRASP virtual interfaces.
        Whenever the ACP adds or deletes such an interface because of new ACP secure channels or
        loss thereof, the ACP needs to indicate this to the ACP instance of GRASP.  The ACP exists
        also in the absence of any active ACP neighbors.  It is created when the node has a domain
        certificate, and it continues to exist even if all of its neighbors cease operation.</t>
          <t indent="0" pn="section-6.9.2-3">In this case, ASAs using GRASP running on the same node still need 
        to be able to discover each other's objectives.  When the ACP does not exist, ASAs leveraging 
        the ACP instance of GRASP via APIs <bcp14>MUST</bcp14> still be able to operate, and they <bcp14>MUST</bcp14> be able to
        understand that there is no ACP and that therefore the ACP instance of GRASP cannot
        operate.</t>
          <t indent="0" pn="section-6.9.2-4">How the ACP acts as the security and transport substrate for GRASP is shown 
        in <xref target="acp-grasp-picture" format="default" sectionFormat="of" derivedContent="Figure 8"/>.</t>
          <t indent="0" pn="section-6.9.2-5">GRASP unicast messages inside the ACP always use the ACP address.  Link-local
        addresses from the ACP VRF <bcp14>MUST NOT</bcp14> be used inside objectives.  GRASP unicast messages inside the ACP
        are transported via TLS. See <xref target="tls" format="default" sectionFormat="of" derivedContent="Section 6.1"/> for TLS requirements.
        TLS mutual authentication <bcp14>MUST</bcp14> use the ACP domain membership check 
        defined in <xref target="certcheck" format="default" sectionFormat="of" derivedContent="Section 6.2.3"/>.</t>
          <t indent="0" pn="section-6.9.2-6">GRASP link-local multicast messages are targeted for a specific ACP virtual interface 
        (as defined <xref target="ACP_interfaces" format="default" sectionFormat="of" derivedContent="Section 6.13.5"/>), but they are sent by the ACP to 
        an ACP GRASP virtual interface that is constructed from the TCP
        connection(s) to the IPv6 link-local neighbor address(es) on the underlying
        ACP virtual interface.  If the ACP GRASP virtual interface has two or more neighbors,
        the GRASP link-local multicast messages are replicated to all neighbor TCP connections.</t>
          <t indent="0" pn="section-6.9.2-7">TCP and TLS connections for GRASP in the ACP use the IANA-assigned TCP port for GRASP (7017).
        Effectively, the transport stack is expected to be TLS for connections to and from the ACP
        address (e.g., global-scope address(es)) and TCP for connections to and from the link-local addresses
        on the ACP virtual interfaces.  The latter ones are only used for the flooding of GRASP
        messages.</t>
          <figure anchor="acp-grasp-picture" align="left" suppress-title="false" pn="figure-8">
            <name slugifiedName="name-acp-as-security-and-transpo">ACP as Security and Transport Substrate for GRASP</name>
            <artwork name="" type="" align="left" alt="" pn="section-6.9.2-8.1">
    ..............................ACP..............................
    .                                                             .
    .         /-GRASP-flooding-\         ACP GRASP instance       .
    .        /                  \                                 A
    .    GRASP      GRASP      GRASP                              C
    .  link-local   unicast  link-local                           P
    .   multicast  messages   multicast                           .
    .   messages      |       messages                            .
    .      |          |          |                                .
    ...............................................................
    .      v          v          v    ACP security and transport  .
    .      |          |          |    substrate for GRASP         .
    .      |          |          |                                .
    .      |       ACP GRASP     |       - ACP GRASP              A
    .      |       loopback      |         loopback interface     C
    .      |       interface     |       - ACP-cert auth          P
    .      |         TLS         |                                .
    .   ACP GRASP     |       ACP GRASP  - ACP GRASP virtual      .
    .   subnet1       |       subnet2      interfaces             .
    .     TCP         |         TCP                               .
    .      |          |          |                                .
    ...............................................................
    .      |          |          |   ^^^ Users of ACP (GRASP/ASA) .
    .      |          |          |   ACP interfaces/addressing    .
    .      |          |          |                                .
    .      |          |          |                                A
    .      | ACP loopback interf.|      &lt;- ACP loopback interface C
    .      |      ACP-address    |       - address (global ULA)   P
    .    subnet1      |        subnet2  &lt;- ACP virtual interfaces .
    .  link-local     |      link-local  - link-local addresses   .
    ...............................................................
    .      |          |          |   ACP VRF                      .
    .      |     RPL-routing     | virtual routing and forwarding .
    .      |   /IP-Forwarding\   |                                A
    .      |  /               \  |                                C
    .  ACP IPv6 packets   ACP IPv6 packets                        P
    .      |/                   \|                                .
    .    IPsec/DTLS        IPsec/DTLS  - ACP-cert auth            .
    ...............................................................
             |                   |   Data Plane
             |                   |     
             |                   |     - ACP secure channel
         link-local        link-local  - encapsulation addresses
           subnet1            subnet2  - data plane interfaces
             |                   |
          ACP-Nbr1            ACP-Nbr2
</artwork>
          </figure>
          <section anchor="GRASP-discussion" numbered="true" toc="include" removeInRFC="false" pn="section-6.9.2.1">
            <name slugifiedName="name-discussion">Discussion</name>
            <t indent="0" pn="section-6.9.2.1-1">TCP encapsulation for GRASP M_DISCOVERY and M_FLOOD link-local messages is used because 
            these messages are flooded across potentially many hops to all ACP nodes, and a single
            link with even temporary packet-loss issues (e.g., a Wi-Fi or Powerline link) can reduce the
            probability for loss-free transmission so much that applications would want to increase
            the frequency with which they send these messages.  Such shorter periodic retransmission
            of datagrams would result in more traffic and processing overhead in the ACP 
            than the hop-by-hop, reliable retransmission mechanism offered by TCP and duplicate elimination
            by GRASP.</t>
            <t indent="0" pn="section-6.9.2.1-2">TLS is mandated for GRASP non-link-local unicast because the ACP secure channel
            mandatory authentication and encryption protects only against attacks from the outside
            but not against attacks from the inside: compromised ACP members that have (not yet) been
            detected and removed (e.g., via domain certificate revocation and/or expiry).</t>
            <t indent="0" pn="section-6.9.2.1-3">If GRASP peer connections were to use just TCP, compromised ACP members could
            simply eavesdrop passively on GRASP peer connections for which they are on-path ("man in the
            middle" or MITM) or intercept and modify messages.  With TLS, it is not possible to completely
            eliminate problems with compromised ACP members, but attacks are a lot more complex.</t>
            <t indent="0" pn="section-6.9.2.1-4">Eavesdropping and/or spoofing by a compromised ACP node is still possible because
            in the model of the ACP and GRASP, the provider and consumer of an objective have 
            initially no unique information (such as an identity) about the other side that
            would allow them to distinguish a benevolent from a compromised peer.  The compromised
            ACP node would simply announce the objective as well, potentially filter the original
            objective in GRASP when it is a MITM and act as an application-level proxy.  This of course
            requires that the compromised ACP node understand the semantics of the GRASP negotiation
            to an extent that allows the compromised node to proxy the messages without being detected, but in an ACP environment,
            this is quite likely public knowledge or even standardized.</t>
            <t indent="0" pn="section-6.9.2.1-5">The GRASP TLS connections are run the same as any other ACP traffic through the ACP
            secure channels.  This leads to double authentication and encryption, which has the following
            benefits:</t>
            <ul spacing="normal" bare="false" empty="false" indent="3" pn="section-6.9.2.1-6">
              <li pn="section-6.9.2.1-6.1">Secure channel methods such as IPsec may provide protection against additional
                attacks, for example, reset attacks.</li>
              <li pn="section-6.9.2.1-6.2">The secure channel method may leverage hardware acceleration, and there may be little
                or no gain in eliminating it.</li>
              <li pn="section-6.9.2.1-6.3">The security model for ACP GRASP is no different than other ACP traffic. Instead,
                there is just another layer of protection against certain attacks from the inside,
                which is important due to the role of GRASP in the ACP.</li>
            </ul>
          </section>
        </section>
      </section>
      <section anchor="separation" numbered="true" toc="include" removeInRFC="false" pn="section-6.10">
        <name slugifiedName="name-context-separation">Context Separation</name>
        <t indent="0" pn="section-6.10-1">The ACP is in a separate context from the normal data plane of the node.  This context includes the ACP channels' IPv6 forwarding and routing as well as any required higher-layer ACP functions.</t>
        <t indent="0" pn="section-6.10-2">In a classical network system, a dedicated VRF is one logical implementation option for the ACP.  If allowed by the system's software architecture, separation options that minimize shared components, such as a logical container or virtual machine instance, are preferred.  The context for the ACP needs to be established automatically during the bootstrap of a node.  As much as possible, it should be protected from being modified unintentionally by (data plane) configuration.</t>
        <t indent="0" pn="section-6.10-3">Context separation improves security because the ACP is not reachable from the data plane routing or forwarding table(s).  Also, configuration errors from the data plane setup do not affect the ACP.</t>
      </section>
      <section anchor="addressing" numbered="true" toc="include" removeInRFC="false" pn="section-6.11">
        <name slugifiedName="name-addressing-inside-the-acp">Addressing inside the ACP</name>
        <t indent="0" pn="section-6.11-1">The channels explained above typically only establish communication between two adjacent nodes.  In order for communication to happen across multiple hops, the Autonomic Control Plane requires ACP network-wide valid addresses and routing.  Each ACP node creates a loopback interface with an ACP network-wide unique address (prefix) inside the ACP context (as explained in <xref target="separation" format="default" sectionFormat="of" derivedContent="Section 6.10"/>).  This address may be used also in other virtual contexts.</t>
        <t indent="0" pn="section-6.11-2">With the algorithm introduced here, all ACP nodes in the same routing subdomain have the same /48 ULA prefix.  Conversely, ULA Global IDs from different domains are unlikely to clash, such that two ACP networks can be merged, as long as the policy allows that merge.  See also <xref target="self-healing" format="default" sectionFormat="of" derivedContent="Section 10.1"/> for a discussion on merging domains.</t>
        <t indent="0" pn="section-6.11-3">Links inside the ACP only use link-local IPv6 addressing, such that each node's ACP only requires one routable address prefix.</t>
        <section anchor="addr-fundamentals" numbered="true" toc="include" removeInRFC="false" pn="section-6.11.1">
          <name slugifiedName="name-fundamental-concepts-of-aut">Fundamental Concepts of Autonomic Addressing</name>
          <ul spacing="normal" bare="false" empty="false" indent="3" pn="section-6.11.1-1">
            <li pn="section-6.11.1-1.1">Usage: autonomic addresses are exclusively used for self-management functions inside a trusted domain.  They are not used for user traffic.  Communications with entities outside the trusted domain use another address space, for example, a normally managed routable address space (called "data plane" in this document).</li>
            <li pn="section-6.11.1-1.2">Separation: autonomic address space is used separately from user address space and other address realms.  This supports the robustness requirement.</li>
            <li pn="section-6.11.1-1.3">Loopback only: only ACP loopback interfaces (and potentially those configured for ACP connect, see <xref target="ACPconnect" format="default" sectionFormat="of" derivedContent="Section 8.1"/>) carry routable address(es); all other interfaces (called ACP virtual interfaces) only use IPv6 link-local addresses.  The usage of IPv6 link-local addressing is discussed in "<xref target="RFC7404" format="title" sectionFormat="of" derivedContent="Using Only Link-Local Addressing inside an IPv6 Network"/>" <xref target="RFC7404" format="default" sectionFormat="of" derivedContent="RFC7404"/>.</li>
            <li pn="section-6.11.1-1.4">Use of ULA: for loopback interfaces of ACP nodes, we use ULA with
	   the L bit set to 1 (as defined in <xref target="RFC4193" sectionFormat="of" section="3.1" format="default" derivedLink="https://rfc-editor.org/rfc/rfc4193#section-3.1" derivedContent="RFC4193"/>). Note that the random hash for ACP loopback addresses uses the definition in <xref target="scheme" format="default" sectionFormat="of" derivedContent="Section 6.11.2"/> and not the one in <xref target="RFC4193" sectionFormat="comma" section="3.2.2" format="default" derivedLink="https://rfc-editor.org/rfc/rfc4193#section-3.2.2" derivedContent="RFC4193"/>.</li>
            <li pn="section-6.11.1-1.5">No external connectivity: the addresses do not provide access to the Internet.  If a node requires further connectivity, it should use another, traditionally managed addressing scheme in parallel.</li>
            <li pn="section-6.11.1-1.6">Addresses in the ACP are permanent and do not support temporary addresses as defined in "<xref target="RFC8981" format="title" sectionFormat="of" derivedContent="Temporary Address Extensions for Stateless Address Autoconfiguration in IPv6"/>" <xref target="RFC8981" format="default" sectionFormat="of" derivedContent="RFC8981"/>.</li>
            <li pn="section-6.11.1-1.7">Addresses in the ACP are not considered sensitive on privacy grounds because ACP nodes are not expected to be end-user hosts, and therefore ACP addresses do not represent end users or groups of end users.  All ACP nodes are in one (potentially federated) administrative domain. For ACP traffic, the nodes are assumed to be either candidate hosts or transit nodes.  There are no transit nodes with fewer privileges to know the identity of other hosts in the ACP.  Therefore, ACP addresses do not need to be pseudorandom as discussed in "<xref target="RFC7721" format="title" sectionFormat="of" derivedContent="Security and Privacy Considerations for IPv6 Address Generation Mechanisms"/>" <xref target="RFC7721" format="default" sectionFormat="of" derivedContent="RFC7721"/>.  Because they are not propagated to untrusted (non-ACP) nodes and stay within a domain (of trust), we also do not consider them to be subject to scanning attacks.</li>
          </ul>
          <t indent="0" pn="section-6.11.1-2">The ACP is based exclusively on IPv6 addressing for a variety of reasons:
          </t>
          <ul spacing="normal" bare="false" empty="false" indent="3" pn="section-6.11.1-3">
            <li pn="section-6.11.1-3.1">Simplicity, reliability, and scale: if other network-layer protocols were supported, each would have to have its own set of security associations, routing table, and process, etc.</li>
            <li pn="section-6.11.1-3.2">Autonomic functions do not require IPv4: autonomic functions and autonomic service agents are new concepts.  They can be exclusively built on IPv6 from day one.  There is no need for backward compatibility.</li>
            <li pn="section-6.11.1-3.3">OAM protocols do not require IPv4: the ACP may carry OAM protocols.  All relevant protocols (SNMP, TFTP, SSH, SCP, RADIUS, Diameter, NETCONF, etc.) are available in IPv6. See also <xref target="RFC8368" format="default" sectionFormat="of" derivedContent="RFC8368"/> for how ACP could be made to interoperate with IPv4-only OAM.</li>
          </ul>
          <t indent="0" pn="section-6.11.1-4">Further explanation about the addressing and routing-related reasons for the choice of the autonomous ACP addressing can be found in <xref target="ACP-loopback" format="default" sectionFormat="of" derivedContent="Section 6.13.5.1"/>.</t>
        </section>
        <section anchor="scheme" numbered="true" toc="include" removeInRFC="false" pn="section-6.11.2">
          <name slugifiedName="name-the-acp-addressing-base-sch">The ACP Addressing Base Scheme</name>
          <t indent="0" pn="section-6.11.2-1">The ULA addressing base scheme for ACP nodes has the following format:</t>
          <figure anchor="base-addr-scheme" align="left" suppress-title="false" pn="figure-9">
            <name slugifiedName="name-acp-addressing-base-scheme">ACP Addressing Base Scheme</name>
            <artwork name="" type="" align="left" alt="" pn="section-6.11.2-2.1">
  8      40                     2                     78
+--+-------------------------+------+------------------------------+
|fd| hash(routing-subdomain) | Type |     (sub-scheme)             |
+--+-------------------------+------+------------------------------+
</artwork>
          </figure>
          <t indent="0" pn="section-6.11.2-3">The first 48 bits follow the ULA scheme as defined in <xref target="RFC4193" format="default" sectionFormat="of" derivedContent="RFC4193"/>, to which a Type field is added.
          </t>
          <dl spacing="normal" newline="false" indent="3" pn="section-6.11.2-4">
            <dt pn="section-6.11.2-4.1">fd:</dt>
            <dd pn="section-6.11.2-4.2">Identifies a locally defined ULA address.</dd>
            <dt pn="section-6.11.2-4.3">hash(routing-subdomain):</dt>
            <dd pn="section-6.11.2-4.4">
              <t indent="0" pn="section-6.11.2-4.4.1">The 40-bit ULA Global ID (a term from <xref target="RFC4193" format="default" sectionFormat="of" derivedContent="RFC4193"/>) for ACP addresses carried in the acp-node-name in the ACP certificates are the first 40 bits of the SHA-256 hash of the routing-subdomain from the same acp-node-name.  In the example of <xref target="domcert-acpinfo" format="default" sectionFormat="of" derivedContent="Section 6.2.2"/>, the routing-subdomain is "area51.research.acp.example.com", and the 40-bit ULA Global ID is 89b714f3db.</t>
              <t indent="0" pn="section-6.11.2-4.4.2">When creating a new routing-subdomain for an existing Autonomic Network, it <bcp14>MUST</bcp14> be ensured that rsub is selected so the resulting hash of the routing-subdomain does not collide with the hash of any preexisting routing-subdomains of the Autonomic Network. This ensures that ACP addresses created by registrars for different routing subdomains do not collide with each other.</t>
              <t indent="0" pn="section-6.11.2-4.4.3">To allow for extensibility, the fact that the ULA Global ID is a hash of the routing-subdomain <bcp14>SHOULD NOT</bcp14> be assumed by any ACP node during normal operations.  The hash function is only executed during the creation of the certificate.  If BRSKI is used, then the BRSKI registrar will create the acp-node-name in response to the EST Certificate Signing Request (CSR) Attributes Request message sent by the pledge.</t>
              <t indent="0" pn="section-6.11.2-4.4.4">Establishing connectivity between different ACPs (different acp-domain-names) is outside the scope of this specification.
 If it is being done through future extensions, then the rsub of all routing-subdomains across those Autonomic Networks needs to be selected so that the resulting routing-subdomain hashes do not collide. For example, a large cooperation with its own private TA may want to create different Autonomic Networks that initially do not connect but where the option to do so should be kept open. When taking this possibility into account, it is always easy to select rsub so that no collisions happen.</t>
            </dd>
            <dt pn="section-6.11.2-4.5">Type:</dt>
            <dd pn="section-6.11.2-4.6">This field allows different addressing sub-schemes.  This addresses the "upgradability" requirement.  Assignment of types for this field will be maintained by IANA.</dd>
            <dt pn="section-6.11.2-4.7">(sub-scheme):</dt>
            <dd pn="section-6.11.2-4.8">The sub-scheme may imply a range or set of addresses assigned to the node. This is called the ACP address range/set and explained in each sub-scheme.</dd>
          </dl>
          <t indent="0" pn="section-6.11.2-5">Please refer to <xref target="acp-registrars" format="default" sectionFormat="of" derivedContent="Section 6.11.7"/> and <xref target="address-spaces" format="default" sectionFormat="of" derivedContent="Appendix A.1"/> for further explanations for why the following addressing sub-schemes are used and why multiple are necessary.</t>
          <t indent="0" pn="section-6.11.2-6">
          The following summarizes the addressing sub-schemes:
</t>
          <table anchor="tab-1" align="center" pn="table-1">
            <name slugifiedName="name-addressing-sub-schemes">Addressing Sub-Schemes</name>
            <thead>
              <tr>
                <th align="left" colspan="1" rowspan="1">Type</th>
                <th align="left" colspan="1" rowspan="1">Name</th>
                <th align="left" colspan="1" rowspan="1">F-bit</th>
                <th align="left" colspan="1" rowspan="1">Z</th>
                <th align="left" colspan="1" rowspan="1">V-bits</th>
                <th align="left" colspan="1" rowspan="1">Prefix</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td align="left" colspan="1" rowspan="1">0</td>
                <td align="left" colspan="1" rowspan="1">ACP-Zone</td>
                <td align="left" colspan="1" rowspan="1">N/A</td>
                <td align="left" colspan="1" rowspan="1">0</td>
                <td align="left" colspan="1" rowspan="1">1 bit</td>
                <td align="left" colspan="1" rowspan="1">/127</td>
              </tr>
              <tr>
                <td align="left" colspan="1" rowspan="1">0</td>
                <td align="left" colspan="1" rowspan="1">ACP-Manual</td>
                <td align="left" colspan="1" rowspan="1">N/A</td>
                <td align="left" colspan="1" rowspan="1">1</td>
                <td align="left" colspan="1" rowspan="1">N/A</td>
                <td align="left" colspan="1" rowspan="1">/64</td>
              </tr>
              <tr>
                <td align="left" colspan="1" rowspan="1">1</td>
                <td align="left" colspan="1" rowspan="1">ACP-Vlong-8</td>
                <td align="left" colspan="1" rowspan="1">0</td>
                <td align="left" colspan="1" rowspan="1">N/A</td>
                <td align="left" colspan="1" rowspan="1">8 bits</td>
                <td align="left" colspan="1" rowspan="1">/120</td>
              </tr>
              <tr>
                <td align="left" colspan="1" rowspan="1">1</td>
                <td align="left" colspan="1" rowspan="1">ACP-Vlong-16</td>
                <td align="left" colspan="1" rowspan="1">1</td>
                <td align="left" colspan="1" rowspan="1">N/A</td>
                <td align="left" colspan="1" rowspan="1">16 bits</td>
                <td align="left" colspan="1" rowspan="1">/112</td>
              </tr>
              <tr>
                <td align="left" colspan="1" rowspan="1">2</td>
                <td colspan="5" align="left" rowspan="1">Reserved / For future definition/allocation</td>
              </tr>
              <tr>
                <td align="left" colspan="1" rowspan="1">3</td>
                <td colspan="5" align="left" rowspan="1">Reserved / For future definition/allocation</td>
              </tr>
            </tbody>
          </table>
          <t indent="0" pn="section-6.11.2-8">The F-bit (format bit, <xref target="Vlong" format="default" sectionFormat="of" derivedContent="Section 6.11.5"/>) and Z (<xref target="manual-scheme" format="default" sectionFormat="of" derivedContent="Section 6.11.4"/>) are two encoding fields that are explained in the sections covering 
the sub-schemes that use them. V-bits is the number
of bits of addresses allocated to the ACP node.
Prefix is the prefix that the ACP node is announcing into
RPL.</t>
        </section>
        <section anchor="zone-scheme" numbered="true" toc="include" removeInRFC="false" pn="section-6.11.3">
          <name slugifiedName="name-acp-zone-addressing-sub-sch">ACP Zone Addressing Sub-Scheme (ACP-Zone)</name>
          <t indent="0" pn="section-6.11.3-1">This sub-scheme is used when the Type field of the base scheme is 0 and the Z bit is 0.</t>
          <figure anchor="addr-scheme" align="left" suppress-title="false" pn="figure-10">
            <name slugifiedName="name-acp-zone-addressing-sub-sche">ACP Zone Addressing Sub-Scheme</name>
            <artwork name="" type="" align="left" alt="" pn="section-6.11.3-2.1">

                 64                             64
+-----------------+---+---------++-----------------------------+---+
|  (base scheme)  | Z | Zone-ID ||           Node-ID               |
|                 |   |         || Registrar-ID |   Node-Number| V |
+-----------------+---+---------++--------------+--------------+---+
         50         1     13            48           15          1

</artwork>
          </figure>
          <t indent="0" pn="section-6.11.3-3">The fields are defined as follows:</t>
          <dl spacing="normal" newline="false" indent="3" pn="section-6.11.3-4">
            <dt pn="section-6.11.3-4.1">Type:</dt>
            <dd pn="section-6.11.3-4.2">
              <bcp14>MUST</bcp14> be 0.</dd>
            <dt pn="section-6.11.3-4.3">Z: </dt>
            <dd pn="section-6.11.3-4.4">
              <bcp14>MUST</bcp14> be 0.</dd>
            <dt pn="section-6.11.3-4.5">Zone-ID:</dt>
            <dd pn="section-6.11.3-4.6"> A value for a network zone.</dd>
            <dt pn="section-6.11.3-4.7">Node-ID:</dt>
            <dd pn="section-6.11.3-4.8">
              <t indent="0" pn="section-6.11.3-4.8.1">A unique value for each node.</t>
              <t indent="0" pn="section-6.11.3-4.8.2">The 64-bit Node-ID must be unique across the ACP domain for each node. It is derived and composed as follows:</t>
              <dl spacing="normal" newline="false" indent="3" pn="section-6.11.3-4.8.3">
                <dt pn="section-6.11.3-4.8.3.1">Registrar-ID (48 bits): </dt>
                <dd pn="section-6.11.3-4.8.3.2">A number unique inside the domain identifying the ACP registrar that assigned the Node-ID to the node.  One or more domain-wide unique identifiers of the ACP registrar can be used for this purpose. See <xref target="registrars-unique" format="default" sectionFormat="of" derivedContent="Section 6.11.7.2"/>.</dd>
                <dt pn="section-6.11.3-4.8.3.3">Node-Number:</dt>
                <dd pn="section-6.11.3-4.8.3.4"> A number to make the Node-ID unique.  This can be sequentially assigned by the ACP registrar owning the Registrar-ID.</dd>
              </dl>
            </dd>
            <dt pn="section-6.11.3-4.9">V (1 bit):</dt>
            <dd pn="section-6.11.3-4.10">
              <t indent="0" pn="section-6.11.3-4.10.1">Virtualization bit:</t>
              <dl spacing="normal" newline="false" indent="3" pn="section-6.11.3-4.10.2">
                <dt pn="section-6.11.3-4.10.2.1">0:</dt>
                <dd pn="section-6.11.3-4.10.2.2">Indicates the ACP itself ("ACP node base system)</dd>
                <dt pn="section-6.11.3-4.10.2.3">1:</dt>
                <dd pn="section-6.11.3-4.10.2.4">Indicates the optional "host" context on the ACP node (see below).</dd>
              </dl>
            </dd>
          </dl>
          <t indent="0" pn="section-6.11.3-5">In the Zone Addressing Sub-Scheme, the ACP address in the certificate has V field as all zero bits.</t>
          <t indent="0" pn="section-6.11.3-6">The ACP address set of the node includes addresses with any Zone-ID value and any V value. Therefore, no two nodes in the same ACP and the same hash(routing-subdomain)
  can have the same Node-ID with the Zone Addressing Sub-Scheme, for
  example, by differing only in their Zone-ID.</t>
          <t indent="0" pn="section-6.11.3-7">The Virtualization bit in this sub-scheme allows the easy addition of the ACP as a component to existing systems without causing problems in the port number space between the services in the ACP and the existing system.  V=0 is the ACP router (autonomic node base system), V=1 is the host with preexisting transport endpoints on it that could collide with the transport endpoints used by the ACP router.  The ACP host could, for example, have a P2P (peer-to-peer) virtual interface with the V=0 address as its router to the ACP.  Depending on the software design of ASAs, which is outside the scope of this specification, they may use the V=0 or V=1 address.</t>
          <t indent="0" pn="section-6.11.3-8">The location of the V bit(s) at the end of the address allows the announcement of a single prefix for each ACP node.  For example, in a network with 20,000 ACP nodes, this avoids 20,000 additional routes in the routing table.</t>
          <t indent="0" pn="section-6.11.3-9">It is <bcp14>RECOMMENDED</bcp14> that only Zone-ID 0 is used unless it is meant to be
                used in conjunction with operational practices for partial or incremental adoption
                of the ACP as described in <xref target="incremental-adoption" format="default" sectionFormat="of" derivedContent="Section 9.4"/>.</t>
          <t indent="0" pn="section-6.11.3-10">Note: Zones and Zone-ID as defined here are not related to zones or zone_id defined in "<xref target="RFC4007" format="title" sectionFormat="of" derivedContent="IPv6 Scoped Address Architecture"/>" <xref target="RFC4007" format="default" sectionFormat="of" derivedContent="RFC4007"/>. ACP zone addresses are not scoped (i.e., reachable only from within a zone as defined by <xref target="RFC4007" format="default" sectionFormat="of" derivedContent="RFC4007"/>) but are reachable across the whole ACP. A zone_id is a zone index that has only local significance on a node <xref target="RFC4007" format="default" sectionFormat="of" derivedContent="RFC4007"/>, whereas an ACP Zone-ID is an identifier for an ACP zone that is unique across that ACP.</t>
        </section>
        <section anchor="manual-scheme" numbered="true" toc="include" removeInRFC="false" pn="section-6.11.4">
          <name slugifiedName="name-acp-manual-addressing-sub-s">ACP Manual Addressing Sub-Scheme (ACP-Manual)</name>
          <t indent="0" pn="section-6.11.4-1">This sub-scheme is used when the Type field of the base scheme is 0 and the Z bit is 1.</t>
          <figure anchor="manual-scheme-pic" align="left" suppress-title="false" pn="figure-11">
            <name slugifiedName="name-acp-manual-addressing-sub-sc">ACP Manual Addressing Sub-Scheme</name>
            <artwork name="" type="" align="left" alt="" pn="section-6.11.4-2.1">

                64                             64
+---------------------+---+----------++-----------------------------+
|    (base scheme)    | Z | Subnet-ID||     Interface Identifier    |
+---------------------+---+----------++-----------------------------+
         50             1    13 

</artwork>
          </figure>
          <t indent="0" pn="section-6.11.4-3">The fields are defined as follows:
          </t>
          <dl spacing="normal" newline="false" indent="3" pn="section-6.11.4-4">
            <dt pn="section-6.11.4-4.1">Type:</dt>
            <dd pn="section-6.11.4-4.2">
              <bcp14>MUST</bcp14> be 0.</dd>
            <dt pn="section-6.11.4-4.3">Z:</dt>
            <dd pn="section-6.11.4-4.4">
              <bcp14>MUST</bcp14> be 1.</dd>
            <dt pn="section-6.11.4-4.5">Subnet-ID:</dt>
            <dd pn="section-6.11.4-4.6"> Configured subnet identifier.</dd>
            <dt pn="section-6.11.4-4.7">Interface Identifier:</dt>
            <dd pn="section-6.11.4-4.8">Interface identifier according to <xref target="RFC4291" format="default" sectionFormat="of" derivedContent="RFC4291"/>.</dd>
          </dl>
          <t indent="0" pn="section-6.11.4-5">This sub-scheme is meant for the "manual" allocation to subnets where the other addressing schemes cannot be used.  The primary use case is for assignment to ACP connect subnets (see <xref target="NMS" format="default" sectionFormat="of" derivedContent="Section 8.1.1"/>).</t>
          <t indent="0" pn="section-6.11.4-6">"Manual" means that allocations of the Subnet-ID need to be done with preexisting, non-autonomic mechanisms.  Every subnet that uses this addressing sub-scheme needs to use a unique Subnet-ID (unless some anycast setup is done).</t>
          <t indent="0" pn="section-6.11.4-7">The Z bit field was added to distinguish between the Zone Addressing Sub-Scheme and the Manual Addressing Sub-Scheme without requiring one more bit in the base scheme and therefore allowing for the Vlong Addressing Sub-Scheme (described in <xref target="Vlong" format="default" sectionFormat="of" derivedContent="Section 6.11.5"/>) to have one more bit available.</t>
          <t indent="0" pn="section-6.11.4-8">The Manual Addressing Sub-Scheme addresses <bcp14>SHOULD NOT</bcp14> be used in ACP certificates. Any node capable of building ACP secure channels and is permitted by registrar policy to participate in building ACP secure channels <bcp14>SHOULD</bcp14> receive an ACP address (prefix) from one of the other ACP addressing sub-schemes.  A node that cannot or is not permitted to participate in ACP secure channels can connect to the ACP via ACP connect interfaces of ACP edge nodes (see <xref target="ACPconnect" format="default" sectionFormat="of" derivedContent="Section 8.1"/>) without setting up an ACP secure channel. Its ACP certificate <bcp14>MUST</bcp14> omit the acp-address field to indicate that its ACP certificate is only usable for non-ACP secure channel authentication, such as end-to-end transport connections across the ACP or data plane.</t>
          <t indent="0" pn="section-6.11.4-9">Address management of ACP connect subnets is done using traditional assignment methods and existing IPv6 protocols. See <xref target="ACautoconfig" format="default" sectionFormat="of" derivedContent="Section 8.1.3"/> for details. Therefore, the notion of /V-bits multiple addresses assigned to the ACP nodes does not apply to this sub-scheme.</t>
        </section>
        <section anchor="Vlong" numbered="true" toc="include" removeInRFC="false" pn="section-6.11.5">
          <name slugifiedName="name-acp-vlong-addressing-sub-sc">ACP Vlong Addressing Sub-Scheme (ACP-Vlong-8/ACP-Vlong-16)</name>
          <t indent="0" pn="section-6.11.5-1">This addressing sub-scheme is used when the Type field of the base scheme is 1.</t>
          <figure anchor="v8-scheme" align="left" suppress-title="false" pn="figure-12">
            <name slugifiedName="name-acp-vlong-addressing-sub-sch">ACP Vlong Addressing Sub-Scheme</name>
            <artwork name="" type="" align="left" alt="" pn="section-6.11.5-2.1">

          50                              78
+---------------------++-----------------------------+----------+
|    (base scheme)    ||           Node-ID                      |
|                     || Registrar-ID |F| Node-Number|        V |
+---------------------++--------------+--------------+----------+
          50                46         1   23/15          8/16
</artwork>
          </figure>
          <t indent="0" pn="section-6.11.5-3">
                  This addressing sub-scheme foregoes the Zone-ID field (<xref target="zone-scheme" format="default" sectionFormat="of" derivedContent="Section 6.11.3"/>) to allow
                  for larger, flatter routed networks (e.g., as in IoT) with
                  8,421,376 Node-Numbers (2<sup>23</sup> + 2<sup>15</sup>).  It also allows for up to
                  2<sup>16</sup> (i.e., 65,536) different virtualized addresses within a
                  node, which could be used to address individual software
                components in an ACP node.
          </t>
          <t indent="0" pn="section-6.11.5-4">
                The fields are the same as in the Zone Addressing Sub-Scheme (<xref target="zone-scheme" format="default" sectionFormat="of" derivedContent="Section 6.11.3"/>) with the
                following refinements:</t>
          <dl spacing="normal" newline="false" indent="3" pn="section-6.11.5-5">
            <dt pn="section-6.11.5-5.1">
                    F:</dt>
            <dd pn="section-6.11.5-5.2">Format bit.  This bit determines the format of the
                    subsequent bits.
                  </dd>
            <dt pn="section-6.11.5-5.3">
                    V:</dt>
            <dd pn="section-6.11.5-5.4">Virtualization bit: this is a field that is
                    either 8 or 16 bits.  For F=0, it is 8 bits, for F=1
                    it is 16 bits.  The V-bits are assigned by the ACP
                    node.  In the ACP certificate's ACP address (<xref target="domcert-acpinfo" format="default" sectionFormat="of" derivedContent="Section 6.2.2"/>), the V-bits are always
                    set to 0.
                  </dd>
            <dt pn="section-6.11.5-5.5">
                    Registrar-ID:</dt>
            <dd pn="section-6.11.5-5.6"> To maximize Node-Number and V, the
                    Registrar-ID is reduced to 46 bits. One or more domain-wide unique identifiers of the ACP registrar can be used for this purpose. See <xref target="registrars-unique" format="default" sectionFormat="of" derivedContent="Section 6.11.7.2"/>.
                  </dd>
            <dt pn="section-6.11.5-5.7">
                    Node-Number:</dt>
            <dd pn="section-6.11.5-5.8">The Node-Number is unique to each ACP node.  There are
                    two formats for the Node-Number.   When F=0, the
                    Node-Number is 23 bits,  for F=1, it is 15 bits.
                    Each format of Node-Number is considered to be in a
                    unique number space.
                  </dd>
          </dl>
          <t indent="0" pn="section-6.11.5-6">
                  The F=0 bit format addresses are intended to be used for
                  "general purpose" ACP nodes that would potentially have a
                  limited number (less than 256) of clients (ASA and/or autonomic functions
                  or legacy services) of the ACP that require separate
                  V(irtual) addresses.
          </t>
          <t indent="0" pn="section-6.11.5-7">
                  The F=1 bit Node-Numbers are intended for
                  ACP nodes that are ACP edge nodes (see <xref target="NMS" format="default" sectionFormat="of" derivedContent="Section 8.1.1"/>)
                  or that have a large number of clients requiring separate
                  V(irtual) addresses, for example, large SDN controllers with
                  container modular software architecture (see <xref target="software" format="default" sectionFormat="of" derivedContent="Section 8.1.2"/>).
          </t>
          <t indent="0" pn="section-6.11.5-8">
                  In the Vlong Addressing Sub-Scheme, the ACP address in the
                  certificate has all V field bits as zero.  The ACP address
                  set for the node includes any V value.
          </t>
        </section>
        <section anchor="other-sub-schemes" numbered="true" toc="include" removeInRFC="false" pn="section-6.11.6">
          <name slugifiedName="name-other-acp-addressing-sub-sc">Other ACP Addressing Sub-Schemes</name>
          <t indent="0" pn="section-6.11.6-1">Before further addressing sub-schemes are defined, experience with the schemes defined here should be collected.  The schemes defined in this document have been devised to allow hopefully a sufficiently flexible setup of ACPs for a variety of situations.  These reasons also lead to the fairly liberal use of address space: the Zone Addressing Sub-Scheme is intended to enable optimized routing in large networks by reserving bits for Zone-IDs.  The Vlong Addressing Sub-Scheme enables the allocation of 8/16-bit of addresses inside individual ACP nodes.  Both address spaces allow distributed, uncoordinated allocation of node addresses by reserving bits for the Registrar-ID field in the address.</t>
        </section>
        <section anchor="acp-registrars" numbered="true" toc="include" removeInRFC="false" pn="section-6.11.7">
          <name slugifiedName="name-acp-registrars">ACP Registrars</name>
          <t indent="0" pn="section-6.11.7-1">ACP registrars are responsible for enrolling candidate ACP nodes
   with ACP certificates and associated trust anchor(s).  They are also
   responsible for including an acp-node-name field in the ACP
   certificate. This field carries the ACP domain name and the ACP
   node's ACP address prefix.  This address
prefix is intended to persist unchanged through the lifetime of the
ACP node.</t>
          <t indent="0" pn="section-6.11.7-2">Because of the ACP addressing sub-schemes, an ACP domain can have
multiple distributed ACP registrars that do not need to coordinate
for address assignment. ACP registrars can also be sub-CAs, in
which case they can also assign ACP certificates without
dependencies against a (shared) TA (except during renewals
of their own certificates).</t>
          <t indent="0" pn="section-6.11.7-3">ACP registrars are PKI registration authorities (RA) enhanced with
the handling of the ACP certificate-specific fields. They 
request certificates for ACP nodes from a CA
through any appropriate mechanism (out of scope in this document,
but this mechanism is required to be BRSKI for ANI registrars). Only nodes that
are trusted to be compliant with the registrar requirements 
described in this section can be given the necessary credentials
to perform this RA function, such as the credential for the ACP registrar to connect to the CA
as a registrar.</t>
          <section anchor="registrars-protocols" numbered="true" toc="include" removeInRFC="false" pn="section-6.11.7.1">
            <name slugifiedName="name-use-of-brski-or-other-mecha">Use of BRSKI or Other Mechanisms or Protocols</name>
            <t indent="0" pn="section-6.11.7.1-1">Any protocols or mechanisms may be used by ACP registrars
as long as the resulting ACP certificate and TA certificate(s) can be used  
by other domain members to perform the ACP domain membership check described in <xref target="certcheck" format="default" sectionFormat="of" derivedContent="Section 6.2.3"/>,
and the acp-node-name meets the ACP addressing 
   requirements described in the next three sections.</t>
            <t indent="0" pn="section-6.11.7.1-2">An ACP registrar could be a person deciding whether to
enroll a candidate ACP node and then orchestrating the
enrollment of the ACP certificate and associated TA,
using command line or web-based commands on the candidate ACP node
and TA to generate and sign the ACP certificate
and configure certificate and TA onto the node.</t>
            <t indent="0" pn="section-6.11.7.1-3">The only currently defined protocol for ACP registrars is BRSKI
<xref target="RFC8995" format="default" sectionFormat="of" derivedContent="RFC8995"/>. When BRSKI
is used, the ACP nodes are called ANI nodes, and the ACP registrars
are called BRSKI or ANI registrars.  The BRSKI specification does not define the
handling of the acp-node-name field because the rules
do not depend on BRSKI but apply equally to any protocols or mechanisms that an
ACP registrar may use.</t>
          </section>
          <section anchor="registrars-unique" numbered="true" toc="include" removeInRFC="false" pn="section-6.11.7.2">
            <name slugifiedName="name-unique-address-prefix-alloc">Unique Address/Prefix Allocation</name>
            <t indent="0" pn="section-6.11.7.2-1">ACP registrars <bcp14>MUST NOT</bcp14> allocate ACP address prefixes to ACP nodes
via the acp-node-name that would collide
with the ACP address prefixes of other ACP nodes in the same ACP domain.
This includes both prefixes allocated by the same ACP registrar to
different ACP nodes as well as prefixes allocated by other ACP registrars
for the same ACP domain.</t>
            <t indent="0" pn="section-6.11.7.2-2">To support such unique address allocation, an ACP registrar <bcp14>MUST</bcp14> have
one or more 46-bit identifiers, called the Registrar-ID, that are unique across the ACP domain.
Allocation of Registrar-ID(s) to an ACP registrar can happen through
OAM mechanisms in conjunction with some database and/or allocation orchestration.</t>
            <t indent="0" pn="section-6.11.7.2-3">ACP registrars running on physical devices with known globally unique
EUI-48 MAC address(es) (EUI stands for "Extended Unique Identifier") can use the lower 46 bits of those address(es)
as unique Registrar-IDs without requiring any external signaling and/or configuration
(the upper two bits, V and U, are not uniquely assigned but are functional).
This approach is attractive for distributed, non-centrally administered, lightweight
ACP registrar implementations. There is no mechanism to deduce from a MAC
address itself whether it is actually uniquely assigned. Implementations need
to consult additional offline information before making this assumption, for
example, by knowing that a particular physical product or Network Interface Controller (NIC) chip is 
guaranteed to use globally unique assigned EUI-48 MAC address(es).</t>
            <t indent="0" pn="section-6.11.7.2-4">When the candidate ACP device (called pledge in BRSKI) is to be
enrolled into an ACP domain, the ACP registrar needs to allocate
a unique ACP address to the node and ensure that the ACP certificate
gets an acp-node-name field (<xref target="domcert-acpinfo" format="default" sectionFormat="of" derivedContent="Section 6.2.2"/>)
with the appropriate information: ACP domain name, ACP address,
and so on. If the ACP registrar uses BRSKI, it signals the ACP
acp-node-name field to the pledge via EST CSR Attributes
(see <xref target="RFC8995" sectionFormat="comma" section="5.9.2" format="default" derivedLink="https://rfc-editor.org/rfc/rfc8995#section-5.9.2" derivedContent="RFC8995"/>, "EST CSR Attributes").</t>
          </section>
          <section anchor="registrars-policy" numbered="true" toc="include" removeInRFC="false" pn="section-6.11.7.3">
            <name slugifiedName="name-addressing-sub-scheme-polic">Addressing Sub-Scheme Policies</name>
            <t indent="0" pn="section-6.11.7.3-1">The ACP registrar selects for the candidate ACP node a unique 
address prefix from an appropriate ACP addressing sub-scheme,
either a Zone Addressing Sub-Scheme prefix (see <xref target="zone-scheme" format="default" sectionFormat="of" derivedContent="Section 6.11.3"/>),
or a Vlong Addressing Sub-Scheme prefix (see <xref target="Vlong" format="default" sectionFormat="of" derivedContent="Section 6.11.5"/>). The
assigned ACP address prefix encoded in the acp-node-name field
of the ACP certificate indicates to the ACP node its ACP
address information. The addressing sub-scheme indicates the
prefix length: /127 for the Zone Addressing Sub-Scheme, /120 or /112
for the Vlong Addressing Sub-Scheme. The first address of the prefix is the ACP address.
All other addresses in the prefix are for other uses by the ACP node
as described in the Zone Addressing Sub-Scheme and Vlong Addressing Sub-Scheme sections.
The ACP address prefix itself is then signaled by the ACP node into
the ACP routing protocol (see <xref target="routing" format="default" sectionFormat="of" derivedContent="Section 6.12"/>) to establish
IPv6 reachability across the ACP.</t>
            <t indent="0" pn="section-6.11.7.3-2">The choice of addressing sub-scheme and prefix length in the Vlong Addressing
Sub-Scheme is subject to ACP registrar policy. It could be an ACP domain-wide 
policy, or a per ACP node or per ACP node type policy. For example,
in BRSKI, the ACP registrar is aware of the IDevID certificate of the candidate ACP node,
which typically contains a "serialNumber" attribute in the 
subject field distinguished name encoding that often indicates the node's
vendor and device type, and it can be used to drive a policy for selecting an appropriate
addressing sub-scheme for the (class of) node(s).</t>
            <t indent="0" pn="section-6.11.7.3-3">ACP registrars <bcp14>SHOULD</bcp14> default to allocating Zone Addressing Sub-Scheme
addresses with Zone-ID 0.</t>
            <t indent="0" pn="section-6.11.7.3-4">ACP registrars that are aware of the IDevID certificate of a candidate ACP device
<bcp14>SHOULD</bcp14> be able to choose the Zone vs. Vlong Addressing Sub-Scheme for
ACP nodes based on the "serialNumber" attribute <xref target="X.520" format="default" sectionFormat="of" derivedContent="X.520"/> in the 
subject field distinguished name encoding of the IDevID certificate, for example,
by the PID (Product Identifier) part, which identifies the product type,
or by the complete "serialNumber". The PID, for example, could identify 
nodes that allow for specialized ASA requiring multiple addresses or for non-autonomic virtual machines (VMs) for
services, and those nodes could receive Vlong Addressing Sub-Scheme ACP addresses.</t>
            <t indent="0" pn="section-6.11.7.3-5">In a simple allocation scheme, an ACP registrar remembers persistently
across reboots its currently used Registrar-ID and, for each addressing
scheme (Zone with Zone-ID 0, Vlong with /112, Vlong with /120), the
next Node-Number available for allocation, and it increases the next Node-Number during successful
enrollment of an ACP node.  In this simple allocation scheme, the ACP registrar
would not recycle ACP address prefixes from ACP nodes that are no longer used.</t>
            <t indent="0" pn="section-6.11.7.3-6">If allocated addresses cannot be remembered by registrars, then
it is necessary either to use a new value for the Register-ID field
in the ACP addresses or to determine allocated ACP addresses by determining the
addresses of reachable ACP nodes, which is not necessarily the set of all ACP nodes.
Untracked ACP addresses can be reclaimed by revoking
or not renewing their certificates and instead handing out new certificates
with new addresses (for example, with a new Registrar-ID value). Note that
such strategies may require coordination amongst registrars.</t>
          </section>
          <section anchor="registrars-renewal" numbered="true" toc="include" removeInRFC="false" pn="section-6.11.7.4">
            <name slugifiedName="name-address-prefix-persistence">Address/Prefix Persistence</name>
            <t indent="0" pn="section-6.11.7.4-1">When an ACP certificate is renewed or rekeyed via EST or other
mechanisms, the ACP address/prefix in the acp-node-name field
<bcp14>MUST</bcp14> be maintained unless security issues or violations of the unique
 address assignment requirements exist or are suspected by the ACP registrar.</t>
            <t indent="0" pn="section-6.11.7.4-2">ACP address information <bcp14>SHOULD</bcp14> be maintained even when the renewing and/or rekeying
ACP registrar is not the same as the one that enrolled the prior ACP certificate.
See <xref target="sub-ca" format="default" sectionFormat="of" derivedContent="Section 9.2.4"/> for an example.</t>
            <t indent="0" pn="section-6.11.7.4-3">ACP address information <bcp14>SHOULD</bcp14> also be maintained even after an ACP
certificate expires or fails. See <xref target="domcert-re-enroll" format="default" sectionFormat="of" derivedContent="Section 6.2.5.5"/>
and <xref target="domcert-failing" format="default" sectionFormat="of" derivedContent="Section 6.2.5.6"/>.</t>
          </section>
          <section anchor="registrars-further" numbered="true" toc="include" removeInRFC="false" pn="section-6.11.7.5">
            <name slugifiedName="name-further-details">Further Details</name>
            <t indent="0" pn="section-6.11.7.5-1"><xref target="registrar-considerations" format="default" sectionFormat="of" derivedContent="Section 9.2"/> discusses further informative
details of ACP registrars: needed interactions, required
parameters, certificate renewal and limitations, use of sub-CAs on
registrars, and centralized policy control.</t>
          </section>
        </section>
      </section>
      <section anchor="routing" numbered="true" toc="include" removeInRFC="false" pn="section-6.12">
        <name slugifiedName="name-routing-in-the-acp">Routing in the ACP</name>
        <t indent="0" pn="section-6.12-1">Once ULA addresses are set up, all autonomic entities should run a routing protocol within the ACP context.  This routing protocol distributes the ULA created in the previous section for reachability.  The use of the ACP-specific context eliminates the probable clash with data plane routing tables and also secures the ACP from interference from configuration mismatch or incorrect routing updates.</t>
        <t indent="0" pn="section-6.12-2">The establishment of the routing plane and its parameters are automatic and strictly within the confines of the ACP.  Therefore, no explicit configuration is required.</t>
        <t indent="0" pn="section-6.12-3">All routing updates are automatically secured in transit as the channels of the ACP are encrypted, and this routing runs only inside the ACP.</t>
        <t indent="0" pn="section-6.12-4">The routing protocol inside the ACP is RPL <xref target="RFC6550" format="default" sectionFormat="of" derivedContent="RFC6550"/>.  See <xref target="why-rpl" format="default" sectionFormat="of" derivedContent="Appendix A.4"/> for more details on the choice of RPL.</t>
        <t indent="0" pn="section-6.12-5">RPL adjacencies are set up across all ACP channels in the same domain including all its routing subdomains.  See <xref target="domain-usage" format="default" sectionFormat="of" derivedContent="Appendix A.6"/> for more details.</t>
        <section anchor="rpl-profile" numbered="true" toc="include" removeInRFC="false" pn="section-6.12.1">
          <name slugifiedName="name-acp-rpl-profile">ACP RPL Profile</name>
          <t indent="0" pn="section-6.12.1-1">The following is a description of the RPL profile that ACP nodes need to support by default.  The format of this section is derived from <xref target="I-D.ietf-roll-applicability-template" format="default" sectionFormat="of" derivedContent="ROLL-APPLICABILITY"/>.</t>
          <section anchor="rpl-summary" numbered="true" toc="include" removeInRFC="false" pn="section-6.12.1.1">
            <name slugifiedName="name-overview">Overview</name>
            <t indent="0" pn="section-6.12.1.1-1">RPL Packet Information (RPI), defined in <xref target="RFC6550" sectionFormat="comma" section="11.2" format="default" derivedLink="https://rfc-editor.org/rfc/rfc6550#section-11.2" derivedContent="RFC6550"/>, defines the
   data packet artifacts required or beneficial in the forwarding of packets routed by RPL.
   This profile does not use RPI for better compatibility with accelerated hardware
   forwarding planes, which most often do not support the Hop-by-Hop headers used for RPI,
   but also to avoid the overhead of the RPI header on the wire and cost of adding and/or removing them.
</t>
            <section anchor="rpl-single-instance" numbered="true" toc="include" removeInRFC="false" pn="section-6.12.1.1.1">
              <name slugifiedName="name-single-instance">Single Instance</name>
              <t indent="0" pn="section-6.12.1.1.1-1">
      To avoid the need for RPI, the ACP RPL profile uses a simple routing/forwarding table based on destination prefix.
      To achieve this, the profile uses only one RPL
      instanceID.  This single instanceID can contain only one Destination-Oriented 
      Directed Acyclic Graph (DODAG), and the routing/forwarding table can therefore
      only calculate a single class of service ("best effort towards the primary NOC/root")
      and cannot create optimized routing paths to accomplish latency or energy goals
      between any two nodes.
              </t>
              <t indent="0" pn="section-6.12.1.1.1-2">
      This choice is a compromise. Consider a network that has multiple NOCs in different locations. 
      Only one NOC will become the DODAG root. Traffic to and from other NOCs has to be
      sent through the DODAG (shortest path tree) rooted in the primary NOC.
      Depending on topology, this can be an annoyance from a point of view of latency 
      or minimizing network path resources, but this is deemed to be acceptable
      given how ACP traffic is "only" network management/control traffic.
      See <xref target="future-rpl" format="default" sectionFormat="of" derivedContent="Appendix A.9.4"/> for more details.</t>
              <t indent="0" pn="section-6.12.1.1.1-3">Using a single instanceID/DODAG does not introduce a single point of
      failure, as the DODAG will reconfigure itself when it detects data plane
      forwarding failures, including choosing a different root when the primary one fails.
              </t>
              <t indent="0" pn="section-6.12.1.1.1-4">The benefit of this profile, especially compared to other IGPs, is 
      that it does not calculate routes for nodes reachable through the same
      interface as the DODAG root. This RPL profile can therefore scale to
      a much larger number of ACP nodes in the same amount of computation and memory
      than other routing protocols, especially on nodes that are leafs of the topology
      or those close to those leafs.
              </t>
            </section>
            <section anchor="rpl-convergence" numbered="true" toc="include" removeInRFC="false" pn="section-6.12.1.1.2">
              <name slugifiedName="name-reconvergence">Reconvergence</name>
              <t indent="0" pn="section-6.12.1.1.2-1">
      In RPL profiles where RPI (see <xref target="rpl-Data-Plane" format="default" sectionFormat="of" derivedContent="Section 6.12.1.13"/>) is present,
      it is also used to trigger reconvergence when misrouted, for example, looping packets, which
      are recognized because of their RPI data. This helps to minimize RPL signaling traffic,
      especially in networks without stable topology and slow links.
              </t>
              <t indent="0" pn="section-6.12.1.1.2-2">
      The ACP RPL profile instead relies on quickly reconverging the DODAG by
      recognizing link state change (down/up) and triggering reconvergence signaling
      as described in <xref target="rpl-dodag-repair" format="default" sectionFormat="of" derivedContent="Section 6.12.1.7"/>.  Since links in the ACP
      are assumed to be mostly reliable (or have link-layer protection against loss)
      and because there is no stretch according to <xref target="rpl-dodag-repair" format="default" sectionFormat="of" derivedContent="Section 6.12.1.7"/>, 
      loops caused by loss of RPL signaling packets should be exceedingly rare.
              </t>
              <t indent="0" pn="section-6.12.1.1.2-3">
      In addition, there are a variety of mechanisms possible in RPL to further
      avoid temporary loops that are <bcp14>RECOMMENDED</bcp14> to be used for the ACP RPL profile:
      DODAG Information Objects (DIOs) <bcp14>SHOULD</bcp14> be sent two or three times to inform children
      when losing the last parent. The technique in <xref target="RFC6550" sectionFormat="comma" section="8.2.2.6" format="default" derivedLink="https://rfc-editor.org/rfc/rfc6550#section-8.2.2.6" derivedContent="RFC6550"/> (Detaching) <bcp14>SHOULD</bcp14> be favored over that in Section <xref target="RFC6550" sectionFormat="bare" section="8.2.2.5" format="default" derivedLink="https://rfc-editor.org/rfc/rfc6550#section-8.2.2.5" derivedContent="RFC6550"/>
      (Poisoning) because it allows local connectivity. Nodes <bcp14>SHOULD</bcp14> select 
      more than one parent, at least three if possible, and send Destination Advertisement Objects (DAOs) to all
      of them in parallel.</t>
              <t indent="0" pn="section-6.12.1.1.2-4">
      Additionally, failed ACP tunnels can be quickly discovered through the
      secure channel protocol mechanisms such as IKEv2 dead peer detection.
      This can function as a replacement for a Low-power and Lossy Network's
      (LLN's) Expected Transmission Count (ETX) feature, which is not used
      in this profile.  A failure of an ACP tunnel should immediately signal the RPL
      control plane to pick a different parent.
              </t>
            </section>
          </section>
          <section anchor="rpl-instances" numbered="true" toc="include" removeInRFC="false" pn="section-6.12.1.2">
            <name slugifiedName="name-rpl-instances">RPL Instances</name>
            <t indent="0" pn="section-6.12.1.2-1">There is a single RPL instance.  The default RPLInstanceID is 0.</t>
          </section>
          <section anchor="rpl-storing" numbered="true" toc="include" removeInRFC="false" pn="section-6.12.1.3">
            <name slugifiedName="name-storing-vs-non-storing-mode">Storing vs. Non-Storing Mode</name>
            <t indent="0" pn="section-6.12.1.3-1">The RPL Mode of Operation (MOP) <bcp14>MUST</bcp14> support mode 2, "Storing Mode of Operations
        with no multicast support".  Implementations <bcp14>MAY</bcp14> support mode 3 ("... with multicast support") as that is a superset of mode 2.  Note: Root indicates mode in DIO flow.</t>
          </section>
          <section anchor="rpl-dao-policy" numbered="true" toc="include" removeInRFC="false" pn="section-6.12.1.4">
            <name slugifiedName="name-dao-policy">DAO Policy</name>
            <t indent="0" pn="section-6.12.1.4-1">The DAO policy is proactive, aggressive DAO state maintenance:</t>
            <ul spacing="normal" bare="false" empty="false" indent="3" pn="section-6.12.1.4-2">
              <li pn="section-6.12.1.4-2.1">Use the 'K' flag in unsolicited DAO to indicate change from previous
               information (to require DAO-ACK).</li>
              <li pn="section-6.12.1.4-2.2">Retry such DAO DAO-RETRIES(3) times with DAO-ACK_TIME_OUT(256ms) in between.</li>
            </ul>
          </section>
          <section anchor="rpl-path-metric" numbered="true" toc="include" removeInRFC="false" pn="section-6.12.1.5">
            <name slugifiedName="name-path-metrics">Path Metrics</name>
            <t indent="0" pn="section-6.12.1.5-1">Use Hop Count according to "<xref target="RFC6551" format="title" sectionFormat="of" derivedContent="Routing Metrics Used for Path Calculation in Low-Power and Lossy Networks"/>" <xref target="RFC6551" format="default" sectionFormat="of" derivedContent="RFC6551"/>. Note that this is
        solely for diagnostic purposes as it is not used by the Objective Function.</t>
          </section>
          <section anchor="rpl-objective-function" numbered="true" toc="include" removeInRFC="false" pn="section-6.12.1.6">
            <name slugifiedName="name-objective-function">Objective Function</name>
            <dl indent="3" newline="false" spacing="normal" pn="section-6.12.1.6-1">
              <dt pn="section-6.12.1.6-1.1">Objective Function (OF):</dt>
              <dd pn="section-6.12.1.6-1.2">Use Objective Function Zero (OF0) ("<xref target="RFC6552" format="title" sectionFormat="of" derivedContent="Objective Function Zero for the Routing Protocol for Low-Power and Lossy Networks (RPL)"/>" <xref target="RFC6552" format="default" sectionFormat="of" derivedContent="RFC6552"/>).
           Metric containers are not used.</dd>
              <dt pn="section-6.12.1.6-1.3">rank_factor:</dt>
              <dd pn="section-6.12.1.6-1.4">
                <t indent="0" pn="section-6.12.1.6-1.4.1">Derived from link speed:
            if less than or equal to 100 Mbps, LOW_SPEED_FACTOR(5), else HIGH_SPEED_FACTOR(1).</t>
                <t indent="0" pn="section-6.12.1.6-1.4.2">This is a simple rank differentiation between typical "low speed"
        or IoT links that commonly max out at 100 Mbps and typical 
        infrastructure links with speeds of 1 Gbps or higher. Given how
        the path selection for the ACP focuses only on reachability but
        not on path cost optimization, no attempts at finer-grained path
        optimization are made. </t>
              </dd>
            </dl>
          </section>
          <section anchor="rpl-dodag-repair" numbered="true" toc="include" removeInRFC="false" pn="section-6.12.1.7">
            <name slugifiedName="name-dodag-repair">DODAG Repair</name>
            <dl indent="3" newline="false" spacing="normal" pn="section-6.12.1.7-1">
              <dt pn="section-6.12.1.7-1.1">Global Repair:</dt>
              <dd pn="section-6.12.1.7-1.2">We assume stable links and ranks (metrics), so there is
              no need to periodically rebuild the DODAG.  The DODAG version is only
              incremented under catastrophic events (e.g., administrative action).</dd>
              <dt pn="section-6.12.1.7-1.3">Local Repair:</dt>
              <dd pn="section-6.12.1.7-1.4">
                <t indent="0" pn="section-6.12.1.7-1.4.1">As soon as link breakage is detected, the ACP node sends
        a No-Path DAO for all the targets that were reachable only via this link.
        As soon as link repair is detected, the ACP node validates if this link provides
        a better parent.  If so, a new rank is computed by the ACP node, and it sends a new DIO
        that advertises the new rank.  Then it sends a DAO with a new path sequence about itself.</t>
                <t indent="0" pn="section-6.12.1.7-1.4.2">When using ACP multi-access virtual interfaces, local repair can be
               triggered directly by peer breakage, see <xref target="ACP-ma-virtual-interfaces" format="default" sectionFormat="of" derivedContent="Section 6.13.5.2.2"/>.</t>
              </dd>
              <dt pn="section-6.12.1.7-1.5">stretch_rank:</dt>
              <dd pn="section-6.12.1.7-1.6">None provided ("not stretched").</dd>
              <dt pn="section-6.12.1.7-1.7">Data-Path Validation:</dt>
              <dd pn="section-6.12.1.7-1.8"> Not used.</dd>
              <dt pn="section-6.12.1.7-1.9">Trickle:</dt>
              <dd pn="section-6.12.1.7-1.10">Not used.</dd>
            </dl>
          </section>
          <section anchor="rpl-multicast" numbered="true" toc="include" removeInRFC="false" pn="section-6.12.1.8">
            <name slugifiedName="name-multicast">Multicast</name>
            <t indent="0" pn="section-6.12.1.8-1">Multicast is not used yet, but it is possible because of the selected mode of operations.</t>
          </section>
          <section anchor="rpl-security" numbered="true" toc="include" removeInRFC="false" pn="section-6.12.1.9">
            <name slugifiedName="name-security">Security</name>
            <t indent="0" pn="section-6.12.1.9-1">RPL security <xref target="RFC6550" format="default" sectionFormat="of" derivedContent="RFC6550"/> is not used, and ACP security is substituted.</t>
            <t indent="0" pn="section-6.12.1.9-2">Because the ACP links already include provisions for confidentiality and
         integrity protection, their usage at the RPL layer would be redundant, and 
         so RPL security is not used.</t>
          </section>
          <section anchor="rpl-p2p" numbered="true" toc="include" removeInRFC="false" pn="section-6.12.1.10">
            <name slugifiedName="name-p2p-communications">P2P Communications</name>
            <t indent="0" pn="section-6.12.1.10-1">Not used.</t>
          </section>
          <section anchor="rpl-ipv6" numbered="true" toc="include" removeInRFC="false" pn="section-6.12.1.11">
            <name slugifiedName="name-ipv6-address-configuration">IPv6 Address Configuration</name>
            <t indent="0" pn="section-6.12.1.11-1">Every ACP node (RPL node) announces an IPv6 prefix covering the addresses assigned to the ACP node via the AcpNodeName.  The prefix length depends on the addressing sub-scheme of the acp-address, /127 for the Zone Addressing Sub-Scheme and /112 or /120 for the Vlong Addressing Sub-Scheme.  See <xref target="addressing" format="default" sectionFormat="of" derivedContent="Section 6.11"/> for more details.</t>
            <t indent="0" pn="section-6.12.1.11-2">Every ACP node <bcp14>MUST</bcp14> install a black hole route (also known as a null route) if there are unused parts of the ACP address space assigned to the ACP node via its AcpNodeName. This is superseded by longer prefixes assigned to interfaces for the address space actually used by the node.  For example, when the node has an ACP-Vlong-8 address space, it installs a /120 black hole route. If it then only uses the ACP address (first address from the space), for example, it would assign that address via a /128 address prefix to the ACP loopback interface (see <xref target="ACP-loopback" format="default" sectionFormat="of" derivedContent="Section 6.13.5.1"/>). None of those longer prefixes are announced into RPL.</t>
            <t indent="0" pn="section-6.12.1.11-3">For ACP-Manual address prefixes configured on an ACP node, for example, for ACP connect subnets (see <xref target="NMS" format="default" sectionFormat="of" derivedContent="Section 8.1.1"/>), the node announces the /64 subnet prefix.</t>
          </section>
          <section anchor="rpl-admin" numbered="true" toc="include" removeInRFC="false" pn="section-6.12.1.12">
            <name slugifiedName="name-administrative-parameters">Administrative Parameters</name>
            <dl indent="3" newline="false" spacing="normal" pn="section-6.12.1.12-1">
              <dt pn="section-6.12.1.12-1.1">Administrative Preference (<xref target="RFC6550" section="3.2.6" sectionFormat="comma" format="default" derivedLink="https://rfc-editor.org/rfc/rfc6550#section-3.2.6" derivedContent="RFC6550"/> --to become root):</dt>
              <dd pn="section-6.12.1.12-1.2">
                <t indent="0" pn="section-6.12.1.12-1.2.1">The preference is indicated in the DODAGPreference field of DIO message.
                </t>
                <dl indent="3" newline="false" spacing="normal" pn="section-6.12.1.12-1.2.2">
                  <dt pn="section-6.12.1.12-1.2.2.1">Explicitly configured "root":</dt>
                  <dd pn="section-6.12.1.12-1.2.2.2"> 0b100</dd>
                  <dt pn="section-6.12.1.12-1.2.2.3">ACP registrar (default):</dt>
                  <dd pn="section-6.12.1.12-1.2.2.4"> 0b011</dd>
                  <dt pn="section-6.12.1.12-1.2.2.5">ACP connect (non-registrar):</dt>
                  <dd pn="section-6.12.1.12-1.2.2.6"> 0b010</dd>
                  <dt pn="section-6.12.1.12-1.2.2.7">Default:</dt>
                  <dd pn="section-6.12.1.12-1.2.2.8"> 0b001</dd>
                </dl>
              </dd>
            </dl>
          </section>
          <section anchor="rpl-Data-Plane" numbered="true" toc="include" removeInRFC="false" pn="section-6.12.1.13">
            <name slugifiedName="name-rpl-packet-information">RPL Packet Information</name>
            <t indent="0" pn="section-6.12.1.13-1">RPI is not required in the ACP RPL profile for the following reasons.
            </t>
            <t indent="0" pn="section-6.12.1.13-2">One RPI option is the RPL Source Routing Header (SRH) ("<xref target="RFC6554" format="title" sectionFormat="of" derivedContent="An IPv6 Routing Header for Source Routes with the Routing Protocol for Low-Power and Lossy Networks (RPL)"/>" <xref target="RFC6554" format="default" sectionFormat="of" derivedContent="RFC6554"/>), which is not 
           necessary because the ACP RPL profile uses storing mode where each hop has the necessary next-hop
           forwarding information.</t>
            <t indent="0" pn="section-6.12.1.13-3">The simpler RPL Option header "<xref target="RFC6553" format="title" sectionFormat="of" derivedContent="The Routing Protocol for Low-Power and Lossy Networks (RPL) Option for Carrying RPL Information in Data-Plane Datagrams"/>" <xref target="RFC6553" format="default" sectionFormat="of" derivedContent="RFC6553"/> is also
           not necessary in this profile, because it uses a single RPL instance and data-path
           validation is also not used.</t>
          </section>
          <section anchor="rpl-unknown" numbered="true" toc="include" removeInRFC="false" pn="section-6.12.1.14">
            <name slugifiedName="name-unknown-destinations">Unknown Destinations</name>
            <t indent="0" pn="section-6.12.1.14-1">Because RPL minimizes the size of the routing and forwarding table, prefixes reachable through the same interface as the RPL root are not known on every ACP node.  Therefore, traffic to unknown destination addresses can only be discovered at the RPL root.  The RPL root <bcp14>SHOULD</bcp14> have attach-safe mechanisms to operationally discover and log such packets.</t>
            <t indent="0" pn="section-6.12.1.14-2">As this requirement places additional constraints on the data plane
              functionality of the RPL root, it does not apply to "normal" nodes
              that are not configured to have special functionality (i.e., the
              administrative parameter from <xref target="rpl-admin" format="default" sectionFormat="of" derivedContent="Section 6.12.1.12"/> has value 0b001).
              If the ACP network is degraded to the point where there are no nodes that
              could be configured as root, registrar, or ACP connect nodes, it is
              possible that the RPL root (and thus the ACP as a whole) would be
              unable to detect traffic to unknown destinations.  However, in the
              absence of nodes with administrative preference other than 0b001,
              there is also unlikely to be a way to get diagnostic information out
              of the ACP, so detection of traffic to unknown destinations would not
              be actionable anyway.
            </t>
          </section>
        </section>
      </section>
      <section anchor="acp_general" numbered="true" toc="include" removeInRFC="false" pn="section-6.13">
        <name slugifiedName="name-general-acp-considerations">General ACP Considerations</name>
        <t indent="0" pn="section-6.13-1">Since channels are established between adjacent neighbors by default, the resulting overlay network does hop-by-hop encryption.  Each node decrypts incoming traffic from the ACP and encrypts outgoing traffic to its neighbors in the ACP.  Routing is discussed in <xref target="routing" format="default" sectionFormat="of" derivedContent="Section 6.12"/>.</t>
        <section anchor="performance" numbered="true" toc="include" removeInRFC="false" pn="section-6.13.1">
          <name slugifiedName="name-performance">Performance</name>
          <t indent="0" pn="section-6.13.1-1">There are no performance requirements for ACP implementations defined in this document because the performance requirements depend on the intended use case.  It is expected that a fully autonomic node with a wide range of ASA can require high forwarding plane performance in the ACP, for example, for telemetry.  Implementations of ACP that solely support traditional or SDN-style use cases can benefit from ACP at lower performance, especially if the ACP is used only for critical operations, e.g., when the data plane is not available. The design of the ACP as specified in this document is intended to support a wide range of performance options: it is intended to allow software-only implementations at potentially low performance, but the design can also support high-performance options. See <xref target="RFC8368" format="default" sectionFormat="of" derivedContent="RFC8368"/> for more details.</t>
        </section>
        <section anchor="general_addressing" numbered="true" toc="include" removeInRFC="false" pn="section-6.13.2">
          <name slugifiedName="name-addressing-of-secure-channe">Addressing of Secure Channels</name>
          <t indent="0" pn="section-6.13.2-1">In order to be independent of the data plane routing and addressing,
the ACP secure channels discovered via GRASP use IPv6 link-local addresses between
adjacent neighbors.  Note: <xref target="remote-acp-neighbors" format="default" sectionFormat="of" derivedContent="Section 8.2"/> specifies
extensions in which secure channels are configured tunnels operating over
the data plane, so those secure channels cannot be independent of the
data plane.</t>
          <t indent="0" pn="section-6.13.2-2">To avoid impacting the operations of the
IPv6 (link-local) interface/address used for ACP channels when configuring the data plane, appropriate
implementation considerations are required. If the IPv6 interface/link-local
address is shared with the data plane, it needs to be impossible to unconfigure and/or disable
it through configuration. Instead of sharing the IPv6 interface/link-local
address, a separate (virtual) interface with a separate IPv6 link-local
address can be used. For example, the ACP interface could be run over a separate 
MAC address of an underlying L2 (Ethernet) interface.  For more details and options,
see <xref target="dp-dependency" format="default" sectionFormat="of" derivedContent="Appendix A.9.2"/>.</t>
          <t indent="0" pn="section-6.13.2-3">Note that other (nonideal) implementation choices may introduce additional, undesired
dependencies against the data plane, for example, shared code and configuration
of the secure channel protocols (IPsec and/or DTLS).</t>
        </section>
        <section anchor="general_MTU" numbered="true" toc="include" removeInRFC="false" pn="section-6.13.3">
          <name slugifiedName="name-mtu">MTU</name>
          <t indent="0" pn="section-6.13.3-1">The MTU for ACP secure channels <bcp14>MUST</bcp14> be derived locally from the underlying link MTU minus the secure channel encapsulation overhead.</t>
          <t indent="0" pn="section-6.13.3-2">ACP secure channel protocols do not need to perform MTU discovery because they are built across L2 adjacencies: the MTUs on both sides connecting to the L2 connection are assumed to be consistent.  Extensions to ACP where the ACP is, for example, tunneled need to consider how to guarantee MTU consistency.  This is an issue of tunnels, not an issue of running the ACP across a tunnel.  Transport stacks running across ACP can perform normal PMTUD (Path MTU Discovery).  Because the ACP is meant to prioritize reliability over performance, they <bcp14>MAY</bcp14> opt to only expect IPv6 minimum MTU (1280 octets) to avoid running into PMTUD implementation bugs or underlying link MTU mismatch problems.</t>
        </section>
        <section anchor="general_multipath" numbered="true" toc="include" removeInRFC="false" pn="section-6.13.4">
          <name slugifiedName="name-multiple-links-between-node">Multiple Links between Nodes</name>
          <t indent="0" pn="section-6.13.4-1">If two nodes are connected via several links, the ACP <bcp14>SHOULD</bcp14> be established across every link, but it is possible to establish the ACP only on a subset of links.  Having an ACP channel on every link has a number of advantages, for example, it allows for a faster failover in case of link failure, and it reflects the physical topology more closely.  Using a subset of links (for example, a single link), reduces resource consumption on the node because state needs to be kept per ACP channel.  The negotiation scheme explained in <xref target="channel-selection" format="default" sectionFormat="of" derivedContent="Section 6.6"/> allows the Decider (the node with the higher ACP address) to drop all but the desired ACP channels to the Follower, and the Follower will not retry to build these secure channels from its side unless the Decider appears with a previously unknown GRASP announcement (e.g., on a different link or with a different address announced in GRASP).</t>
        </section>
        <section anchor="ACP_interfaces" numbered="true" toc="include" removeInRFC="false" pn="section-6.13.5">
          <name slugifiedName="name-acp-interfaces">ACP Interfaces</name>
          <t indent="0" pn="section-6.13.5-1">Conceptually, the ACP VRF has two types of interfaces: the "ACP loopback 
        interface(s)" to which the ACP ULA address(es) are assigned and the
         "ACP virtual interfaces" that are mapped to the ACP secure channels.</t>
          <section anchor="ACP-loopback" numbered="true" toc="include" removeInRFC="false" pn="section-6.13.5.1">
            <name slugifiedName="name-acp-loopback-interfaces">ACP Loopback Interfaces</name>
            <t indent="0" pn="section-6.13.5.1-1">For autonomous operations of the ACP, as described in <xref target="self-creation" format="default" sectionFormat="of" derivedContent="Section 6"/>
        and <xref target="acp-l2-switches" format="default" sectionFormat="of" derivedContent="Section 7"/>, the ACP node uses the first address from
        the N bit ACP prefix assigned to the node. N = (128 - number of Vbits of the ACP address).
        This address is assigned with an address prefix of N or larger to a loopback interface.</t>
            <t indent="0" pn="section-6.13.5.1-2">Other addresses from the prefix can be used by the ACP of the node as desired. 
        The autonomous operations of the ACP do not require additional global-scope
         IPv6 addresses, they are instead intended for ASA or non-autonomous functions.
        Components of the ACP that are not fully autonomic, such as ACP connect interfaces
        (see <xref target="acp-connect" format="default" sectionFormat="of" derivedContent="Figure 14"/>), may also introduce additional
        global-scope IPv6 addresses on other types of interfaces to the ACP.</t>
            <t indent="0" pn="section-6.13.5.1-3">The use of loopback interfaces for global-scope addresses is 
        common operational configuration practice on routers, for example, in Internal BGP (IBGP)
        connections since BGP4 (see "<xref target="RFC1654" format="title" sectionFormat="of" derivedContent="A Border Gateway Protocol 4 (BGP-4)"/>" <xref target="RFC1654" format="default" sectionFormat="of" derivedContent="RFC1654"/>) or earlier.
        The ACP adopts and automates this operational practice.</t>
            <t indent="0" pn="section-6.13.5.1-4">A loopback interface for use with the ACP as described above is an interface
        that behaves according to Section <xref target="RFC6724" section="4" sectionFormat="bare" format="default" derivedLink="https://rfc-editor.org/rfc/rfc6724#section-4" derivedContent="RFC6724"/> of <xref target="RFC6724" format="default" sectionFormat="of" derivedContent="RFC6724">"Default Address Selection for Internet Protocol Version 6 (IPv6)"</xref>, paragraph 2.
        Packets sent by the host of the node from the loopback interface 
        behave as if they are looped back by the interface so that
        they look as if they originated from the loopback interface, are 
        then received by the node and forwarded by it towards the destination.</t>
            <t indent="0" pn="section-6.13.5.1-5">The term "loopback only" indicates this behavior, but not the actual name of the
        interface type chosen in an actual implementation.
        A loopback interface for use with the ACP can be a virtual and/or software
        construct without any associated hardware, or it can be a hardware interface
        operating in loopback mode.</t>
            <t indent="0" pn="section-6.13.5.1-6">A loopback interface used for the ACP <bcp14>MUST NOT</bcp14> have connectivity to other
        nodes.</t>
            <t indent="0" pn="section-6.13.5.1-7">The following list reviews the reasons for the choice of loopback addresses
        for ACP addresses, which is based on the IPv6 address architecture and common challenges:
            </t>
            <ol type="1" spacing="normal" indent="adaptive" start="1" pn="section-6.13.5.1-8">
              <li pn="section-6.13.5.1-8.1" derivedCounter="1.">IPv6 addresses are assigned to interfaces, not nodes. IPv6 continues
          the IPv4 model that a subnet prefix is associated with one link,
          see Section <xref target="RFC4291" section="2.1" sectionFormat="bare" format="default" derivedLink="https://rfc-editor.org/rfc/rfc4291#section-2.1" derivedContent="RFC4291"/> of <xref target="RFC4291" format="default" sectionFormat="of" derivedContent="RFC4291">"IP Version 6 Addressing Architecture"</xref>.</li>
              <li pn="section-6.13.5.1-8.2" derivedCounter="2.">IPv6 implementations commonly do not allow assignment of the same
              IPv6 global-scope address in the same VRF to more
          than one interface.</li>
              <li pn="section-6.13.5.1-8.3" derivedCounter="3.">Global-scope addresses assigned to interfaces that connect to other
          nodes (external interfaces) may not be stable addresses for communications
          because any such interface could fail due to reasons external to the node.
          This could render the addresses assigned to that interface unusable.</li>
              <li pn="section-6.13.5.1-8.4" derivedCounter="4.">If failure of the subnet does not bring down the interface and make
          the addresses unusable, it could result in unreachability of the
          address because the shortest path to the node might go through one of the
          other nodes on the same subnet, which could equally consider the subnet to
          be operational even though it is not.</li>
              <li pn="section-6.13.5.1-8.5" derivedCounter="5.">Many OAM service implementations on routers cannot deal with more than one peer address,
          often because they already expect that a single loopback address can be used,
          especially to provide a stable address under failure of external interfaces or links.</li>
              <li pn="section-6.13.5.1-8.6" derivedCounter="6.">Even when an application supports multiple addresses to a peer, it
          can only use one address at a time for a connection with the most widely deployed 
          transport protocols, TCP and UDP. While "<xref target="RFC6824" format="title" sectionFormat="of" derivedContent="TCP Extensions for Multipath Operation with Multiple Addresses"/>" <xref target="RFC6824" format="default" sectionFormat="of" derivedContent="RFC6824"/>/<xref target="RFC8684" format="default" sectionFormat="of" derivedContent="RFC8684"/> solves this problem,
          it is not widely adopted by implementations of router OAM services.</li>
              <li pn="section-6.13.5.1-8.7" derivedCounter="7.">To completely autonomously assign global-scope addresses to subnets
          connecting to other nodes, it would be necessary for every node to have 
          an amount of prefix address space on the order of the maximum number of
          subnets that the node could connect to, and then the node would have to negotiate
          with adjacent nodes across those subnets which address space to use for each subnet.</li>
              <li pn="section-6.13.5.1-8.8" derivedCounter="8.">Using global-scope addresses for subnets between nodes is 
          unnecessary if those subnets only connect routers, such as ACP secure channels,
          because they can communicate to remote nodes via their global-scope loopback addresses.
          Using global-scope addresses for those external subnets is therefore wasteful
          for the address space and also unnecessarily increases the size of the routing
          and forwarding tables, which, especially for the ACP, is highly undesirable because
          it should attempt to minimize the per-node overhead of the ACP VRF.</li>
              <li pn="section-6.13.5.1-8.9" derivedCounter="9.">For all these reasons, the ACP addressing sub-schemes do not consider
          ACP addresses for subnets connecting ACP nodes.</li>
            </ol>
            <t indent="0" pn="section-6.13.5.1-9">Note that "<xref target="RFC8402" format="title" sectionFormat="of" derivedContent="Segment Routing Architecture"/>" <xref target="RFC8402" format="default" sectionFormat="of" derivedContent="RFC8402"/> introduces the term Node-SID to refer
        to IGP prefix segments that identify a specific router, for example, on a loopback interface.
        An ACP loopback address prefix may similarly be called an ACP Node Identifier.</t>
          </section>
          <section anchor="ACP-virtual-interfaces" numbered="true" toc="include" removeInRFC="false" pn="section-6.13.5.2">
            <name slugifiedName="name-acp-virtual-interfaces">ACP Virtual Interfaces</name>
            <t indent="0" pn="section-6.13.5.2-1">Any ACP secure channel to another ACP node is
        mapped to ACP virtual interfaces in one of the following ways.
        This is independent of the chosen secure channel protocol (IPsec, DTLS,
        or other future protocol, either standardized or not).</t>
            <t indent="0" pn="section-6.13.5.2-2">Note that all the considerations described here assume point-to-point
        secure channel associations. Mapping multiparty secure channel associations, such as
        "<xref target="RFC6407" format="title" sectionFormat="of" derivedContent="The Group Domain of Interpretation"/>" <xref target="RFC6407" format="default" sectionFormat="of" derivedContent="RFC6407"/>, is out of scope.</t>
            <section anchor="ACP-p2p-virtual-interfaces" numbered="true" toc="include" removeInRFC="false" pn="section-6.13.5.2.1">
              <name slugifiedName="name-acp-point-to-point-virtual-">ACP Point-to-Point Virtual Interfaces</name>
              <t indent="0" pn="section-6.13.5.2.1-1">In this option, each ACP secure channel is
        mapped to a separate point-to-point ACP virtual interface.  If a
        physical subnet has more than two ACP-capable nodes (in the same domain),
        this implementation approach will lead to a full mesh of ACP virtual 
        interfaces between them.</t>
              <t indent="0" pn="section-6.13.5.2.1-2">When the secure channel protocol determines a peer to be dead, this <bcp14>SHOULD</bcp14>
        result in indicating link breakage to trigger RPL DODAG repair, see
        <xref target="rpl-dodag-repair" format="default" sectionFormat="of" derivedContent="Section 6.12.1.7"/>.</t>
            </section>
            <section anchor="ACP-ma-virtual-interfaces" numbered="true" toc="include" removeInRFC="false" pn="section-6.13.5.2.2">
              <name slugifiedName="name-acp-multi-access-virtual-in">ACP Multi-Access Virtual Interfaces</name>
              <t indent="0" pn="section-6.13.5.2.2-1">In a more advanced implementation approach,
        the ACP will construct a single multi-access ACP virtual interface for
        all ACP secure channels to ACP-capable nodes reachable across the same
        underlying (physical) subnet.  IPv6 link-local multicast packets
        sent to an ACP multi-access virtual interface are replicated to
        every ACP secure channel mapped to the ACP multi-access virtual
        interface.  IPv6 unicast packets sent to an ACP multi-access virtual
        interface are sent to the ACP secure channel that belongs to the
        ACP neighbor that is the next hop in the ACP forwarding table entry
        used to reach the packets' destination address.</t>
              <t indent="0" pn="section-6.13.5.2.2-2">When the secure channel protocol determines that a peer is dead for a
        secure channel mapped to an ACP multi-access virtual interface,
        this <bcp14>SHOULD</bcp14> result in signaling breakage of that peer to RPL, so it can trigger
        RPL DODAG repair, see <xref target="rpl-dodag-repair" format="default" sectionFormat="of" derivedContent="Section 6.12.1.7"/>.</t>
              <t indent="0" pn="section-6.13.5.2.2-3">There is no requirement for
        all ACP nodes on the same multi-access subnet to use the same
        type of ACP virtual interface.  This is purely a node-local
        decision.</t>
              <t indent="0" pn="section-6.13.5.2.2-4">ACP nodes <bcp14>MUST</bcp14> perform standard IPv6 operations across ACP
        virtual interfaces including SLAAC 
        <xref target="RFC4862" format="default" sectionFormat="of" derivedContent="RFC4862"/> to assign their IPv6 link-local address on the ACP
        virtual interface and ND ("<xref target="RFC4861" format="title" sectionFormat="of" derivedContent="Neighbor Discovery for IP version 6 (IPv6)"/>" <xref target="RFC4861" format="default" sectionFormat="of" derivedContent="RFC4861"/>)
        to discover which IPv6 link-local neighbor address belongs to 
        which ACP secure channel mapped to the ACP virtual interface.
        This is independent of whether the ACP virtual interface is point-to-point or multi-access.</t>
              <t indent="0" pn="section-6.13.5.2.2-5">Optimistic Duplicate Address Detection (DAD) according to 
        "<xref target="RFC4429" format="title" sectionFormat="of" derivedContent="Optimistic Duplicate Address Detection (DAD) for IPv6"/>" <xref target="RFC4429" format="default" sectionFormat="of" derivedContent="RFC4429"/> is <bcp14>RECOMMENDED</bcp14> because the likelihood for
        duplicates between ACP nodes is highly improbable as long as 
        the address can be formed from a globally unique, locally assigned identifier
        (e.g., EUI-48/EUI-64, see below).</t>
              <t indent="0" pn="section-6.13.5.2.2-6">ACP nodes <bcp14>MAY</bcp14> reduce the amount of link-local IPv6 multicast
        packets from ND by learning the IPv6 link-local neighbor address
        to ACP secure channel mapping from other messages, such as the source
        address of IPv6 link-local multicast RPL messages, and therefore
        forego the need to send Neighbor Solicitation messages.</t>
              <t indent="0" pn="section-6.13.5.2.2-7">The ACP virtual interface IPv6 link-local address can be derived from
        any appropriate local mechanism, such as node-local EUI-48 or EUI-64.
        It <bcp14>MUST NOT</bcp14> depend on something that is attackable from the data plane, such
        as the IPv6 link-local address of the underlying physical interface, which
        can be attacked by SLAAC, or parameters of the secure channel encapsulation header
        that may not be protected by the secure channel mechanism.</t>
              <t indent="0" pn="section-6.13.5.2.2-8">The link-layer address of an ACP virtual interface is the
        address used for the underlying interface across which the secure
        tunnels are built, typically Ethernet addresses.  Because unicast IPv6
        packets sent to an ACP virtual interface are not sent to a link-layer
        destination address but rather to an ACP secure channel,
        the link-layer address fields <bcp14>SHOULD</bcp14> be ignored on reception, and
        instead the ACP secure channel from which the message was
        received should be remembered.</t>
              <t indent="0" pn="section-6.13.5.2.2-9">Multi-access ACP virtual interfaces are preferable implementations
        when the underlying interface is a (broadcast) multi-access subnet because they 
        reflect the presence of the underlying multi-access subnet to the virtual
        interfaces of the ACP.  This makes it, for example, simpler to build services
        with topology awareness inside the ACP VRF in the same way as they could 
        have been built running natively on the multi-access interfaces.</t>
              <t indent="0" pn="section-6.13.5.2.2-10">Consider also the impact of point-to-point vs. multi-access virtual interfaces
        on the efficiency of flooding via link-local multicast messages.</t>
              <t indent="0" pn="section-6.13.5.2.2-11">Assume a LAN with three ACP neighbors, Alice, Bob, and Carol.
        Alice's ACP GRASP wants to send a link-local GRASP multicast message to
        Bob and Carol.  If Alice's ACP emulates the LAN as per-peer, point-to-point
        virtual interfaces, one to Bob and one to Carol, Alice's ACP GRASP will
        send two copies of multicast GRASP messages: one to Bob and one to Carol.
        If Alice's ACP emulates a LAN via a multipoint virtual interface, Alice's ACP GRASP will send one packet
        to that interface, and the ACP multipoint virtual interface will replicate the packet to each secure channel,
        one to Bob, one to Carol.  The result is the same.  The difference 
        happens when Bob and Carol receive their packets.  If they use ACP point-to-point
        virtual interfaces, their GRASP instance would forward the packet
        from Alice to each other as part of the GRASP flooding procedure.
        These packets are unnecessary and would be discarded by GRASP
        on receipt as duplicates (by use of the GRASP Session ID).
        If Bob and Carol's ACP emulated a multi-access
        virtual interface, then this would not happen because GRASP's flooding procedure
        does not replicate packets back to the interface from which they were received.</t>
              <t indent="0" pn="section-6.13.5.2.2-12">Note that link-local GRASP multicast messages are not sent
        directly as IPv6 link-local multicast UDP messages to ACP virtual interfaces,
        but instead to ACP GRASP virtual interfaces that are layered on top of
        ACP virtual interfaces to add TCP reliability to link-local multicast
        GRASP messages.  Nevertheless, these ACP GRASP virtual interfaces perform the
        same replication of messages and therefore have the same impact on flooding.
        See <xref target="GRASP-substrate" format="default" sectionFormat="of" derivedContent="Section 6.9.2"/> for more details.</t>
              <t indent="0" pn="section-6.13.5.2.2-13">RPL does support operations and correct routing table construction
        across non-broadcast multi-access (NBMA) subnets.  This is common when using many
        radio technologies.  When such NBMA subnets are used, they <bcp14>MUST NOT</bcp14> be
        represented as ACP multi-access virtual interfaces because the replication
        of IPv6 link-local multicast messages will not reach all
        NBMA subnet neighbors.  As a result, GRASP message flooding would fail.
        Instead, each ACP secure channel across such an interface <bcp14>MUST</bcp14> be
        represented as an ACP point-to-point virtual interface. See also <xref target="future-rpl" format="default" sectionFormat="of" derivedContent="Appendix A.9.4"/>.</t>
              <t indent="0" pn="section-6.13.5.2.2-14">Care needs to be taken when creating multi-access ACP virtual
        interfaces across ACP secure channels between ACP nodes in different domains
        or routing subdomains. If, for example, future inter-domain ACP policies
        are defined as "peer-to-peer" policies, it is easier to create ACP point-to-point
        virtual interfaces for these inter-domain secure channels.</t>
            </section>
          </section>
        </section>
      </section>
    </section>
    <section anchor="acp-l2-switches" numbered="true" toc="include" removeInRFC="false" pn="section-7">
      <name slugifiedName="name-acp-support-on-l2-switches-">ACP Support on L2 Switches/Ports (Normative)</name>
      <section anchor="acp-l2-switches-why" numbered="true" toc="include" removeInRFC="false" pn="section-7.1">
        <name slugifiedName="name-why-benefits-of-acp-on-l2-s">Why (Benefits of ACP on L2 Switches)</name>
        <figure anchor="acp-example" align="left" suppress-title="false" pn="figure-13">
          <name slugifiedName="name-topology-with-l2-acp-switch">Topology with L2 ACP Switches</name>
          <artwork name="" type="" align="left" alt="" pn="section-7.1-1.1">
    ANrtr1 ------ ANswitch1 --- ANswitch2 ------- ANrtr2
              .../   \                   \  ...
    ANrtrM ------     \                   ------- ANrtrN
                       ANswitchM ...
</artwork>
        </figure>
        <t indent="0" pn="section-7.1-2">Consider a large L2 LAN with routers ANrtr1 through ANrtrN connected via some topology of L2 switches.
Examples include large enterprise campus networks with an L2 core, IoT networks, or broadband
aggregation networks, which often have a multilevel L2-switched topology.</t>
        <t indent="0" pn="section-7.1-3">If the discovery protocol used for the ACP operates at the subnet level, every ACP router
will see all other ACP routers on the LAN as neighbors, and a full mesh of ACP channels will be built.
If some or all of the AN switches are autonomic with the same discovery protocol, then the
full mesh would include those switches as well.</t>
        <t indent="0" pn="section-7.1-4">A full mesh of ACP connections can create fundamental scale challenges.  The number of
security associations of the secure channel protocols will likely not scale arbitrarily,
especially when they leverage platform-accelerated encryption/decryption.  Likewise, any
other ACP operations (such as routing) need to scale to the number of direct ACP neighbors.  An
ACP router with just four physical interfaces might be deployed into a LAN with hundreds of neighbors connected
via switches.  Introducing such a new, unpredictable scaling factor requirement makes it harder
to support the ACP on arbitrary platforms and in arbitrary deployments.</t>
        <t indent="0" pn="section-7.1-5">Predictable scaling requirements for ACP neighbors can most easily be achieved if, in
topologies such as these, ACP-capable L2 switches can ensure that discovery messages terminate
on them so that neighboring ACP routers and switches will only find the physically connected
ACP L2 switches as their candidate ACP neighbors.  With such a discovery mechanism in place, the
ACP and its security associations will only need to scale to the number of physical interfaces
instead of a potentially much larger number of "LAN-connected" neighbors, and the ACP topology
will follow directly the physical topology, something that can then also be leveraged
in management operations or by ASAs.</t>
        <t indent="0" pn="section-7.1-6">In the example above, consider that ANswitch1 and ANswitchM are ACP capable, and ANswitch2
is not ACP capable.  The desired ACP topology is that ANrtr1 and ANrtrM only have an
ACP connection to ANswitch1, and that ANswitch1, ANrtr2, and ANrtrN have a full mesh of ACP
connections amongst each other.  ANswitch1 also has an ACP connection with ANswitchM, and
ANswitchM has ACP connections to anything else behind it.</t>
      </section>
      <section anchor="acp-l2-switches-how" numbered="true" toc="include" removeInRFC="false" pn="section-7.2">
        <name slugifiedName="name-how-per-l2-port-dull-grasp">How (per L2 Port DULL GRASP)</name>
        <t indent="0" pn="section-7.2-1">To support ACP on L2 switches or L2-switched ports of an L3 device, it is necessary to
make those L2 ports look like L3 interfaces for the ACP implementation.  This primarily involves
the creation of a separate DULL GRASP instance/domain on every such L2 port.  Because GRASP
has a dedicated link-local IPv6 multicast address (ALL_GRASP_NEIGHBORS), it is sufficient that all packets
for this address are extracted at the port level and passed to that DULL GRASP instance.
Likewise, the IPv6 link-local multicast packets sent by that DULL GRASP instance need to be
sent only towards the L2 port for this DULL GRASP instance (instead of being flooded across
all ports of the VLAN to which the port belongs).</t>
        <t indent="0" pn="section-7.2-2">When the ports/interfaces across which the ACP is expected to operate in an ACP-aware L2 switch or L2/L3 switch/router are L2-bridged, packets for the ALL_GRASP_NEIGHBORS multicast address <bcp14>MUST</bcp14> never be forwarded between these ports. If MLD snooping is used, it <bcp14>MUST</bcp14> be prohibited from bridging packets for the ALL_GRASP_NEIGHBORS IPv6 multicast address.</t>
        <t indent="0" pn="section-7.2-3">On hybrid L2/L3 switches, multiple L2 ports are assigned to a single L3
VLAN interface. With the aforementioned changes for DULL GRASP, ACP can
simply operate on the L3 VLAN interfaces, so no further (hardware) forwarding
changes are required to make ACP operate on L2 ports. This is possible because
the ACP secure channel protocols only use link-local IPv6 unicast packets,
and these packets will be sent to the correct L2 port towards the
peer by the VLAN logic of the device.</t>
        <t indent="0" pn="section-7.2-4">This is sufficient when P2P ACP virtual interfaces are established to
every ACP peer. When it is desired to create multi-access ACP virtual interfaces
(see <xref target="ACP-ma-virtual-interfaces" format="default" sectionFormat="of" derivedContent="Section 6.13.5.2.2"/>), it is <bcp14>REQUIRED</bcp14> not to coalesce all
 the ACP secure channels on the same L3 VLAN interface, but only all those on the same L2 port.</t>
        <t indent="0" pn="section-7.2-5">If VLAN tagging is used, then the logic described above only applies to
untagged GRASP packets. For the purpose of ACP neighbor discovery via GRASP,
no VLAN-tagged packets <bcp14>SHOULD</bcp14> be sent or received. In a hybrid L2/L3
switch, each VLAN would therefore only create ACP adjacencies across those
ports where the VLAN is carried untagged.</t>
        <t indent="0" pn="section-7.2-6">As a result, the simple logic is that ACP secure channels would operate 
over the same L3 interfaces that present a single, flat bridged network
across all routers, but because DULL GRASP is separated on a per-port basis,
no full mesh of ACP secure channels is created, but only per-port ACP
secure channels to per-port L2-adjacent ACP node neighbors.</t>
        <t indent="0" pn="section-7.2-7">For example, in the above picture, ANswitch1 would run separate DULL GRASP instances on its ports
to ANrtr1, ANswitch2, and ANswitchI, even though all three ports may be in the data plane 
in the same (V)LAN and perform L2 switching between these ports, ANswitch1 would perform
ACP L3 routing between them.</t>
        <t indent="0" pn="section-7.2-8">The description in the previous paragraph is specifically meant to illustrate that, on hybrid
L3/L2 devices that are common in enterprise, IoT, and broadband aggregation, there is only
the GRASP packet extraction (by Ethernet address) and GRASP link-local multicast per
L2-port packet injection that has to consider L2 ports at the hardware-forwarding level.
The remaining operations are purely ACP control plane and setup of secure channels across the
L3 interface.  This hopefully makes support for per-L2 port ACP on those hybrid devices easy.</t>
        <t indent="0" pn="section-7.2-9">In devices without such a mix of L2 port/interfaces and L3 interfaces (to terminate any
transport-layer connections), implementation details will differ.  Logically and most simply every
L2 port is considered and used as a separate L3 subnet for all ACP operations.  The fact that
the ACP only requires IPv6 link-local unicast and multicast should make support for it on any
type of L2 devices as simple as possible.</t>
        <t indent="0" pn="section-7.2-10">A generic issue with ACP in L2-switched networks is the interaction with the Spanning Tree
Protocol (STP).  Without further L2 enhancements, the ACP would run only across the active STP
topology, and the ACP would be interrupted and reconverge with STP changes.
Ideally, ACP peering <bcp14>SHOULD</bcp14> be built also across ports that are blocked in STP so
that the ACP does not depend on STP and can continue to run unaffected across STP topology
changes, where reconvergence can be quite slow.  The above described simple implementation
options are not sufficient to achieve this.</t>
      </section>
    </section>
    <section anchor="workarounds" numbered="true" toc="include" removeInRFC="false" pn="section-8">
      <name slugifiedName="name-support-for-non-acp-compone">Support for Non-ACP Components (Normative)</name>
      <section anchor="ACPconnect" numbered="true" toc="include" removeInRFC="false" pn="section-8.1">
        <name slugifiedName="name-acp-connect">ACP Connect</name>
        <section anchor="NMS" numbered="true" toc="include" removeInRFC="false" pn="section-8.1.1">
          <name slugifiedName="name-non-acp-controller-and-or-n">Non-ACP Controller and/or Network Management System (NMS)</name>
          <t indent="0" pn="section-8.1.1-1">The ACP can be used by management systems, such as controllers or NMS hosts, to connect to devices (or other type of nodes) through it.  For this, an NMS host needs to have access to the ACP.  The ACP is a self-protecting overlay network, which allows access only to trusted, autonomic systems by default.  Therefore, a traditional, non-ACP NMS does not have access to the ACP by default, such as any other external node.</t>
          <t indent="0" pn="section-8.1.1-2">If the NMS host is not autonomic, i.e., it does not support autonomic negotiation of the ACP, then it can be brought into the ACP by explicit configuration.  To support connections to adjacent non-ACP nodes, an ACP node <bcp14>SHOULD</bcp14> support "ACP connect" (sometimes also called "autonomic connect").</t>
          <t indent="0" pn="section-8.1.1-3">"ACP connect" is an interface-level, configured workaround for connection of trusted non-ACP nodes to the ACP. The ACP node on which ACP connect is configured is called an "ACP edge node". With ACP connect, the ACP is accessible from those non-ACP nodes (such as NOC systems) on such an interface without those non-ACP nodes having to support any ACP discovery or ACP channel setup.  This is also called "native" access to the ACP because, to those NOC systems, the interface looks like a normal network interface without any ACP secure channel that is encapsulating the traffic.</t>
          <figure anchor="acp-connect" align="left" suppress-title="false" pn="figure-14">
            <name slugifiedName="name-acp-connect-2">ACP Connect</name>
            <artwork name="" type="" align="left" alt="" pn="section-8.1.1-4.1">

                                 Data Plane "native" (no ACP)
                                          .
+--------+       +----------------+       .        +-------------+
| ACP    |       |ACP Edge Node   |       .        |             |
| Node   |       |                |       v        |             |
|        |-------|...[ACP VRF]....+----------------|             |+
|        |   ^   |.               |                | NOC Device  ||
|        |   .   | .[Data Plane]..+----------------| "NMS hosts" ||
|        |   .   |  [          ]  | .         ^    |             ||
+--------+   .   +----------------+  .        .    +-------------+|
             .                        .       .     +-------------+
             .                        .       .
          Data Plane "native"         .   ACP "native" (unencrypted)
        + ACP auto-negotiated         .   "ACP connect subnet"
          and encrypted               .
                                    ACP connect interface
                                    e.g., "VRF ACP native" (config)

</artwork>
          </figure>
          <t indent="0" pn="section-8.1.1-5">ACP connect has security consequences: all systems and processes connected via ACP connect have access to all ACP nodes on the entire ACP, without further authentication.  Thus, the ACP connect interface and the NOC systems connected to it need to be physically controlled and/or secured.  For this reason, the mechanisms described here explicitly do not include options to allow for a non-ACP router to be connected across an ACP connect interface and addresses behind such a router routed inside the ACP.</t>
          <t indent="0" pn="section-8.1.1-6">Physically controlled and/or secured means that attackers cannot gain access to the physical device hosting the ACP edge node, the physical interfaces and links providing the ACP connect link, nor the physical devices hosting the NOC device. In a simple case, ACP edge node and NOC device are colocated in an access-controlled room, such as a NOC, to which attackers cannot gain physical access.</t>
          <t indent="0" pn="section-8.1.1-7">An ACP connect interface provides exclusive access to only the ACP.  This is likely insufficient for many NMS hosts.  Instead, they would require a second "data plane" interface outside the ACP for connections between the NMS host and administrators, or Internet-based services, or for direct access to the data plane.  The document <xref target="RFC8368" format="default" sectionFormat="of" derivedContent="RFC8368">"Using Autonomic Control Plane for Stable Connectivity of Network OAM"</xref> explains in more detail how the ACP can be integrated in a mixed NOC environment.</t>
          <t indent="0" pn="section-8.1.1-8">An ACP connect interface <bcp14>SHOULD</bcp14> use an IPv6 address/prefix
from the Manual Addressing Sub-Scheme (<xref target="manual-scheme" format="default" sectionFormat="of" derivedContent="Section 6.11.4"/>), letting the operator configure, for example, only the Subnet-ID and having the node automatically assign the remaining part of the prefix/address.  It <bcp14>SHOULD NOT</bcp14> use a prefix that is also routed outside the ACP so that the addresses clearly indicate whether it is used inside the ACP or not.</t>
          <t indent="0" pn="section-8.1.1-9">The prefix of ACP connect subnets <bcp14>MUST</bcp14> be
	  distributed by the ACP edge node into the ACP routing protocol, RPL.
	  The NMS host <bcp14>MUST</bcp14> connect to prefixes in the ACP
	  routing table via its ACP connect interface.  In the simple case
	  where the ACP uses only one ULA prefix, and all ACP connect subnets
	  have prefixes covered by that ULA prefix, NMS hosts can rely on
	  <xref target="RFC6724" format="default" sectionFormat="of" derivedContent="RFC6724"/> to determine longest match
	  prefix routes towards its different interfaces, ACP and
	  data plane. With <xref target="RFC6724" format="default" sectionFormat="of" derivedContent="RFC6724"/>, the NMS host will select the ACP connect interface for all addresses in the ACP because any ACP destination address is longest matched by the address on the ACP connect interface.  If the NMS host's ACP connect interface uses another prefix, or if the ACP uses multiple ULA prefixes, then the NMS host requires (static) routes towards the ACP interface for these prefixes.</t>
          <t indent="0" pn="section-8.1.1-10"> When an ACP edge node receives a packet from an ACP connect interface, the ACP edge node
<bcp14>MUST</bcp14> only forward the packet to the ACP if the packet has an IPv6 source address from that interface (this is sometimes called Reverse Path Forwarding (RPF) filtering).  This filtering rule <bcp14>MAY</bcp14> be changed through administrative measures. The more any such administrative action enables reachability of non-ACP nodes to the ACP, the more this may cause security issues.</t>
          <t indent="0" pn="section-8.1.1-11">To limit the security impact of ACP connect, nodes supporting it <bcp14>SHOULD</bcp14> implement a security
mechanism to allow configuration and/or use of ACP connect interfaces only on nodes explicitly targeted
to be deployed with it (those in physically secure locations such as a NOC).  For example,
the registrar could disable the ability to enable ACP connect on devices during enrollment,
and that property could only be changed through reenrollment.  See also <xref target="role-assignments" format="default" sectionFormat="of" derivedContent="Appendix A.9.5"/>.</t>
          <t indent="0" pn="section-8.1.1-12">ACP edge nodes <bcp14>SHOULD</bcp14> have a configurable option to prohibit packets with RPI headers (see <xref target="rpl-Data-Plane" format="default" sectionFormat="of" derivedContent="Section 6.12.1.13"/>) across an ACP connect interface. These headers are outside the scope of the RPL profile in this specification but may be used in future extensions of this specification.</t>
        </section>
        <section anchor="software" numbered="true" toc="include" removeInRFC="false" pn="section-8.1.2">
          <name slugifiedName="name-software-components">Software Components</name>
          <t indent="0" pn="section-8.1.2-1">The previous section assumed that the ACP edge node and NOC devices are separate physical devices and that the ACP connect interface is a physical network connection. This section discusses the implication when these components are instead software components running on a single physical device.</t>
          <t indent="0" pn="section-8.1.2-2">The ACP connect mechanism can be used not only to connect physically external systems (NMS hosts) to the ACP but also other applications, containers, or virtual machines.  In fact, one possible way to eliminate the security issue of the external ACP connect interface is to colocate an ACP edge node and an NMS host by making one a virtual machine or container inside the other; therefore converting the unprotected external ACP subnet into an internal virtual subnet in a single device.  This would ultimately result in a fully ACP-enabled NMS host with minimum impact to the NMS host's software architecture.  This approach is not limited to NMS hosts but could equally be applied to devices consisting of one or more VNF (virtual network functions): an internal virtual subnet connecting out-of-band management interfaces of the VNFs to an ACP edge router VNF.</t>
          <t indent="0" pn="section-8.1.2-3">The core requirement is that the software components need to have a network stack that permits access to the ACP and optionally also to the data plane.  Like in the physical setup for NMS hosts, this can be realized via two internal virtual subnets: one that connects to the ACP (which could be a container or virtual machine by itself), and one (or more) connecting to the data plane.</t>
          <t indent="0" pn="section-8.1.2-4">This "internal" use of the ACP connect approach should not be considered to be a "workaround" because, in this case, it is possible to build a correct security model: it is not necessary to rely on unprovable, external physical security mechanisms as in the case of external NMS hosts.  Instead, the orchestration of the ACP, the virtual subnets, and the software components can be done by trusted software that could be considered to be part of the ANI (or even an extended ACP).  This software component is responsible for ensuring that only trusted software components will get access to that virtual subnet and that only even more trusted software components will get access to both the ACP virtual subnet and the data plane (because those ACP users could leak traffic between ACP and data plane).  This trust could be established, for example, through cryptographic means such as signed software packages.</t>
        </section>
        <section anchor="ACautoconfig" numbered="true" toc="include" removeInRFC="false" pn="section-8.1.3">
          <name slugifiedName="name-autoconfiguration">Autoconfiguration</name>
          <t indent="0" pn="section-8.1.3-1">ACP edge nodes, NMS hosts, and software components that, as described in the previous section, are meant to be composed via virtual interfaces <bcp14>SHOULD</bcp14> support SLAAC <xref target="RFC4862" format="default" sectionFormat="of" derivedContent="RFC4862"/> on the ACP connect subnet and route autoconfiguration according to "<xref target="RFC4191" format="title" sectionFormat="of" derivedContent="Default Router Preferences and More-Specific Routes"/>" <xref target="RFC4191" format="default" sectionFormat="of" derivedContent="RFC4191"/>.</t>
          <t indent="0" pn="section-8.1.3-2">The ACP edge node acts as the router towards the ACP on the ACP connect subnet,
          providing the (auto)configured prefix for the ACP connect subnet and
          (auto)configured routes to the ACP to NMS hosts and/or software components.</t>
          <t indent="0" pn="section-8.1.3-3"> The ACP edge node uses the Route Information Option (RIO) of <xref target="RFC4191" format="default" sectionFormat="of" derivedContent="RFC4191"/> to announce
          aggregated prefixes for address prefixes used in the ACP (with normal RIO lifetimes).
          In addition, the ACP edge node also uses a RIO to announce the default route (::/0) with
          a lifetime of 0.</t>
          <t indent="0" pn="section-8.1.3-4">These RIOs allow the connecting of type C hosts to the ACP via an ACP connect subnet on one interface
          and another network (Data Plane and/or NMS network) on the same or another interface of the type C host, relying on 
          routers other than the ACP edge node. The RIOs ensure that these hosts will only route the prefixes used in the ACP to
          the ACP edge node.</t>
          <t indent="0" pn="section-8.1.3-5">Type A and B hosts ignore the RIOs and will consider the ACP node to be their default router for 
          all destinations.  This is sufficient when the type A or type B host only needs to connect to the ACP but not to other networks.
          Attaching a type A or type B host to both the ACP and other networks 
   requires explicit ACP prefix route configuration on either the host or 
   the combined ACP and data plane interface on the ACP edge node,
          see <xref target="SingleIF" format="default" sectionFormat="of" derivedContent="Section 8.1.4"/>.</t>
          <t indent="0" pn="section-8.1.3-6">Aggregated prefix means that the ACP edge node needs to only announce
          the /48 ULA prefixes used in the ACP but none of the actual /64
           (Manual Addressing Sub-Scheme), /127 (Zone Addressing Sub-Scheme),
           /112 or /120 (Vlong Addressing Sub-Scheme) routes of actual ACP nodes.
           If ACP interfaces are configured with non-ULA prefixes, then those prefixes cannot be aggregated without further configured policy on the ACP edge node.  This explains the above recommendation to use ACP ULA prefixes for ACP connect interfaces: they allow for a shorter list of prefixes to be signaled via <xref target="RFC4191" format="default" sectionFormat="of" derivedContent="RFC4191"/> to NMS hosts and software components.</t>
          <t indent="0" pn="section-8.1.3-7">The ACP edge nodes that have a Vlong ACP address <bcp14>MAY</bcp14> allocate a subset of their /112 or /120 address prefix to ACP connect interface(s) to eliminate the need to non-autonomically configure and/or provision the address prefixes for such ACP connect interfaces.</t>
        </section>
        <section anchor="SingleIF" numbered="true" toc="include" removeInRFC="false" pn="section-8.1.4">
          <name slugifiedName="name-combined-acp-and-data-plane">Combined ACP and Data Plane Interface (VRF Select)</name>
          <figure anchor="vrf-select" align="left" suppress-title="false" pn="figure-15">
            <name slugifiedName="name-vrf-select">VRF Select</name>
            <artwork name="" type="" align="left" alt="" pn="section-8.1.4-1.1">

                     Combined ACP and data plane interface
                                             .
  +--------+       +--------------------+    .   +--------------+
  | ACP    |       |ACP Edge No         |    .   | NMS Host(s)  |
  | Node   |       |                    |    .   | / Software   |
  |        |       |  [ACP  ].          |    .   |              |+
  |        |       | .[VRF  ] .[VRF   ] |    v   | "ACP Address"||
  |        +-------+.         .[Select].+--------+ "Data Plane  ||
  |        |   ^   | .[Data ].          |        |  Address(es)"||
  |        |   .   |  [Plane]           |        |              ||
  |        |   .   |  [     ]           |        +--------------+|
  +--------+   .   +--------------------+         +--------------+
               .
        Data plane "native" and + ACP auto-negotiated/encrypted

</artwork>
          </figure>
          <t indent="0" pn="section-8.1.4-2">Using two physical and/or virtual subnets (and therefore interfaces) to NMS hosts (as per <xref target="NMS" format="default" sectionFormat="of" derivedContent="Section 8.1.1"/>) or software (as per <xref target="software" format="default" sectionFormat="of" derivedContent="Section 8.1.2"/>) may be seen as additional complexity, for example, with legacy NMS hosts that support only one IP interface, or it may be insufficient to support type A or type B hosts <xref target="RFC4191" format="default" sectionFormat="of" derivedContent="RFC4191"/> (see <xref target="ACautoconfig" format="default" sectionFormat="of" derivedContent="Section 8.1.3"/>).</t>
          <t indent="0" pn="section-8.1.4-3">To provide a single subnet to both the ACP and Data plane, the ACP edge node needs to demultiplex packets from NMS hosts into ACP VRF and data plane.  This is sometimes called "VRF select".  If the ACP VRF has no overlapping IPv6 addresses with the data plane (it should have no overlapping addresses), then this function can use the IPv6 destination address.  The problem is source address selection on the NMS host(s) according to <xref target="RFC6724" format="default" sectionFormat="of" derivedContent="RFC6724"/>.</t>
          <t indent="0" pn="section-8.1.4-4">Consider the simple case: the ACP uses only one ULA prefix, and the ACP IPv6 prefix for the combined ACP and data plane interface is covered by that ULA prefix.  The ACP edge node announces both the ACP IPv6 prefix and one (or more) prefixes for the data plane.  Without further policy configurations on the NMS host(s), it may select its ACP address as a source address for data plane ULA destinations because of Rule 8 (<xref target="RFC6724" section="5" sectionFormat="of" format="default" derivedLink="https://rfc-editor.org/rfc/rfc6724#section-5" derivedContent="RFC6724"/>).  The ACP edge node can pass on the packet to the data plane, but the ACP source address should not be used for data plane traffic, and return traffic may fail.</t>
          <t indent="0" pn="section-8.1.4-5">If the ACP carries multiple ULA prefixes or non-ULA ACP connect prefixes, then the correct source address selection becomes even more problematic.</t>
          <t indent="0" pn="section-8.1.4-6">With separate ACP connect and data plane subnets and prefix announcements <xref target="RFC4191" format="default" sectionFormat="of" derivedContent="RFC4191"/> that are to be routed across the ACP connect interface, the source address selection of Rule 5 (use address of outgoing interface) (<xref target="RFC6724" section="5" sectionFormat="of" format="default" derivedLink="https://rfc-editor.org/rfc/rfc6724#section-5" derivedContent="RFC6724"/>) will be used, so that above problems do not occur, even in more complex cases of multiple ULA and non-ULA prefixes in the ACP routing table.</t>
          <t indent="0" pn="section-8.1.4-7">To achieve the same behavior with a combined ACP and data plane interface, the ACP edge node needs to behave as two separate routers on the interface: one link-local IPv6 address/router for its ACP reachability, and one link-local IPv6 address/router for its data plane reachability.  The Router Advertisements for both are as described in <xref target="ACautoconfig" format="default" sectionFormat="of" derivedContent="Section 8.1.3"/>: for the ACP, the ACP prefix is announced together with the prefix option <xref target="RFC4191" format="default" sectionFormat="of" derivedContent="RFC4191"/> routed across the ACP, and the lifetime is set to zero to disqualify this next hop as a default router.  For the data plane, the data plane prefix(es) are announced together with whatever default router parameters are used for the data plane.</t>
          <t indent="0" pn="section-8.1.4-8">As a result, source address selection Rule 5.5 (<xref target="RFC6724" section="5" sectionFormat="of" format="default" derivedLink="https://rfc-editor.org/rfc/rfc6724#section-5" derivedContent="RFC6724"/>) may result in the same correct source address selection behavior of NMS hosts without further configuration as the separate ACP connect and data plane interfaces on the host.  As described in the text for Rule 5.5 (<xref target="RFC6724" section="5" sectionFormat="of" format="default" derivedLink="https://rfc-editor.org/rfc/rfc6724#section-5" derivedContent="RFC6724"/>), this is only a <bcp14>MAY</bcp14> because IPv6 hosts are not required to track next-hop information.  If an NMS host does not do this, then separate ACP connect and data plane interfaces are the preferable method of attachment.  Hosts implementing "<xref target="RFC8028" format="title" sectionFormat="of" derivedContent="First-Hop Router Selection by Hosts in a Multi-Prefix Network"/>" <xref target="RFC8028" format="default" sectionFormat="of" derivedContent="RFC8028"/> should (instead of may) implement Rule 5.5 (<xref target="RFC6724" section="5" sectionFormat="of" format="default" derivedLink="https://rfc-editor.org/rfc/rfc6724#section-5" derivedContent="RFC6724"/>), so it is preferred for hosts to support <xref target="RFC8028" format="default" sectionFormat="of" derivedContent="RFC8028"/>.</t>
          <t indent="0" pn="section-8.1.4-9">ACP edge nodes <bcp14>MAY</bcp14> support the combined ACP and data plane interface.</t>
        </section>
        <section anchor="ACgrasp" numbered="true" toc="include" removeInRFC="false" pn="section-8.1.5">
          <name slugifiedName="name-use-of-grasp">Use of GRASP</name>
          <t indent="0" pn="section-8.1.5-1">GRASP can and should be possible to use across ACP connect interfaces, especially in
the architecturally correct solution when it is used as a mechanism to connect software
(e.g., ASA or legacy NMS applications) to the ACP.</t>
          <t indent="0" pn="section-8.1.5-2">Given how the ACP is the security and transport substrate for GRASP, the requirements
are that those devices connected via ACP connect are equivalently (if not better)
secured against attacks than ACP nodes that do not use ACP connect, and they run only
software that is equally (if not better) protected, known (or trusted) not to be malicious,
and accordingly designed to isolate access to the ACP against external equipment.</t>
          <t indent="0" pn="section-8.1.5-3">The difference in security is that cryptographic security of the
ACP secure channel is replaced by required physical security and/or control of the network connection
between an ACP edge node and the NMS or other host reachable via the ACP connect
interface. See <xref target="NMS" format="default" sectionFormat="of" derivedContent="Section 8.1.1"/>.</t>
          <t indent="0" pn="section-8.1.5-4">When using the combined ACP and data plane interface, care has to be taken that
only GRASP messages received from software or
NMS hosts and intended for the ACP GRASP domain are forwarded by ACP edge nodes.  Currently there is no definition for
a GRASP security and transport substrate beside the ACP, so there is no definition
how such software/NMS host could participate in two separate GRASP domains across
the same subnet (ACP and data plane domains).  Currently it is assumed that
all GRASP packets on a combined ACP and data plane interface belong to the GRASP ACP domain.
They <bcp14>SHOULD</bcp14> all use the ACP IPv6 addresses of the software/NMS hosts.  The link-local
IPv6 addresses of software/NMS hosts (used for GRASP M_DISCOVERY and M_FLOOD messages)
are also assumed to belong to the ACP address space.</t>
        </section>
      </section>
      <section anchor="remote-acp-neighbors" numbered="true" toc="include" removeInRFC="false" pn="section-8.2">
        <name slugifiedName="name-connecting-acp-islands-over">Connecting ACP Islands over Non-ACP L3 Networks (Remote ACP Neighbors)</name>
        <t indent="0" pn="section-8.2-1">Not all nodes in a network may support the ACP.  If non-ACP L2 devices are between ACP nodes, the ACP will work across them since it is IP based.  However, the autonomic discovery of ACP neighbors via DULL GRASP is only intended to work across L2 connections, so it is not sufficient to autonomically create ACP connections across non-ACP L3 devices.</t>
        <section anchor="conf-remote" numbered="true" toc="include" removeInRFC="false" pn="section-8.2.1">
          <name slugifiedName="name-configured-remote-acp-neigh">Configured Remote ACP Neighbor</name>
          <t indent="0" pn="section-8.2.1-1">On the ACP node, remote ACP neighbors are configured explicitly. 
    The parameters of such a "connection" are described in the following ABNF.
    The syntax shown is non-normative (as there are no standards for
  configuration) but only meant to illustrate the parameters and which
  ones can be optional.</t>
          <figure anchor="abnf" align="left" suppress-title="false" pn="figure-16">
            <name slugifiedName="name-parameters-for-remote-acp-n">Parameters for Remote ACP Neighbors</name>
            <sourcecode name="" type="abnf" markers="false" pn="section-8.2.1-2.1">
  connection = method "," local-addr "," remote-addr [ "," pmtu ]
  method =    "any"
             / ( "IKEv2" [ ":" port ] )
             / (  "DTLS"  [ ":"  port ] )
  port = 1*DIGIT
  local-addr  = [ address  [ ":" vrf  ] ]
  remote-addr =   address
  address =  "any"
             / IPv4address / IPv6address  ; From [RFC5954]
  vrf = system-dependent ; Name of VRF for local-address
</sourcecode>
          </figure>
          <t indent="0" pn="section-8.2.1-3">Explicit configuration of a remote peer according to this
ABNF provides all the information to build a secure channel without requiring a tunnel
to that peer and running DULL GRASP inside of it.</t>
          <t indent="0" pn="section-8.2.1-4">The configuration includes the parameters otherwise signaled
via DULL GRASP: local address, remote (peer) locator, and
method. The differences over DULL GRASP local neighbor
discovery and secure channel creation are as follows:</t>
          <ul spacing="normal" bare="false" empty="false" indent="3" pn="section-8.2.1-5">
            <li pn="section-8.2.1-5.1">The local and remote address can be IPv4 or IPv6 and are typically global-scope addresses.</li>
            <li pn="section-8.2.1-5.2">The VRF across which the connection is built (and in which local-addr exists) can be specified.  If vrf is not specified, it is the default VRF on the node.  In DULL GRASP, the VRF is implied by the interface across which DULL GRASP operates.</li>
            <li pn="section-8.2.1-5.3">If local address is "any", the local address used when initiating a secure channel connection is decided by source address selection (<xref target="RFC6724" format="default" sectionFormat="of" derivedContent="RFC6724"/> for IPv6). As a responder, the connection listens on all addresses of the node in the selected VRF.</li>
            <li pn="section-8.2.1-5.4">Configuration of port is only required for methods where no defaults exist (e.g., "DTLS").</li>
            <li pn="section-8.2.1-5.5">If the remote address is "any", the connection is only a responder. It is a "hub" that can be used by multiple remote peers to connect simultaneously -- without having to know or configure their addresses, for example, a hub site for remote "spoke" sites reachable over the Internet.</li>
            <li pn="section-8.2.1-5.6">The pmtu parameter should be configurable to overcome issues or limitations of Path MTU Discovery (PMTUD).</li>
            <li pn="section-8.2.1-5.7">IKEv2/IPsec to remote peers should support the optional NAT Traversal (NAT-T) procedures.</li>
          </ul>
        </section>
        <section anchor="conf-tunnel" numbered="true" toc="include" removeInRFC="false" pn="section-8.2.2">
          <name slugifiedName="name-tunneled-remote-acp-neighbo">Tunneled Remote ACP Neighbor</name>
          <t indent="0" pn="section-8.2.2-1">An IP-in-IP, GRE, or other form of preexisting tunnel is configured
        between two remote ACP peers, and the virtual interfaces representing
        the tunnel are configured for "ACP enable".  This will enable IPv6
        link-local addresses and DULL on this tunnel.  As a result,  the tunnel
        is used for normal "L2 adjacent" candidate ACP neighbor discovery
        with DULL and secure channel setup procedures described in this document.</t>
          <t indent="0" pn="section-8.2.2-2">Tunneled Remote ACP Neighbor requires two encapsulations:
        the configured tunnel and the secure channel inside of that tunnel.
        This makes it in general less desirable than Configured Remote ACP Neighbor.
        Benefits of tunnels are that it may be easier to implement because
        there is no change to the ACP functionality - just running it over
        a virtual (tunnel) interface instead of only native interfaces.
        The tunnel itself may also provide PMTUD while the secure channel
        method may not.  Or the tunnel mechanism is permitted/possible through some
        firewall while the secure channel method may not.</t>
          <t indent="0" pn="section-8.2.2-3">Tunneling using an insecure tunnel encapsulation increases, on average,
     the risk of a MITM downgrade attack somewhere along the underlay path.
     In such an attack, the MITM filters packets for all but the most easily
     attacked ACP secure channel option to force use of that option.
        ACP nodes supporting Tunneled Remote ACP Neighbors <bcp14>SHOULD</bcp14> support
        configuration on such tunnel interfaces to restrict or explicitly
        select the available ACP secure channel protocols 
        (if the ACP node supports more than one ACP secure channel protocol in the first place).</t>
        </section>
        <section anchor="conf-summary" numbered="true" toc="include" removeInRFC="false" pn="section-8.2.3">
          <name slugifiedName="name-summary">Summary</name>
          <t indent="0" pn="section-8.2.3-1">Configured and Tunneled Remote ACP Neighbors are less "indestructible"
        than L2 adjacent ACP neighbors based on link-local addressing, since
        they depend on more correct data plane operations, such as routing and global addressing.</t>
          <t indent="0" pn="section-8.2.3-2">Nevertheless, these options may be crucial to incrementally deploying
        the ACP, especially if it is meant to connect islands across the Internet.
        Implementations <bcp14>SHOULD</bcp14> support at least Tunneled Remote ACP Neighbors
        via GRE tunnels, which is likely the most common router-to-router
        tunneling protocol in use today.</t>
        </section>
      </section>
    </section>
    <section anchor="operational" numbered="true" toc="include" removeInRFC="false" pn="section-9">
      <name slugifiedName="name-acp-operations-informative">ACP Operations (Informative)</name>
      <t indent="0" pn="section-9-1">The following sections document important operational aspects of the ACP. They are not normative because they do not impact the interoperability between components of the ACP, but they include recommendations and/or requirements for the internal operational model that are beneficial or necessary to achieve the desired use-case benefits of the ACP (see <xref target="usage" format="default" sectionFormat="of" derivedContent="Section 3"/>).</t>
      <ul spacing="normal" bare="false" empty="false" indent="3" pn="section-9-2">
        <li pn="section-9-2.1">
          <xref target="diagnostics" format="default" sectionFormat="of" derivedContent="Section 9.1"/> describes the recommended capabilities of operator diagnostics of ACP nodes.</li>
        <li pn="section-9-2.2">
          <xref target="registrar-considerations" format="default" sectionFormat="of" derivedContent="Section 9.2"/> describes at a high level how an ACP registrar needs to work, what its configuration parameters are, and specific issues impacting the choices of deployment design due to renewal and revocation issues. It describes a model where ACP registrars have their own sub-CA to provide the most distributed deployment option for ACP registrars, and it describes considerations for centralized policy control of ACP registrar operations.</li>
        <li pn="section-9-2.3">
          <xref target="enabling-acp" format="default" sectionFormat="of" derivedContent="Section 9.3"/> describes suggested ACP node behavior and operational interfaces (configuration options) to manage the ACP in so-called greenfield devices (previously unconfigured) and brownfield devices (preconfigured).</li>
      </ul>
      <t indent="0" pn="section-9-3">The recommendations and suggestions of this chapter were derived from operational experience gained with a commercially available pre-standard ACP implementation.</t>
      <section anchor="diagnostics" numbered="true" toc="include" removeInRFC="false" pn="section-9.1">
        <name slugifiedName="name-acp-and-brski-diagnostics">ACP (and BRSKI) Diagnostics</name>
        <t indent="0" pn="section-9.1-1">Even though ACP and ANI in general are removing many manual configuration mistakes
through their automation, it is important to provide good diagnostics for them.</t>
        <t indent="0" pn="section-9.1-2">Basic standardized diagnostics would require support for (YANG) models representing the
complete (auto)configuration and operational state of all components: GRASP,
ACP, and the infrastructure used by them, such as TLS/DTLS, IPsec, certificates, TA, time, 
VRF, and so on.  While necessary, this is not sufficient.</t>
        <t indent="0" pn="section-9.1-3">Simply representing the state of components does not allow operators to quickly take
action -- unless they understand how to interpret the data, which can mean a
requirement for deep understanding of all components and how they interact in the ACP/ANI.</t>
        <t indent="0" pn="section-9.1-4">Diagnostic supports should help to quickly answer the questions operators
are expected to ask, such as "Is the ACP working correctly?" or "Why is there no
ACP connection to a known neighboring node?"</t>
        <t indent="0" pn="section-9.1-5">In current network management approaches, the logic to answer these
questions is most often built into centralized diagnostics software that leverages
the above mentioned data models.  While this approach is feasible for components
utilizing the ANI, it is not sufficient to diagnose the ANI itself:</t>
        <ul spacing="normal" bare="false" empty="false" indent="3" pn="section-9.1-6">
          <li pn="section-9.1-6.1">Developing the logic to identify common issues requires operational experience
with the components of the ANI.  Letting each management system define its
own analysis is inefficient.</li>
          <li pn="section-9.1-6.2">When the ANI is not operating correctly, it may not be possible to run diagnostics
remotely because of missing connectivity.  The ANI should therefore have diagnostic
capabilities available locally on the nodes themselves.</li>
          <li pn="section-9.1-6.3">Certain operations are difficult or impossible to monitor in real time, such as
initial bootstrap issues in a network location where no capabilities exist to attach
local diagnostics.  Therefore, it is important to also define how to capture (log)
diagnostics locally for later retrieval.  Ideally, these captures are also nonvolatile so
that they can survive extended power-off conditions, for example, when a device
that fails to be brought up zero-touch is sent for diagnostics at a
more appropriate location.</li>
        </ul>
        <t indent="0" pn="section-9.1-7">The simplest form of diagnostics for answering questions such as the above
is to represent the relevant information sequentially in dependency order,
so that the first unexpected and/or nonoperational item is the most likely root
cause, or just log and/or highlight that item.  For example:</t>
        <t indent="0" pn="section-9.1-8">Question: Is the ACP operational to accept neighbor connections?
</t>
        <ul spacing="normal" bare="false" empty="false" indent="3" pn="section-9.1-9">
          <li pn="section-9.1-9.1">Check if the necessary configurations to make ACP/ANI operational are correct (see <xref target="enabling-acp" format="default" sectionFormat="of" derivedContent="Section 9.3"/> for a discussion of such commands).</li>
          <li pn="section-9.1-9.2">Does the system time look reasonable, or could it be the default system time after battery failure of the clock chip? Certificate checks depend on reasonable notion of time.</li>
          <li pn="section-9.1-9.3">Does the node have keying material, such as domain certificate, TA certificates, etc.?</li>
          <li pn="section-9.1-9.4">If there is no keying material and the ANI is supported/enabled,
   check the state of BRSKI (not detailed in this example).</li>
          <li pn="section-9.1-9.5">
            <t indent="0" pn="section-9.1-9.5.1">Check the validity of the domain certificate:
            </t>
            <ul spacing="normal" bare="false" empty="false" indent="3" pn="section-9.1-9.5.2">
              <li pn="section-9.1-9.5.2.1">Does the certificate validate against the TA?</li>
              <li pn="section-9.1-9.5.2.2">Has it been revoked?</li>
              <li pn="section-9.1-9.5.2.3">Was the last scheduled attempt to retrieve a CRL successful? (e.g., do we know that our CRL information is up to date?)</li>
              <li pn="section-9.1-9.5.2.4">Is the certificate valid? The validity start time is in the past, and the expiration time is in the future?</li>
              <li pn="section-9.1-9.5.2.5">Does the certificate have a correctly formatted acp-node-name field?</li>
            </ul>
          </li>
          <li pn="section-9.1-9.6">Was the ACP VRF successfully created?</li>
          <li pn="section-9.1-9.7">Is ACP enabled on one or more interfaces that are up and running?</li>
        </ul>
        <t indent="0" pn="section-9.1-10">If all of the above looks good, the ACP should be running "fine" locally, but we did not check any ACP neighbor relationships.</t>
        <t indent="0" pn="section-9.1-11">Question: Why does the node not create a working ACP connection to a neighbor on an interface?
</t>
        <ul spacing="normal" bare="false" empty="false" indent="3" pn="section-9.1-12">
          <li pn="section-9.1-12.1">Is the interface physically up? Does it have an IPv6 link-local address?</li>
          <li pn="section-9.1-12.2">Is it enabled for ACP?</li>
          <li pn="section-9.1-12.3">Do we successfully send DULL GRASP messages to the interface? (Are there link-layer errors?)</li>
          <li pn="section-9.1-12.4">Do we receive DULL GRASP messages on the interface? If not, some intervening L2 equipment performing bad MLD snooping could have caused problems.  Provide, e.g., diagnostics of the MLD querier IPv6 and MAC address.</li>
          <li pn="section-9.1-12.5">Do we see the ACP objective in any DULL GRASP message from that interface? Diagnose the supported secure channel methods.</li>
          <li pn="section-9.1-12.6">Do we know the MAC address of the neighbor with the ACP objective? If not, diagnose SLAAC/ND state.</li>
          <li pn="section-9.1-12.7">When did we last attempt to build an ACP secure channel to the neighbor?</li>
          <li pn="section-9.1-12.8">
            <t indent="0" pn="section-9.1-12.8.1">If it failed:
            </t>
            <ul spacing="normal" bare="false" empty="false" indent="3" pn="section-9.1-12.8.2">
              <li pn="section-9.1-12.8.2.1">Did the neighbor close the connection on us, or did we close the connection on it because the domain certificate membership failed?</li>
              <li pn="section-9.1-12.8.2.2">If the neighbor closed the connection on us, provide any error diagnostics from the secure channel protocol.</li>
              <li pn="section-9.1-12.8.2.3">
                <t indent="0" pn="section-9.1-12.8.2.3.1">If we failed the attempt, display our local reason:
                </t>
                <ul spacing="normal" bare="false" empty="false" indent="3" pn="section-9.1-12.8.2.3.2">
                  <li pn="section-9.1-12.8.2.3.2.1">There was no common secure channel protocol supported by the two neighbors (this could not happen on nodes supporting this specification because it mandates common support for IPsec).</li>
                  <li pn="section-9.1-12.8.2.3.2.2">
                    <t indent="0" pn="section-9.1-12.8.2.3.2.2.1">Did the ACP certificate membership check (<xref target="certcheck" format="default" sectionFormat="of" derivedContent="Section 6.2.3"/>) fail?
                    </t>
                    <ul spacing="normal" bare="false" empty="false" indent="3" pn="section-9.1-12.8.2.3.2.2.2">
                      <li pn="section-9.1-12.8.2.3.2.2.2.1">The neighbor's certificate is not signed directly or indirectly by one of the node's TA.  Provide diagnostics which TA it has (can identify whom the device belongs to).</li>
                      <li pn="section-9.1-12.8.2.3.2.2.2.2">The neighbor's certificate does not have the same domain (or no domain at all).  Diagnose acp-domain-name and potentially other cert info.</li>
                      <li pn="section-9.1-12.8.2.3.2.2.2.3">The neighbor's certificate has been revoked or could not be authenticated by OCSP. </li>
                      <li pn="section-9.1-12.8.2.3.2.2.2.4">The neighbor's certificate has expired, or it is not yet valid.</li>
                    </ul>
                  </li>
                </ul>
              </li>
              <li pn="section-9.1-12.8.2.4">Are there any other connection issues, e.g., IKEv2/IPsec, DTLS?</li>
            </ul>
          </li>
        </ul>
        <t indent="0" pn="section-9.1-13">Question: Is the ACP operating correctly across its secure channels?
</t>
        <ul spacing="normal" bare="false" empty="false" indent="3" pn="section-9.1-14">
          <li pn="section-9.1-14.1">Are there one or more active ACP neighbors with secure channels?</li>
          <li pn="section-9.1-14.2">Is RPL for the ACP running?</li>
          <li pn="section-9.1-14.3">Is there a default route to the root in the ACP routing table?</li>
          <li pn="section-9.1-14.4">Is there, for each direct ACP neighbor not reachable over the ACP virtual interface to the root, a route in the ACP routing table?</li>
          <li pn="section-9.1-14.5">Is ACP GRASP running?</li>
          <li pn="section-9.1-14.6">Is at least one "SRV.est" objective cached (to support certificate renewal)?</li>
          <li pn="section-9.1-14.7">Is there at least one BRSKI registrar objective cached? (If BRSKI is supported.)</li>
          <li pn="section-9.1-14.8">Is the BRSKI proxy operating normally on all interfaces where ACP is operating?</li>
        </ul>
        <t indent="0" pn="section-9.1-15">These lists are not necessarily complete, but they illustrate the principle and show that there are variety of issues ranging from normal operational causes (a neighbor in another ACP domain) to problems in the credentials management (certificate lifetimes), to explicit security actions (revocation) or unexpected connectivity issues (intervening L2 equipment).</t>
        <t indent="0" pn="section-9.1-16">The items so far illustrate how the ANI operations can
be diagnosed with passive observation of the operational state
of its components including historic, cached, and/or counted events.  This is
not necessarily sufficient to provide good enough diagnostics overall.</t>
        <t indent="0" pn="section-9.1-17">The components of ACP and BRSKI are designed with security in mind,
but they do not attempt to provide diagnostics for building the
network itself.  Consider two examples:
</t>
        <ol type="1" spacing="normal" indent="adaptive" start="1" pn="section-9.1-18">
          <li pn="section-9.1-18.1" derivedCounter="1.">BRSKI does not allow for a neighboring
    device to identify the pledge's IDevID certificate.  Only the selected
    BRSKI registrar can do this, but it may be difficult to disseminate
    information from those BRSKI registrars about undesired pledges to locations and/or nodes
    where information about those pledges is desired.</li>
          <li pn="section-9.1-18.2" derivedCounter="2.">LLDP disseminates information about nodes,
    such as node model, type, and/or software and interface name and/or number of the
    connection, to their immediate neighbors.  This information is often helpful or even necessary
    in network diagnostics.  It can equally be considered too insecure
    to make this information available unprotected to all possible neighbors.</li>
        </ol>
        <t indent="0" pn="section-9.1-19">An "interested adjacent party" can always determine the IDevID certificate of a BRSKI pledge
by behaving like a BRSKI proxy/registrar.  Therefore, the IDevID certificate of a BRSKI pledge 
is not meant to be protected -- it just has to be queried and is not
signaled unsolicited (as it would be in LLDP) so that other observers
on the same subnet can determine who is an "interested adjacent party".</t>
        <section anchor="ta-troubleshoot" numbered="true" toc="include" removeInRFC="false" pn="section-9.1.1">
          <name slugifiedName="name-secure-channel-peer-diagnos">Secure Channel Peer Diagnostics</name>
          <t indent="0" pn="section-9.1.1-1">When using mutual certificate authentication, the TA certificate is not required
to be signaled explicitly because its hash is sufficient for certificate
chain validation.  In the case of ACP secure channel setup, this leads
to limited diagnostics when authentication fails because of TA mismatch.
For this reason, <xref target="common-requirements" format="default" sectionFormat="of" derivedContent="Section 6.8.2"/> recommends also including the TA certificate in the
secure channel signaling. This should be possible
to do without modifying the security association protocols used by the
ACP. For example, while <xref target="RFC7296" format="default" sectionFormat="of" derivedContent="RFC7296"/> does not mention this, it
also does not prohibit it.</t>
          <t indent="0" pn="section-9.1.1-2">One common use case where diagnostics through the signaled
TA of a candidate peer are very helpful is the multi-tenant environment, such as
an office building, where different tenants run their own networks and ACPs.
Each tenant is given supposedly disjoint L2 connectivity through the building infrastructure.
In these environments, there are various common errors through which a device may
receive L2 connectivity into the wrong tenant's network.</t>
          <t indent="0" pn="section-9.1.1-3">While the ACP itself is not impacted by this, the data plane to be built later may be
impacted. Therefore, it is important to be able to diagnose such undesirable
connectivity from the ACP so that any autonomic or non-autonomic mechanisms
to configure the data plane can treat such interfaces accordingly. 
The information in the TA of the peer can then ease
troubleshooting of such issues.</t>
          <t indent="0" pn="section-9.1.1-4">Another use case is the intended or accidental reactivation of equipment,
such as redundant gear taken from storage, whose TA certificate has long expired.</t>
          <t indent="0" pn="section-9.1.1-5">A third use case is when, in a merger and acquisition case, ACP nodes have not
been correctly provisioned with the mutual TA of a previously disjoint ACP. This
assumes that the ACP domain names were already aligned so that the ACP
domain membership check is only failing on the TA.</t>
          <t indent="0" pn="section-9.1.1-6">A fourth use case is when multiple registrars are set up for the same
ACP but are not correctly set up with the same TA. For example, when registrars
support also being CAs themselves but are misconfigured to become TAs instead
of intermediate CAs.</t>
        </section>
      </section>
      <section anchor="registrar-considerations" numbered="true" toc="include" removeInRFC="false" pn="section-9.2">
        <name slugifiedName="name-acp-registrars-2">ACP Registrars</name>
        <t indent="0" pn="section-9.2-1">As described in <xref target="acp-registrars" format="default" sectionFormat="of" derivedContent="Section 6.11.7"/>, the ACP addressing
mechanism is designed to enable lightweight, distributed, and uncoordinated
ACP registrars that provide ACP address prefixes to candidate ACP
nodes by enrolling them with an ACP certificate into an ACP domain via
any appropriate mechanism and/or protocol, automated or not.</t>
        <t indent="0" pn="section-9.2-2">This section discusses informatively more details and options for ACP registrars.</t>
        <section anchor="reg-interact" numbered="true" toc="include" removeInRFC="false" pn="section-9.2.1">
          <name slugifiedName="name-registrar-interactions">Registrar Interactions</name>
          <t indent="0" pn="section-9.2.1-1">This section summarizes and discusses the interactions with other entities required
by an ACP registrar.</t>
          <t indent="0" pn="section-9.2.1-2">In a simple instance of an ACP network, no central NOC component beside
a TA is required. Typically, this is a root CA.  One or more uncoordinated acting
ACP registrars can be set up, performing the following interactions.</t>
          <t indent="0" pn="section-9.2.1-3">To orchestrate enrolling a candidate ACP node autonomically,
the ACP registrar can rely on the ACP and use proxies to reach the candidate ACP node,
therefore allowing minimal, preexisting (auto)configured network services
on the candidate ACP node.  BRSKI defines the BRSKI proxy, a design that can be
adopted for various protocols that pledges and/or candidate ACP nodes could want to use,
for example, BRSKI over CoAP (Constrained Application Protocol) or the proxying of
NETCONF.</t>
          <t indent="0" pn="section-9.2.1-4">To reach a TA that has no ACP connectivity, the ACP registrar uses
the data plane. The ACP and data plane in an ACP registrar could (and by default
should) be completely isolated from each other at the network level.
Only applications such as the ACP registrar would need the ability for
 their transport stacks to access both.</t>
          <t indent="0" pn="section-9.2.1-5">In non-autonomic enrollment options, the data plane 
between an ACP registrar and the candidate ACP node needs to be configured
first.  This includes the ACP registrar and the candidate ACP node.
Then any appropriate set of protocols can be used between the ACP registrar and
the candidate ACP node to discover the other side, and then connect 
and enroll (configure) the candidate ACP node with an ACP certificate.
For example, NETCONF Zero Touch ("<xref target="RFC8572" format="title" sectionFormat="of" derivedContent="Secure Zero Touch Provisioning (SZTP)"/>" <xref target="RFC8572" format="default" sectionFormat="of" derivedContent="RFC8572"/>)
is a protocol that could be used for this.  BRSKI using optional
discovery mechanisms is equally a possibility for candidate ACP nodes
attempting to be enrolled across non-ACP networks, such as the Internet.</t>
          <t indent="0" pn="section-9.2.1-6">When a candidate ACP node, such as a BRSKI pledge, has secure bootstrap, 
it will not trust being configured and/or enrolled across the network unless
it is presented with a voucher (see "<xref target="RFC8366" format="title" sectionFormat="of" derivedContent="A Voucher Artifact for Bootstrapping Protocols"/>" <xref target="RFC8366" format="default" sectionFormat="of" derivedContent="RFC8366"/>) authorizing
the network to take possession of the node. An ACP registrar will then need a
method to retrieve such a voucher, either offline or online from a MASA
(Manufacturer Authorized Signing Authority). BRSKI and NETCONF
Zero Touch are two protocols that include capabilities to present the voucher
to the candidate ACP node.</t>
          <t indent="0" pn="section-9.2.1-7">An ACP registrar could operate EST for ACP certificate renewal and/or
act as a CRL Distribution Point. A node performing these
services does not need to support performing (initial) enrollment, but
it does require the same above described connectivity as an ACP
registrar: via the ACP to the ACP nodes and via the data plane to the TA
and other sources of CRL information.</t>
        </section>
        <section anchor="reg-config" numbered="true" toc="include" removeInRFC="false" pn="section-9.2.2">
          <name slugifiedName="name-registrar-parameters">Registrar Parameters</name>
          <t indent="0" pn="section-9.2.2-1">The interactions of an ACP registrar outlined in <xref target="acp-registrars" format="default" sectionFormat="of" derivedContent="Section 6.11.7"/> and
<xref target="reg-interact" format="default" sectionFormat="of" derivedContent="Section 9.2.1"/> depend on the following parameters:
</t>
          <ul spacing="normal" bare="false" empty="false" indent="3" pn="section-9.2.2-2">
            <li pn="section-9.2.2-2.1">A URL to the TA and credentials so that the ACP
   registrar can let the TA sign candidate ACP node certificates.</li>
            <li pn="section-9.2.2-2.2">The ACP domain name.</li>
            <li pn="section-9.2.2-2.3">The Registrar-ID to use. This could default to a MAC address of the ACP registrar.</li>
            <li pn="section-9.2.2-2.4">For recovery, the next usable Node-IDs for the Zone Addressing Sub-Scheme (Zone-ID 0)
     and for the Vlong Addressing Sub-Scheme (/112 and /120). These IDs would only need
     to be provisioned after recovering from a crash. Some other mechanism would 
     be required to remember these IDs in a backup location or to recover them
     from the set of currently known ACP nodes.</li>
            <li pn="section-9.2.2-2.5">Policies on whether the candidate ACP nodes should receive a domain certificate or not,
     for example, based on the device's IDevID certificate as in BRSKI. The ACP registrar may 
     whitelist or blacklist based on a device's "serialNumber" attribute <xref target="X.520" format="default" sectionFormat="of" derivedContent="X.520"/> in the subject field distinguished name encoding of its IDevID certificate.</li>
            <li pn="section-9.2.2-2.6">Policies on what type of address prefix to assign to a candidate ACP device,
     likely based on the same information.</li>
            <li pn="section-9.2.2-2.7">For BRSKI or other mechanisms using vouchers: parameters to determine
     how to retrieve vouchers for specific types of secure bootstrap candidate
     ACP nodes (such as MASA URLs), unless this information is automatically
     learned, such as from the IDevID certificate of candidate ACP nodes (as defined in BRSKI).</li>
          </ul>
        </section>
        <section anchor="cert-renewal" numbered="true" toc="include" removeInRFC="false" pn="section-9.2.3">
          <name slugifiedName="name-certificate-renewal-and-lim">Certificate Renewal and Limitations</name>
          <t indent="0" pn="section-9.2.3-1">When an ACP node renews and/or rekeys its certificate, it may end up doing so via
a different registrar (e.g., EST server) than the one it originally received
its ACP certificate from, for example, because that original ACP registrar
is gone. The ACP registrar through which the renewal/rekeying is performed
would by default trust the acp-node-name from the ACP node's current
ACP certificate and maintain this information so that the ACP node
maintains its ACP address prefix. In EST renewal/rekeying, the ACP node's current
ACP certificate is signaled during the TLS handshake.</t>
          <t indent="0" pn="section-9.2.3-2">This simple scenario has two limitations:
</t>
          <ol type="1" spacing="normal" indent="adaptive" start="1" pn="section-9.2.3-3">
            <li pn="section-9.2.3-3.1" derivedCounter="1.">The ACP registrar cannot directly assign certificates to nodes and
     therefore needs an "online" connection to the TA.</li>
            <li pn="section-9.2.3-3.2" derivedCounter="2.">Recovery from a compromised ACP registrar is difficult.
     When an ACP registrar is compromised, it can insert, for example,
     a conflicting acp-node-name and thereby create an attack
     against other ACP nodes through the ACP routing protocol.</li>
          </ol>
          <t indent="0" pn="section-9.2.3-4">Even when such a malicious ACP registrar is detected, resolving the
problem may be difficult because it would require identifying all the
wrong ACP certificates assigned via the ACP registrar after it
was compromised. Without additional centralized tracking of assigned
certificates, there is no way to do this.</t>
        </section>
        <section anchor="sub-ca" numbered="true" toc="include" removeInRFC="false" pn="section-9.2.4">
          <name slugifiedName="name-acp-registrars-with-sub-ca">ACP Registrars with Sub-CA</name>
          <t indent="0" pn="section-9.2.4-1">In situations where either of the above two limitations are an issue,
ACP registrars could also be sub-CAs. This removes the need for
connectivity to a TA whenever an ACP node is enrolled, and it reduces
the need for connectivity of such an ACP registrar to a TA to only
those times when it needs to renew its own certificate. The ACP registrar
would also now use its own (sub-CA) certificate to enroll and sign the
ACP node's certificates, and therefore it is only necessary to revoke
a compromised ACP registrar's sub-CA certificate. Alternatively, one can
let it expire and not renew it when the certificate of the sub-CA is appropriately
short-lived.</t>
          <t indent="0" pn="section-9.2.4-2">As the ACP domain membership check verifies a
peer ACP node's ACP certificate trust chain, it will also verify
the signing certificate, which is the compromised and/or revoked sub-CA certificate.
Therefore, ACP domain membership for an ACP node enrolled by a
compromised and discovered ACP registrar will fail.</t>
          <t indent="0" pn="section-9.2.4-3">ACP nodes enrolled by a compromised ACP registrar
would automatically fail to establish ACP channels and ACP domain
certificate renewal via EST and therefore revert to their role as 
candidate ACP members and attempt to get a new ACP certificate
from an ACP registrar, for example, via BRSKI. As a result, ACP registrars that have an
associated sub-CA make isolating and resolving issues with
compromised registrars easier.</t>
          <t indent="0" pn="section-9.2.4-4">Note that ACP registrars with sub-CA functionality also can control the
lifetime of ACP certificates more easily and therefore can be used as
a tool to introduce short-lived certificates and to no longer rely on CRL,
whereas the certificates for the sub-CAs themselves could be longer
lived and subject to CRL.</t>
        </section>
        <section anchor="pms" numbered="true" toc="include" removeInRFC="false" pn="section-9.2.5">
          <name slugifiedName="name-centralized-policy-control">Centralized Policy Control</name>
          <t indent="0" pn="section-9.2.5-1">When using multiple, uncoordinated ACP registrars, several advanced
operations are potentially more complex than with a single, resilient
 policy control backend, for example, including but not limited to the following:
</t>
          <ul spacing="normal" bare="false" empty="false" indent="3" pn="section-9.2.5-2">
            <li pn="section-9.2.5-2.1">Deciding which candidate ACP node is permitted or not permitted into an
     ACP domain. This may not be a decision to be made upfront, so that
     a policy per "serialNumber" attribute in the subject field distinguished name encoding  can be loaded into every ACP registrar.
     Instead, it may better be decided in real time, potentially including
     a human decision in a NOC.</li>
            <li pn="section-9.2.5-2.2">Tracking all enrolled ACP nodes and their certificate information.
     For example, in support of revoking an individual ACP node's certificates.</li>
            <li pn="section-9.2.5-2.3">Needing more flexible policies as to which type of address prefix or even which specific
     address prefix to assign to a candidate ACP node.</li>
          </ul>
          <t indent="0" pn="section-9.2.5-3">These and other operations could be introduced more easily by
introducing a centralized Policy Management System (PMS) and modifying 
ACP registrar behavior so that it queries the PMS for any policy decision
occurring during the candidate ACP node enrollment process and/or the
ACP node certificate renewal process, for example, which ACP address
prefix to assign. Likewise, the ACP registrar would report any relevant state
change information to the PMS as well, for example, when a certificate
was successfully enrolled onto a candidate ACP node.</t>
        </section>
      </section>
      <section anchor="enabling-acp" numbered="true" toc="include" removeInRFC="false" pn="section-9.3">
        <name slugifiedName="name-enabling-and-disabling-the-">Enabling and Disabling the ACP and/or the ANI</name>
        <t indent="0" pn="section-9.3-1"> Both ACP and BRSKI require interfaces to be operational enough to support the sending and receiving of their packets.  In node types where interfaces are enabled by default (e.g., without operator configuration), such as most L2 switches, this would be less of a change in behavior than in most L3 devices (e.g., routers), where interfaces are disabled by default.  In almost all network devices, though, it is common for configuration to change interfaces to a physically disabled state, and this would break the ACP.</t>
        <t indent="0" pn="section-9.3-2">In this section, we discuss a suggested operational model to enable and disable interfaces and nodes for ACP/ANI in a way that minimizes the risk of breaking the ACP due to operator action and also minimizes operator surprise when the ACP/ANI becomes supported in node software.</t>
        <section anchor="secure-enabling" numbered="true" toc="include" removeInRFC="false" pn="section-9.3.1">
          <name slugifiedName="name-filtering-for-non-acp-ani-p">Filtering for Non-ACP/ANI Packets</name>
          <t indent="0" pn="section-9.3.1-1">Whenever this document refers to enabling an interface for ACP (or BRSKI), it only requires permitting the interface to send and receive packets necessary to operate ACP (or BRSKI) -- but not any other data plane packets.  Unless the data plane is explicitly configured and enabled, all packets that are not required for ACP/BRSKI should be filtered on input and output.</t>
          <t indent="0" pn="section-9.3.1-2">Both BRSKI and ACP require link-local-only IPv6 operations on interfaces and DULL GRASP.  IPv6 link-local operations mean the minimum signaling to auto-assign an IPv6 link-local address and talk to neighbors via their link-local addresses: SLAAC <xref target="RFC4862" format="default" sectionFormat="of" derivedContent="RFC4862"/> and ND <xref target="RFC4861" format="default" sectionFormat="of" derivedContent="RFC4861"/>.  When the device is a BRSKI pledge, it may also require TCP/TLS connections to BRSKI proxies on the interface.  When the device has keying material, and the ACP is running, it requires DULL GRASP packets and packets necessary for the secure channel mechanism it supports, e.g., IKEv2 and IPsec ESP packets or DTLS packets to the IPv6 link-local address of an ACP neighbor on the interface.  It also requires TCP/TLS packets for its BRSKI proxy functionality if it supports BRSKI.</t>
        </section>
        <section anchor="admin-down" numbered="true" toc="include" removeInRFC="false" pn="section-9.3.2">
          <name slugifiedName="name-admin-down-state">"admin down" State</name>
          <t indent="0" pn="section-9.3.2-1">Interfaces on most network equipment have at least two states: "up" and "down".  These may have product-specific names.  For example, "down" could be called "shutdown", and "up" could be called "no shutdown".  The "down" state disables all interface operations down to the physical level.  The "up" state enables the interface enough for all possible L2/L3 services to operate on top of it, and it may also auto-enable some subset of them.  More commonly, the operations of various L2/L3 services are controlled via additional node-wide or interface-level options, but they all become active only when the interface is not "down".  Therefore, an easy way to ensure that all L2/L3 operations on an interface are inactive is to put the interface into "down" state.  The fact that this also physically shuts down the interface is just a side effect in many cases, but it may be important in other cases (see <xref target="down-fast-state-propagation" format="default" sectionFormat="of" derivedContent="Section 9.3.2.2"/>).</t>
          <t indent="0" pn="section-9.3.2-2">A common problem of remote management is the operator or SDN controller cutting its own connectivity to the remote node via configuration, impacting its own management connection to the node. The ACP itself should have no dedicated configuration other than the aforementioned enabling of the ACP on brownfield ACP nodes. This leaves configuration that cannot distinguish between the ACP and data plane as sources of configuration mistakes as these commands will impact the ACP even though they should only impact the data plane.</t>
          <t indent="0" pn="section-9.3.2-3">The one ubiquitous type of command that does this on many types of routers is the interface "down" command/configuration. When such a command is applied to the interface through which the ACP provides access for remote management, it cuts the remote management connection through the ACP because, as outlined above, the "down" command typically impacts the physical layer, too, and not only the data plane services.</t>
          <t indent="0" pn="section-9.3.2-4">To provide ACP/ANI resilience against such operator misconfiguration, this document 
recommends separating the "down" state of interfaces into an "admin down" state, where the physical layer is kept running and the ACP/ANI can use the interface, and a "physical down" state.  Any existing "down" configurations would map to "admin down".  In "admin down", any existing L2/L3 services of the data plane should see no difference to "physical down" state.  To ensure that no data plane packets could be sent or received, packet filtering could be established automatically as described in <xref target="secure-enabling" format="default" sectionFormat="of" derivedContent="Section 9.3.1"/>.</t>
          <t indent="0" pn="section-9.3.2-5">An example of ANI, but not ACP, traffic that should be permitted to pass even in "admin down" state is BRSKI enrollment traffic between a BRSKI pledge and a BRSKI proxy.</t>
          <t indent="0" pn="section-9.3.2-6">New configuration options could be introduced as necessary (see discussion below) to issue "physical down".  The options should be provided with additional checks to minimize the risk of issuing them in a way that breaks the ACP without automatic restoration.  Examples of checks include not allowing the option to be issued from a control connection (NETCONF/SSH) that goes across the interface itself ("do not disconnect yourself") or only applying the option after additional reconfirmation.</t>
          <t indent="0" pn="section-9.3.2-7">The following subsections discuss important aspects of the introduction of "admin down" state.</t>
          <section anchor="down-security" numbered="true" toc="include" removeInRFC="false" pn="section-9.3.2.1">
            <name slugifiedName="name-security-2">Security</name>
            <t indent="0" pn="section-9.3.2.1-1">Interfaces are physically brought down (or left in default "down" state) as a form of security.
The "admin down" state as described above also provides also a high level of security
because it only permits ACP/ANI operations, which are both well secured.  Ultimately, it is subject to
the deployment's security review  whether "admin down" is a feasible replacement for "physical down".</t>
            <t indent="0" pn="section-9.3.2.1-2">The need to trust the security of ACP/ANI operations needs to be weighed against
the operational benefits of permitting the following: consider the typical example of a CPE (customer
premises equipment) with no on-site network expert.  User ports are in "physical
down" state unless explicitly configured not to be.  In a misconfiguration situation, the uplink
connection is incorrectly plugged into such a user port.  The device is disconnected from the
network, and therefore diagnostics from the network side are no longer possible.
Alternatively, all ports default to "admin down".  The ACP (but not the data plane) would
still automatically form.  Diagnostics from the network side are possible, and operator
reaction could include either to make this port the operational uplink port or to instruct
re-cabling.  Security wise, only the ACP/ANI could be attacked, all other functions are filtered
on interfaces in "admin down" state.</t>
          </section>
          <section anchor="down-fast-state-propagation" numbered="true" toc="include" removeInRFC="false" pn="section-9.3.2.2">
            <name slugifiedName="name-fast-state-propagation-and-">Fast State Propagation and Diagnostics</name>
            <t indent="0" pn="section-9.3.2.2-1">The "physical down" state propagates on many interface types (e.g., Ethernet) to the other side.
This can trigger fast L2/L3 protocol reaction on the other side, and "admin down" would not
have the same (fast) result.</t>
            <t indent="0" pn="section-9.3.2.2-2">Bringing interfaces to "physical down" state is, to the best of our knowledge, always
a result of operator action and, today, never the result of autonomic L2/L3 services
running on the nodes.  Therefore, one option is to end the operator's reliance  
on interface state propagation via the subnet link or physical layer.  This may not be possible when both sides are
under the control of different operators, but in that case, it is unlikely that the ACP is running
across the link, and actually putting the interface into "physical down" state may
still be a good option.</t>
            <t indent="0" pn="section-9.3.2.2-3">Ideally, fast physical state propagation is replaced by fast software-driven state
propagation.  For example, a DULL GRASP "admin-state" objective could be used to autoconfigure
a BFD session ("<xref target="RFC5880" format="title" sectionFormat="of" derivedContent="Bidirectional Forwarding Detection (BFD)"/>" <xref target="RFC5880" format="default" sectionFormat="of" derivedContent="RFC5880"/>) between the two sides of the link that would be used to propagate the
"up" vs. "admin down" state.</t>
            <t indent="0" pn="section-9.3.2.2-4">Triggering "physical down" state may also be used as a means of diagnosing cabling issues
in the absence of easier methods.  It is more complex than automated neighbor diagnostics
because it requires coordinated remote access to (likely) both sides of a link to
determine whether up/down toggling will cause the same reaction on the remote side.</t>
            <t indent="0" pn="section-9.3.2.2-5">See <xref target="diagnostics" format="default" sectionFormat="of" derivedContent="Section 9.1"/> for a discussion about how LLDP and/or diagnostics
via GRASP could be used to provide neighbor diagnostics and therefore hopefully
eliminate the need for "physical down" for neighbor diagnostics -- as long as both
neighbors support ACP/ANI.</t>
          </section>
          <section anchor="low-level-link" numbered="true" toc="include" removeInRFC="false" pn="section-9.3.2.3">
            <name slugifiedName="name-low-level-link-diagnostics">Low-Level Link Diagnostics</name>
            <t indent="0" pn="section-9.3.2.3-1">The "physical down" state is used to diagnose low-level interface behavior when higher-layer services (e.g., IPv6) are not working.  Ethernet links are especially subject to a wide variety of possible incorrect configurations/cablings if they do not support automatic selection of variable parameters such as speed (10/100/1000 Mbps), crossover (automatic medium-dependent interface crossover (MDI-X)), and connector (fiber, copper -- when interfaces have multiple but can only enable one at a time).  The need for low-level link diagnostics can therefore be minimized by using fully autoconfiguring links.</t>
            <t indent="0" pn="section-9.3.2.3-2">In addition to the "physical down" state, low-level diagnostics of Ethernet or other interfaces also involve the creation of other states on interfaces, such as physical loopback (internal and/or external) or the bringing down of all packet transmissions for reflection and/or cable-length measurements.  Any of these options would disrupt ACP as well.</t>
            <t indent="0" pn="section-9.3.2.3-3">In cases where such low-level diagnostics of an operational link are desired but where the link could be a single point of failure for the ACP, the ASA on both nodes of the link could perform a negotiated diagnostic that automatically terminates in a predetermined manner without dependence on external input, ensuring the link will become operational again.</t>
          </section>
          <section anchor="power-consumption" numbered="true" toc="include" removeInRFC="false" pn="section-9.3.2.4">
            <name slugifiedName="name-power-consumption-issues">Power Consumption Issues</name>
            <t indent="0" pn="section-9.3.2.4-1">Power consumption of "physical down" interfaces may be significantly lower than those
in "admin down" state, for example, on long-range fiber interfaces. Bringing up
interfaces, for example, to probe reachability may also consume additional power. This
can make these types of interfaces inappropriate to operate purely for the ACP when 
they are not currently needed for the data plane.</t>
          </section>
        </section>
        <section anchor="if-enable" numbered="true" toc="include" removeInRFC="false" pn="section-9.3.3">
          <name slugifiedName="name-enabling-interface-level-ac">Enabling Interface-Level ACP and ANI</name>
          <t indent="0" pn="section-9.3.3-1">The interface-level configuration option "ACP enable" enables ACP  operations on an interface, starting with ACP neighbor discovery via DULL  GRASP.  The interface-level configuration option "ANI enable" on nodes supporting BRSKI and ACP starts with BRSKI pledge operations when there is no domain certificate on the node.  On ACP/BRSKI nodes, only "ANI enable" may need to be supported and not "ACP enable".  Unless overridden by global configuration options (see <xref target="if-enable-auto" format="default" sectionFormat="of" derivedContent="Section 9.3.4"/>), either "ACP enable" or "ANI enable" (both abbreviated as "ACP/ANI enable")  will result in the "down" state on an interface behaving as "admin down".</t>
        </section>
        <section anchor="if-enable-auto" numbered="true" toc="include" removeInRFC="false" pn="section-9.3.4">
          <name slugifiedName="name-which-interfaces-to-auto-en">Which Interfaces to Auto-Enable?</name>
          <t indent="0" pn="section-9.3.4-1"><xref target="discovery-grasp" format="default" sectionFormat="of" derivedContent="Section 6.4"/> requires that "ACP enable" is automatically set on native interfaces, but not on non-native interfaces (reminder: a native interface is one that exists without operator configuration action, such as physical interfaces in physical devices).</t>
          <t indent="0" pn="section-9.3.4-2">Ideally, "ACP enable" is set automatically on all interfaces that provide access to additional connectivity, which allows more nodes of the ACP domain to be reached.  The best set of interfaces necessary to achieve this is not possible to determine automatically.  Native interfaces are the best automatic approximation.</t>
          <t indent="0" pn="section-9.3.4-3">Consider an ACP domain of ACP nodes transitively connected via native interfaces.  A data plane tunnel between two of these nodes that are nonadjacent is created, and "ACP enable" is set for that tunnel.  ACP RPL sees this tunnel as just as a single hop.  Routes in the ACP would use this hop as an attractive path element to connect regions adjacent to the tunnel nodes.  As a result, the actual hop-by-hop paths used by traffic in the ACP can become worse.  In addition, correct forwarding in the ACP now depends on correct data plane forwarding configuration including QoS, filtering, and other security on the data plane path across which this tunnel runs.  This is the main reason why "ACP/ANI enable" should not be set automatically on non-native interfaces.</t>
          <t indent="0" pn="section-9.3.4-4">If the tunnel would connect two previously disjoint ACP regions, then it likely would be useful for the ACP.  A data plane tunnel could also run across nodes without ACP and provide additional connectivity for an already connected ACP network.  The benefit of this additional ACP redundancy has to be weighed against the problems of relying on the data plane.  If a tunnel connects two separate ACP regions, how many tunnels should be created to connect these ACP regions reliably enough? Between which nodes? These are all standard tunneled network design questions not specific to the ACP, and there are no generic, fully automated answers.</t>
          <t indent="0" pn="section-9.3.4-5">Instead of automatically setting "ACP enable" on these types of interfaces, the decision needs to be based on the use purpose of the non-native interface, and "ACP enable" needs to be set in conjunction with the mechanism through which the non-native interface is created and/or configured.</t>
          <t indent="0" pn="section-9.3.4-6">In addition to the explicit setting of "ACP/ANI enable", non-native interfaces also need to support configuration of the ACP RPL cost of the link to avoid the problems of attracting too much traffic to the link as described above.</t>
          <t indent="0" pn="section-9.3.4-7">Even native interfaces may not be able to automatically perform BRSKI or ACP because they may require additional operator input to become operational.  Examples include DSL interfaces requiring Point-to-Point Protocol over Ethernet (PPPoE) credentials or mobile interfaces requiring credentials from a SIM card.  Whatever mechanism is used to provide the necessary configuration to the device to enable the interface can also be expanded to decide whether or not to set "ACP/ANI enable".</t>
          <t indent="0" pn="section-9.3.4-8">The goal of automatically setting "ACP/ANI enable" on interfaces (native or not) is to eliminate unnecessary "touches" to the node to make its operation as much as possible "zero-touch" with respect to ACP/ANI.  If there are "unavoidable touches" such a creating and/or configuring a non-native interface or provisioning credentials for a native interface, then "ACP/ANI enable" should be added as an option to that "touch".  If an erroneous "touch" is easily fixed (does not create another high-cost touch), then the default should be not to enable ANI/ACP, and if it is potentially expensive or slow to fix (e.g., parameters on SIM card shipped to remote location), then the default should be to enable ACP/ANI.</t>
        </section>
        <section anchor="node-enable" numbered="true" toc="include" removeInRFC="false" pn="section-9.3.5">
          <name slugifiedName="name-enabling-node-level-acp-and">Enabling Node-Level ACP and ANI</name>
          <t indent="0" pn="section-9.3.5-1">A node-level command "ACP/ANI enable [up-if-only]" enables ACP or ANI on the node (ANI = ACP + BRSKI).  Without this command set, any interface-level "ACP/ANI enable" is ignored.  Once set, ACP/ANI will operate an interface where "ACP/ANI enable" is set.  Setting of interface-level "ACP/ANI enable" is either automatic (default) or explicit through operator action as described in <xref target="if-enable-auto" format="default" sectionFormat="of" derivedContent="Section 9.3.4"/>.</t>
          <t indent="0" pn="section-9.3.5-2">If the option "up-if-only" is selected, the behavior of "down" interfaces is unchanged, and ACP/ANI will only operate on interfaces where "ACP/ANI enable" is set and that are "up".  When it is not set, then "down" state of interfaces with "ACP/ANI enable" is modified to behave as "admin down".</t>
          <section anchor="brownfield" numbered="true" toc="include" removeInRFC="false" pn="section-9.3.5.1">
            <name slugifiedName="name-brownfield-nodes">Brownfield Nodes</name>
            <t indent="0" pn="section-9.3.5.1-1">A "brownfield" node is one that already has a configured data plane.</t>
            <t indent="0" pn="section-9.3.5.1-2">Executing global "ACP/ANI enable [up-if-only]" on each node is the only command necessary to create an ACP across a network of brownfield nodes once all the nodes have a domain certificate.  When BRSKI is used ("ANI enable"), provisioning of the certificates only requires the setup of a single BRSKI registrar node, which could also implement a CA for the network.  This is the simplest way to introduce ACP/ANI into existing (i.e., brownfield) networks.</t>
            <t indent="0" pn="section-9.3.5.1-3">The need to explicitly enable ACP/ANI is especially important in brownfield nodes because otherwise software updates may introduce support for ACP/ANI. The automatic enabling of ACP/ANI in networks where the operator does not want ACP/ANI or has likely never even heard of it could be quite irritating to the operator, especially when "down" behavior is changed to "admin down".</t>
            <t indent="0" pn="section-9.3.5.1-4">Automatically setting "ANI enable" on brownfield nodes where the operator is unaware of BRSKI and MASA operations 
 could also be an unlikely, but critical, security issue. If an attacker could impersonate the operator by registering
as the operator at the MASA or otherwise getting hold of vouchers and could get enough physical access to the network so
pledges would register to an attacking registrar, then the attacker could gain access to the
 ACP and, through the ACP, gain access to the data plane.</t>
            <t indent="0" pn="section-9.3.5.1-5">In networks where the operator explicitly enables the ANI, this could not happen because the operator would create a BRSKI registrar that would discover attack attempts, and the operator would set up his registrar with the MASA.  Nodes requiring "ownership vouchers" would not be subject to that attack.  See <xref target="RFC8995" format="default" sectionFormat="of" derivedContent="RFC8995"/> for more details.  Note that a global "ACP enable" alone is not subject to these types of attacks because they always depend on some other mechanism first to provision domain certificates into the device.</t>
          </section>
          <section anchor="greenfield" numbered="true" toc="include" removeInRFC="false" pn="section-9.3.5.2">
            <name slugifiedName="name-greenfield-nodes">Greenfield Nodes</name>
            <t indent="0" pn="section-9.3.5.2-1">An ACP "greenfield" node is one that does not have any prior configuration and that can be bootstrapped into the ACP across the network. To support greenfield nodes, ACP as described in this document needs to be combined with a bootstrap protocol and/or mechanism that will enroll the node with the ACP keying material: the ACP certificate and the TA. For ANI nodes, this protocol/mechanism is BRSKI.</t>
            <t indent="0" pn="section-9.3.5.2-2">When such a node is powered on and determines that it is in greenfield condition, it enables the bootstrap protocol(s) and/or mechanism(s). Once the ACP keying material is enrolled, the greenfield state ends and the ACP is started. When BRSKI is used, the node's state reflects this by setting "ANI enable" upon determination of greenfield state when it is powered on.</t>
            <t indent="0" pn="section-9.3.5.2-3">ACP greenfield nodes that, in the absence of ACP, would have their interfaces in "down" state <bcp14>SHOULD</bcp14> set all native interfaces into "admin down" state and only permit data plane traffic required for the bootstrap protocol and/or mechanisms.</t>
            <t indent="0" pn="section-9.3.5.2-4">The ACP greenfield state ends either through the successful enrollment of ACP keying material (certificate and TA) or the detection of a permitted termination of ACP greenfield operations.</t>
            <t indent="0" pn="section-9.3.5.2-5">ACP nodes supporting greenfield operations <bcp14>MAY</bcp14> want to provide backward compatibility with other forms of configuration and/or provisioning, especially when only a subset of nodes are expected to be deployed with ACP. Such an ACP node <bcp14>SHOULD</bcp14> observe attempts to provision or configure the node via interfaces and/or methods that traditionally indicate physical possession of the node, such as a serial or USB console port or a USB memory stick with a bootstrap configuration. When such an operation is observed before enrollment of the ACP keying material has completed, the node <bcp14>SHOULD</bcp14> put itself into the state the node would have been in if ACP/ANI was disabled at boot. This terminates ACP greenfield operations.</t>
            <t indent="0" pn="section-9.3.5.2-6">When an ACP greenfield node enables multiple, automated ACP or non-ACP enrollment and/or bootstrap protocols or mechanisms in parallel, care must be taken not to terminate any protocol/mechanism before the others either have succeeded in enrolling ACP keying material or have progressed to a point of permitted termination for ACP greenfield operations.</t>
            <t indent="0" pn="section-9.3.5.2-7">Highly secure ACP greenfield nodes may not permit any reason to terminate ACP greenfield operations, including physical access.</t>
            <t indent="0" pn="section-9.3.5.2-8">Nodes that claim to support ANI greenfield operations <bcp14>SHOULD NOT</bcp14> enable in parallel to BRSKI any enrollment/bootstrap protocol/mechanism that allows Trust On First Use (TOFU, "<xref target="RFC7435" format="title" sectionFormat="of" derivedContent="Opportunistic Security: Some Protection Most of the Time"/>" <xref target="RFC7435" format="default" sectionFormat="of" derivedContent="RFC7435"/>) over interfaces other than those traditionally indicating physical possession of the node.  Protocols/mechanisms with published default username/password authentication are considered to suffer from TOFU. Securing the bootstrap protocol/mechanism by requiring a voucher <xref target="RFC8366" format="default" sectionFormat="of" derivedContent="RFC8366"/> can be used to avoid TOFU.</t>
            <t indent="0" pn="section-9.3.5.2-9">In summary, the goal of ACP greenfield support is to allow remote, automated enrollment of ACP keying materials, and therefore automated bootstrap into the ACP and to prohibit TOFU during bootstrap with the likely exception (for backward compatibility) of bootstrapping via interfaces traditionally indicating physical possession of the node.</t>
          </section>
        </section>
        <section anchor="disabling" numbered="true" toc="include" removeInRFC="false" pn="section-9.3.6">
          <name slugifiedName="name-undoing-ani-acp-enable">Undoing "ANI/ACP enable"</name>
          <t indent="0" pn="section-9.3.6-1">Disabling ANI/ACP by undoing "ACP/ANI enable" is a risk for the reliable operations of the ACP if it can be executed by mistake or without authorization.  
This behavior could be influenced through some additional (future) property in the certificate (e.g., in the acp-node-name extension field): in an ANI deployment intended for convenience, disabling it could be allowed without further constraints.  In an ANI deployment considered to be critical, more checks would be required.
One very controlled option would be to not permit these commands unless the domain certificate has been revoked or is denied renewal.  Configuring this option would be a parameter on the BRSKI registrar(s).  As long as the node did not receive a domain certificate, undoing "ANI/ACP enable" should not have any additional constraints.</t>
        </section>
        <section anchor="enable-summary" numbered="true" toc="include" removeInRFC="false" pn="section-9.3.7">
          <name slugifiedName="name-summary-2">Summary</name>
          <t indent="0" pn="section-9.3.7-1">Node-wide "ACP/ANI enable [up-if-only]" commands enable the operation of ACP/ANI.  This is only auto-enabled on ANI greenfield devices, otherwise it must be configured explicitly.</t>
          <t indent="0" pn="section-9.3.7-2">If the option "up-if-only" is not selected, interfaces enabled for ACP/ANI interpret the "down" state as "admin down" and not "physical down".  In the "admin-down" state, all non-ACP/ANI packets are filtered, but the physical layer is kept running to permit ACP/ANI to operate.</t>
          <t indent="0" pn="section-9.3.7-3">(New) commands that result in physical interruption ("physical down", "loopback") of ACP/ANI-enabled interfaces should be built to protect continuance or reestablishment of ACP as much as possible.</t>
          <t indent="0" pn="section-9.3.7-4">Interface-level "ACP/ANI enable" commands control per-interface operations.  It is enabled by default on native interfaces and has to be configured explicitly on other interfaces.</t>
          <t indent="0" pn="section-9.3.7-5">Disabling "ACP/ANI enable" globally and per interface should have additional checks to minimize undesired breakage of ACP.  The degree of control could be a domain-wide parameter in the domain certificates.</t>
        </section>
      </section>
      <section anchor="incremental-adoption" numbered="true" toc="include" removeInRFC="false" pn="section-9.4">
        <name slugifiedName="name-partial-or-incremental-adop">Partial or Incremental Adoption</name>
        <t indent="0" pn="section-9.4-1">The Zone Addressing Sub-Scheme (see <xref target="zone-scheme" format="default" sectionFormat="of" derivedContent="Section 6.11.3"/>) allows incremental
adoption of the ACP in a network where ACP can be deployed on edge areas, but not
across the core that is connecting those edges.</t>
        <t indent="0" pn="section-9.4-2">In such a setup, each edge network, such as a branch or campus of an enterprise network,
has a  disjoint ACP to which one or more unique Zone-IDs are assigned: ACP nodes registered for
a specific ACP zone have to receive Zone Addressing Sub-Scheme addresses, for example,
by virtue of configuring for each such zone one or more ACP registrars with that Zone-ID.
All the registrars for these ACP zones need to get ACP certificates from CAs relying on a
common set of TAs and of course the same ACP domain name.</t>
        <t indent="0" pn="section-9.4-3">These ACP zones can first be brought up as separate networks without any connection
between them and/or they can be connected across a non-ACP enabled core network through
various non-autonomic operational practices. For example, each separate ACP zone can have an
edge node that is a L3 VPN PE (MPLS or IPv6 L3VPN), where a complete
non-autonomic ACP-Core VPN is created by using the ACP VRFs and exchanging the routes
from those ACP VRFs across the VPN's non-autonomic routing protocol(s).</t>
        <t indent="0" pn="section-9.4-4">While such a setup is possible with any ACP addressing sub-scheme, the
Zone Addressing Sub-Scheme makes it easy to configure and scalable for any
VPN routing protocols because every ACP zone only needs to indicate one or more 
/64 ACP zone addressing prefix routes into the ACP-Core VPN as opposed to routes
for every individual ACP node as required in the other ACP addressing schemes.</t>
        <t indent="0" pn="section-9.4-5">Note that the non-autonomous ACP-Core VPN requires additional extensions
to propagate GRASP messages when GRASP discovery is desired across the zones.</t>
        <t indent="0" pn="section-9.4-6">For example, one could set up on each zone edge router a remote ACP
tunnel to a GRASP hub. The GRASP hub could be implemented at the application level
and could run in the NOC of the network. It would serve to propagate
GRASP announcements between ACP zones and/or generate GRASP announcements for NOC 
services.</t>
        <t indent="0" pn="section-9.4-7">Such a partial deployment may prove to be sufficient or could evolve to become more
autonomous through future standardized or nonstandard enhancements, for example,
by allowing GRASP messages to be propagated across the L3VPN, leveraging for
example L3VPN multicast support.</t>
        <t indent="0" pn="section-9.4-8">Finally, these partial deployments can be merged into a single, contiguous
ACP that is completely autonomous (given appropriate ACP support across the core) without changes
in the cryptographic material because the node's ACP certificates are from a single ACP.</t>
      </section>
      <section anchor="configuration" numbered="true" toc="include" removeInRFC="false" pn="section-9.5">
        <name slugifiedName="name-configuration-and-the-acp-s">Configuration and the ACP (Summary)</name>
        <t indent="0" pn="section-9.5-1">There is no desirable configuration for the ACP. Instead, all parameters that need to be configured in support of the ACP are limitations of the solution, but they are only needed in cases where not all components are made autonomic. Wherever this is necessary, it relies on preexisting mechanisms for configuration such as CLI or YANG data models ("<xref target="RFC7950" format="title" sectionFormat="of" derivedContent="The YANG 1.1 Data Modeling Language"/>" <xref target="RFC7950" format="default" sectionFormat="of" derivedContent="RFC7950"/>).</t>
        <t indent="0" pn="section-9.5-2">The most important examples of such configuration include:</t>
        <ul spacing="normal" bare="false" empty="false" indent="3" pn="section-9.5-3">
          <li pn="section-9.5-3.1">When ACP nodes do not support an autonomic way to receive an ACP certificate, for example, BRSKI, then such a certificate needs to be configured via some preexisting mechanisms outside the scope of this specification. Today, routers typically have a variety of mechanisms to do this.</li>
          <li pn="section-9.5-3.2">Certificate maintenance requires PKI functions. Discovery of these functions across the ACP is automated (see <xref target="domcert-maint" format="default" sectionFormat="of" derivedContent="Section 6.2.5"/>), but their configuration is not.</li>
          <li pn="section-9.5-3.3">When non-ACP-capable nodes such as preexisting NMS need to be physically connected to the ACP, the ACP node to which they attach needs to be configured with ACP connect according to <xref target="ACPconnect" format="default" sectionFormat="of" derivedContent="Section 8.1"/>. It is also possible to use that single physical connection to connect both to the ACP and the data plane of the network as explained in <xref target="SingleIF" format="default" sectionFormat="of" derivedContent="Section 8.1.4"/>.</li>
          <li pn="section-9.5-3.4">When devices are not autonomically bootstrapped, explicit configuration to enable the ACP needs to be applied. See <xref target="enabling-acp" format="default" sectionFormat="of" derivedContent="Section 9.3"/>.</li>
          <li pn="section-9.5-3.5">When the ACP needs to be extended across interfaces other than L2, the ACP as defined in this document cannot auto-discover candidate neighbors automatically. Remote neighbors need to be configured, see <xref target="remote-acp-neighbors" format="default" sectionFormat="of" derivedContent="Section 8.2"/>.</li>
        </ul>
        <t indent="0" pn="section-9.5-4">Once the ACP is operating, any further configuration for the data plane can be done more reliably across the ACP itself because the ACP provides addressing and connectivity (routing) independent of the data plane. For this, the configuration methods simply need to allow operating across the ACP VRF, for example, with NETCONF, SSH, or any other method.</t>
        <t indent="0" pn="section-9.5-5">The ACP also provides additional security through its hop-by-hop encryption for any such configuration operations. Some legacy configuration methods (for example, SNMP, TFTP, or HTTP) may not use end-to-end encryption, and most of the end-to-end secured configuration methods still allow for easy, passive observation along the path of the configuration taking place (for example, transport flows, port numbers, and/or IP addresses).</t>
        <t indent="0" pn="section-9.5-6">The ACP can and should be used equally as the transport to configure any of the aforementioned non-autonomic components of the ACP, but in that case, the same caution needs to be exercised as with data plane configuration without the ACP. Misconfiguration may cause the configuring entity to be disconnected from the node it configures, for example, when incorrectly unconfiguring a remote ACP neighbor through which the configured ACP node is reached.</t>
      </section>
    </section>
    <section anchor="benefit" numbered="true" toc="include" removeInRFC="false" pn="section-10">
      <name slugifiedName="name-summary-benefits-informativ">Summary: Benefits (Informative)</name>
      <section anchor="self-healing" numbered="true" toc="include" removeInRFC="false" pn="section-10.1">
        <name slugifiedName="name-self-healing-properties">Self-Healing Properties</name>
        <t indent="0" pn="section-10.1-1">The ACP is self-healing:</t>
        <ul spacing="normal" bare="false" empty="false" indent="3" pn="section-10.1-2">
          <li pn="section-10.1-2.1">New neighbors will automatically join the ACP after successful validation and will become reachable using their unique ULA address across the ACP.</li>
          <li pn="section-10.1-2.2">When any changes happen in the topology, the routing protocol used in the ACP will automatically adapt to the changes and will continue to provide reachability to all nodes.</li>
          <li pn="section-10.1-2.3">The ACP tracks the validity of peer certificates and tears down ACP secure channels when a peer certificate has expired. When short-lived certificates with lifetimes on the order of OCSP/CRL refresh times are used, then this allows for removal of invalid peers (whose certificate was not renewed) at similar speeds as when using OCSP/CRL. The same benefit can be achieved when using CRL/OCSP,  periodically refreshing the revocation information and also tearing down ACP secure channels when the peer's (long-lived) certificate is revoked. There is no requirement for ACP implementations to require this enhancement, though, in order to keep the mandatory implementations simpler.</li>
        </ul>
        <t indent="0" pn="section-10.1-3">The ACP can also sustain network partitions and mergers.  Practically all ACP operations are link local, where a network partition has no impact.  Nodes authenticate each other using the domain certificates to establish the ACP locally.  Addressing inside the ACP remains unchanged, and the routing protocol inside both parts of the ACP will lead to two working (although partitioned) ACPs.</t>
        <t indent="0" pn="section-10.1-4">There are a few central dependencies: a CRL may not be available during a network partition. This can be addressed by a suitable policy to not immediately disconnect neighbors when no CRL is available.  Also, an ACP registrar or CA might not be available during a partition.  This may delay renewal of certificates that are to expire in the future, and it may prevent the enrollment of new nodes during the partition.</t>
        <t indent="0" pn="section-10.1-5">Highly resilient ACP designs can be built by using ACP registrars with embedded sub-CAs, as outlined in <xref target="sub-ca" format="default" sectionFormat="of" derivedContent="Section 9.2.4"/>. As long as a partition is left with one or more of such ACP registrars, it can continue to enroll new candidate ACP nodes as long as the ACP registrar's sub-CA certificate does not expire. Because the ACP addressing relies on unique Registrar-IDs, a later merging of partitions will not cause problems with ACP addresses assigned during partitioning.</t>
        <t indent="0" pn="section-10.1-6">After a network partition, merging will just establish the previous status: certificates can be renewed, the CRL is available, and new nodes can be enrolled everywhere.  Since all nodes use the same TA, the merging will be smooth.</t>
        <t indent="0" pn="section-10.1-7">Merging two networks with different TAs requires the ACP nodes to trust the union of TAs.  As long as the routing-subdomain hashes are different, the addressing will not overlap. Overlaps will only happen accidentally in the unlikely event of a 40-bit hash collision in SHA-256 (see <xref target="addressing" format="default" sectionFormat="of" derivedContent="Section 6.11"/>).
Note that the complete mechanisms to merge networks is out of scope of this specification.</t>
        <t indent="0" pn="section-10.1-8">It is also highly desirable for an implementation of the ACP to be able to run it over interfaces that are administratively down.  If this is not feasible, then it might instead be possible to request explicit operator override upon administrative actions that would administratively bring down an interface across which the ACP is running, especially if bringing down the ACP is known to disconnect the operator from the node.  For example, any such administrative down action could perform a dependency check to see if the transport connection across which this action is performed is affected by the down action (with default RPL routing used, packet forwarding will be symmetric, so this is actually possible to check).</t>
      </section>
      <section anchor="self-protecting" numbered="true" toc="include" removeInRFC="false" pn="section-10.2">
        <name slugifiedName="name-self-protection-properties">Self-Protection Properties</name>
        <section anchor="self-protecting-outside" numbered="true" toc="include" removeInRFC="false" pn="section-10.2.1">
          <name slugifiedName="name-from-the-outside">From the Outside</name>
          <t indent="0" pn="section-10.2.1-1">As explained in <xref target="self-creation" format="default" sectionFormat="of" derivedContent="Section 6"/>, the ACP is based on secure channels built between nodes that have mutually authenticated each other with their domain certificates.  The channels themselves are protected using standard encryption technologies such as DTLS or IPsec, which provide additional authentication during channel establishment, data integrity, and data confidentiality protection inside the ACP, and also provide replay protection.</t>
          <t indent="0" pn="section-10.2.1-2">An attacker will not be able to join the ACP unless it has a valid ACP certificate. An on-path attacker without a valid ACP certificate cannot inject packets into the ACP due to ACP secure channels. An attacker also cannot decrypt ACP traffic unless it can crack the encryption. It can attempt behavioral traffic analysis on the encrypted ACP traffic.</t>
          <t indent="0" pn="section-10.2.1-3">The degree to which compromised ACP nodes can impact the ACP depends on the implementation of the ACP nodes and their impairment. When an attacker has only gained administrative privileges to configure ACP nodes remotely, the attacker can disrupt the ACP only through one of the few configuration options to disable it (see <xref target="enabling-acp" format="default" sectionFormat="of" derivedContent="Section 9.3"/>) or by the configuring of non-autonomic ACP options if those are supported on the impaired ACP nodes (see <xref target="workarounds" format="default" sectionFormat="of" derivedContent="Section 8"/>). Injecting traffic into or extracting traffic from an impaired ACP node is only possible when an impaired ACP node supports ACP connect (see <xref target="ACPconnect" format="default" sectionFormat="of" derivedContent="Section 8.1"/>), and the attacker can control traffic into/from one of the ACP node's interfaces, such as by having physical access to the ACP node.</t>
          <t indent="0" pn="section-10.2.1-4">The ACP also serves as protection (through authentication and encryption) for protocols relevant to OAM that may not have secured protocol stack options or where implementation or deployment of those options fail due to some vendor, product, or customer limitations.  This includes protocols such as SNMP ("<xref target="RFC3411" format="title" sectionFormat="of" derivedContent="An Architecture for Describing Simple Network Management Protocol (SNMP) Management Frameworks"/>" <xref target="RFC3411" format="default" sectionFormat="of" derivedContent="RFC3411"/>), NTP <xref target="RFC5905" format="default" sectionFormat="of" derivedContent="RFC5905"/>, PTP (Precision Time Protocol <xref target="IEEE-1588-2008" format="default" sectionFormat="of" derivedContent="IEEE-1588-2008"/>), DNS ("<xref target="RFC3596" format="title" sectionFormat="of" derivedContent="DNS Extensions to Support IP Version 6"/>" <xref target="RFC3596" format="default" sectionFormat="of" derivedContent="RFC3596"/>), DHCPv6 ("<xref target="RFC3315" format="title" sectionFormat="of" derivedContent="Dynamic Host Configuration Protocol for IPv6 (DHCPv6)"/>" <xref target="RFC3315" format="default" sectionFormat="of" derivedContent="RFC3315"/>), syslog ("<xref target="RFC3164" format="title" sectionFormat="of" derivedContent="The BSD Syslog Protocol"/>" <xref target="RFC3164" format="default" sectionFormat="of" derivedContent="RFC3164"/>), RADIUS ("<xref target="RFC2865" format="title" sectionFormat="of" derivedContent="Remote Authentication Dial In User Service (RADIUS)"/>" <xref target="RFC2865" format="default" sectionFormat="of" derivedContent="RFC2865"/>), Diameter ("<xref target="RFC6733" format="title" sectionFormat="of" derivedContent="Diameter Base Protocol"/>" <xref target="RFC6733" format="default" sectionFormat="of" derivedContent="RFC6733"/>), TACACS ("<xref target="RFC1492" format="title" sectionFormat="of" derivedContent="An Access Control Protocol, Sometimes Called TACACS"/>" <xref target="RFC1492" format="default" sectionFormat="of" derivedContent="RFC1492"/>), IPFIX ("<xref target="RFC7011" format="title" sectionFormat="of" derivedContent="Specification of the IP Flow Information Export (IPFIX) Protocol for the Exchange of Flow Information"/>" <xref target="RFC7011" format="default" sectionFormat="of" derivedContent="RFC7011"/>), NetFlow ("<xref target="RFC3954" format="title" sectionFormat="of" derivedContent="Cisco Systems NetFlow Services Export Version 9"/>" <xref target="RFC3954" format="default" sectionFormat="of" derivedContent="RFC3954"/>) -- just to name a few. Not all of these protocol references are necessarily the latest version of protocols, but they are versions that are still widely deployed.</t>
          <t indent="0" pn="section-10.2.1-5">Protection via the ACP secure hop-by-hop channels for these protocols is meant to be only a stopgap, though: the ultimate goal is for these and other protocols to use end-to-end encryption utilizing the domain certificate and to rely on the ACP secure channels primarily for zero-touch reliable connectivity, but not primarily for security.</t>
          <t indent="0" pn="section-10.2.1-6">The remaining attack vector would be to attack the underlying ACP protocols themselves, either via directed attacks or by denial-of-service attacks.  However, as the ACP is built using link-local IPv6 addresses, remote attacks from the data plane are impossible as long as the data plane has no facilities to remotely send IPv6 link-local packets.  The only exceptions are ACP-connected interfaces, which require greater physical protection.  The ULA addresses are only reachable inside the ACP context and therefore unreachable from the data plane.  Also, the ACP protocols should be implemented to be attack resistant and to not consume unnecessary resources even while under attack.</t>
        </section>
        <section anchor="self-protecting-inside" numbered="true" toc="include" removeInRFC="false" pn="section-10.2.2">
          <name slugifiedName="name-from-the-inside">From the Inside</name>
          <t indent="0" pn="section-10.2.2-1">The security model of the ACP is based on trusting all members of the group of nodes
 that receive an ACP certificate for the same domain.  Attacks from the inside by
a compromised group member are therefore the biggest challenge.</t>
          <t indent="0" pn="section-10.2.2-2">Group members must be protected against attackers so that there is no easy way to compromise them
or use them as a proxy for attacking other devices across the ACP. For example, management plane
functions (transport ports) should be reachable only from the ACP and not from the data plane.
This applies especially to those management plane functions that lack
secure end-to-end transport and to which the ACP provides both automatic, reliable
 connectivity and protection against attacks.  Protection across all potential
attack vectors is typically easier to do in devices whose software is designed from the beginning with
the ACP in mind than in legacy, software-based systems where the ACP is added on as another feature.</t>
          <t indent="0" pn="section-10.2.2-3">As explained above, traffic across the ACP should still be end-to-end encrypted whenever
possible.  This includes traffic such as GRASP, EST, and BRSKI inside the ACP.  This minimizes
man-in-the-middle attacks by compromised ACP group members.  Such attackers cannot eavesdrop
or modify communications, but they can just filter them (which is unavoidable by any means).</t>
          <t indent="0" pn="section-10.2.2-4">See <xref target="compromised" format="default" sectionFormat="of" derivedContent="Appendix A.9.8"/> for further considerations on avoiding and dealing with
compromised nodes.</t>
        </section>
      </section>
      <section anchor="admin-view" numbered="true" toc="include" removeInRFC="false" pn="section-10.3">
        <name slugifiedName="name-the-administrator-view">The Administrator View</name>
        <t indent="0" pn="section-10.3-1">An ACP is self-forming, self-managing, and self-protecting; therefore, it has minimal dependencies on the administrator of the network.  Specifically, since it is (intended to be) independent of configuration, there is only limited scope for configuration errors on the ACP itself.  The administrator may have the option to enable or disable the entire approach, but detailed configuration is not possible.  This means that the ACP must not be reflected in the running configuration of nodes, except for a possible on/off switch (and even that is undesirable).</t>
        <t indent="0" pn="section-10.3-2">While configuration (except for <xref target="workarounds" format="default" sectionFormat="of" derivedContent="Section 8"/> and  <xref target="registrar-considerations" format="default" sectionFormat="of" derivedContent="Section 9.2"/>)
 is not possible, an administrator must have full visibility into the ACP and all its parameters to be able to troubleshoot.  Therefore, an ACP must support all show and debug options, as with any other network function.  Specifically, an NMS or controller must be able to discover the ACP and monitor its health.  This visibility into ACP operations must clearly be separated from the visibility of the data plane so automated systems will never have to deal with ACP aspects unless they explicitly desire to do so.</t>
        <t indent="0" pn="section-10.3-3">Since an ACP is self-protecting, a node that does not support the ACP or that does not have a valid domain certificate cannot connect to it.  This means that by default a traditional controller or NMS cannot connect to an ACP.  See <xref target="NMS" format="default" sectionFormat="of" derivedContent="Section 8.1.1"/> for details on how to connect an NMS host to the ACP.</t>
      </section>
    </section>
    <section anchor="security" numbered="true" toc="include" removeInRFC="false" pn="section-11">
      <name slugifiedName="name-security-considerations">Security Considerations</name>
      <t indent="0" pn="section-11-1">A set of ACP nodes with ACP certificates for the same ACP domain and with ACP functionality enabled is automatically "self-building": the ACP is automatically established between neighboring ACP nodes. It is also self-protecting: the ACP secure channels are authenticated and encrypted. No configuration is required for this.</t>
      <t indent="0" pn="section-11-2">The self-protecting property does not include workarounds for non-autonomic components as explained in <xref target="workarounds" format="default" sectionFormat="of" derivedContent="Section 8"/>. See <xref target="self-protecting" format="default" sectionFormat="of" derivedContent="Section 10.2"/> for details of how the ACP protects itself against attacks from the outside and, to a more limited degree, from the inside as well.</t>
      <t indent="0" pn="section-11-3">However, the security of the ACP depends on a number of other factors:
      </t>
      <ul spacing="normal" bare="false" empty="false" indent="3" pn="section-11-4">
        <li pn="section-11-4.1">The usage of domain certificates depends on a valid supporting PKI infrastructure.  If the chain of trust of this PKI infrastructure is compromised, the security of the ACP is also compromised.  This is typically under the control of the network administrator.</li>
        <li pn="section-11-4.2">ACP nodes receive their certificates from ACP registrars. These ACP registrars are security-critical dependencies of the ACP.  Procedures and protocols for ACP registrars are outside the scope of this specification as explained in <xref target="registrars-protocols" format="default" sectionFormat="of" derivedContent="Section 6.11.7.1"/>; only the requirements for the resulting ACP certificates are specified.</li>
        <li pn="section-11-4.3">Every ACP registrar (for enrollment of ACP certificates) and ACP EST server (for renewal of ACP certificates) is a security-critical entity and its protocols are security-critical protocols. Both need to be hardened against attacks, similar to a CA and its protocols. A malicious registrar can enroll malicious nodes to an ACP network (if the CA delegates this policy to the registrar) or break ACP routing, for example, by assigning duplicate ACP addresses to ACP nodes via their ACP certificates.</li>
        <li pn="section-11-4.4">ACP nodes that are ANI nodes rely on BRSKI as the protocol for ACP registrars. For ANI-type ACP nodes, the security considerations of BRSKI apply. It enables automated, secure enrollment of ACP certificates.</li>
        <li pn="section-11-4.5">BRSKI and potentially other ACP registrar protocol options require that nodes have an (X.509 v3 based) IDevID. IDevIDs are an option for ACP registrars to securely identify candidate ACP nodes that should be enrolled into an ACP domain.</li>
        <li pn="section-11-4.6">For IDevIDs to securely identify the node to which its IDevID is assigned, the node needs (1) to utilize hardware support such as a Trusted Platform Module (TPM) to protect against extraction and/or cloning of the private key of the IDevID and (2) a hardware/software infrastructure to prohibit execution of unauthenticated software to protect against malicious use of the IDevID.</li>
        <li pn="section-11-4.7">Like the IDevID, the ACP certificate should equally be protected from extraction or other abuse by the same ACP node infrastructure. This infrastructure for IDevID and ACP certificate is beneficial independent of the ACP registrar protocol used (BRSKI or other).</li>
        <li pn="section-11-4.8">Renewal of ACP certificates requires support for EST; therefore, the security considerations of <xref target="RFC7030" format="default" sectionFormat="of" derivedContent="RFC7030"/> related to certificate renewal and/or rekeying and TP renewal apply to the ACP. EST security considerations when using other than mutual certificate authentication do not apply, nor do considerations for initial enrollment via EST apply, except for ANI-type ACP nodes because BRSKI leverages EST.</li>
        <li pn="section-11-4.9">A malicious ACP node could declare itself to be an EST server via GRASP across the ACP if malicious software could be executed on it. The CA should therefore authenticate only known trustworthy EST servers, such as nodes with hardware protections against malicious software. When registrars use their ACP certificate to authenticate towards a CA, the id-kp-cmcRA <xref target="RFC6402" format="default" sectionFormat="of" derivedContent="RFC6402"/> extended key usage attribute allows the CA to determine that the ACP node was permitted during enrollment to act as an ACP registrar.  Without the ability to talk to the CA, a malicious EST server can still attract ACP nodes attempting to renew their keying material, but they will fail to perform successful renewal of a valid ACP certificate. The ACP node attempting to use the malicious EST server can then continue to use a different EST server and log a failure against a malicious EST server.</li>
        <li pn="section-11-4.10">Malicious on-path ACP nodes may filter valid EST server announcements across the ACP, but such malicious ACP nodes could equally filter any ACP traffic such as the EST traffic itself. Either attack requires the ability to execute malicious software on an impaired ACP node, though.</li>
        <li pn="section-11-4.11">In the absence of malicious software injection, an attacker that can misconfigure an ACP node that supports EST server functionality could attempt to configure a malicious CA. This would not result in the ability to successfully renew ACP certificates, but it could result in DoS attacks by becoming an EST server and by making ACP nodes attempt their ACP certificate renewal via this impaired ACP node. This problem can be avoided when the EST server implementation can verify that the configured CA is indeed providing renewal for certificates of the node's ACP. The ability to do so depends on the protocol between the EST server and the CA, which is outside the scope of this document.</li>
      </ul>
      <t indent="0" pn="section-11-5">In summary, attacks against the PKI/certificate dependencies of the ACP can be minimized by a variety of hardware and/or software components, including options such as TPM for IDevID and/or ACP certificate, prohibitions against the execution of untrusted software, and design aspects of the EST server functionality for the ACP that eliminate configuration-level impairment.</t>
      <t indent="0" pn="section-11-6">Because ACP peers select one out of potentially more than one mutually supported ACP secure channel protocols via the approach described in <xref target="channel-selection" format="default" sectionFormat="of" derivedContent="Section 6.6"/>, ACP secure channel setup is subject to downgrade attacks by MITM attackers. This can be discovered after such an attack by additional mechanisms described in <xref target="downgrade" format="default" sectionFormat="of" derivedContent="Appendix A.9.9"/>. Alternatively, more advanced channel selection mechanisms can be devised.</t>
      <t indent="0" pn="section-11-7">The security model of the ACP as defined in this document is tailored for use with private PKI. The TA of a private PKI provides the security against maliciously created ACP certificates that give access to an ACP. Such attacks can create fake ACP certificates with correct-looking AcpNodeNames, but those certificates would not pass the certificate path validation of the ACP domain membership check (see <xref target="certcheck" format="default" sectionFormat="of" derivedContent="Section 6.2.3"/>, point 2).</t>
      <t indent="0" pn="section-11-8">There is no prevention of source-address spoofing inside the ACP.  This implies that if an attacker gains access to the ACP, it can spoof all addresses inside the ACP and fake messages from any other node. New protocols and/or services running across the ACP should therefore use end-to-end authentication inside the ACP. This is already done by GRASP as specified in this document.</t>
      <t indent="0" pn="section-11-9">The ACP is designed to enable automation of current network management and the management of future autonomic peer-to-peer/distributed networks. Any ACP member can send ACP IPv6 packets to other ACP members and announce via ACP GRASP services to all ACP members without depending on centralized components.</t>
      <t indent="0" pn="section-11-10">The ACP relies on peer-to-peer authentication and authorization using ACP certificates.  This security model is necessary to enable the autonomic ad hoc, any-to-any connectivity between ACP nodes. It provides infrastructure protection through hop-by-hop authentication and encryption -- without relying on third parties. For any services where this complete autonomic peer-to-peer group security model is appropriate, the ACP certificate can also be used unchanged, for example, for any type of data plane routing protocol security.</t>
      <t indent="0" pn="section-11-11">This ACP security model is designed primarily to protect against attack from the outside, not against attacks from the inside.  To protect against spoofing attacks from compromised on-path ACP nodes, end-to-end encryption inside the ACP is used by new ACP signaling: GRASP across the ACP using TLS. The same is expected from any non-legacy services or protocols using the ACP. Because no group keys are used, there is no risk of impacted nodes accessing end-to-end encrypted traffic from other ACP nodes.</t>
      <t indent="0" pn="section-11-12">Attacks from impacted ACP nodes against the ACP are more difficult than against the data plane because of the autoconfiguration of the ACP and the absence of configuration options that could be abused to change or break ACP behavior. This is excluding configuration for workaround in support of non-autonomic components.</t>
      <t indent="0" pn="section-11-13">Mitigation against compromised ACP members is possible through standard automated certificate management mechanisms including revocation and nonrenewal of short-lived certificates. In this specification, there are no further optimizations of these mechanisms defined for the ACP (but see <xref target="compromised" format="default" sectionFormat="of" derivedContent="Appendix A.9.8"/>).</t>
      <t indent="0" pn="section-11-14">Higher-layer service built using ACP certificates should not solely rely on undifferentiated group security when another model is more appropriate or more secure. For example, central network configuration relies on a security model where only a few especially trusted nodes are allowed to configure the data plane of network nodes (CLI, NETCONF). This can be done through ACP certificates by differentiating them and introducing roles. See <xref target="role-assignments" format="default" sectionFormat="of" derivedContent="Appendix A.9.5"/>.</t>
      <t indent="0" pn="section-11-15">Operators and developers of provisioning software need to be aware of how the provisioning and configuration of network devices impacts the ability of the operator and/or provisioning software to remotely access the network nodes. By using the ACP, most of the issues of provisioning/configuration causing connectivity loss of remote provisioning and configuration will be eliminated, see <xref target="self-creation" format="default" sectionFormat="of" derivedContent="Section 6"/>. Only a few exceptions, such as explicit physical interface down configuration, will be left. See <xref target="admin-down" format="default" sectionFormat="of" derivedContent="Section 9.3.2"/>.</t>
      <t indent="0" pn="section-11-16">Many details of ACP are designed with security in mind and discussed elsewhere in the document.</t>
      <t indent="0" pn="section-11-17">IPv6 addresses used by nodes in the ACP are covered as part of the node's domain certificate as described in <xref target="domcert-acpinfo" format="default" sectionFormat="of" derivedContent="Section 6.2.2"/>.  This allows even verification of ownership of a peer's IPv6 address when using a connection authenticated with the domain certificate.</t>
      <t indent="0" pn="section-11-18">The ACP acts as a security (and transport) substrate for GRASP inside the ACP such that GRASP is not only protected by attacks from the outside, but also by attacks from compromised inside attackers -- by relying not only on hop-by-hop security of ACP secure channels, but also by adding end-to-end security for those GRASP messages.  See <xref target="GRASP-substrate" format="default" sectionFormat="of" derivedContent="Section 6.9.2"/>.</t>
      <t indent="0" pn="section-11-19">ACP provides for secure, resilient zero-touch discovery of EST servers for certificate renewal.  See <xref target="domcert-maint" format="default" sectionFormat="of" derivedContent="Section 6.2.5"/>.</t>
      <t indent="0" pn="section-11-20">ACP provides extensible, autoconfiguring hop-by-hop protection of the ACP infrastructure via the negotiation of hop-by-hop secure channel protocols.  See <xref target="channel-selection" format="default" sectionFormat="of" derivedContent="Section 6.6"/>.</t>
      <t indent="0" pn="section-11-21">The ACP is designed to minimize attacks from the outside by minimizing its dependency on any non-ACP (data plane) operations and/or configuration on a node.  See also <xref target="general_addressing" format="default" sectionFormat="of" derivedContent="Section 6.13.2"/>.</t>
      <t indent="0" pn="section-11-22">In combination with BRSKI, ACP enables a resilient, fully zero-touch network solution for short-lived certificates that can be renewed or reenrolled even after unintentional expiry (e.g., due to interrupted connectivity).  See <xref target="bootstrap" format="default" sectionFormat="of" derivedContent="Appendix A.2"/>.</t>
      <t indent="0" pn="section-11-23">Because ACP secure channels can be long lived, but certificates used may be short-lived, secure channels, for example, built via IPsec, need to be terminated when peer certificates expire. See <xref target="Profiles" format="default" sectionFormat="of" derivedContent="Section 6.8.5"/>.</t>
      <t indent="0" pn="section-11-24"><xref target="acp-l2-switches-how" format="default" sectionFormat="of" derivedContent="Section 7.2"/> describes how to implement a routed
ACP topology operating on what effectively is a large bridge domain when using
L3/L2 routers that operate at L2 in the data plane. In this case, the ACP is
subject to a much higher likelihood of attacks by other nodes "stealing"
L2 addresses than in the actual routed case, especially when the bridged network
includes untrusted devices such as hosts.  This is a generic issue in L2 LANs.
L2/L3 devices often already have some form of "port security" to prohibit this.  They rely on
Neighbor Discovery Protocol (NDP) or DHCP learning which port/MAC-address and IPv6 address belong together and blocking
MAC/IPv6 source addresses from wrong ports.  This type of function needs to be
enabled to prohibit DoS attacks and specifically to protect the ACP.  Likewise, the
GRASP DULL instance needs to ensure that the IPv6 address in the locator-option matches the source IPv6 address of the DULL GRASP packet.</t>
    </section>
    <section anchor="iana" numbered="true" toc="include" removeInRFC="false" pn="section-12">
      <name slugifiedName="name-iana-considerations">IANA Considerations</name>
      <t indent="0" pn="section-12-1">This document defines the "Autonomic Control Plane".</t>
      <t indent="0" pn="section-12-2">For the ANIMA-ACP-2020 ASN.1 module, IANA has assigned 
value 97 for "id-mod-anima-acpnodename-2020" in the "SMI
Security for PKIX Module Identifier" (1.3.6.1.5.5.7.0) registry.</t>
      <t indent="0" pn="section-12-3">For the otherName / AcpNodeName, IANA has assigned value 10 for
id-on-AcpNodeName in the "SMI Security for PKIX Other Name
Forms" (1.3.6.1.5.5.7.8) registry.</t>
      <t indent="0" pn="section-12-4">IANA has registered the names in <xref target="iana-objnames" format="default" sectionFormat="of" derivedContent="Table 2"/> in 
the "GRASP Objective Names" subregistry of the "GeneRic Autonomic Signaling Protocol (GRASP) Parameters" registry.</t>
      <table anchor="iana-objnames" align="center" pn="table-2">
        <name slugifiedName="name-grasp-objective-names">GRASP Objective Names</name>
        <thead>
          <tr>
            <th align="left" colspan="1" rowspan="1">Objective Name</th>
            <th align="left" colspan="1" rowspan="1">Reference</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td align="left" colspan="1" rowspan="1">AN_ACP</td>
            <td align="left" colspan="1" rowspan="1">RFC 8994 (<xref target="discovery-grasp" format="default" sectionFormat="of" derivedContent="Section 6.4"/>)</td>
          </tr>
          <tr>
            <td align="left" colspan="1" rowspan="1">SRV.est</td>
            <td align="left" colspan="1" rowspan="1">RFC 8994 (<xref target="domcert-maint" format="default" sectionFormat="of" derivedContent="Section 6.2.5"/>)</td>
          </tr>
        </tbody>
      </table>
      <t indent="0" pn="section-12-6">Explanation: this document chooses the initially strange looking format "SRV.&lt;service-name&gt;" because these objective names would be in line with potential future simplification of the GRASP objective registry. Today, every name in the GRASP objective registry needs to be explicitly allocated by IANA. In the future, this type of objective names could be considered to be automatically registered in that registry for the same service for which a &lt;service-name&gt; is registered according to <xref target="RFC6335" format="default" sectionFormat="of" derivedContent="RFC6335"/>. This explanation is solely informational and has no impact on the requested registration.</t>
      <t indent="0" pn="section-12-7">IANA has created an "Autonomic Control Plane (ACP)" registry with
the subregistry, "ACP Address Type" (<xref target="iana-acpaddresstype" format="default" sectionFormat="of" derivedContent="Table 3"/>).</t>
      <table anchor="iana-acpaddresstype" align="center" pn="table-3">
        <name slugifiedName="name-initial-values-in-the-acp-a">Initial Values in the "ACP Address Type" Subregistry</name>
        <thead>
          <tr>
            <th align="left" colspan="1" rowspan="1">Value</th>
            <th align="left" colspan="1" rowspan="1">Description</th>
            <th align="left" colspan="1" rowspan="1">Reference</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td align="left" colspan="1" rowspan="1">0</td>
            <td align="left" colspan="1" rowspan="1">ACP Zone Addressing Sub-Scheme/ACP Manual Addressing Sub-Scheme</td>
            <td align="left" colspan="1" rowspan="1">RFC 8994 (<xref target="zone-scheme" format="default" sectionFormat="of" derivedContent="Section 6.11.3"/>, <xref target="manual-scheme" format="default" sectionFormat="of" derivedContent="Section 6.11.4"/>)</td>
          </tr>
          <tr>
            <td align="left" colspan="1" rowspan="1">1</td>
            <td align="left" colspan="1" rowspan="1">ACP Vlong Addressing Sub-Scheme</td>
            <td align="left" colspan="1" rowspan="1">RFC 8994 (<xref target="Vlong" format="default" sectionFormat="of" derivedContent="Section 6.11.5"/>)</td>
          </tr>
          <tr>
            <td align="left" colspan="1" rowspan="1">2-3</td>
            <td align="left" colspan="1" rowspan="1">Unassigned</td>
            <td align="left" colspan="1" rowspan="1"/>
          </tr>
        </tbody>
      </table>
      <t indent="0" pn="section-12-9">The values in the "ACP Address Type" subregistry are numeric values 0..3 paired with a name (string).  Future values <bcp14>MUST</bcp14> be assigned using the Standards Action policy defined by "<xref target="RFC8126" format="title" sectionFormat="of" derivedContent="Guidelines for Writing an IANA Considerations Section in RFCs"/>" <xref target="RFC8126" format="default" sectionFormat="of" derivedContent="RFC8126"/>.</t>
    </section>
  </middle>
  <back>
    <displayreference target="I-D.ietf-tls-dtls13" to="TLS-DTLS13"/>
    <displayreference target="I-D.eckert-anima-noc-autoconfig" to="NOC-AUTOCONFIG"/>
    <displayreference target="I-D.ietf-roll-applicability-template" to="ROLL-APPLICABILITY"/>
    <references pn="section-13">
      <name slugifiedName="name-references">References</name>
      <references pn="section-13.1">
        <name slugifiedName="name-normative-references">Normative References</name>
        <reference anchor="IKEV2IANA" target="https://www.iana.org/assignments/ikev2-parameters" quoteTitle="true" derivedAnchor="IKEV2IANA">
          <front>
            <title>Internet Key Exchange Version 2 (IKEv2) Parameters</title>
            <author fullname="IANA">
              <organization showOnFrontPage="true"/>
            </author>
            <date/>
          </front>
        </reference>
        <reference anchor="RFC1034" target="https://www.rfc-editor.org/info/rfc1034" quoteTitle="true" derivedAnchor="RFC1034">
          <front>
            <title>Domain names - concepts and facilities</title>
            <author initials="P.V." surname="Mockapetris" fullname="P.V. Mockapetris">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="1987" month="November"/>
            <abstract>
              <t indent="0">This RFC is the revised basic definition of The Domain Name System.  It obsoletes RFC-882.  This memo describes the domain style names and their used for host address look up and electronic mail forwarding.  It discusses the clients and servers in the domain name system and the protocol used between them.</t>
            </abstract>
          </front>
          <seriesInfo name="STD" value="13"/>
          <seriesInfo name="RFC" value="1034"/>
          <seriesInfo name="DOI" value="10.17487/RFC1034"/>
        </reference>
        <reference anchor="RFC2119" target="https://www.rfc-editor.org/info/rfc2119" quoteTitle="true" derivedAnchor="RFC2119">
          <front>
            <title>Key words for use in RFCs to Indicate Requirement Levels</title>
            <author initials="S." surname="Bradner" fullname="S. Bradner">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="1997" month="March"/>
            <abstract>
              <t indent="0">In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t>
            </abstract>
          </front>
          <seriesInfo name="BCP" value="14"/>
          <seriesInfo name="RFC" value="2119"/>
          <seriesInfo name="DOI" value="10.17487/RFC2119"/>
        </reference>
        <reference anchor="RFC3810" target="https://www.rfc-editor.org/info/rfc3810" quoteTitle="true" derivedAnchor="RFC3810">
          <front>
            <title>Multicast Listener Discovery Version 2 (MLDv2) for IPv6</title>
            <author initials="R." surname="Vida" fullname="R. Vida" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="L." surname="Costa" fullname="L. Costa" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2004" month="June"/>
            <abstract>
              <t indent="0">This document updates RFC 2710, and it specifies Version 2 of the ulticast Listener Discovery Protocol (MLDv2).  MLD is used by an IPv6 router to discover the presence of multicast listeners on directly attached links, and to discover which multicast addresses are of interest to those neighboring nodes.  MLDv2 is designed to be interoperable with MLDv1.  MLDv2 adds the ability for a node to report interest in listening to packets with a particular multicast address only from specific source addresses or from all sources except for specific source addresses.  [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="3810"/>
          <seriesInfo name="DOI" value="10.17487/RFC3810"/>
        </reference>
        <reference anchor="RFC4191" target="https://www.rfc-editor.org/info/rfc4191" quoteTitle="true" derivedAnchor="RFC4191">
          <front>
            <title>Default Router Preferences and More-Specific Routes</title>
            <author initials="R." surname="Draves" fullname="R. Draves">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="D." surname="Thaler" fullname="D. Thaler">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2005" month="November"/>
            <abstract>
              <t indent="0">This document describes an optional extension to Router Advertisement messages for communicating default router preferences and more-specific routes from routers to hosts.  This improves the ability of hosts to pick an appropriate router, especially when the host is multi-homed and the routers are on different links.  The preference values and specific routes advertised to hosts require administrative configuration; they are not automatically derived from routing tables.  [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="4191"/>
          <seriesInfo name="DOI" value="10.17487/RFC4191"/>
        </reference>
        <reference anchor="RFC4193" target="https://www.rfc-editor.org/info/rfc4193" quoteTitle="true" derivedAnchor="RFC4193">
          <front>
            <title>Unique Local IPv6 Unicast Addresses</title>
            <author initials="R." surname="Hinden" fullname="R. Hinden">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="B." surname="Haberman" fullname="B. Haberman">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2005" month="October"/>
            <abstract>
              <t indent="0">This document defines an IPv6 unicast address format that is globally unique and is intended for local communications, usually inside of a site. These addresses are not expected to be routable on the global Internet.  [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="4193"/>
          <seriesInfo name="DOI" value="10.17487/RFC4193"/>
        </reference>
        <reference anchor="RFC4291" target="https://www.rfc-editor.org/info/rfc4291" quoteTitle="true" derivedAnchor="RFC4291">
          <front>
            <title>IP Version 6 Addressing Architecture</title>
            <author initials="R." surname="Hinden" fullname="R. Hinden">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="S." surname="Deering" fullname="S. Deering">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2006" month="February"/>
            <abstract>
              <t indent="0">This specification defines the addressing architecture of the IP Version 6 (IPv6) protocol.  The document includes the IPv6 addressing model, text representations of IPv6 addresses, definition of IPv6 unicast addresses, anycast addresses, and multicast addresses, and an IPv6 node's required addresses.</t>
              <t indent="0">This document obsoletes RFC 3513, "IP Version 6 Addressing Architecture".   [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="4291"/>
          <seriesInfo name="DOI" value="10.17487/RFC4291"/>
        </reference>
        <reference anchor="RFC4301" target="https://www.rfc-editor.org/info/rfc4301" quoteTitle="true" derivedAnchor="RFC4301">
          <front>
            <title>Security Architecture for the Internet Protocol</title>
            <author initials="S." surname="Kent" fullname="S. Kent">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="K." surname="Seo" fullname="K. Seo">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2005" month="December"/>
            <abstract>
              <t indent="0">This document describes an updated version of the "Security Architecture for IP", which is designed to provide security services for traffic at the IP layer.  This document obsoletes RFC 2401 (November 1998).  [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="4301"/>
          <seriesInfo name="DOI" value="10.17487/RFC4301"/>
        </reference>
        <reference anchor="RFC4861" target="https://www.rfc-editor.org/info/rfc4861" quoteTitle="true" derivedAnchor="RFC4861">
          <front>
            <title>Neighbor Discovery for IP version 6 (IPv6)</title>
            <author initials="T." surname="Narten" fullname="T. Narten">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="E." surname="Nordmark" fullname="E. Nordmark">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="W." surname="Simpson" fullname="W. Simpson">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="H." surname="Soliman" fullname="H. Soliman">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2007" month="September"/>
            <abstract>
              <t indent="0">This document specifies the Neighbor Discovery protocol for IP Version 6.  IPv6 nodes on the same link use Neighbor Discovery to discover each other's presence, to determine each other's link-layer addresses, to find routers, and to maintain reachability information about the paths to active neighbors.  [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="4861"/>
          <seriesInfo name="DOI" value="10.17487/RFC4861"/>
        </reference>
        <reference anchor="RFC4862" target="https://www.rfc-editor.org/info/rfc4862" quoteTitle="true" derivedAnchor="RFC4862">
          <front>
            <title>IPv6 Stateless Address Autoconfiguration</title>
            <author initials="S." surname="Thomson" fullname="S. Thomson">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="T." surname="Narten" fullname="T. Narten">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="T." surname="Jinmei" fullname="T. Jinmei">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2007" month="September"/>
            <abstract>
              <t indent="0">This document specifies the steps a host takes in deciding how to autoconfigure its interfaces in IP version 6.  The autoconfiguration process includes generating a link-local address, generating global addresses via stateless address autoconfiguration, and the Duplicate Address Detection procedure to verify the uniqueness of the addresses on a link.  [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="4862"/>
          <seriesInfo name="DOI" value="10.17487/RFC4862"/>
        </reference>
        <reference anchor="RFC5234" target="https://www.rfc-editor.org/info/rfc5234" quoteTitle="true" derivedAnchor="RFC5234">
          <front>
            <title>Augmented BNF for Syntax Specifications: ABNF</title>
            <author initials="D." surname="Crocker" fullname="D. Crocker" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="P." surname="Overell" fullname="P. Overell">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2008" month="January"/>
            <abstract>
              <t indent="0">Internet technical specifications often need to define a formal syntax.  Over the years, a modified version of Backus-Naur Form (BNF), called Augmented BNF (ABNF), has been popular among many Internet specifications.  The current specification documents ABNF. It balances compactness and simplicity with reasonable representational power.  The differences between standard BNF and ABNF involve naming rules, repetition, alternatives, order-independence, and value ranges.  This specification also supplies additional rule definitions and encoding for a core lexical analyzer of the type common to several Internet specifications.  [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="STD" value="68"/>
          <seriesInfo name="RFC" value="5234"/>
          <seriesInfo name="DOI" value="10.17487/RFC5234"/>
        </reference>
        <reference anchor="RFC5246" target="https://www.rfc-editor.org/info/rfc5246" quoteTitle="true" derivedAnchor="RFC5246">
          <front>
            <title>The Transport Layer Security (TLS) Protocol Version 1.2</title>
            <author initials="T." surname="Dierks" fullname="T. Dierks">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="E." surname="Rescorla" fullname="E. Rescorla">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2008" month="August"/>
            <abstract>
              <t indent="0">This document specifies Version 1.2 of the Transport Layer Security (TLS) protocol.  The TLS protocol provides communications security over the Internet.  The protocol allows client/server applications to communicate in a way that is designed to prevent eavesdropping, tampering, or message forgery.  [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="5246"/>
          <seriesInfo name="DOI" value="10.17487/RFC5246"/>
        </reference>
        <reference anchor="RFC5280" target="https://www.rfc-editor.org/info/rfc5280" quoteTitle="true" derivedAnchor="RFC5280">
          <front>
            <title>Internet X.509 Public Key Infrastructure Certificate and Certificate Revocation List (CRL) Profile</title>
            <author initials="D." surname="Cooper" fullname="D. Cooper">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="S." surname="Santesson" fullname="S. Santesson">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="S." surname="Farrell" fullname="S. Farrell">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="S." surname="Boeyen" fullname="S. Boeyen">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="R." surname="Housley" fullname="R. Housley">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="W." surname="Polk" fullname="W. Polk">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2008" month="May"/>
            <abstract>
              <t indent="0">This memo profiles the X.509 v3 certificate and X.509 v2 certificate revocation list (CRL) for use in the Internet.  An overview of this approach and model is provided as an introduction.  The X.509 v3 certificate format is described in detail, with additional information regarding the format and semantics of Internet name forms.  Standard certificate extensions are described and two Internet-specific extensions are defined.  A set of required certificate extensions is specified.  The X.509 v2 CRL format is described in detail along with standard and Internet-specific extensions.  An algorithm for X.509 certification path validation is described.  An ASN.1 module and examples are provided in the appendices.  [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="5280"/>
          <seriesInfo name="DOI" value="10.17487/RFC5280"/>
        </reference>
        <reference anchor="RFC5954" target="https://www.rfc-editor.org/info/rfc5954" quoteTitle="true" derivedAnchor="RFC5954">
          <front>
            <title>Essential Correction for IPv6 ABNF and URI Comparison in RFC 3261</title>
            <author initials="V." surname="Gurbani" fullname="V. Gurbani" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="B." surname="Carpenter" fullname="B. Carpenter" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="B." surname="Tate" fullname="B. Tate" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2010" month="August"/>
            <abstract>
              <t indent="0">This document corrects the Augmented Backus-Naur Form (ABNF) production rule associated with generating IPv6 literals in RFC 3261. It also clarifies the rule for Uniform Resource Identifier (URI) comparison when the URIs contain textual representation of IP addresses.  [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="5954"/>
          <seriesInfo name="DOI" value="10.17487/RFC5954"/>
        </reference>
        <reference anchor="RFC6347" target="https://www.rfc-editor.org/info/rfc6347" quoteTitle="true" derivedAnchor="RFC6347">
          <front>
            <title>Datagram Transport Layer Security Version 1.2</title>
            <author initials="E." surname="Rescorla" fullname="E. Rescorla">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="N." surname="Modadugu" fullname="N. Modadugu">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2012" month="January"/>
            <abstract>
              <t indent="0">This document specifies version 1.2 of the Datagram Transport Layer Security (DTLS) protocol.  The DTLS protocol provides communications privacy for datagram protocols.  The protocol allows client/server applications to communicate in a way that is designed to prevent eavesdropping, tampering, or message forgery.  The DTLS protocol is based on the Transport Layer Security (TLS) protocol and provides equivalent security guarantees.  Datagram semantics of the underlying transport are preserved by the DTLS protocol.  This document updates DTLS 1.0 to work with TLS version 1.2.  [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="6347"/>
          <seriesInfo name="DOI" value="10.17487/RFC6347"/>
        </reference>
        <reference anchor="RFC6550" target="https://www.rfc-editor.org/info/rfc6550" quoteTitle="true" derivedAnchor="RFC6550">
          <front>
            <title>RPL: IPv6 Routing Protocol for Low-Power and Lossy Networks</title>
            <author initials="T." surname="Winter" fullname="T. Winter" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="P." surname="Thubert" fullname="P. Thubert" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="A." surname="Brandt" fullname="A. Brandt">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="J." surname="Hui" fullname="J. Hui">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="R." surname="Kelsey" fullname="R. Kelsey">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="P." surname="Levis" fullname="P. Levis">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="K." surname="Pister" fullname="K. Pister">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="R." surname="Struik" fullname="R. Struik">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="JP." surname="Vasseur" fullname="JP. Vasseur">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="R." surname="Alexander" fullname="R. Alexander">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2012" month="March"/>
            <abstract>
              <t indent="0">Low-Power and Lossy Networks (LLNs) are a class of network in which both the routers and their interconnect are constrained.  LLN routers typically operate with constraints on processing power, memory, and energy (battery power).  Their interconnects are characterized by high loss rates, low data rates, and instability.  LLNs are comprised of anything from a few dozen to thousands of routers.  Supported traffic flows include point-to-point (between devices inside the LLN), point-to-multipoint (from a central control point to a subset of devices inside the LLN), and multipoint-to-point (from devices inside the LLN towards a central control point).  This document specifies the IPv6 Routing Protocol for Low-Power and Lossy Networks (RPL), which provides a mechanism whereby multipoint-to-point traffic from devices inside the LLN towards a central control point as well as point-to-multipoint traffic from the central control point to the devices inside the LLN are supported.  Support for point-to-point traffic is also available.  [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="6550"/>
          <seriesInfo name="DOI" value="10.17487/RFC6550"/>
        </reference>
        <reference anchor="RFC6551" target="https://www.rfc-editor.org/info/rfc6551" quoteTitle="true" derivedAnchor="RFC6551">
          <front>
            <title>Routing Metrics Used for Path Calculation in Low-Power and Lossy Networks</title>
            <author initials="JP." surname="Vasseur" fullname="JP. Vasseur" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="M." surname="Kim" fullname="M. Kim" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="K." surname="Pister" fullname="K. Pister">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="N." surname="Dejean" fullname="N. Dejean">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="D." surname="Barthel" fullname="D. Barthel">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2012" month="March"/>
            <abstract>
              <t indent="0">Low-Power and Lossy Networks (LLNs) have unique characteristics compared with traditional wired and ad hoc networks that require the specification of new routing metrics and constraints.  By contrast, with typical Interior Gateway Protocol (IGP) routing metrics using hop counts or link metrics, this document specifies a set of link and node routing metrics and constraints suitable to LLNs to be used by the Routing Protocol for Low-Power and Lossy Networks (RPL).   [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="6551"/>
          <seriesInfo name="DOI" value="10.17487/RFC6551"/>
        </reference>
        <reference anchor="RFC6552" target="https://www.rfc-editor.org/info/rfc6552" quoteTitle="true" derivedAnchor="RFC6552">
          <front>
            <title>Objective Function Zero for the Routing Protocol for Low-Power and Lossy Networks (RPL)</title>
            <author initials="P." surname="Thubert" fullname="P. Thubert" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2012" month="March"/>
            <abstract>
              <t indent="0">The Routing Protocol for Low-Power and Lossy Networks (RPL) specification defines a generic Distance Vector protocol that is adapted to a variety of network types by the application of specific Objective Functions (OFs).  An OF states the outcome of the process used by a RPL node to select and optimize routes within a RPL Instance based on the Information Objects available; an OF is not an algorithm.</t>
              <t indent="0">This document specifies a basic Objective Function that relies only on the objects that are defined in the RPL and does not use any protocol extensions.  [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="6552"/>
          <seriesInfo name="DOI" value="10.17487/RFC6552"/>
        </reference>
        <reference anchor="RFC6553" target="https://www.rfc-editor.org/info/rfc6553" quoteTitle="true" derivedAnchor="RFC6553">
          <front>
            <title>The Routing Protocol for Low-Power and Lossy Networks (RPL) Option for Carrying RPL Information in Data-Plane Datagrams</title>
            <author initials="J." surname="Hui" fullname="J. Hui">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="JP." surname="Vasseur" fullname="JP. Vasseur">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2012" month="March"/>
            <abstract>
              <t indent="0">The Routing Protocol for Low-Power and Lossy Networks (RPL) includes routing information in data-plane datagrams to quickly identify inconsistencies in the routing topology.  This document describes the RPL Option for use among RPL routers to include such routing information.  [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="6553"/>
          <seriesInfo name="DOI" value="10.17487/RFC6553"/>
        </reference>
        <reference anchor="RFC7030" target="https://www.rfc-editor.org/info/rfc7030" quoteTitle="true" derivedAnchor="RFC7030">
          <front>
            <title>Enrollment over Secure Transport</title>
            <author initials="M." surname="Pritikin" fullname="M. Pritikin" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="P." surname="Yee" fullname="P. Yee" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="D." surname="Harkins" fullname="D. Harkins" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2013" month="October"/>
            <abstract>
              <t indent="0">This document profiles certificate enrollment for clients using Certificate Management over CMS (CMC) messages over a secure transport.  This profile, called Enrollment over Secure Transport (EST), describes a simple, yet functional, certificate management protocol targeting Public Key Infrastructure (PKI) clients that need to acquire client certificates and associated Certification Authority (CA) certificates.  It also supports client-generated public/private key pairs as well as key pairs generated by the CA.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="7030"/>
          <seriesInfo name="DOI" value="10.17487/RFC7030"/>
        </reference>
        <reference anchor="RFC7296" target="https://www.rfc-editor.org/info/rfc7296" quoteTitle="true" derivedAnchor="RFC7296">
          <front>
            <title>Internet Key Exchange Protocol Version 2 (IKEv2)</title>
            <author initials="C." surname="Kaufman" fullname="C. Kaufman">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="P." surname="Hoffman" fullname="P. Hoffman">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="Y." surname="Nir" fullname="Y. Nir">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="P." surname="Eronen" fullname="P. Eronen">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="T." surname="Kivinen" fullname="T. Kivinen">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2014" month="October"/>
            <abstract>
              <t indent="0">This document describes version 2 of the Internet Key Exchange (IKE) protocol.  IKE is a component of IPsec used for performing mutual authentication and establishing and maintaining Security Associations (SAs).  This document obsoletes RFC 5996, and includes all of the errata for it.  It advances IKEv2 to be an Internet Standard.</t>
            </abstract>
          </front>
          <seriesInfo name="STD" value="79"/>
          <seriesInfo name="RFC" value="7296"/>
          <seriesInfo name="DOI" value="10.17487/RFC7296"/>
        </reference>
        <reference anchor="RFC7525" target="https://www.rfc-editor.org/info/rfc7525" quoteTitle="true" derivedAnchor="RFC7525">
          <front>
            <title>Recommendations for Secure Use of Transport Layer Security (TLS) and Datagram Transport Layer Security (DTLS)</title>
            <author initials="Y." surname="Sheffer" fullname="Y. Sheffer">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="R." surname="Holz" fullname="R. Holz">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="P." surname="Saint-Andre" fullname="P. Saint-Andre">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2015" month="May"/>
            <abstract>
              <t indent="0">Transport Layer Security (TLS) and Datagram Transport Layer Security (DTLS) are widely used to protect data exchanged over application protocols such as HTTP, SMTP, IMAP, POP, SIP, and XMPP.  Over the last few years, several serious attacks on TLS have emerged, including attacks on its most commonly used cipher suites and their modes of operation.  This document provides recommendations for improving the security of deployed services that use TLS and DTLS. The recommendations are applicable to the majority of use cases.</t>
            </abstract>
          </front>
          <seriesInfo name="BCP" value="195"/>
          <seriesInfo name="RFC" value="7525"/>
          <seriesInfo name="DOI" value="10.17487/RFC7525"/>
        </reference>
        <reference anchor="RFC7676" target="https://www.rfc-editor.org/info/rfc7676" quoteTitle="true" derivedAnchor="RFC7676">
          <front>
            <title>IPv6 Support for Generic Routing Encapsulation (GRE)</title>
            <author initials="C." surname="Pignataro" fullname="C. Pignataro">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="R." surname="Bonica" fullname="R. Bonica">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="S." surname="Krishnan" fullname="S. Krishnan">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2015" month="October"/>
            <abstract>
              <t indent="0">Generic Routing Encapsulation (GRE) can be used to carry any network- layer payload protocol over any network-layer delivery protocol. Currently, GRE procedures are specified for IPv4, used as either the payload or delivery protocol.  However, GRE procedures are not specified for IPv6.</t>
              <t indent="0">This document specifies GRE procedures for IPv6, used as either the payload or delivery protocol.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="7676"/>
          <seriesInfo name="DOI" value="10.17487/RFC7676"/>
        </reference>
        <reference anchor="RFC8174" target="https://www.rfc-editor.org/info/rfc8174" quoteTitle="true" derivedAnchor="RFC8174">
          <front>
            <title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
            <author initials="B." surname="Leiba" fullname="B. Leiba">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2017" month="May"/>
            <abstract>
              <t indent="0">RFC 2119 specifies common key words that may be used in protocol  specifications.  This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the  defined special meanings.</t>
            </abstract>
          </front>
          <seriesInfo name="BCP" value="14"/>
          <seriesInfo name="RFC" value="8174"/>
          <seriesInfo name="DOI" value="10.17487/RFC8174"/>
        </reference>
        <reference anchor="RFC8221" target="https://www.rfc-editor.org/info/rfc8221" quoteTitle="true" derivedAnchor="RFC8221">
          <front>
            <title>Cryptographic Algorithm Implementation Requirements and Usage Guidance for Encapsulating Security Payload (ESP) and Authentication Header (AH)</title>
            <author initials="P." surname="Wouters" fullname="P. Wouters">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="D." surname="Migault" fullname="D. Migault">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="J." surname="Mattsson" fullname="J. Mattsson">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="Y." surname="Nir" fullname="Y. Nir">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="T." surname="Kivinen" fullname="T. Kivinen">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2017" month="October"/>
            <abstract>
              <t indent="0">This document replaces RFC 7321, "Cryptographic Algorithm Implementation         Requirements and Usage Guidance for Encapsulating Security Payload               (ESP) and Authentication Header (AH)".  The goal of this document is to enable ESP and AH to benefit from cryptography that is up to date while making IPsec interoperable.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8221"/>
          <seriesInfo name="DOI" value="10.17487/RFC8221"/>
        </reference>
        <reference anchor="RFC8247" target="https://www.rfc-editor.org/info/rfc8247" quoteTitle="true" derivedAnchor="RFC8247">
          <front>
            <title>Algorithm Implementation Requirements and Usage Guidance for the Internet Key Exchange Protocol Version 2 (IKEv2)</title>
            <author initials="Y." surname="Nir" fullname="Y. Nir">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="T." surname="Kivinen" fullname="T. Kivinen">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="P." surname="Wouters" fullname="P. Wouters">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="D." surname="Migault" fullname="D. Migault">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2017" month="September"/>
            <abstract>
              <t indent="0">The IPsec series of protocols makes use of various cryptographic algorithms in order to provide security services.  The Internet Key Exchange (IKE) protocol is used to negotiate the IPsec Security Association (IPsec SA) parameters, such as which algorithms should be used.  To ensure interoperability between different implementations, it is necessary to specify a set of algorithm implementation requirements and usage guidance to ensure that there is at least one algorithm that all implementations support.  This document updates RFC 7296 and obsoletes RFC 4307 in defining the current algorithm implementation requirements and usage guidance for IKEv2, and does minor cleaning up of the IKEv2 IANA registry.  This document does not update the algorithms used for packet encryption using IPsec Encapsulating Security Payload (ESP).</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8247"/>
          <seriesInfo name="DOI" value="10.17487/RFC8247"/>
        </reference>
        <reference anchor="RFC8422" target="https://www.rfc-editor.org/info/rfc8422" quoteTitle="true" derivedAnchor="RFC8422">
          <front>
            <title>Elliptic Curve Cryptography (ECC) Cipher Suites for Transport Layer Security (TLS) Versions 1.2 and Earlier</title>
            <author initials="Y." surname="Nir" fullname="Y. Nir">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="S." surname="Josefsson" fullname="S. Josefsson">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="M." surname="Pegourie-Gonnard" fullname="M. Pegourie-Gonnard">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2018" month="August"/>
            <abstract>
              <t indent="0">This document describes key exchange algorithms based on Elliptic Curve Cryptography (ECC) for the Transport Layer Security (TLS) protocol.  In particular, it specifies the use of Ephemeral Elliptic Curve Diffie-Hellman (ECDHE) key agreement in a TLS handshake and the use of the Elliptic Curve Digital Signature Algorithm (ECDSA) and Edwards-curve Digital Signature Algorithm (EdDSA) as authentication mechanisms.</t>
              <t indent="0">This document obsoletes RFC 4492.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8422"/>
          <seriesInfo name="DOI" value="10.17487/RFC8422"/>
        </reference>
        <reference anchor="RFC8446" target="https://www.rfc-editor.org/info/rfc8446" quoteTitle="true" derivedAnchor="RFC8446">
          <front>
            <title>The Transport Layer Security (TLS) Protocol Version 1.3</title>
            <author initials="E." surname="Rescorla" fullname="E. Rescorla">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2018" month="August"/>
            <abstract>
              <t indent="0">This document specifies version 1.3 of the Transport Layer Security (TLS) protocol.  TLS allows client/server applications to communicate over the Internet in a way that is designed to prevent eavesdropping, tampering, and message forgery.</t>
              <t indent="0">This document updates RFCs 5705 and 6066, and obsoletes RFCs 5077, 5246, and 6961.  This document also specifies new requirements for TLS 1.2 implementations.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8446"/>
          <seriesInfo name="DOI" value="10.17487/RFC8446"/>
        </reference>
        <reference anchor="RFC8610" target="https://www.rfc-editor.org/info/rfc8610" quoteTitle="true" derivedAnchor="RFC8610">
          <front>
            <title>Concise Data Definition Language (CDDL): A Notational Convention to Express Concise Binary Object Representation (CBOR) and JSON Data Structures</title>
            <author initials="H." surname="Birkholz" fullname="H. Birkholz">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="C." surname="Vigano" fullname="C. Vigano">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="C." surname="Bormann" fullname="C. Bormann">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2019" month="June"/>
            <abstract>
              <t indent="0">This document proposes a notational convention to express Concise Binary Object Representation (CBOR) data structures (RFC 7049).  Its main goal is to provide an easy and unambiguous way to express structures for protocol messages and data formats that use CBOR or JSON.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8610"/>
          <seriesInfo name="DOI" value="10.17487/RFC8610"/>
        </reference>
        <reference anchor="RFC8990" target="https://www.rfc-editor.org/info/rfc8990" quoteTitle="true" derivedAnchor="RFC8990">
          <front>
            <title>GeneRic Autonomic Signaling Protocol (GRASP)</title>
            <author initials="C" surname="Bormann" fullname="Carsten Bormann">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="B" surname="Carpenter" fullname="Brian Carpenter" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="B" surname="Liu" fullname="Bing Liu" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <date month="May" year="2021"/>
          </front>
          <seriesInfo name="RFC" value="8990"/>
          <seriesInfo name="DOI" value="10.17487/RFC8990"/>
        </reference>
        <reference anchor="RFC8995" target="https://www.rfc-editor.org/info/rfc8995" quoteTitle="true" derivedAnchor="RFC8995">
          <front>
            <title>Bootstrapping Remote Secure Key Infrastructure (BRSKI)</title>
            <author initials="M" surname="Pritikin" fullname="Max Pritikin">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="M" surname="Richardson" fullname="Michael C. Richardson">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="T" surname="Eckert" fullname="Toerless Eckert">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="M" surname="Behringer" fullname="Michael H. Behringer">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="K" surname="Watsen" fullname="Kent Watsen">
              <organization showOnFrontPage="true"/>
            </author>
            <date month="May" year="2021"/>
          </front>
          <seriesInfo name="RFC" value="8995"/>
          <seriesInfo name="DOI" value="10.17487/RFC8995"/>
        </reference>
      </references>
      <references pn="section-13.2">
        <name slugifiedName="name-informative-references">Informative References</name>
        <reference anchor="AR8021" target="https://1.ieee802.org/security/802-1ar" quoteTitle="true" derivedAnchor="AR8021">
          <front>
            <title>IEEE Standard for Local and metropolitan area networks - Secure Device Identity</title>
            <author>
              <organization showOnFrontPage="true">IEEE</organization>
            </author>
          </front>
          <seriesInfo name="IEEE" value="802.1AR"/>
        </reference>
        <reference anchor="CABFORUM" target="https://cabforum.org/baseline-requirements-certificate-contents/" quoteTitle="true" derivedAnchor="CABFORUM">
          <front>
            <title>Certificate Contents for Baseline SSL</title>
            <author>
              <organization showOnFrontPage="true">CA/Browser Forum</organization>
            </author>
            <date month="Nov" year="2019"/>
          </front>
        </reference>
        <reference anchor="FCC" target="https://docs.fcc.gov/public/attachments/DOC-367699A1.docx" quoteTitle="true" derivedAnchor="FCC">
          <front>
            <title>June 15, 2020 T-Mobile Network Outage Report</title>
            <author>
              <organization showOnFrontPage="true">FCC</organization>
            </author>
            <date year="2020" month="October"/>
          </front>
          <seriesInfo name="PS Docket No." value="20-183"/>
          <refcontent>A Report of the Public Safety and Homeland Security Bureau
	Federal Communications Commission</refcontent>
        </reference>
        <reference anchor="IEEE-1588-2008" target="https://standards.ieee.org/standard/1588-2008.html" quoteTitle="true" derivedAnchor="IEEE-1588-2008">
          <front>
            <title>IEEE Standard for a Precision Clock Synchronization Protocol for Networked Measurement and Control Systems</title>
            <author>
              <organization showOnFrontPage="true">IEEE</organization>
            </author>
            <date month="July" year="2008"/>
          </front>
          <seriesInfo name="DOI" value="10.1109/IEEESTD.2008.4579760"/>
          <seriesInfo name="IEEE" value="1588-2008"/>
        </reference>
        <reference anchor="IEEE-802.1X" target="https://standards.ieee.org/standard/802_1X-2010.html" quoteTitle="true" derivedAnchor="IEEE-802.1X">
          <front>
            <title>IEEE Standard for Local and metropolitan area networks--Port-Based Network Access Control</title>
            <author>
              <organization showOnFrontPage="true">IEEE</organization>
            </author>
            <date month="February" year="2010"/>
          </front>
          <seriesInfo name="DOI" value="10.1109/IEEESTD.2010.5409813"/>
          <seriesInfo name="IEEE" value="802.1X-2010"/>
        </reference>
        <reference anchor="LLDP" target="https://standards.ieee.org/standard/802_1AB-2016.html" quoteTitle="true" derivedAnchor="LLDP">
          <front>
            <title>IEEE Standard for Local and metropolitan area networks: Station and Media Access Control Connectivity Discovery</title>
            <author>
              <organization showOnFrontPage="true">IEEE</organization>
            </author>
            <date month="March" year="2016"/>
          </front>
          <seriesInfo name="DOI" value="10.1109/IEEESTD.2016.7433915"/>
          <seriesInfo name="IEEE" value="802.1AB-2016"/>
        </reference>
        <reference anchor="MACSEC" target="https://standards.ieee.org/standard/802_1AE-2006.html" quoteTitle="true" derivedAnchor="MACSEC">
          <front>
            <title>IEEE Standard for Local and Metropolitan Area Networks: Media Access Control (MAC) Security</title>
            <author>
              <organization showOnFrontPage="true">IEEE</organization>
            </author>
            <date month="August" year="2006"/>
          </front>
          <seriesInfo name="DOI" value="10.1109/IEEESTD.2006.245590"/>
          <seriesInfo name="IEEE" value="802.1AE-2006"/>
        </reference>
        <reference anchor="I-D.eckert-anima-noc-autoconfig" quoteTitle="true" target="https://tools.ietf.org/html/draft-eckert-anima-noc-autoconfig-00" derivedAnchor="NOC-AUTOCONFIG">
          <front>
            <title>Autoconfiguration of NOC services in ACP networks via GRASP</title>
            <author fullname="Toerless Eckert" role="editor">
              <organization showOnFrontPage="true">Futurewei Technologies Inc.</organization>
            </author>
            <date month="July" day="2" year="2018"/>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-eckert-anima-noc-autoconfig-00"/>
          <format type="TXT" target="https://www.ietf.org/archive/id/draft-eckert-anima-noc-autoconfig-00.txt"/>
          <refcontent>Work in Progress</refcontent>
        </reference>
        <reference anchor="OP-TECH" target="https://en.wikipedia.org/w/index.php?title=Operational_technology&amp;oldid=986363045" quoteTitle="true" derivedAnchor="OP-TECH">
          <front>
            <title>Operational technology</title>
            <author>
              <organization showOnFrontPage="true">Wikipedia</organization>
            </author>
            <date month="October" year="2020"/>
          </front>
        </reference>
        <reference anchor="RFC1112" target="https://www.rfc-editor.org/info/rfc1112" quoteTitle="true" derivedAnchor="RFC1112">
          <front>
            <title>Host extensions for IP multicasting</title>
            <author initials="S.E." surname="Deering" fullname="S.E. Deering">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="1989" month="August"/>
            <abstract>
              <t indent="0">This memo specifies the extensions required of a host implementation of the Internet Protocol (IP) to support multicasting.  Recommended procedure for IP multicasting in the Internet.  This RFC obsoletes RFCs 998 and 1054.  [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="STD" value="5"/>
          <seriesInfo name="RFC" value="1112"/>
          <seriesInfo name="DOI" value="10.17487/RFC1112"/>
        </reference>
        <reference anchor="RFC1492" target="https://www.rfc-editor.org/info/rfc1492" quoteTitle="true" derivedAnchor="RFC1492">
          <front>
            <title>An Access Control Protocol, Sometimes Called TACACS</title>
            <author initials="C." surname="Finseth" fullname="C. Finseth">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="1993" month="July"/>
            <abstract>
              <t indent="0">This RFC documents the extended TACACS protocol use by the Cisco Systems terminal servers.  This same protocol is used by the University of Minnesota's distributed authentication system.  This memo provides information for the Internet community.  It does not specify an Internet standard.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="1492"/>
          <seriesInfo name="DOI" value="10.17487/RFC1492"/>
        </reference>
        <reference anchor="RFC1654" target="https://www.rfc-editor.org/info/rfc1654" quoteTitle="true" derivedAnchor="RFC1654">
          <front>
            <title>A Border Gateway Protocol 4 (BGP-4)</title>
            <author initials="Y." surname="Rekhter" fullname="Y. Rekhter" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="T." surname="Li" fullname="T. Li" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="1994" month="July"/>
            <abstract>
              <t indent="0">This document defines an inter-autonomous system routing protocol for the Internet.  [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="1654"/>
          <seriesInfo name="DOI" value="10.17487/RFC1654"/>
        </reference>
        <reference anchor="RFC1918" target="https://www.rfc-editor.org/info/rfc1918" quoteTitle="true" derivedAnchor="RFC1918">
          <front>
            <title>Address Allocation for Private Internets</title>
            <author initials="Y." surname="Rekhter" fullname="Y. Rekhter">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="B." surname="Moskowitz" fullname="B. Moskowitz">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="D." surname="Karrenberg" fullname="D. Karrenberg">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="G. J." surname="de Groot" fullname="G. J. de Groot">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="E." surname="Lear" fullname="E. Lear">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="1996" month="February"/>
            <abstract>
              <t indent="0">This document describes address allocation for private internets.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t>
            </abstract>
          </front>
          <seriesInfo name="BCP" value="5"/>
          <seriesInfo name="RFC" value="1918"/>
          <seriesInfo name="DOI" value="10.17487/RFC1918"/>
        </reference>
        <reference anchor="RFC2315" target="https://www.rfc-editor.org/info/rfc2315" quoteTitle="true" derivedAnchor="RFC2315">
          <front>
            <title>PKCS #7: Cryptographic Message Syntax Version 1.5</title>
            <author initials="B." surname="Kaliski" fullname="B. Kaliski">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="1998" month="March"/>
            <abstract>
              <t indent="0">This document describes a general syntax for data that may have cryptography applied to it, such as digital signatures and digital envelopes.  This memo provides information for the Internet community. It does not specify an Internet standard of any kind.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="2315"/>
          <seriesInfo name="DOI" value="10.17487/RFC2315"/>
        </reference>
        <reference anchor="RFC2409" target="https://www.rfc-editor.org/info/rfc2409" quoteTitle="true" derivedAnchor="RFC2409">
          <front>
            <title>The Internet Key Exchange (IKE)</title>
            <author initials="D." surname="Harkins" fullname="D. Harkins">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="D." surname="Carrel" fullname="D. Carrel">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="1998" month="November"/>
            <abstract>
              <t indent="0">This memo describes a hybrid protocol. The purpose is to negotiate, and provide authenticated keying material for, security associations in a protected manner.  [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="2409"/>
          <seriesInfo name="DOI" value="10.17487/RFC2409"/>
        </reference>
        <reference anchor="RFC2865" target="https://www.rfc-editor.org/info/rfc2865" quoteTitle="true" derivedAnchor="RFC2865">
          <front>
            <title>Remote Authentication Dial In User Service (RADIUS)</title>
            <author initials="C." surname="Rigney" fullname="C. Rigney">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="S." surname="Willens" fullname="S. Willens">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="A." surname="Rubens" fullname="A. Rubens">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="W." surname="Simpson" fullname="W. Simpson">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2000" month="June"/>
            <abstract>
              <t indent="0">This document describes a protocol for carrying authentication, authorization, and configuration information between a Network Access Server which desires to authenticate its links and a shared Authentication Server.  [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="2865"/>
          <seriesInfo name="DOI" value="10.17487/RFC2865"/>
        </reference>
        <reference anchor="RFC3164" target="https://www.rfc-editor.org/info/rfc3164" quoteTitle="true" derivedAnchor="RFC3164">
          <front>
            <title>The BSD Syslog Protocol</title>
            <author initials="C." surname="Lonvick" fullname="C. Lonvick">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2001" month="August"/>
            <abstract>
              <t indent="0">This document describes the observed behavior of the syslog protocol. This memo provides information for the Internet community.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="3164"/>
          <seriesInfo name="DOI" value="10.17487/RFC3164"/>
        </reference>
        <reference anchor="RFC3315" target="https://www.rfc-editor.org/info/rfc3315" quoteTitle="true" derivedAnchor="RFC3315">
          <front>
            <title>Dynamic Host Configuration Protocol for IPv6 (DHCPv6)</title>
            <author initials="R." surname="Droms" fullname="R. Droms" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="J." surname="Bound" fullname="J. Bound">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="B." surname="Volz" fullname="B. Volz">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="T." surname="Lemon" fullname="T. Lemon">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="C." surname="Perkins" fullname="C. Perkins">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="M." surname="Carney" fullname="M. Carney">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2003" month="July"/>
          </front>
          <seriesInfo name="RFC" value="3315"/>
          <seriesInfo name="DOI" value="10.17487/RFC3315"/>
        </reference>
        <reference anchor="RFC3411" target="https://www.rfc-editor.org/info/rfc3411" quoteTitle="true" derivedAnchor="RFC3411">
          <front>
            <title>An Architecture for Describing Simple Network Management Protocol (SNMP) Management Frameworks</title>
            <author initials="D." surname="Harrington" fullname="D. Harrington">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="R." surname="Presuhn" fullname="R. Presuhn">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="B." surname="Wijnen" fullname="B. Wijnen">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2002" month="December"/>
            <abstract>
              <t indent="0">This document describes an architecture for describing Simple Network Management Protocol (SNMP) Management Frameworks.  The architecture is designed to be modular to allow the evolution of the SNMP protocol standards over time.  The major portions of the architecture are an SNMP engine containing a Message Processing Subsystem, a Security Subsystem and an Access Control Subsystem, and possibly multiple SNMP applications which provide specific functional processing of management data.  This document obsoletes RFC 2571.  [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="STD" value="62"/>
          <seriesInfo name="RFC" value="3411"/>
          <seriesInfo name="DOI" value="10.17487/RFC3411"/>
        </reference>
        <reference anchor="RFC3596" target="https://www.rfc-editor.org/info/rfc3596" quoteTitle="true" derivedAnchor="RFC3596">
          <front>
            <title>DNS Extensions to Support IP Version 6</title>
            <author initials="S." surname="Thomson" fullname="S. Thomson">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="C." surname="Huitema" fullname="C. Huitema">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="V." surname="Ksinant" fullname="V. Ksinant">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="M." surname="Souissi" fullname="M. Souissi">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2003" month="October"/>
            <abstract>
              <t indent="0">This document defines the changes that need to be made to the Domain Name System (DNS) to support hosts running IP version 6 (IPv6).  The changes include a resource record type to store an IPv6 address, a domain to support lookups based on an IPv6 address, and updated definitions of existing query types that return Internet addresses as part of additional section processing.  The extensions are designed to be compatible with existing applications and, in particular, DNS implementations themselves.  [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="STD" value="88"/>
          <seriesInfo name="RFC" value="3596"/>
          <seriesInfo name="DOI" value="10.17487/RFC3596"/>
        </reference>
        <reference anchor="RFC3954" target="https://www.rfc-editor.org/info/rfc3954" quoteTitle="true" derivedAnchor="RFC3954">
          <front>
            <title>Cisco Systems NetFlow Services Export Version 9</title>
            <author initials="B." surname="Claise" fullname="B. Claise" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2004" month="October"/>
            <abstract>
              <t indent="0">This document specifies the data export format for version 9 of Cisco Systems' NetFlow services, for use by implementations on the network elements and/or matching collector programs.  The version 9 export format uses templates to provide access to observations of IP packet flows in a flexible and extensible manner.  A template defines a collection of fields, with corresponding descriptions of structure and semantics.  This memo provides information for the Internet community.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="3954"/>
          <seriesInfo name="DOI" value="10.17487/RFC3954"/>
        </reference>
        <reference anchor="RFC4007" target="https://www.rfc-editor.org/info/rfc4007" quoteTitle="true" derivedAnchor="RFC4007">
          <front>
            <title>IPv6 Scoped Address Architecture</title>
            <author initials="S." surname="Deering" fullname="S. Deering">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="B." surname="Haberman" fullname="B. Haberman">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="T." surname="Jinmei" fullname="T. Jinmei">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="E." surname="Nordmark" fullname="E. Nordmark">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="B." surname="Zill" fullname="B. Zill">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2005" month="March"/>
            <abstract>
              <t indent="0">This document specifies the architectural characteristics, expected behavior, textual representation, and usage of IPv6 addresses of different scopes.  According to a decision in the IPv6 working group, this document intentionally avoids the syntax and usage of unicast site-local addresses.  [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="4007"/>
          <seriesInfo name="DOI" value="10.17487/RFC4007"/>
        </reference>
        <reference anchor="RFC4210" target="https://www.rfc-editor.org/info/rfc4210" quoteTitle="true" derivedAnchor="RFC4210">
          <front>
            <title>Internet X.509 Public Key Infrastructure Certificate Management Protocol (CMP)</title>
            <author initials="C." surname="Adams" fullname="C. Adams">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="S." surname="Farrell" fullname="S. Farrell">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="T." surname="Kause" fullname="T. Kause">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="T." surname="Mononen" fullname="T. Mononen">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2005" month="September"/>
            <abstract>
              <t indent="0">This document describes the Internet X.509 Public Key Infrastructure (PKI) Certificate Management Protocol (CMP).  Protocol messages are defined for X.509v3 certificate creation and management.  CMP provides on-line interactions between PKI components, including an exchange between a Certification Authority (CA) and a client system.  [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="4210"/>
          <seriesInfo name="DOI" value="10.17487/RFC4210"/>
        </reference>
        <reference anchor="RFC4364" target="https://www.rfc-editor.org/info/rfc4364" quoteTitle="true" derivedAnchor="RFC4364">
          <front>
            <title>BGP/MPLS IP Virtual Private Networks (VPNs)</title>
            <author initials="E." surname="Rosen" fullname="E. Rosen">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="Y." surname="Rekhter" fullname="Y. Rekhter">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2006" month="February"/>
            <abstract>
              <t indent="0">This document describes a method by which a Service Provider may use an IP backbone to provide IP Virtual Private Networks (VPNs) for its customers.  This method uses a "peer model", in which the customers' edge routers (CE routers) send their routes to the Service Provider's edge routers (PE routers); there is no "overlay" visible to the customer's routing algorithm, and CE routers at different sites do not peer with each other.  Data packets are tunneled through the backbone, so that the core routers do not need to know the VPN routes.  [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="4364"/>
          <seriesInfo name="DOI" value="10.17487/RFC4364"/>
        </reference>
        <reference anchor="RFC4429" target="https://www.rfc-editor.org/info/rfc4429" quoteTitle="true" derivedAnchor="RFC4429">
          <front>
            <title>Optimistic Duplicate Address Detection (DAD) for IPv6</title>
            <author initials="N." surname="Moore" fullname="N. Moore">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2006" month="April"/>
            <abstract>
              <t indent="0">Optimistic Duplicate Address Detection is an interoperable modification of the existing IPv6 Neighbor Discovery (RFC 2461) and Stateless Address Autoconfiguration (RFC 2462) processes.  The intention is to minimize address configuration delays in the successful case, to reduce disruption as far as possible in the failure case, and to remain interoperable with unmodified hosts and routers.  [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="4429"/>
          <seriesInfo name="DOI" value="10.17487/RFC4429"/>
        </reference>
        <reference anchor="RFC4541" target="https://www.rfc-editor.org/info/rfc4541" quoteTitle="true" derivedAnchor="RFC4541">
          <front>
            <title>Considerations for Internet Group Management Protocol (IGMP) and Multicast Listener Discovery (MLD) Snooping Switches</title>
            <author initials="M." surname="Christensen" fullname="M. Christensen">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="K." surname="Kimball" fullname="K. Kimball">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="F." surname="Solensky" fullname="F. Solensky">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2006" month="May"/>
            <abstract>
              <t indent="0">This memo describes the recommendations for Internet Group Management Protocol (IGMP) and Multicast Listener Discovery (MLD) snooping switches.  These are based on best current practices for IGMPv2, with further considerations for IGMPv3- and MLDv2-snooping.  Additional areas of relevance, such as link layer topology changes and Ethernet-specific encapsulation issues, are also considered.  This memo provides information for the Internet community.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="4541"/>
          <seriesInfo name="DOI" value="10.17487/RFC4541"/>
        </reference>
        <reference anchor="RFC4604" target="https://www.rfc-editor.org/info/rfc4604" quoteTitle="true" derivedAnchor="RFC4604">
          <front>
            <title>Using Internet Group Management Protocol Version 3 (IGMPv3) and Multicast Listener Discovery Protocol Version 2 (MLDv2) for Source-Specific Multicast</title>
            <author initials="H." surname="Holbrook" fullname="H. Holbrook">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="B." surname="Cain" fullname="B. Cain">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="B." surname="Haberman" fullname="B. Haberman">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2006" month="August"/>
            <abstract>
              <t indent="0">The Internet Group Management Protocol Version 3 (IGMPv3) and the Multicast Listener Discovery Protocol Version 2 (MLDv2) are protocols that allow a host to inform its neighboring routers of its desire to receive IPv4 and IPv6 multicast transmissions, respectively. Source-specific multicast (SSM) is a form of multicast in which a receiver is required to specify both the network-layer address of the source and the multicast destination address in order to receive the multicast transmission.  This document defines the notion of an "SSM-aware" router and host, and clarifies and (in some cases) modifies the behavior of IGMPv3 and MLDv2 on SSM-aware routers and hosts to accommodate source-specific multicast.  This document updates the IGMPv3 and MLDv2 specifications.  [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="4604"/>
          <seriesInfo name="DOI" value="10.17487/RFC4604"/>
        </reference>
        <reference anchor="RFC4607" target="https://www.rfc-editor.org/info/rfc4607" quoteTitle="true" derivedAnchor="RFC4607">
          <front>
            <title>Source-Specific Multicast for IP</title>
            <author initials="H." surname="Holbrook" fullname="H. Holbrook">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="B." surname="Cain" fullname="B. Cain">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2006" month="August"/>
            <abstract>
              <t indent="0">IP version 4 (IPv4) addresses in the 232/8 (232.0.0.0 to 232.255.255.255) range are designated as source-specific multicast (SSM) destination addresses and are reserved for use by source-specific applications and protocols.  For IP version 6 (IPv6), the address prefix FF3x::/32 is reserved for source-specific multicast use.  This document defines an extension to the Internet network service that applies to datagrams sent to SSM addresses and defines the host and router requirements to support this extension.  [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="4607"/>
          <seriesInfo name="DOI" value="10.17487/RFC4607"/>
        </reference>
        <reference anchor="RFC4610" target="https://www.rfc-editor.org/info/rfc4610" quoteTitle="true" derivedAnchor="RFC4610">
          <front>
            <title>Anycast-RP Using Protocol Independent Multicast (PIM)</title>
            <author initials="D." surname="Farinacci" fullname="D. Farinacci">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="Y." surname="Cai" fullname="Y. Cai">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2006" month="August"/>
            <abstract>
              <t indent="0">This specification allows Anycast-RP (Rendezvous Point) to be used inside a domain that runs Protocol Independent Multicast (PIM) only. Other multicast protocols (such as Multicast Source Discovery Protocol (MSDP), which has been used traditionally to solve this problem) are not required to support Anycast-RP.  [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="4610"/>
          <seriesInfo name="DOI" value="10.17487/RFC4610"/>
        </reference>
        <reference anchor="RFC4985" target="https://www.rfc-editor.org/info/rfc4985" quoteTitle="true" derivedAnchor="RFC4985">
          <front>
            <title>Internet X.509 Public Key Infrastructure Subject Alternative Name for Expression of Service Name</title>
            <author initials="S." surname="Santesson" fullname="S. Santesson">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2007" month="August"/>
            <abstract>
              <t indent="0">This document defines a new name form for inclusion in the otherName field of an X.509 Subject Alternative Name extension that allows a certificate subject to be associated with the service name and domain name components of a DNS Service Resource Record.  [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="4985"/>
          <seriesInfo name="DOI" value="10.17487/RFC4985"/>
        </reference>
        <reference anchor="RFC5790" target="https://www.rfc-editor.org/info/rfc5790" quoteTitle="true" derivedAnchor="RFC5790">
          <front>
            <title>Lightweight Internet Group Management Protocol Version 3 (IGMPv3) and Multicast Listener Discovery Version 2 (MLDv2) Protocols</title>
            <author initials="H." surname="Liu" fullname="H. Liu">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="W." surname="Cao" fullname="W. Cao">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="H." surname="Asaeda" fullname="H. Asaeda">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2010" month="February"/>
            <abstract>
              <t indent="0">This document describes lightweight IGMPv3 and MLDv2 protocols (LW- IGMPv3 and LW-MLDv2), which simplify the standard (full) versions of IGMPv3 and MLDv2.  The interoperability with the full versions and the previous versions of IGMP and MLD is also taken into account.   [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="5790"/>
          <seriesInfo name="DOI" value="10.17487/RFC5790"/>
        </reference>
        <reference anchor="RFC5880" target="https://www.rfc-editor.org/info/rfc5880" quoteTitle="true" derivedAnchor="RFC5880">
          <front>
            <title>Bidirectional Forwarding Detection (BFD)</title>
            <author initials="D." surname="Katz" fullname="D. Katz">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="D." surname="Ward" fullname="D. Ward">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2010" month="June"/>
            <abstract>
              <t indent="0">This document describes a protocol intended to detect faults in the bidirectional path between two forwarding engines, including interfaces, data link(s), and to the extent possible the forwarding engines themselves, with potentially very low latency.  It operates independently of media, data protocols, and routing protocols. [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="5880"/>
          <seriesInfo name="DOI" value="10.17487/RFC5880"/>
        </reference>
        <reference anchor="RFC5905" target="https://www.rfc-editor.org/info/rfc5905" quoteTitle="true" derivedAnchor="RFC5905">
          <front>
            <title>Network Time Protocol Version 4: Protocol and Algorithms Specification</title>
            <author initials="D." surname="Mills" fullname="D. Mills">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="J." surname="Martin" fullname="J. Martin" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="J." surname="Burbank" fullname="J. Burbank">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="W." surname="Kasch" fullname="W. Kasch">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2010" month="June"/>
            <abstract>
              <t indent="0">The Network Time Protocol (NTP) is widely used to synchronize computer clocks in the Internet.  This document describes NTP version 4 (NTPv4), which is backwards compatible with NTP version 3 (NTPv3), described in RFC 1305, as well as previous versions of the protocol. NTPv4 includes a modified protocol header to accommodate the Internet Protocol version 6 address family.  NTPv4 includes fundamental improvements in the mitigation and discipline algorithms that extend the potential accuracy to the tens of microseconds with modern workstations and fast LANs.  It includes a dynamic server discovery scheme, so that in many cases, specific server configuration is not required.  It corrects certain errors in the NTPv3 design and implementation and includes an optional extension mechanism.   [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="5905"/>
          <seriesInfo name="DOI" value="10.17487/RFC5905"/>
        </reference>
        <reference anchor="RFC5912" target="https://www.rfc-editor.org/info/rfc5912" quoteTitle="true" derivedAnchor="RFC5912">
          <front>
            <title>New ASN.1 Modules for the Public Key Infrastructure Using X.509 (PKIX)</title>
            <author initials="P." surname="Hoffman" fullname="P. Hoffman">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="J." surname="Schaad" fullname="J. Schaad">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2010" month="June"/>
            <abstract>
              <t indent="0">The Public Key Infrastructure using X.509 (PKIX) certificate format, and many associated formats, are expressed using ASN.1.  The current ASN.1 modules conform to the 1988 version of ASN.1.  This document updates those ASN.1 modules to conform to the 2002 version of ASN.1. There are no bits-on-the-wire changes to any of the formats; this is simply a change to the syntax.  This document is not an Internet  Standards Track specification; it is published for informational  purposes.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="5912"/>
          <seriesInfo name="DOI" value="10.17487/RFC5912"/>
        </reference>
        <reference anchor="RFC6120" target="https://www.rfc-editor.org/info/rfc6120" quoteTitle="true" derivedAnchor="RFC6120">
          <front>
            <title>Extensible Messaging and Presence Protocol (XMPP): Core</title>
            <author initials="P." surname="Saint-Andre" fullname="P. Saint-Andre">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2011" month="March"/>
            <abstract>
              <t indent="0">The Extensible Messaging and Presence Protocol (XMPP) is an application profile of the Extensible Markup Language (XML) that enables the near-real-time exchange of structured yet extensible data between any two or more network entities.  This document defines XMPP's core protocol methods: setup and teardown of XML streams, channel encryption, authentication, error handling, and communication primitives for messaging, network availability ("presence"), and request-response interactions.  This document obsoletes RFC 3920.  [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="6120"/>
          <seriesInfo name="DOI" value="10.17487/RFC6120"/>
        </reference>
        <reference anchor="RFC6241" target="https://www.rfc-editor.org/info/rfc6241" quoteTitle="true" derivedAnchor="RFC6241">
          <front>
            <title>Network Configuration Protocol (NETCONF)</title>
            <author initials="R." surname="Enns" fullname="R. Enns" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="M." surname="Bjorklund" fullname="M. Bjorklund" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="J." surname="Schoenwaelder" fullname="J. Schoenwaelder" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="A." surname="Bierman" fullname="A. Bierman" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2011" month="June"/>
            <abstract>
              <t indent="0">The Network Configuration Protocol (NETCONF) defined in this document provides mechanisms to install, manipulate, and delete the configuration of network devices.  It uses an Extensible Markup Language (XML)-based data encoding for the configuration data as well as the protocol messages.  The NETCONF protocol operations are realized as remote procedure calls (RPCs).  This document obsoletes RFC 4741.  [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="6241"/>
          <seriesInfo name="DOI" value="10.17487/RFC6241"/>
        </reference>
        <reference anchor="RFC6335" target="https://www.rfc-editor.org/info/rfc6335" quoteTitle="true" derivedAnchor="RFC6335">
          <front>
            <title>Internet Assigned Numbers Authority (IANA) Procedures for the Management of the Service Name and Transport Protocol Port Number Registry</title>
            <author initials="M." surname="Cotton" fullname="M. Cotton">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="L." surname="Eggert" fullname="L. Eggert">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="J." surname="Touch" fullname="J. Touch">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="M." surname="Westerlund" fullname="M. Westerlund">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="S." surname="Cheshire" fullname="S. Cheshire">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2011" month="August"/>
            <abstract>
              <t indent="0">This document defines the procedures that the Internet Assigned Numbers Authority (IANA) uses when handling assignment and other requests related to the Service Name and Transport Protocol Port Number registry.  It also discusses the rationale and principles behind these procedures and how they facilitate the long-term sustainability of the registry.</t>
              <t indent="0">This document updates IANA's procedures by obsoleting the previous UDP and TCP port assignment procedures defined in Sections 8 and 9.1 of the IANA Allocation Guidelines, and it updates the IANA service name and port assignment procedures for UDP-Lite, the Datagram Congestion Control Protocol (DCCP), and the Stream Control Transmission Protocol (SCTP).  It also updates the DNS SRV specification to clarify what a service name is and how it is registered.  This memo documents an Internet Best Current Practice.</t>
            </abstract>
          </front>
          <seriesInfo name="BCP" value="165"/>
          <seriesInfo name="RFC" value="6335"/>
          <seriesInfo name="DOI" value="10.17487/RFC6335"/>
        </reference>
        <reference anchor="RFC6402" target="https://www.rfc-editor.org/info/rfc6402" quoteTitle="true" derivedAnchor="RFC6402">
          <front>
            <title>Certificate Management over CMS (CMC) Updates</title>
            <author initials="J." surname="Schaad" fullname="J. Schaad">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2011" month="November"/>
            <abstract>
              <t indent="0">This document contains a set of updates to the base syntax for CMC, a Certificate Management protocol using the Cryptographic Message Syntax (CMS).  This document updates RFC 5272, RFC 5273, and RFC 5274.</t>
              <t indent="0">The new items in this document are: new controls for future work in doing server side key generation, definition of a Subject Information Access value to identify CMC servers, and the registration of a port number for TCP/IP for the CMC service to run on.  [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="6402"/>
          <seriesInfo name="DOI" value="10.17487/RFC6402"/>
        </reference>
        <reference anchor="RFC6407" target="https://www.rfc-editor.org/info/rfc6407" quoteTitle="true" derivedAnchor="RFC6407">
          <front>
            <title>The Group Domain of Interpretation</title>
            <author initials="B." surname="Weis" fullname="B. Weis">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="S." surname="Rowles" fullname="S. Rowles">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="T." surname="Hardjono" fullname="T. Hardjono">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2011" month="October"/>
            <abstract>
              <t indent="0">This document describes the Group Domain of Interpretation (GDOI) protocol specified in RFC 3547.  The GDOI provides group key management to support secure group communications according to the architecture specified in RFC 4046.  The GDOI manages group security associations, which are used by IPsec and potentially other data security protocols.  This document replaces RFC 3547.   [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="6407"/>
          <seriesInfo name="DOI" value="10.17487/RFC6407"/>
        </reference>
        <reference anchor="RFC6554" target="https://www.rfc-editor.org/info/rfc6554" quoteTitle="true" derivedAnchor="RFC6554">
          <front>
            <title>An IPv6 Routing Header for Source Routes with the Routing Protocol for Low-Power and Lossy Networks (RPL)</title>
            <author initials="J." surname="Hui" fullname="J. Hui">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="JP." surname="Vasseur" fullname="JP. Vasseur">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="D." surname="Culler" fullname="D. Culler">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="V." surname="Manral" fullname="V. Manral">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2012" month="March"/>
            <abstract>
              <t indent="0">In Low-Power and Lossy Networks (LLNs), memory constraints on routers may limit them to maintaining, at most, a few routes.  In some configurations, it is necessary to use these memory-constrained routers to deliver datagrams to nodes within the LLN.  The Routing Protocol for Low-Power and Lossy Networks (RPL) can be used in some deployments to store most, if not all, routes on one (e.g., the Directed Acyclic Graph (DAG) root) or a few routers and forward the IPv6 datagram using a source routing technique to avoid large routing tables on memory-constrained routers.  This document specifies a new IPv6 Routing header type for delivering datagrams within a RPL routing domain.  [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="6554"/>
          <seriesInfo name="DOI" value="10.17487/RFC6554"/>
        </reference>
        <reference anchor="RFC6724" target="https://www.rfc-editor.org/info/rfc6724" quoteTitle="true" derivedAnchor="RFC6724">
          <front>
            <title>Default Address Selection for Internet Protocol Version 6 (IPv6)</title>
            <author initials="D." surname="Thaler" fullname="D. Thaler" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="R." surname="Draves" fullname="R. Draves">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="A." surname="Matsumoto" fullname="A. Matsumoto">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="T." surname="Chown" fullname="T. Chown">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2012" month="September"/>
            <abstract>
              <t indent="0">This document describes two algorithms, one for source address selection and one for destination address selection.  The algorithms specify default behavior for all Internet Protocol version 6 (IPv6) implementations.  They do not override choices made by applications or upper-layer protocols, nor do they preclude the development of more advanced mechanisms for address selection.  The two algorithms share a common context, including an optional mechanism for allowing administrators to provide policy that can override the default behavior.  In dual-stack implementations, the destination address selection algorithm can consider both IPv4 and IPv6 addresses -- depending on the available source addresses, the algorithm might prefer IPv6 addresses over IPv4 addresses, or vice versa.</t>
              <t indent="0">Default address selection as defined in this specification applies to all IPv6 nodes, including both hosts and routers.  This document obsoletes RFC 3484.  [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="6724"/>
          <seriesInfo name="DOI" value="10.17487/RFC6724"/>
        </reference>
        <reference anchor="RFC6733" target="https://www.rfc-editor.org/info/rfc6733" quoteTitle="true" derivedAnchor="RFC6733">
          <front>
            <title>Diameter Base Protocol</title>
            <author initials="V." surname="Fajardo" fullname="V. Fajardo" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="J." surname="Arkko" fullname="J. Arkko">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="J." surname="Loughney" fullname="J. Loughney">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="G." surname="Zorn" fullname="G. Zorn" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2012" month="October"/>
            <abstract>
              <t indent="0">The Diameter base protocol is intended to provide an Authentication, Authorization, and Accounting (AAA) framework for applications such as network access or IP mobility in both local and roaming situations.  This document specifies the message format, transport, error reporting, accounting, and security services used by all Diameter applications.  The Diameter base protocol as defined in this document obsoletes RFC 3588 and RFC 5719, and it must be supported by all new Diameter implementations.  [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="6733"/>
          <seriesInfo name="DOI" value="10.17487/RFC6733"/>
        </reference>
        <reference anchor="RFC6762" target="https://www.rfc-editor.org/info/rfc6762" quoteTitle="true" derivedAnchor="RFC6762">
          <front>
            <title>Multicast DNS</title>
            <author initials="S." surname="Cheshire" fullname="S. Cheshire">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="M." surname="Krochmal" fullname="M. Krochmal">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2013" month="February"/>
            <abstract>
              <t indent="0">As networked devices become smaller, more portable, and more ubiquitous, the ability to operate with less configured infrastructure is increasingly important.  In particular, the ability to look up DNS resource record data types (including, but not limited to, host names) in the absence of a conventional managed DNS server is useful.</t>
              <t indent="0">Multicast DNS (mDNS) provides the ability to perform DNS-like operations on the local link in the absence of any conventional Unicast DNS server.  In addition, Multicast DNS designates a portion of the DNS namespace to be free for local use, without the need to pay any annual fee, and without the need to set up delegations or otherwise configure a conventional DNS server to answer for those names.</t>
              <t indent="0">The primary benefits of Multicast DNS names are that (i) they require little or no administration or configuration to set them up, (ii) they work when no infrastructure is present, and (iii) they work during infrastructure failures.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="6762"/>
          <seriesInfo name="DOI" value="10.17487/RFC6762"/>
        </reference>
        <reference anchor="RFC6763" target="https://www.rfc-editor.org/info/rfc6763" quoteTitle="true" derivedAnchor="RFC6763">
          <front>
            <title>DNS-Based Service Discovery</title>
            <author initials="S." surname="Cheshire" fullname="S. Cheshire">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="M." surname="Krochmal" fullname="M. Krochmal">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2013" month="February"/>
            <abstract>
              <t indent="0">This document specifies how DNS resource records are named and structured to facilitate service discovery.  Given a type of service that a client is looking for, and a domain in which the client is looking for that service, this mechanism allows clients to discover a list of named instances of that desired service, using standard DNS queries. This mechanism is referred to as DNS-based Service Discovery, or DNS-SD.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="6763"/>
          <seriesInfo name="DOI" value="10.17487/RFC6763"/>
        </reference>
        <reference anchor="RFC6824" target="https://www.rfc-editor.org/info/rfc6824" quoteTitle="true" derivedAnchor="RFC6824">
          <front>
            <title>TCP Extensions for Multipath Operation with Multiple Addresses</title>
            <author initials="A." surname="Ford" fullname="A. Ford">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="C." surname="Raiciu" fullname="C. Raiciu">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="M." surname="Handley" fullname="M. Handley">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="O." surname="Bonaventure" fullname="O. Bonaventure">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2013" month="January"/>
            <abstract>
              <t indent="0">TCP/IP communication is currently restricted to a single path per connection, yet multiple paths often exist between peers.  The simultaneous use of these multiple paths for a TCP/IP session would improve resource usage within the network and, thus, improve user experience through higher throughput and improved resilience to network failure.</t>
              <t indent="0">Multipath TCP provides the ability to simultaneously use multiple paths between peers.  This document presents a set of extensions to traditional TCP to support multipath operation.  The protocol offers the same type of service to applications as TCP (i.e., reliable bytestream), and it provides the components necessary to establish and use multiple TCP flows across potentially disjoint paths.  This  document defines an Experimental Protocol for the Internet community.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="6824"/>
          <seriesInfo name="DOI" value="10.17487/RFC6824"/>
        </reference>
        <reference anchor="RFC6830" target="https://www.rfc-editor.org/info/rfc6830" quoteTitle="true" derivedAnchor="RFC6830">
          <front>
            <title>The Locator/ID Separation Protocol (LISP)</title>
            <author initials="D." surname="Farinacci" fullname="D. Farinacci">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="V." surname="Fuller" fullname="V. Fuller">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="D." surname="Meyer" fullname="D. Meyer">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="D." surname="Lewis" fullname="D. Lewis">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2013" month="January"/>
            <abstract>
              <t indent="0">This document describes a network-layer-based protocol that enables separation of IP addresses into two new numbering spaces: Endpoint Identifiers (EIDs) and Routing Locators (RLOCs).  No changes are required to either host protocol stacks or to the "core" of the Internet infrastructure.  The Locator/ID Separation Protocol (LISP) can be incrementally deployed, without a "flag day", and offers Traffic Engineering, multihoming, and mobility benefits to early adopters, even when there are relatively few LISP-capable sites.</t>
              <t indent="0">Design and development of LISP was largely motivated by the problem statement produced by the October 2006 IAB Routing and Addressing Workshop.  This document defines an Experimental Protocol for the Internet community.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="6830"/>
          <seriesInfo name="DOI" value="10.17487/RFC6830"/>
        </reference>
        <reference anchor="RFC7011" target="https://www.rfc-editor.org/info/rfc7011" quoteTitle="true" derivedAnchor="RFC7011">
          <front>
            <title>Specification of the IP Flow Information Export (IPFIX) Protocol for the Exchange of Flow Information</title>
            <author initials="B." surname="Claise" fullname="B. Claise" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="B." surname="Trammell" fullname="B. Trammell" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="P." surname="Aitken" fullname="P. Aitken">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2013" month="September"/>
            <abstract>
              <t indent="0">This document specifies the IP Flow Information Export (IPFIX) protocol, which serves as a means for transmitting Traffic Flow information over the network.  In order to transmit Traffic Flow information from an Exporting Process to a Collecting Process, a common representation of flow data and a standard means of communicating them are required.  This document describes how the IPFIX Data and Template Records are carried over a number of transport protocols from an IPFIX Exporting Process to an IPFIX Collecting Process.  This document obsoletes RFC 5101.</t>
            </abstract>
          </front>
          <seriesInfo name="STD" value="77"/>
          <seriesInfo name="RFC" value="7011"/>
          <seriesInfo name="DOI" value="10.17487/RFC7011"/>
        </reference>
        <reference anchor="RFC7404" target="https://www.rfc-editor.org/info/rfc7404" quoteTitle="true" derivedAnchor="RFC7404">
          <front>
            <title>Using Only Link-Local Addressing inside an IPv6 Network</title>
            <author initials="M." surname="Behringer" fullname="M. Behringer">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="E." surname="Vyncke" fullname="E. Vyncke">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2014" month="November"/>
            <abstract>
              <t indent="0">In an IPv6 network, it is possible to use only link-local addresses on infrastructure links between routers.  This document discusses the advantages and disadvantages of this approach to facilitate the decision process for a given network.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="7404"/>
          <seriesInfo name="DOI" value="10.17487/RFC7404"/>
        </reference>
        <reference anchor="RFC7426" target="https://www.rfc-editor.org/info/rfc7426" quoteTitle="true" derivedAnchor="RFC7426">
          <front>
            <title>Software-Defined Networking (SDN): Layers and Architecture Terminology</title>
            <author initials="E." surname="Haleplidis" fullname="E. Haleplidis" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="K." surname="Pentikousis" fullname="K. Pentikousis" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="S." surname="Denazis" fullname="S. Denazis">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="J." surname="Hadi Salim" fullname="J. Hadi Salim">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="D." surname="Meyer" fullname="D. Meyer">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="O." surname="Koufopavlou" fullname="O. Koufopavlou">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2015" month="January"/>
            <abstract>
              <t indent="0">Software-Defined Networking (SDN) refers to a new approach for network programmability, that is, the capacity to initialize, control, change, and manage network behavior dynamically via open interfaces.  SDN emphasizes the role of software in running networks through the introduction of an abstraction for the data forwarding plane and, by doing so, separates it from the control plane.  This separation allows faster innovation cycles at both planes as experience has already shown.  However, there is increasing confusion as to what exactly SDN is, what the layer structure is in an SDN architecture, and how layers interface with each other.  This document, a product of the IRTF Software-Defined Networking Research Group (SDNRG), addresses these questions and provides a concise reference for the SDN research community based on relevant peer-reviewed literature, the RFC series, and relevant documents by other standards organizations.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="7426"/>
          <seriesInfo name="DOI" value="10.17487/RFC7426"/>
        </reference>
        <reference anchor="RFC7435" target="https://www.rfc-editor.org/info/rfc7435" quoteTitle="true" derivedAnchor="RFC7435">
          <front>
            <title>Opportunistic Security: Some Protection Most of the Time</title>
            <author initials="V." surname="Dukhovni" fullname="V. Dukhovni">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2014" month="December"/>
            <abstract>
              <t indent="0">This document defines the concept "Opportunistic Security" in the context of communications protocols.  Protocol designs based on Opportunistic Security use encryption even when authentication is not available, and use authentication when possible, thereby removing barriers to the widespread use of encryption on the Internet.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="7435"/>
          <seriesInfo name="DOI" value="10.17487/RFC7435"/>
        </reference>
        <reference anchor="RFC7575" target="https://www.rfc-editor.org/info/rfc7575" quoteTitle="true" derivedAnchor="RFC7575">
          <front>
            <title>Autonomic Networking: Definitions and Design Goals</title>
            <author initials="M." surname="Behringer" fullname="M. Behringer">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="M." surname="Pritikin" fullname="M. Pritikin">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="S." surname="Bjarnason" fullname="S. Bjarnason">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="A." surname="Clemm" fullname="A. Clemm">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="B." surname="Carpenter" fullname="B. Carpenter">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="S." surname="Jiang" fullname="S. Jiang">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="L." surname="Ciavaglia" fullname="L. Ciavaglia">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2015" month="June"/>
            <abstract>
              <t indent="0">Autonomic systems were first described in 2001.  The fundamental goal is self-management, including self-configuration, self-optimization, self-healing, and self-protection.  This is achieved by an autonomic function having minimal dependencies on human administrators or centralized management systems.  It usually implies distribution across network elements.</t>
              <t indent="0">This document defines common language and outlines design goals (and what are not design goals) for autonomic functions.  A high-level reference model illustrates how functional elements in an Autonomic Network interact.  This document is a product of the IRTF's Network Management Research Group.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="7575"/>
          <seriesInfo name="DOI" value="10.17487/RFC7575"/>
        </reference>
        <reference anchor="RFC7576" target="https://www.rfc-editor.org/info/rfc7576" quoteTitle="true" derivedAnchor="RFC7576">
          <front>
            <title>General Gap Analysis for Autonomic Networking</title>
            <author initials="S." surname="Jiang" fullname="S. Jiang">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="B." surname="Carpenter" fullname="B. Carpenter">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="M." surname="Behringer" fullname="M. Behringer">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2015" month="June"/>
            <abstract>
              <t indent="0">This document provides a problem statement and general gap analysis for an IP-based Autonomic Network that is mainly based on distributed network devices.  The document provides background by reviewing the current status of autonomic aspects of IP networks and the extent to which current network management depends on centralization and human administrators.  Finally, the document outlines the general features that are missing from current network abilities and are needed in the ideal Autonomic Network concept.</t>
              <t indent="0">This document is a product of the IRTF's Network Management Research Group.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="7576"/>
          <seriesInfo name="DOI" value="10.17487/RFC7576"/>
        </reference>
        <reference anchor="RFC7585" target="https://www.rfc-editor.org/info/rfc7585" quoteTitle="true" derivedAnchor="RFC7585">
          <front>
            <title>Dynamic Peer Discovery for RADIUS/TLS and RADIUS/DTLS Based on the Network Access Identifier (NAI)</title>
            <author initials="S." surname="Winter" fullname="S. Winter">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="M." surname="McCauley" fullname="M. McCauley">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2015" month="October"/>
            <abstract>
              <t indent="0">This document specifies a means to find authoritative RADIUS servers for a given realm.  It is used in conjunction with either RADIUS over Transport Layer Security (RADIUS/TLS) or RADIUS over Datagram Transport Layer Security (RADIUS/DTLS).</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="7585"/>
          <seriesInfo name="DOI" value="10.17487/RFC7585"/>
        </reference>
        <reference anchor="RFC7721" target="https://www.rfc-editor.org/info/rfc7721" quoteTitle="true" derivedAnchor="RFC7721">
          <front>
            <title>Security and Privacy Considerations for IPv6 Address Generation Mechanisms</title>
            <author initials="A." surname="Cooper" fullname="A. Cooper">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="F." surname="Gont" fullname="F. Gont">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="D." surname="Thaler" fullname="D. Thaler">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2016" month="March"/>
            <abstract>
              <t indent="0">This document discusses privacy and security considerations for several IPv6 address generation mechanisms, both standardized and non-standardized.  It evaluates how different mechanisms mitigate different threats and the trade-offs that implementors, developers, and users face in choosing different addresses or address generation mechanisms.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="7721"/>
          <seriesInfo name="DOI" value="10.17487/RFC7721"/>
        </reference>
        <reference anchor="RFC7761" target="https://www.rfc-editor.org/info/rfc7761" quoteTitle="true" derivedAnchor="RFC7761">
          <front>
            <title>Protocol Independent Multicast - Sparse Mode (PIM-SM): Protocol Specification (Revised)</title>
            <author initials="B." surname="Fenner" fullname="B. Fenner">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="M." surname="Handley" fullname="M. Handley">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="H." surname="Holbrook" fullname="H. Holbrook">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="I." surname="Kouvelas" fullname="I. Kouvelas">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="R." surname="Parekh" fullname="R. Parekh">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="Z." surname="Zhang" fullname="Z. Zhang">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="L." surname="Zheng" fullname="L. Zheng">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2016" month="March"/>
            <abstract>
              <t indent="0">This document specifies Protocol Independent Multicast - Sparse Mode (PIM-SM).  PIM-SM is a multicast routing protocol that can use the underlying unicast routing information base or a separate multicast-capable routing information base.  It builds unidirectional shared trees rooted at a Rendezvous Point (RP) per group, and it optionally creates shortest-path trees per source.</t>
              <t indent="0">This document obsoletes RFC 4601 by replacing it, addresses the errata filed against it, removes the optional (*,*,RP), PIM Multicast Border Router features and authentication using IPsec that lack sufficient deployment experience (see Appendix A), and moves the PIM specification to Internet Standard.</t>
            </abstract>
          </front>
          <seriesInfo name="STD" value="83"/>
          <seriesInfo name="RFC" value="7761"/>
          <seriesInfo name="DOI" value="10.17487/RFC7761"/>
        </reference>
        <reference anchor="RFC7950" target="https://www.rfc-editor.org/info/rfc7950" quoteTitle="true" derivedAnchor="RFC7950">
          <front>
            <title>The YANG 1.1 Data Modeling Language</title>
            <author initials="M." surname="Bjorklund" fullname="M. Bjorklund" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2016" month="August"/>
            <abstract>
              <t indent="0">YANG is a data modeling language used to model configuration data, state data, Remote Procedure Calls, and notifications for network management protocols.  This document describes the syntax and semantics of version 1.1 of the YANG language.  YANG version 1.1 is a maintenance release of the YANG language, addressing ambiguities and defects in the original specification.  There are a small number of backward incompatibilities from YANG version 1.  This document also specifies the YANG mappings to the Network Configuration Protocol (NETCONF).</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="7950"/>
          <seriesInfo name="DOI" value="10.17487/RFC7950"/>
        </reference>
        <reference anchor="RFC8028" target="https://www.rfc-editor.org/info/rfc8028" quoteTitle="true" derivedAnchor="RFC8028">
          <front>
            <title>First-Hop Router Selection by Hosts in a Multi-Prefix Network</title>
            <author initials="F." surname="Baker" fullname="F. Baker">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="B." surname="Carpenter" fullname="B. Carpenter">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2016" month="November"/>
            <abstract>
              <t indent="0">This document describes expected IPv6 host behavior in a scenario that has more than one prefix, each allocated by an upstream network that is assumed to implement BCP 38 ingress filtering, when the host has multiple routers to choose from.  It also applies to other scenarios such as the usage of stateful firewalls that effectively act as address-based filters.  Host behavior in choosing a first-hop router may interact with source address selection in a given implementation.  However, the selection of the source address for a packet is done before the first-hop router for that packet is chosen. Given that the network or host is, or appears to be, multihomed with multiple provider-allocated addresses, that the host has elected to use a source address in a given prefix, and that some but not all neighboring routers are advertising that prefix in their Router Advertisement Prefix Information Options, this document specifies to which router a host should present its transmission.  It updates RFC 4861.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8028"/>
          <seriesInfo name="DOI" value="10.17487/RFC8028"/>
        </reference>
        <reference anchor="RFC8126" target="https://www.rfc-editor.org/info/rfc8126" quoteTitle="true" derivedAnchor="RFC8126">
          <front>
            <title>Guidelines for Writing an IANA Considerations Section in RFCs</title>
            <author initials="M." surname="Cotton" fullname="M. Cotton">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="B." surname="Leiba" fullname="B. Leiba">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="T." surname="Narten" fullname="T. Narten">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2017" month="June"/>
            <abstract>
              <t indent="0">Many protocols make use of points of extensibility that use constants to identify various protocol parameters.  To ensure that the values in these fields do not have conflicting uses and to promote interoperability, their allocations are often coordinated by a central record keeper.  For IETF protocols, that role is filled by the Internet Assigned Numbers Authority (IANA).</t>
              <t indent="0">To make assignments in a given registry prudently, guidance describing the conditions under which new values should be assigned, as well as when and how modifications to existing values can be made, is needed.  This document defines a framework for the documentation of these guidelines by specification authors, in order to assure that the provided guidance for the IANA Considerations is clear and addresses the various issues that are likely in the operation of a registry.</t>
              <t indent="0">This is the third edition of this document; it obsoletes RFC 5226.</t>
            </abstract>
          </front>
          <seriesInfo name="BCP" value="26"/>
          <seriesInfo name="RFC" value="8126"/>
          <seriesInfo name="DOI" value="10.17487/RFC8126"/>
        </reference>
        <reference anchor="RFC8316" target="https://www.rfc-editor.org/info/rfc8316" quoteTitle="true" derivedAnchor="RFC8316">
          <front>
            <title>Autonomic Networking Use Case for Distributed Detection of Service Level Agreement (SLA) Violations</title>
            <author initials="J." surname="Nobre" fullname="J. Nobre">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="L." surname="Granville" fullname="L. Granville">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="A." surname="Clemm" fullname="A. Clemm">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="A." surname="Gonzalez Prieto" fullname="A. Gonzalez Prieto">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2018" month="February"/>
            <abstract>
              <t indent="0">This document describes an experimental use case that employs autonomic networking for the monitoring of Service Level Agreements (SLAs).  The use case is for detecting violations of SLAs in a distributed fashion.  It strives to optimize and dynamically adapt the autonomic deployment of active measurement probes in a way that maximizes the likelihood of detecting service-level violations with a given resource budget to perform active measurements.  This optimization and adaptation should be done without any outside guidance or intervention.</t>
              <t indent="0">This document is a product of the IRTF Network Management Research Group (NMRG).  It is published for informational purposes.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8316"/>
          <seriesInfo name="DOI" value="10.17487/RFC8316"/>
        </reference>
        <reference anchor="RFC8366" target="https://www.rfc-editor.org/info/rfc8366" quoteTitle="true" derivedAnchor="RFC8366">
          <front>
            <title>A Voucher Artifact for Bootstrapping Protocols</title>
            <author initials="K." surname="Watsen" fullname="K. Watsen">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="M." surname="Richardson" fullname="M. Richardson">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="M." surname="Pritikin" fullname="M. Pritikin">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="T." surname="Eckert" fullname="T. Eckert">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2018" month="May"/>
            <abstract>
              <t indent="0">This document defines a strategy to securely assign a pledge to an owner using an artifact signed, directly or indirectly, by the pledge's manufacturer.  This artifact is known as a "voucher".</t>
              <t indent="0">This document defines an artifact format as a YANG-defined JSON document that has been signed using a Cryptographic Message Syntax (CMS) structure.  Other YANG-derived formats are possible.  The voucher artifact is normally generated by the pledge's manufacturer (i.e., the Manufacturer Authorized Signing Authority (MASA)).</t>
              <t indent="0">This document only defines the voucher artifact, leaving it to other documents to describe specialized protocols for accessing it.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8366"/>
          <seriesInfo name="DOI" value="10.17487/RFC8366"/>
        </reference>
        <reference anchor="RFC8368" target="https://www.rfc-editor.org/info/rfc8368" quoteTitle="true" derivedAnchor="RFC8368">
          <front>
            <title>Using an Autonomic Control Plane for Stable Connectivity of Network Operations, Administration, and Maintenance (OAM)</title>
            <author initials="T." surname="Eckert" fullname="T. Eckert" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="M." surname="Behringer" fullname="M. Behringer">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2018" month="May"/>
            <abstract>
              <t indent="0">Operations, Administration, and Maintenance (OAM), as per BCP 161, for data networks is often subject to the problem of circular dependencies when relying on connectivity provided by the network to be managed for the OAM purposes.</t>
              <t indent="0">Provisioning while bringing up devices and networks tends to be more difficult to automate than service provisioning later on.  Changes in core network functions impacting reachability cannot be automated because of ongoing connectivity requirements for the OAM equipment itself, and widely used OAM protocols are not secure enough to be carried across the network without security concerns.</t>
              <t indent="0">This document describes how to integrate OAM processes with an autonomic control plane in order to provide stable and secure connectivity for those OAM processes.  This connectivity is not subject to the aforementioned circular dependencies.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8368"/>
          <seriesInfo name="DOI" value="10.17487/RFC8368"/>
        </reference>
        <reference anchor="RFC8398" target="https://www.rfc-editor.org/info/rfc8398" quoteTitle="true" derivedAnchor="RFC8398">
          <front>
            <title>Internationalized Email Addresses in X.509 Certificates</title>
            <author initials="A." surname="Melnikov" fullname="A. Melnikov" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="W." surname="Chuang" fullname="W. Chuang" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2018" month="May"/>
            <abstract>
              <t indent="0">This document defines a new name form for inclusion in the otherName field of an X.509 Subject Alternative Name and Issuer Alternative Name extension that allows a certificate subject to be associated with an internationalized email address.</t>
              <t indent="0">This document updates RFC 5280.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8398"/>
          <seriesInfo name="DOI" value="10.17487/RFC8398"/>
        </reference>
        <reference anchor="RFC8402" target="https://www.rfc-editor.org/info/rfc8402" quoteTitle="true" derivedAnchor="RFC8402">
          <front>
            <title>Segment Routing Architecture</title>
            <author initials="C." surname="Filsfils" fullname="C. Filsfils" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="S." surname="Previdi" fullname="S. Previdi" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="L." surname="Ginsberg" fullname="L. Ginsberg">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="B." surname="Decraene" fullname="B. Decraene">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="S." surname="Litkowski" fullname="S. Litkowski">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="R." surname="Shakir" fullname="R. Shakir">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2018" month="July"/>
            <abstract>
              <t indent="0">Segment Routing (SR) leverages the source routing paradigm.  A node steers a packet through an ordered list of instructions, called "segments".  A segment can represent any instruction, topological or service based.  A segment can have a semantic local to an SR node or global within an SR domain.  SR provides a mechanism that allows a flow to be restricted to a specific topological path, while maintaining per-flow state only at the ingress node(s) to the SR domain.</t>
              <t indent="0">SR can be directly applied to the MPLS architecture with no change to the forwarding plane.  A segment is encoded as an MPLS label.  An ordered list of segments is encoded as a stack of labels.  The segment to process is on the top of the stack.  Upon completion of a segment, the related label is popped from the stack.</t>
              <t indent="0">SR can be applied to the IPv6 architecture, with a new type of routing header.  A segment is encoded as an IPv6 address.  An ordered list of segments is encoded as an ordered list of IPv6 addresses in the routing header.  The active segment is indicated by the Destination Address (DA) of the packet.  The next active segment is indicated by a pointer in the new routing header.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8402"/>
          <seriesInfo name="DOI" value="10.17487/RFC8402"/>
        </reference>
        <reference anchor="RFC8572" target="https://www.rfc-editor.org/info/rfc8572" quoteTitle="true" derivedAnchor="RFC8572">
          <front>
            <title>Secure Zero Touch Provisioning (SZTP)</title>
            <author initials="K." surname="Watsen" fullname="K. Watsen">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="I." surname="Farrer" fullname="I. Farrer">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="M." surname="Abrahamsson" fullname="M. Abrahamsson">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2019" month="April"/>
            <abstract>
              <t indent="0">This document presents a technique to securely provision a networking device when it is booting in a factory-default state.  Variations in the solution enable it to be used on both public and private networks.  The provisioning steps are able to update the boot image, commit an initial configuration, and execute arbitrary scripts to address auxiliary needs.  The updated device is subsequently able to establish secure connections with other systems.  For instance, a device may establish NETCONF (RFC 6241) and/or RESTCONF (RFC 8040) connections with deployment-specific network management systems.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8572"/>
          <seriesInfo name="DOI" value="10.17487/RFC8572"/>
        </reference>
        <reference anchor="RFC8684" target="https://www.rfc-editor.org/info/rfc8684" quoteTitle="true" derivedAnchor="RFC8684">
          <front>
            <title>TCP Extensions for Multipath Operation with Multiple Addresses</title>
            <author initials="A." surname="Ford" fullname="A. Ford">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="C." surname="Raiciu" fullname="C. Raiciu">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="M." surname="Handley" fullname="M. Handley">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="O." surname="Bonaventure" fullname="O. Bonaventure">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="C." surname="Paasch" fullname="C. Paasch">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2020" month="March"/>
            <abstract>
              <t indent="0">TCP/IP communication is currently restricted to a single path per connection, yet multiple paths often exist between peers. The simultaneous use of these multiple paths for a TCP/IP session would improve resource usage within the network and thus improve user experience through higher throughput and improved resilience to network failure.</t>
              <t indent="0">Multipath TCP provides the ability to simultaneously use multiple paths between peers. This document presents a set of extensions to traditional TCP to support multipath operation. The protocol offers the same type of service to applications as TCP (i.e., a reliable bytestream), and it provides the components necessary to establish and use multiple TCP flows across potentially disjoint paths.</t>
              <t indent="0">This document specifies v1 of Multipath TCP, obsoleting v0 as specified in RFC 6824, through clarifications and modifications primarily driven by deployment experience.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8684"/>
          <seriesInfo name="DOI" value="10.17487/RFC8684"/>
        </reference>
        <reference anchor="RFC8739" target="https://www.rfc-editor.org/info/rfc8739" quoteTitle="true" derivedAnchor="RFC8739">
          <front>
            <title>Support for Short-Term, Automatically Renewed (STAR) Certificates in the Automated Certificate Management Environment (ACME)</title>
            <author initials="Y." surname="Sheffer" fullname="Y. Sheffer">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="D." surname="Lopez" fullname="D. Lopez">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="O." surname="Gonzalez de Dios" fullname="O. Gonzalez de Dios">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="A." surname="Pastor Perales" fullname="A. Pastor Perales">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="T." surname="Fossati" fullname="T. Fossati">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2020" month="March"/>
            <abstract>
              <t indent="0">Public key certificates need to be revoked when they are compromised, that is, when the associated private key is exposed to an unauthorized entity.  However, the revocation process is often unreliable. An alternative to revocation is issuing a sequence of certificates, each with a short validity period, and terminating the sequence upon compromise.  This memo proposes an Automated Certificate Management Environment (ACME) extension to enable the issuance of Short-Term, Automatically Renewed (STAR) X.509 certificates.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8739"/>
          <seriesInfo name="DOI" value="10.17487/RFC8739"/>
        </reference>
        <reference anchor="RFC8981" target="https://www.rfc-editor.org/info/rfc8981" quoteTitle="true" derivedAnchor="RFC8981">
          <front>
            <title>Temporary Address Extensions for Stateless Address Autoconfiguration in IPv6</title>
            <author initials="F." surname="Gont" fullname="F. Gont">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="S." surname="Krishnan" fullname="S. Krishnan">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="T." surname="Narten" fullname="T. Narten">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="R." surname="Draves" fullname="R. Draves">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2021" month="February"/>
            <abstract>
              <t indent="0">This document describes an extension to IPv6 Stateless Address Autoconfiguration that causes hosts to generate temporary addresses with randomized interface identifiers for each prefix advertised with autoconfiguration enabled. Changing addresses over time limits the window of time during which eavesdroppers and other information collectors may trivially perform address-based network-activity correlation when the same address is employed for multiple transactions by the same host. Additionally, it reduces the window of exposure of a host as being accessible via an address that becomes revealed as a result of active communication. This document obsoletes RFC 4941.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8981"/>
          <seriesInfo name="DOI" value="10.17487/RFC8981"/>
        </reference>
        <reference anchor="RFC8992" target="https://www.rfc-editor.org/info/rfc8992" quoteTitle="true" derivedAnchor="RFC8992">
          <front>
            <title>Autonomic IPv6 Edge Prefix Management in Large-Scale Networks</title>
            <author initials="S" surname="Jiang" fullname="Sheng Jiang" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="Z" surname="Du" fullname="Zongpeng Du">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="B" surname="Carpenter" fullname="Brian Carpenter">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="Q" surname="Sun" fullname="Qiong Sun">
              <organization showOnFrontPage="true"/>
            </author>
            <date month="May" year="2021"/>
          </front>
          <seriesInfo name="RFC" value="8992"/>
          <seriesInfo name="DOI" value="10.17487/RFC8992"/>
        </reference>
        <reference anchor="RFC8993" target="https://www.rfc-editor.org/info/rfc8993" quoteTitle="true" derivedAnchor="RFC8993">
          <front>
            <title>A Reference Model for Autonomic Networking</title>
            <author initials="M" surname="Behringer" fullname="Michael H. Behringer" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="B" surname="Carpenter" fullname="Brian Carpenter">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="T" surname="Eckert" fullname="Toerless Eckert">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="L" surname="Ciavaglia" fullname="Laurent Ciavaglia">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="J" surname="Nobre" fullname="Jéferson Campos Nobre">
              <organization showOnFrontPage="true"/>
            </author>
            <date month="May" year="2021"/>
          </front>
          <seriesInfo name="RFC" value="8993"/>
          <seriesInfo name="DOI" value="10.17487/RFC8993"/>
        </reference>
        <reference anchor="I-D.ietf-roll-applicability-template" quoteTitle="true" target="https://tools.ietf.org/html/draft-ietf-roll-applicability-template-09" derivedAnchor="ROLL-APPLICABILITY">
          <front>
            <title>ROLL Applicability Statement Template</title>
            <author initials="M" surname="Richardson" fullname="Michael Richardson">
              <organization showOnFrontPage="true"/>
            </author>
            <date month="May" day="3" year="2016"/>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-ietf-roll-applicability-template-09"/>
          <format type="TXT" target="https://www.ietf.org/archive/id/draft-ietf-roll-applicability-template-09.txt"/>
          <refcontent>Work in Progress</refcontent>
        </reference>
        <reference anchor="SR" target="https://en.wikipedia.org/w/index.php?title=Single-root_input/output_virtualization&amp;oldid=978867619" quoteTitle="true" derivedAnchor="SR">
          <front>
            <title>Single-root input/output virtualization</title>
            <author>
              <organization showOnFrontPage="true">Wikipedia</organization>
            </author>
            <date month="September" year="2020"/>
          </front>
        </reference>
        <reference anchor="I-D.ietf-tls-dtls13" quoteTitle="true" target="https://tools.ietf.org/html/draft-ietf-tls-dtls13-43" derivedAnchor="TLS-DTLS13">
          <front>
            <title>The Datagram Transport Layer Security (DTLS) Protocol Version 1.3</title>
            <author fullname="Eric Rescorla">
              <organization showOnFrontPage="true">RTFM, Inc.</organization>
            </author>
            <author fullname="Hannes Tschofenig">
              <organization showOnFrontPage="true">Arm Limited</organization>
            </author>
            <author fullname="Nagendra Modadugu">
              <organization showOnFrontPage="true">Google, Inc.</organization>
            </author>
            <date month="April" day="30" year="2021"/>
            <abstract>
              <t indent="0">   This document specifies Version 1.3 of the Datagram Transport Layer
   Security (DTLS) protocol.  DTLS 1.3 allows client/server applications
   to communicate over the Internet in a way that is designed to prevent
   eavesdropping, tampering, and message forgery.

   The DTLS 1.3 protocol is intentionally based on the Transport Layer
   Security (TLS) 1.3 protocol and provides equivalent security
   guarantees with the exception of order protection/non-replayability.
   Datagram semantics of the underlying transport are preserved by the
   DTLS protocol.

   This document obsoletes RFC 6347.

              </t>
            </abstract>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-ietf-tls-dtls13-43"/>
          <format type="TXT" target="https://www.ietf.org/archive/id/draft-ietf-tls-dtls13-43.txt"/>
          <refcontent>Work in Progress</refcontent>
        </reference>
        <reference anchor="X.509" target="https://www.itu.int/rec/T-REC-X.509" quoteTitle="true" derivedAnchor="X.509">
          <front>
            <title>Information technology - Open Systems Interconnection - The Directory: Public-key and attribute certificate frameworks</title>
            <seriesInfo name="ITU-T Recommendation" value="X.509"/>
            <author>
              <organization showOnFrontPage="true">ITU-T</organization>
            </author>
            <date month="October" year="2016"/>
          </front>
        </reference>
        <reference anchor="X.520" target="https://www.itu.int/rec/T-REC-X.520" quoteTitle="true" derivedAnchor="X.520">
          <front>
            <title>Information technology - Open Systems Interconnection - The Directory: Selected attribute types</title>
            <seriesInfo name="ITU-T Recommendation" value="X.520"/>
            <author>
              <organization showOnFrontPage="true">ITU-T</organization>
            </author>
            <date month="October" year="2016"/>
          </front>
        </reference>
      </references>
    </references>
    <section anchor="further" numbered="true" toc="include" removeInRFC="false" pn="section-appendix.a">
      <name slugifiedName="name-background-and-future-infor">Background and Future (Informative)</name>
      <t indent="0" pn="section-appendix.a-1">The following sections provide background information about aspects of the normative parts of this document or associated mechanisms such as BRSKI (such as why specific choices were made by the ACP), and they discuss possible future variations of the ACP.</t>
      <section anchor="address-spaces" numbered="true" toc="include" removeInRFC="false" pn="section-a.1">
        <name slugifiedName="name-acp-address-space-schemes">ACP Address Space Schemes</name>
        <t indent="0" pn="section-a.1-1">This document defines the Zone, Vlong, and Manual Addressing Sub-Schemes primarily to support address prefix assignment
via distributed, potentially uncoordinated ACP registrars as defined
in <xref target="acp-registrars" format="default" sectionFormat="of" derivedContent="Section 6.11.7"/>. This
costs a 48/46-bit identifier so that these ACP registrars can assign
nonconflicting address prefixes. This design does not leave enough
bits to simultaneously support a large number of nodes (Node-ID),
plus a large prefix of local addresses for every node, plus a
large enough set of bits to identify a routing zone. As a result,
the Zone and Vlong 8/16 Addressing Sub-Schemes attempt to support all features but via 
separate prefixes.</t>
        <t indent="0" pn="section-a.1-2">In networks that expect always to rely on a centralized PMS
as described <xref target="pms" format="default" sectionFormat="of" derivedContent="Section 9.2.5"/>, the 48/46-bits for
the Registrar-ID could be saved. Such variations of the ACP
addressing mechanisms could be introduced through future work
in different ways. If a new otherName was introduced, 
incompatible ACP variations could be created
where every design aspect of the ACP could be changed, including
all addressing choices. If instead a new addressing sub-scheme
would be defined, it could be a backward-compatible extension
of this ACP specification. Information such as the size of a
zone prefix and the length of the prefix assigned to the ACP
node itself could be encoded via the extension field of the
acp-node-name.</t>
        <t indent="0" pn="section-a.1-3">Note that an explicitly defined Manual Addressing Sub-Scheme
is always beneficial to provide an easy way for ACP nodes to prohibit
incorrect non-autonomic configuration of any non-"Manual" ACP address spaces
and therefore ensure that such non-autonomic operations will never impact 
correct routing for any non-"Manual" ACP addresses assigned via
ACP certificates.</t>
      </section>
      <section anchor="bootstrap" numbered="true" toc="include" removeInRFC="false" pn="section-a.2">
        <name slugifiedName="name-brski-bootstrap-ani">BRSKI Bootstrap (ANI)</name>
        <t indent="0" pn="section-a.2-1">BRSKI describes how nodes with an IDevID certificate can securely and zero-touch enroll with an LDevID certificate to support the ACP.  BRSKI also leverages the ACP to enable zero-touch bootstrap of new nodes across networks without any configuration requirements across the transit nodes (e.g., no DHCP, DNS forwarding, and/or server setup).  This includes otherwise unconfigured networks as described in <xref target="secure-bootstrap" format="default" sectionFormat="of" derivedContent="Section 3.2"/>.  Therefore, BRSKI in conjunction with ACP provides for a secure and zero-touch management solution for complete networks.  Nodes supporting such an infrastructure (BRSKI and ACP) are called ANI nodes (Autonomic Networking Infrastructure), see <xref target="RFC8993" format="default" sectionFormat="of" derivedContent="RFC8993"/>.  Nodes that do not support an IDevID certificate but only an (insecure) vendor-specific Unique Device Identifier (UDI) or nodes whose manufacturer does not support a MASA could use some future, reduced-security version of BRSKI.</t>
        <t indent="0" pn="section-a.2-2">When BRSKI is used to provision a domain certificate (which is called enrollment), the BRSKI registrar (acting as an enhanced EST server) must include the otherName / AcpNodeName encoded ACP address and domain name to the enrolling node (called a pledge) via its response to the pledge's EST CSR Attributes Request that is mandatory in BRSKI.</t>
        <t indent="0" pn="section-a.2-3">The CA in an ACP network must not change the otherName / AcpNodeName in the certificate.  The ACP nodes can therefore find their ACP addresses and domain using this field in the domain certificate, both for themselves as well as for other nodes.</t>
        <t indent="0" pn="section-a.2-4">The use of BRSKI in conjunction with the ACP can also help to further simplify maintenance and renewal of domain certificates.  Instead of relying on CRL, the lifetime of certificates can be made extremely small, for example, on the order of hours.  When a node fails to connect to the ACP within its certificate lifetime, it cannot connect to the ACP to renew its certificate across it (using just EST), but it can still renew its certificate as an "enrolled/expired pledge" via the BRSKI bootstrap proxy.  This requires only that the BRSKI registrar honors expired domain certificates and that the pledge attempts to perform TLS authentication for BRSKI bootstrap using its expired domain certificate before falling back to attempting to use its IDevID certificate for BRSKI.  This mechanism could also render CRLs unnecessary because the BRSKI registrar in conjunction with the CA would not renew revoked certificates -- only a "Do-not-renew" list would be necessary on the BRSKI registrar/CA.</t>
        <t indent="0" pn="section-a.2-5">In the absence of BRSKI or less secure variants thereof, the provisioning of certificates may involve one or more touches or nonstandardized automation.  Node vendors usually support the provisioning of certificates into nodes via PKCS #7 (see "<xref target="RFC2315" format="title" sectionFormat="of" derivedContent="PKCS #7: Cryptographic Message Syntax Version 1.5"/>" <xref target="RFC2315" format="default" sectionFormat="of" derivedContent="RFC2315"/>) and may support this provisioning through vendor-specific models via NETCONF ("<xref target="RFC6241" format="title" sectionFormat="of" derivedContent="Network Configuration Protocol (NETCONF)"/>" <xref target="RFC6241" format="default" sectionFormat="of" derivedContent="RFC6241"/>).  If such nodes also support NETCONF Zero Touch <xref target="RFC8572" format="default" sectionFormat="of" derivedContent="RFC8572"/>, then this can be combined with zero-touch provisioning of domain certificates into nodes.  Unless there is the equivalent integration of NETCONF connections across the ACP as there is in BRSKI, this combination would not support zero-touch bootstrap across an unconfigured network, though.</t>
      </section>
      <section anchor="discovery" numbered="true" toc="include" removeInRFC="false" pn="section-a.3">
        <name slugifiedName="name-acp-neighbor-discovery-prot">ACP Neighbor Discovery Protocol Selection</name>
        <t indent="0" pn="section-a.3-1">This section discusses why GRASP DULL was chosen as the discovery protocol
for L2-adjacent candidate ACP neighbors.  The contenders that were considered were GRASP, mDNS, and LLDP.</t>
        <section anchor="discovery-lldp" numbered="true" toc="include" removeInRFC="false" pn="section-a.3.1">
          <name slugifiedName="name-lldp">LLDP</name>
          <t indent="0" pn="section-a.3.1-1">LLDP and Cisco's earlier Cisco Discovery Protocol (CDP) are examples of L2 discovery protocols that terminate
their messages on L2 ports.  If those protocols had been chosen for ACP neighbor discovery,
ACP neighbor discovery would also have terminated on L2 ports.  This would have prevented ACP construction
over non-ACP-capable, but LLDP- or CDP-enabled L2 switches.  LLDP has extensions using different MAC
addresses, and this could have been an option for ACP discovery as well, but the additional required
IEEE standardization and definition of a profile for such a modified instance of LLDP seemed to be
more work than the benefit of "reusing the existing protocol" LLDP for this very simple purpose.</t>
        </section>
        <section anchor="discovery-mdns" numbered="true" toc="include" removeInRFC="false" pn="section-a.3.2">
          <name slugifiedName="name-mdns-and-l2-support">mDNS and L2 Support</name>
          <t indent="0" pn="section-a.3.2-1">Multicast DNS (mDNS) "<xref target="RFC6762" format="title" sectionFormat="of" derivedContent="Multicast DNS"/>" <xref target="RFC6762" format="default" sectionFormat="of" derivedContent="RFC6762"/> with DNS Service Discovery (DNS-SD) Resource Records (RRs) as defined in "<xref target="RFC6763" format="title" sectionFormat="of" derivedContent="DNS-Based Service Discovery"/>" <xref target="RFC6763" format="default" sectionFormat="of" derivedContent="RFC6763"/>
was a key contender as an ACP discovery protocol. Because it relies on link-local IP multicast,
it operates at the subnet level and is also found in L2 switches.  The authors
of this document are not aware of an mDNS implementation that terminates its mDNS messages
on L2 ports instead of on the subnet level.  If mDNS was used as the ACP discovery mechanism on
an ACP-capable (L3)/L2 switch as outlined in <xref target="acp-l2-switches" format="default" sectionFormat="of" derivedContent="Section 7"/>, then this would
be necessary to implement.  It is likely that termination of mDNS messages could only be applied to
all mDNS messages from such a port, which would then make it necessary to software forward any non-ACP-related 
mDNS messages to maintain prior non-ACP mDNS functionality.  Adding support for ACP to such
 L2 switches with mDNS could therefore create regression problems for prior mDNS functionality on those nodes.
With low performance of software forwarding in many L2 switches, this could also make the ACP
risky to support on such L2 switches.</t>
        </section>
        <section anchor="discovery-comparison" numbered="true" toc="include" removeInRFC="false" pn="section-a.3.3">
          <name slugifiedName="name-why-dull-grasp">Why DULL GRASP?</name>
          <t indent="0" pn="section-a.3.3-1">LLDP was not considered because of the above mentioned issues. mDNS was not selected
because of the above L2 mDNS considerations and because of the following additional points.</t>
          <t indent="0" pn="section-a.3.3-2">If mDNS was not already existing in a node, it would be more work to implement than
DULL GRASP, and if an existing implementation of mDNS was used, it would likely be more code
space than a separate implementation of DULL GRASP or a shared implementation of DULL
GRASP and GRASP in the ACP.</t>
        </section>
      </section>
      <section anchor="why-rpl" numbered="true" toc="include" removeInRFC="false" pn="section-a.4">
        <name slugifiedName="name-choice-of-routing-protocol-">Choice of Routing Protocol (RPL)</name>
        <t indent="0" pn="section-a.4-1">This section motivates why RPL ("IPv6 Routing Protocol for Low-Power and Lossy Networks <xref target="RFC6550" format="default" sectionFormat="of" derivedContent="RFC6550"/>) was chosen as the default (and in this specification only) routing protocol for the ACP.  The choice and above explained profile were derived from a pre-standard implementation of ACP that was successfully deployed in operational networks.</t>
        <t indent="0" pn="section-a.4-2">The requirements for routing in the ACP are the following:
        </t>
        <ul spacing="normal" bare="false" empty="false" indent="3" pn="section-a.4-3">
          <li pn="section-a.4-3.1">Self-management: the ACP must build automatically, without human
	  intervention.  Therefore, the routing protocol must also work completely
	  automatically.  RPL is a simple, self-managing protocol, which does
	  not require zones or areas; it is also self-configuring, since
	  configuration is carried as part of the protocol (see <xref target="RFC6550" sectionFormat="of" section="6.7.6" format="default" derivedLink="https://rfc-editor.org/rfc/rfc6550#section-6.7.6" derivedContent="RFC6550"/>).</li>
          <li pn="section-a.4-3.2">Scale: the ACP builds over an entire domain, which could be a large enterprise or service provider network.  The routing protocol must therefore support domains of 100,000 nodes or more, ideally without the need for zoning or separation into areas.  RPL has this scale property.  This is based on extensive use of default routing.</li>
          <li pn="section-a.4-3.3">Low resource consumption: the ACP supports traditional network infrastructure, thus runs in addition to traditional protocols.  The ACP, and specifically the routing protocol, must have low resource consumption requirements, both in terms of memory and CPU.  Specifically, at edge nodes, where memory and CPU are scarce, consumption should be minimal.  RPL builds a DODAG, where the main resource consumption is at the root of the DODAG.  The closer to the edge of the network, the less state needs to be maintained.  This adapts nicely to the typical network design.  Also, all changes below a common parent node are kept below that parent node.</li>
          <li pn="section-a.4-3.4">Support for unstructured address space: in the ANI, node addresses are identifiers, they and may not be assigned in a topological way.  Also, nodes may move topologically, without changing their address.  Therefore, the routing protocol must support completely unstructured address space.  RPL is specifically made for mobile, ad hoc networks, with no assumptions on topologically aligned addressing.</li>
          <li pn="section-a.4-3.5">Modularity: to keep the initial implementation small, yet allow for more complex methods later, it is highly desirable that the routing protocol has a simple base functionality, but can import new functional modules if needed.  RPL has this property with the concept of "Objective Function", which is a plugin to modify routing behavior.</li>
          <li anchor="extens" pn="section-a.4-3.6">Extensibility: since the ANI is a new concept, it is likely that changes to the way of operation will happen over time.  RPL allows for new Objective Functions to be introduced later, which allow changes to the way the routing protocol creates the DAGs.</li>
          <li pn="section-a.4-3.7">Multi-topology support: it may become necessary in the future to support more than one DODAG for different purposes, using different Objective Functions.  RPL allow for the creation of several parallel DODAGs should this be required.  This could be used to create different topologies to reach different roots.</li>
          <li pn="section-a.4-3.8">No need for path optimization: RPL does not necessarily compute the optimal path between any two nodes.  However, the ACP does not require this today, since it carries mainly delay-insensitive feedback loops.  It is possible that different optimization schemes will become necessary in the future, but RPL can be expanded (see <xref target="extens" format="none" sectionFormat="of" derivedContent="">"Extensibility"</xref> above).</li>
        </ul>
      </section>
      <section anchor="acp-grasp" numbered="true" toc="include" removeInRFC="false" pn="section-a.5">
        <name slugifiedName="name-acp-information-distributio">ACP Information Distribution and Multicast</name>
        <t indent="0" pn="section-a.5-1">IP multicast is not used by the ACP because the ANI itself does not require IP multicast 
        but only service announcement/discovery.  Using IP multicast for that would have made it
        necessary to develop a zero-touch autoconfiguring solution for ASM (Any Source Multicast - the original form of IP multicast defined in "<xref target="RFC1112" format="title" sectionFormat="of" derivedContent="Host extensions for IP multicasting"/>" <xref target="RFC1112" format="default" sectionFormat="of" derivedContent="RFC1112"/>), which
        would be quite complex and difficult to justify.  One aspect of complexity
        where no attempt at a solution has been described
        in IETF documents is the automatic selection of 
        routers that should be PIM Sparse Mode (PIM-SM) Rendezvous Points (RPs) (see "<xref target="RFC7761" format="title" sectionFormat="of" derivedContent="Protocol Independent Multicast - Sparse Mode (PIM-SM): Protocol Specification (Revised)"/>" <xref target="RFC7761" format="default" sectionFormat="of" derivedContent="RFC7761"/>).  The other aspects of complexity
        are the implementation of MLD ("<xref target="RFC4604" format="title" sectionFormat="of" derivedContent="Using Internet Group Management Protocol Version 3 (IGMPv3) and Multicast Listener Discovery Protocol Version 2 (MLDv2) for Source-Specific Multicast"/>" <xref target="RFC4604" format="default" sectionFormat="of" derivedContent="RFC4604"/>), PIM-SM, and Anycast-RP (see "<xref target="RFC4610" format="title" sectionFormat="of" derivedContent="Anycast-RP Using Protocol Independent Multicast (PIM)"/>" <xref target="RFC4610" format="default" sectionFormat="of" derivedContent="RFC4610"/>).  If those implementations already
        exist in a product, then they would be very likely tied to accelerated forwarding,
        which consumes hardware resources, and that in turn is difficult to justify as a cost
        of performing only service discovery.</t>
        <t indent="0" pn="section-a.5-2">Some future ASA may need high-performance, in-network data replication.  That is the case
        when the use of IP multicast is justified.  Such an ASA can then use service discovery
        from ACP GRASP, and then they do not need ASM but only SSM (see "<xref target="RFC4607" format="title" sectionFormat="of" derivedContent="Source-Specific Multicast for IP"/>" <xref target="RFC4607" format="default" sectionFormat="of" derivedContent="RFC4607"/>)
        for the IP multicast replication.  SSM itself can simply be enabled in the data plane
        (or even in an update to the ACP) without any configuration other than just enabling it
        on all nodes, and it only requires a simpler version of MLD (see "<xref target="RFC5790" format="title" sectionFormat="of" derivedContent="Lightweight Internet Group Management Protocol Version 3 (IGMPv3) and Multicast Listener Discovery Version 2 (MLDv2) Protocols"/>" <xref target="RFC5790" format="default" sectionFormat="of" derivedContent="RFC5790"/>).</t>
        <t indent="0" pn="section-a.5-3">IGP routing protocols based on LSP (Link State Protocol) typically have a mechanism to
        flood information, and such a mechanism could be used to flood GRASP objectives by
        defining them to be information of that IGP.  This would be a possible optimization
        in future variations of the ACP that do use an LSP-based routing protocol.  Note though that 
        such a mechanism would not work easily for GRASP M_DISCOVERY messages, which are intelligently
        (constrained) flooded not across the whole ACP, but only up to a node where a responder is found.
        We expect that many future services in the ASA will have only a few consuming ASAs, and for those cases,
        the M_DISCOVERY method is more efficient than flooding across the whole domain.</t>
        <t indent="0" pn="section-a.5-4">Because the ACP uses RPL, one desirable future extension is to use RPL's existing 
        notion of DODAG, which are loop-free distribution trees, to make GRASP flooding more efficient
        both for M_FLOOD and M_DISCOVERY. See <xref target="ACP_interfaces" format="default" sectionFormat="of" derivedContent="Section 6.13.5"/> for how this will be
        specifically beneficial when using NBMA interfaces.  This
        is not currently specified in this document because it is not quite clear yet what
        exactly the implications are to make GRASP flooding depend on RPL DODAG convergence
        and how difficult it would be to let GRASP flooding access the DODAG information.</t>
      </section>
      <section anchor="domain-usage" numbered="true" toc="include" removeInRFC="false" pn="section-a.6">
        <name slugifiedName="name-cas-domains-and-routing-sub">CAs, Domains, and Routing Subdomains</name>
        <t indent="0" pn="section-a.6-1">There is a wide range of setting up different ACP solutions by appropriately using CAs and the domain and rsub elements in the acp-node-name in the domain certificate.  We summarize these options here as they have been explained in different parts of the document and discuss possible and desirable extensions.</t>
        <t indent="0" pn="section-a.6-2">An ACP domain is the set of all ACP nodes that can authenticate each other as belonging to the same ACP network using the ACP domain membership check (<xref target="certcheck" format="default" sectionFormat="of" derivedContent="Section 6.2.3"/>).  GRASP inside the ACP is run across all transitively connected ACP nodes in a domain.</t>
        <t indent="0" pn="section-a.6-3">The rsub element in the acp-node-name permits the use of addresses from different ULA prefixes.  One use case is the creation of multiple physical networks that initially may be separated with one ACP domain but different routing subdomains, so that all nodes can mutually trust their ACP certificates (not depending on rsub) and so that they could connect later together into a contiguous ACP network.</t>
        <t indent="0" pn="section-a.6-4">One instance of such a use case is an ACP for regions interconnected via a non-ACP enabled core, for example, due to the absence of product support for ACP on the core nodes. ACP connect configurations as defined in this document can be used to extend and interconnect those ACP islands to the NOC and merge them into a single ACP when later that product support gap is closed.</t>
        <t indent="0" pn="section-a.6-5">Note that RPL scales very well.  It is not necessary to use multiple routing subdomains to scale ACP domains in a way that would be required if other routing protocols where used.  They exist only as options for the above mentioned reasons.</t>
        <t indent="0" pn="section-a.6-6"> If ACP domains need to be created that are not allowed to connect to each other by default, simply use different domain elements in the acp-node-name.  These domain elements can be arbitrary, including subdomains of one another: domains "example.com" and "research.example.com" are separate domains if both are domain elements in the acp-node-name of certificates.</t>
        <t indent="0" pn="section-a.6-7">It is not necessary to have a separate CA for different ACP domains: an operator can use a single CA to sign certificates for multiple ACP domains that are not allowed to connect to each other because the checks for ACP adjacencies include the comparison of the domain part.</t>
        <t indent="0" pn="section-a.6-8">If multiple, independent networks chose the same domain name but had their own CAs, these would not form a single ACP domain because of CA mismatch.  Therefore, there is no problem in choosing domain names that are potentially also used by others.  Nevertheless, it is highly recommended to use domain names that have a high probability of being unique.  It is recommended to use domain names that start with a DNS domain name owned by the assigning organization and unique within it, for example, "acp.example.com" if you own "example.com".</t>
      </section>
      <section anchor="intent" numbered="true" toc="include" removeInRFC="false" pn="section-a.7">
        <name slugifiedName="name-intent-for-the-acp">Intent for the ACP</name>
        <t indent="0" pn="section-a.7-1">Intent is the architecture component of Autonomic Networks according to
 <xref target="RFC8993" format="default" sectionFormat="of" derivedContent="RFC8993"/> that allows operators to issue policies to
the network.  Its applicability for use is quite  flexible and freeform, with potential applications including
policies flooded across ACP GRASP and interpreted on every ACP node.</t>
        <t indent="0" pn="section-a.7-2">One concern for future definitions of Intent solutions is the problem of circular dependencies
when expressing Intent policies about the ACP itself.</t>
        <t indent="0" pn="section-a.7-3">For example, Intent could indicate the desire to build an ACP across all domains
that have a common parent domain (without relying on the rsub/routing-subdomain
solution defined in this document): ACP nodes with the domains "example.com",
 "access.example.com", "core.example.com", and "city.core.example.com"
should all establish one single ACP.</t>
        <t indent="0" pn="section-a.7-4">If each domain has its own source of Intent, then the Intent would simply have to
allow adding the peer domain's TA and domain names to the parameters for the ACP domain membership check
(<xref target="certcheck" format="default" sectionFormat="of" derivedContent="Section 6.2.3"/>) so that nodes from those other domains are accepted as ACP peers.</t>
        <t indent="0" pn="section-a.7-5">If this Intent was to be originated only from one domain, it could likely not be made
to work because the other domains will not build any ACP connections amongst each other,
whether they use the same or different CA due to the ACP domain membership check.</t>
        <t indent="0" pn="section-a.7-6">If the  domains use the same CA, one could change the ACP setup to permit the
ACP to be established between two ACP nodes with different acp-domain-names, but only
 for the purpose of disseminating limited information,
such as Intent, but not to set up full ACP connectivity, specifically not RPL routing
and passing of arbitrary GRASP information, unless the Intent policies permit this
 to happen across domain boundaries.</t>
        <t indent="0" pn="section-a.7-7">This type of approach, where the ACP first allows Intent to operate and only then
sets up the rest of ACP connectivity based on Intent policy, could also be used to
enable Intent policies that would limit functionality across the ACP inside a domain,
as long as no policy would disturb the distribution of Intent, for example, to limit
reachability across the ACP to certain types of nodes or locations of nodes.</t>
      </section>
      <section anchor="reuse-acp" numbered="true" toc="include" removeInRFC="false" pn="section-a.8">
        <name slugifiedName="name-adopting-acp-concepts-for-o">Adopting ACP Concepts for Other Environments</name>
        <t indent="0" pn="section-a.8-1">The ACP as specified in this document is very explicit about the choice of options to
allow interoperable implementations.  The choices made may not be the best for all environments,
but the concepts used by the ACP can be used to build derived solutions.</t>
        <t indent="0" pn="section-a.8-2">The ACP specifies the use of ULA and the derivation of its prefix from the domain name
so that no address allocation is required to deploy the ACP. The ACP will equally
work using any other /48 IPv6 prefix and not ULA.  This prefix could simply be a configuration 
of the ACP registrars (for example, when using BRSKI) to enroll the domain certificates, instead
of the ACP registrar deriving the /48 ULA prefix from the AN domain name.</t>
        <t indent="0" pn="section-a.8-3">Some solutions may already have an auto-addressing scheme, for example, derived from 
existing, unique device identifiers (e.g., MAC addresses).  In those cases, it may not be desirable
to assign addresses to devices via the ACP address information field in the way described
in this document.  The certificate may simply serve to identify the ACP domain, 
and the address field could be omitted. The only fix required in the remaining
way the ACP operates is to define another element in the domain certificate for
the two peers to decide who is the Decider and who is the Follower during secure channel building. 
Note though that future work may leverage the ACP address to authenticate "ownership"
of the address by the device.  If the ACP address used by a device is derived from some preexisting,
permanent local ID (such as MAC address), then it would be useful
to store that local ID also in the certificate.</t>
        <t indent="0" pn="section-a.8-4">The ACP is defined as a separate VRF because it intends to support well-managed
networks with a wide variety of configurations.  Therefore, reliable,
configuration-indestructible connectivity cannot be achieved from the data plane itself.
In solutions where all functions that impact transit connectivity are fully automated (including security),
indestructible, and resilient, it would be possible to eliminate the need for the ACP to be a separate VRF.
Consider the most simple example system in which there is no separate data plane, but the ACP is the data plane.  Add
BRSKI, and it becomes a fully Autonomic Network -- except that it does not support
automatic addressing for user equipment.  This gap can then be closed, for example, by adding a
solution derived from "<xref target="RFC8992" format="title" sectionFormat="of" derivedContent="Autonomic IPv6 Edge Prefix Management in Large-Scale Networks"/>" <xref target="RFC8992" format="default" sectionFormat="of" derivedContent="RFC8992"/>.</t>
        <t indent="0" pn="section-a.8-5">TCP/TLS as the protocols to provide reliability and security to GRASP in the ACP
may not be the preferred choice in constrained networks. For example, CoAP/DTLS
(Constrained Application Protocol) may be preferred where they are already used, 
which would reduce the additional code space footprint for the ACP on
those devices. Hop-by-hop reliability for ACP GRASP messages could be made
to support protocols like DTLS by adding the same type of
negotiation as defined in this document for ACP secure channel protocol negotiation.
In future ACP extensions meant to better support constrained devices, 
end-to-end GRASP connections can be made to select their transport protocol
by indicating the supported transport protocols (e.g. TLS/DTLS) via GRASP parameters
of the GRASP objective through which the transport endpoint is discovered.</t>
        <t indent="0" pn="section-a.8-6">RPL, the routing protocol used for the ACP, explicitly does not optimize
for shortest paths and fastest convergence.  Variations of the ACP may want to use a
different routing protocol or introduce more advanced RPL profiles.</t>
        <t indent="0" pn="section-a.8-7">Variations such as which routing protocol to use, or whether to instantiate an ACP
in a VRF or (as suggested above) as the actual data plane, can be automatically chosen
in implementations built to support multiple options by deriving them from future parameters
in the certificate.  Parameters in certificates should be limited to those that would
not need to be changed more often than that certificates would need to be updated,
or it should be ensured that these parameters can be provisioned before the
variation of an ACP is activated in a node.  Using BRSKI, this could be done, for example,
as additional follow-up signaling directly after the certificate enrollment, still 
leveraging the BRSKI TLS connection and therefore not introducing any additional
connectivity requirements.</t>
        <t indent="0" pn="section-a.8-8">Last but not least, secure channel protocols including their encapsulations are
easily added to ACP solutions.  ACP hop-by-hop network-layer secure channels could
also be replaced by end-to-end security plus other means for infrastructure
protection.  Any future network OAM should always use end-to-end security. By
leveraging the domain certificates, it would not be dependent on security
provided by ACP secure channels.</t>
      </section>
      <section anchor="futures" numbered="true" toc="include" removeInRFC="false" pn="section-a.9">
        <name slugifiedName="name-further-future-options">Further (Future) Options</name>
        <section anchor="auto-aggregation" numbered="true" toc="include" removeInRFC="false" pn="section-a.9.1">
          <name slugifiedName="name-auto-aggregation-of-routes">Auto-Aggregation of Routes</name>
          <t indent="0" pn="section-a.9.1-1">Routing in the ACP according to this specification only leverages the
standard RPL mechanism of route optimization, e.g., keeping only the routes that
are not towards the RPL root. This is known to scale to networks with 20,000 or more nodes.
There is no auto-aggregation of routes for /48 ULA prefixes (when using rsub
in the acp-node-name) and/or Zone-ID based prefixes.</t>
          <t indent="0" pn="section-a.9.1-2">Automatic assignment of Zone-ID and auto-aggregation of routes could
be achieved, for example, by configuring zone boundaries, announcing via GRASP
into the zones the zone parameters (Zone-ID and /48 ULA prefix), and auto-aggregating
routes on the zone boundaries. Nodes would assign their Zone-ID and potentially
even the /48 prefix based on the GRASP announcements.</t>
        </section>
        <section anchor="dp-dependency" numbered="true" toc="include" removeInRFC="false" pn="section-a.9.2">
          <name slugifiedName="name-more-options-for-avoiding-i">More Options for Avoiding IPv6 Data Plane Dependencies</name>
          <t indent="0" pn="section-a.9.2-1">As described in <xref target="general_addressing" format="default" sectionFormat="of" derivedContent="Section 6.13.2"/>, the ACP depends on the
data plane to establish IPv6 link-local addressing on interfaces. Using a separate
MAC address for the ACP allows the full isolation of the ACP from the data plane in
a way that is compatible with this specification. It is also an ideal option
when using single-root input/output virtualization (SR-IOV, see 
<xref target="SR" format="default" sectionFormat="of" derivedContent="SR"/>)
 in an implementation to isolate the ACP because
different SR-IOV interfaces use different MAC addresses.</t>
          <t indent="0" pn="section-a.9.2-2">When additional MAC address(es) are not available, separation of the
ACP could be done at different demux points. The same subnet interface could have
a separate IPv6 interface for the ACP and data plane and therefore separate
link-local addresses for both, where the ACP interface is not configurable on
the data plane. This too would be compatible with this specification and not
impact interoperability.</t>
          <t indent="0" pn="section-a.9.2-3">An option that would require additional specification is to use a different
Ethertype from 0x86DD (IPv6) to encapsulate IPv6 packets for the ACP. This would
be a similar approach as used for IP authentication packets in <xref target="IEEE-802.1X" format="default" sectionFormat="of" derivedContent="IEEE-802.1X"/>,
which uses the Extensible Authentication Protocol over Local Area Network (EAPoL) 
Ethertype (0x88A2).</t>
          <t indent="0" pn="section-a.9.2-4">Note that in the case of ANI nodes, all of the above considerations equally
apply to the encapsulation of BRSKI packets including GRASP used for BRSKI.</t>
        </section>
        <section anchor="acp-api" numbered="true" toc="include" removeInRFC="false" pn="section-a.9.3">
          <name slugifiedName="name-acp-apis-and-operational-mo">ACP APIs and Operational Models (YANG)</name>
          <t indent="0" pn="section-a.9.3-1">Future work should define a YANG data model <xref target="RFC7950" format="default" sectionFormat="of" derivedContent="RFC7950"/> 
and/or node-internal APIs to monitor and manage the ACP.</t>
          <t indent="0" pn="section-a.9.3-2">Support for the ACP adjacency table (<xref target="adj-table" format="default" sectionFormat="of" derivedContent="Section 6.3"/>) and ACP GRASP needs to
be included in such model and/or API.</t>
        </section>
        <section anchor="future-rpl" numbered="true" toc="include" removeInRFC="false" pn="section-a.9.4">
          <name slugifiedName="name-rpl-enhancements">RPL Enhancements</name>
          <figure anchor="dual-noc" align="left" suppress-title="false" pn="figure-17">
            <name slugifiedName="name-dual-noc">Dual NOC</name>
            <artwork name="" type="" align="left" alt="" pn="section-a.9.4-1.1">

   ..... USA ......              ..... Europe ......

        NOC1                           NOC2
         |                              |
         |            metric 100        |
       ACP1 --------------------------- ACP2  .
         |                              |     . WAN
         | metric 10          metric 20 |     . Core
         |                              |     . 
       ACP3 --------------------------- ACP4  .
         |            metric 100        |
         |                              |     .
         |                              |     . Sites
       ACP10                           ACP11  .
      
</artwork>
          </figure>
          <t indent="0" pn="section-a.9.4-2">The profile for RPL specified in this document builds only one spanning-tree path set to a root, typically a registrar in one NOC. In the presence of multiple NOCs, routing toward the non-root NOCs may be suboptimal. <xref target="dual-noc" format="default" sectionFormat="of" derivedContent="Figure 17"/> shows an extreme example. Assuming that node ACP1 becomes the RPL root, traffic between ACP11 and NOC2 will pass through ACP4-ACP3-ACP1-ACP2 instead of ACP4-ACP2 because the RPL-calculated DODAG and routes are shortest paths towards the RPL root.</t>
          <t indent="0" pn="section-a.9.4-3">To overcome these limitations, extensions and/or modifications to the RPL profile can optimize for multiple NOCs.  This requires utilizing data plane artifacts, including IP-in-IP encapsulation/decapsulation on ACP routers and processing of IPv6 RPI headers.  Alternatively, (Src,Dst) routing table entries could be used.</t>
          <t indent="0" pn="section-a.9.4-4">Flooding of ACP GRASP messages can be further constrained and therefore optimized by flooding only via links that are part of the RPL DODAG.</t>
        </section>
        <section anchor="role-assignments" numbered="true" toc="include" removeInRFC="false" pn="section-a.9.5">
          <name slugifiedName="name-role-assignments">Role Assignments</name>
          <t indent="0" pn="section-a.9.5-1">ACP connect is an explicit mechanism to "leak" ACP traffic explicitly (for example,
in a NOC). It is therefore also a possible security gap when it is easy to enable ACP
 connect on arbitrary compromised ACP nodes.</t>
          <t indent="0" pn="section-a.9.5-2">One simple solution is to define an extension in the ACP certificate's ACP information
field indicating the permission for ACP connect to be configured on that ACP node. This
could similarly be done to decide whether a node is permitted to be a registrar or not.</t>
          <t indent="0" pn="section-a.9.5-3">Tying the permitted "roles" of an ACP node to the ACP certificate provides
fairly strong protection against misconfiguration, but it is still subject to code
modifications.</t>
          <t indent="0" pn="section-a.9.5-4">Another interesting role to assign to certificates is that of a NOC node. This would allow the
limiting of certain types of connections, such as OAM TLS connections to only the NOC initiators
or responders.</t>
        </section>
        <section anchor="l3-transit" numbered="true" toc="include" removeInRFC="false" pn="section-a.9.6">
          <name slugifiedName="name-autonomic-l3-transit">Autonomic L3 Transit</name>
          <t indent="0" pn="section-a.9.6-1">In this specification, the ACP can only establish autonomic connectivity across L2
hops  but requires non-autonomic configuration to tunnel across L3 paths. Future work should
specify mechanisms to automatically tunnel ACP across L3 networks. A hub-and-spoke
option would allow tunneling across the Internet to a cloud or central instance of the ACP;
a peer-to-peer tunneling mechanism could tunnel ACP islands across an L3VPN infrastructure.</t>
        </section>
        <section anchor="future-diag" numbered="true" toc="include" removeInRFC="false" pn="section-a.9.7">
          <name slugifiedName="name-diagnostics">Diagnostics</name>
          <t indent="0" pn="section-a.9.7-1"><xref target="diagnostics" format="default" sectionFormat="of" derivedContent="Section 9.1"/> describes diagnostics options that can be applied
without changing the external, interoperability-affecting characteristics of ACP implementations.</t>
          <t indent="0" pn="section-a.9.7-2">Even better diagnostics of ACP operations are possible with additional
signaling extensions, such as the following:</t>
          <ol type="1" spacing="normal" indent="adaptive" start="1" pn="section-a.9.7-3">
            <li pn="section-a.9.7-3.1" derivedCounter="1.">Consider if LLDP should be a recommended functionality for ANI devices
    to improve diagnostics, and if so, which information elements it should
    signal (noting that such information is conveyed in an insecure manner). This includes potentially new information elements.</li>
            <li pn="section-a.9.7-3.2" derivedCounter="2.">As an alternative to LLDP, a DULL GRASP diagnostics objective could
    be defined to carry these information elements.</li>
            <li pn="section-a.9.7-3.3" derivedCounter="3.">The IDevID certificate of BRSKI pledges should be included in the selected
    insecure diagnostics option. This may be undesirable when exposure of device information is seen as too much of a security issue (the ability to deduce possible attack vectors from device model, for example).</li>
            <li pn="section-a.9.7-3.4" derivedCounter="4.">A richer set of diagnostics information should be made available
    via the secured ACP channels, using either single-hop GRASP or
    network-wide "topology discovery" mechanisms.</li>
          </ol>
        </section>
        <section anchor="compromised" numbered="true" toc="include" removeInRFC="false" pn="section-a.9.8">
          <name slugifiedName="name-avoiding-and-dealing-with-c">Avoiding and Dealing with Compromised ACP Nodes</name>
          <t indent="0" pn="section-a.9.8-1">Compromised ACP nodes pose the biggest risk to the operations of the network.
The most common types of compromise are the leakage of credentials to manage and/or configure
the device and the application of malicious configuration, including the change
of access credentials, but not the change of software. Most of today's networking
equipment should have secure boot/software infrastructure anyhow, so attacks
that introduce malicious software should be a lot harder.</t>
          <t indent="0" pn="section-a.9.8-2">The most important aspect of security design against these types of attacks is
to eliminate password-based configuration access methods and instead rely on
certificate-based credentials handed out only to nodes where it is clear that
the private keys cannot leak. This limits unexpected propagation of credentials.</t>
          <t indent="0" pn="section-a.9.8-3">If password-based credentials to configure devices still need to be supported, they must not be
locally configurable, but only be remotely provisioned or verified (through
protocols like RADIUS or Diameter), and there must be no local configuration
permitting the change of these authentication mechanisms, but ideally they should
be autoconfiguring across the ACP. See <xref target="I-D.eckert-anima-noc-autoconfig" format="default" sectionFormat="of" derivedContent="NOC-AUTOCONFIG"/>.</t>
          <t indent="0" pn="section-a.9.8-4">Without physical access to the compromised device, attackers with access to
configuration should not be able to break the ACP connectivity, even when they
can break or otherwise manipulate (spoof) the data plane connectivity through configuration.
To achieve this, it is necessary to avoid providing configuration options for the
ACP, such as enabling/disabling it on interfaces. For example, there could be an
ACP configuration that locks down the current ACP configuration unless factory reset is done.</t>
          <t indent="0" pn="section-a.9.8-5">With such means, the valid administration has the best chances to maintain
access to ACP nodes, to discover malicious configuration though ongoing configuration
tracking from central locations, for example, and to react accordingly.</t>
          <t indent="0" pn="section-a.9.8-6">The primary reaction is to withdraw or change credentials, terminate malicious
existing management sessions, and fix the configuration. Ensuring that management
sessions using invalidated credentials are terminated automatically without recourse will
likely require new work.</t>
          <t indent="0" pn="section-a.9.8-7">Only when these steps are infeasible, would it be necessary
to revoke or expire the ACP certificate credentials and consider the node kicked off the network
until the situation can be further rectified, likely requiring direct physical access to the node.</t>
          <t indent="0" pn="section-a.9.8-8">Without extensions, compromised ACP nodes can only be removed from the ACP
at the speed of CRL/OCSP information refresh or expiry (and non-removal)
of short-lived  certificates. Future extensions to the ACP could, for
example, use the GRASP flooding distribution of triggered updates of CRL/OCSP or
the explicit removal indication of the compromised node's domain certificate.</t>
        </section>
        <section anchor="downgrade" numbered="true" toc="include" removeInRFC="false" pn="section-a.9.9">
          <name slugifiedName="name-detecting-acp-secure-channe">Detecting ACP Secure Channel Downgrade Attacks</name>
          <t indent="0" pn="section-a.9.9-1">The following text proposes a mechanism to protect against downgrade attacks without introducing a new specialized GRASP secure channel mechanism. Instead, it relies on running GRASP after establishing a secure channel protocol to verify if the established secure channel option could have been the result of a MITM downgrade attack.</t>
          <t indent="0" pn="section-a.9.9-2">MITM attackers can force downgrade attacks for ACP secure channel selection by filtering and/or modifying DULL GRASP messages and/or actual secure channel data packets. For example, if at some point in time, DTLS traffic could be more easily decrypted than traffic of IKEv2, the MITM could filter all IKEv2 packets to force ACP nodes to use DTLS (assuming that the ACP nodes in question supported both DTLS and IKEv2).</t>
          <t indent="0" pn="section-a.9.9-3">For cases where such MITM attacks are not capable of injecting malicious traffic (but only of decrypting the traffic), a downgrade attack could be discovered after a secure channel connection is established, for example, by using the following type of mechanism.</t>
          <t indent="0" pn="section-a.9.9-4">After the secure channel connection is established, the two ACP peers negotiate, via an appropriate (to be defined) GRASP negotiation, which ACP secure channel protocol should have been selected between them (in the absence of a MITM attacker). This negotiation would signal the ACP secure channel options announced by DULL GRASP by each peer followed by an announcement of the preferred secure channel protocol by the ACP peer that is the Decider in the secure channel setup, i.e., the ACP peer that decides which secure channel protocol to use.  If that chosen secure channel protocol is different from the one that actually was chosen, then this mismatch is an indication that there is a MITM attacker or other similar issue (e.g., a firewall prohibiting the use of specific protocols) that caused a non-preferred secure channel protocol to be chosen. This discovery could then result in mitigation options such as logging and ensuing investigations.</t>
        </section>
      </section>
    </section>
    <section anchor="ack" numbered="false" toc="include" removeInRFC="false" pn="section-appendix.b">
      <name slugifiedName="name-acknowledgements">Acknowledgements</name>
      <t indent="0" pn="section-appendix.b-1">This work originated from an Autonomic Networking project at Cisco
      Systems, which started in early 2010. Many people contributed to this project and the idea of the Autonomic Control Plane, amongst whom (in alphabetical order): <contact fullname="Ignas Bagdonas"/>, <contact fullname="Parag Bhide"/>, <contact fullname="Balaji BL"/>, <contact fullname="Alex Clemm"/>, <contact fullname="Yves Hertoghs"/>, <contact fullname="Bruno Klauser"/>, <contact fullname="Max Pritikin"/>, <contact fullname="Michael Richardson"/>, and <contact fullname="Ravi Kumar Vadapalli"/>.</t>
      <t indent="0" pn="section-appendix.b-2">Special thanks to <contact fullname="Brian Carpenter"/>, <contact fullname="Elwyn Davies"/>, <contact fullname="Joel Halpern"/>, and <contact fullname="Sheng Jiang"/> for their thorough reviews.</t>
      <t indent="0" pn="section-appendix.b-3">Many thanks to <contact fullname="Ben Kaduk"/>, <contact fullname="Roman Danyliw"/>, and <contact fullname="Eric Rescorla"/> for their thorough SEC AD reviews, <contact fullname="Russ Housley"/> and <contact fullname="Erik Kline"/> for their reviews, and to <contact fullname="Valery Smyslov"/>, <contact fullname="Tero Kivinen"/>, <contact fullname="Paul Wouters"/>, and <contact fullname="Yoav Nir"/> for review of IPsec and IKEv2 parameters and helping to understand those and other security protocol details better. Thanks to <contact fullname="Carsten Bormann"/> for CBOR/CDDL help.</t>
      <t indent="0" pn="section-appendix.b-4">Further input, review, or suggestions were received from <contact fullname="Rene Struik"/>, <contact fullname="Benoit Claise"/>, <contact fullname="William Atwood"/>, and <contact fullname="Yongkang Zhang"/>.</t>
    </section>
    <section anchor="contributors" numbered="false" toc="include" removeInRFC="false" pn="section-appendix.c">
      <name slugifiedName="name-contributors">Contributors</name>
      <t indent="0" pn="section-appendix.c-1">For all things GRASP including validation code, ongoing document text support, and technical input:</t>
      <contact fullname="Brian Carpenter" initials="B. E." surname="Carpenter">
        <organization abbrev="Univ. of Auckland" showOnFrontPage="true"/>
        <address>
          <postal>
            <street>School of Computer Science</street>
            <street>University of Auckland</street>
            <street>PB 92019</street>
            <city>Auckland</city>
            <code>1142</code>
            <country>New Zealand</country>
          </postal>
          <email>brian.e.carpenter@gmail.com</email>
        </address>
      </contact>
      <t indent="0" pn="section-appendix.c-2">For RPL contributions and all things BRSKI/bootstrap including validation code, ongoing document text support, and technical input:</t>
      <contact fullname="Michael C. Richardson" initials="M." surname="Richardson">
        <organization abbrev="Sandelman" showOnFrontPage="true">Sandelman Software Works</organization>
        <address>
          <email>mcr+ietf@sandelman.ca</email>
          <uri>http://www.sandelman.ca/mcr/</uri>
        </address>
      </contact>
      <t indent="0" pn="section-appendix.c-3">For the RPL technology choices and text:</t>
      <contact initials="P" surname="Thubert" fullname="Pascal Thubert">
        <organization abbrev="Cisco Systems" showOnFrontPage="true">Cisco Systems, Inc</organization>
        <address>
          <postal>
            <street>Building D</street>
            <street>45 Allee des Ormes - BP1200</street>
            <city>Mougins - Sophia Antipolis</city>
            <code>06254</code>
            <country>France</country>
          </postal>
          <phone>+33 497 23 26 34</phone>
          <email>pthubert@cisco.com</email>
        </address>
      </contact>
    </section>
    <section anchor="authors-addresses" numbered="false" removeInRFC="false" toc="include" pn="section-appendix.d">
      <name slugifiedName="name-authors-addresses">Authors' Addresses</name>
      <author role="editor" fullname="Toerless Eckert" surname="Eckert">
        <organization abbrev="Futurewei USA" showOnFrontPage="true">Futurewei Technologies Inc. USA</organization>
        <address>
          <postal>
            <street>2330 Central Expy</street>
            <city>Santa Clara</city>
            <region>CA</region>
            <code>95050</code>
            <country>United States of America</country>
          </postal>
          <email>tte+ietf@cs.fau.de</email>
        </address>
      </author>
      <author role="editor" fullname="Michael H. Behringer" initials="M." surname="Behringer">
        <address>
          <email>michael.h.behringer@gmail.com</email>
        </address>
      </author>
      <author fullname="Steinthor Bjarnason" initials="S." surname="Bjarnason">
        <organization showOnFrontPage="true">Arbor Networks</organization>
        <address>
          <postal>
            <street>2727 South State Street, Suite 200</street>
            <city>Ann Arbor</city>
            <region>MI</region>
            <code>48104</code>
            <country>United States of America</country>
          </postal>
          <email>sbjarnason@arbor.net</email>
        </address>
      </author>
    </section>
  </back>
</rfc>
