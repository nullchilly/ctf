<?xml version='1.0' encoding='utf-8'?>
<rfc xmlns:xi="http://www.w3.org/2001/XInclude" version="3" category="std" consensus="true" docName="draft-ietf-opsawg-l3sm-l3nm-18" indexInclude="true" ipr="trust200902" number="9182" prepTime="2022-02-15T19:28:48" scripts="Common,Latin" sortRefs="true" submissionType="IETF" symRefs="true" tocDepth="5" tocInclude="true" xml:lang="en">
  <link href="https://datatracker.ietf.org/doc/draft-ietf-opsawg-l3sm-l3nm-18" rel="prev"/>
  <link href="https://dx.doi.org/10.17487/rfc9182" rel="alternate"/>
  <link href="urn:issn:2070-1721" rel="alternate"/>
  <front>
    <title abbrev="L3NM YANG Data Model">A YANG Network Data Model for Layer 3 VPNs</title>
    <seriesInfo name="RFC" value="9182" stream="IETF"/>
    <author fullname="Samier Barguil" initials="S." surname="Barguil">
      <organization showOnFrontPage="true">Telefonica</organization>
      <address>
        <postal>
          <city>Madrid</city>
          <country>Spain</country>
        </postal>
        <email>samier.barguilgiraldo.ext@telefonica.com</email>
      </address>
    </author>
    <author fullname="Oscar Gonzalez de Dios" initials="O." role="editor" surname="Gonzalez de Dios">
      <organization showOnFrontPage="true">Telefonica</organization>
      <address>
        <postal>
          <city>Madrid</city>
          <country>Spain</country>
        </postal>
        <email>oscar.gonzalezdedios@telefonica.com</email>
      </address>
    </author>
    <author fullname="Mohamed Boucadair" initials="M." role="editor" surname="Boucadair">
      <organization showOnFrontPage="true">Orange</organization>
      <address>
        <postal>
          <city>Rennes</city>
          <code>35000</code>
          <country>France</country>
        </postal>
        <email>mohamed.boucadair@orange.com</email>
      </address>
    </author>
    <author fullname="Luis Angel Munoz" initials="L." surname="Munoz">
      <organization showOnFrontPage="true">Vodafone</organization>
      <address>
        <postal>
          <country>Spain</country>
        </postal>
        <email>luis-angel.munoz@vodafone.com</email>
      </address>
    </author>
    <author fullname="Alejandro Aguado" initials="A." surname="Aguado">
      <organization showOnFrontPage="true">Nokia</organization>
      <address>
        <postal>
          <city>Madrid</city>
          <country>Spain</country>
        </postal>
        <email>alejandro.aguado_martin@nokia.com</email>
      </address>
    </author>
    <date month="02" year="2022"/>
    <area>ops</area>
    <workgroup>OPSAWG</workgroup>
    <keyword>l3vpn</keyword>
    <keyword>Automation</keyword>
    <keyword>Service Provisioning</keyword>
    <keyword>Network Automation</keyword>
    <keyword>Service Orchestration</keyword>
    <keyword>Service Delivery</keyword>
    <keyword>NETCONF</keyword>
    <keyword>RESTCONF</keyword>
    <keyword>Slices</keyword>
    <keyword>network slicing</keyword>
    <abstract pn="section-abstract">
      <t indent="0" pn="section-abstract-1">As a complement to the Layer 3 Virtual Private Network Service Model (L3SM), which is used for communication between customers and service
      providers, this document defines an L3VPN Network Model (L3NM) that
      can be used for the provisioning of Layer 3 Virtual Private Network
      (L3VPN) services within a service provider network. The model provides a
      network-centric view of L3VPN services.</t>
      <t indent="0" pn="section-abstract-2">The L3NM is meant to be used by a network controller to derive the
      configuration information that will be sent to relevant network devices.
      The model can also facilitate communication between a service
      orchestrator and a network controller/orchestrator.</t>
    </abstract>
    <boilerplate>
      <section anchor="status-of-memo" numbered="false" removeInRFC="false" toc="exclude" pn="section-boilerplate.1">
        <name slugifiedName="name-status-of-this-memo">Status of This Memo</name>
        <t indent="0" pn="section-boilerplate.1-1">
            This is an Internet Standards Track document.
        </t>
        <t indent="0" pn="section-boilerplate.1-2">
            This document is a product of the Internet Engineering Task Force
            (IETF).  It represents the consensus of the IETF community.  It has
            received public review and has been approved for publication by
            the Internet Engineering Steering Group (IESG).  Further
            information on Internet Standards is available in Section 2 of 
            RFC 7841.
        </t>
        <t indent="0" pn="section-boilerplate.1-3">
            Information about the current status of this document, any
            errata, and how to provide feedback on it may be obtained at
            <eref target="https://www.rfc-editor.org/info/rfc9182" brackets="none"/>.
        </t>
      </section>
      <section anchor="copyright" numbered="false" removeInRFC="false" toc="exclude" pn="section-boilerplate.2">
        <name slugifiedName="name-copyright-notice">Copyright Notice</name>
        <t indent="0" pn="section-boilerplate.2-1">
            Copyright (c) 2022 IETF Trust and the persons identified as the
            document authors. All rights reserved.
        </t>
        <t indent="0" pn="section-boilerplate.2-2">
            This document is subject to BCP 78 and the IETF Trust's Legal
            Provisions Relating to IETF Documents
            (<eref target="https://trustee.ietf.org/license-info" brackets="none"/>) in effect on the date of
            publication of this document. Please review these documents
            carefully, as they describe your rights and restrictions with
            respect to this document. Code Components extracted from this
            document must include Revised BSD License text as described in
            Section 4.e of the Trust Legal Provisions and are provided without
            warranty as described in the Revised BSD License.
        </t>
      </section>
    </boilerplate>
    <toc>
      <section anchor="toc" numbered="false" removeInRFC="false" toc="exclude" pn="section-toc.1">
        <name slugifiedName="name-table-of-contents">Table of Contents</name>
        <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1">
          <li pn="section-toc.1-1.1">
            <t indent="0" keepWithNext="true" pn="section-toc.1-1.1.1"><xref derivedContent="1" format="counter" sectionFormat="of" target="section-1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-introduction">Introduction</xref></t>
          </li>
          <li pn="section-toc.1-1.2">
            <t indent="0" keepWithNext="true" pn="section-toc.1-1.2.1"><xref derivedContent="2" format="counter" sectionFormat="of" target="section-2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-terminology">Terminology</xref></t>
          </li>
          <li pn="section-toc.1-1.3">
            <t indent="0" keepWithNext="true" pn="section-toc.1-1.3.1"><xref derivedContent="3" format="counter" sectionFormat="of" target="section-3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-acronyms-and-abbreviations">Acronyms and Abbreviations</xref></t>
          </li>
          <li pn="section-toc.1-1.4">
            <t indent="0" pn="section-toc.1-1.4.1"><xref derivedContent="4" format="counter" sectionFormat="of" target="section-4"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-l3nm-reference-architecture">L3NM Reference Architecture</xref></t>
          </li>
          <li pn="section-toc.1-1.5">
            <t indent="0" pn="section-toc.1-1.5.1"><xref derivedContent="5" format="counter" sectionFormat="of" target="section-5"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-relationship-to-other-yang-">Relationship to Other YANG Data Models</xref></t>
          </li>
          <li pn="section-toc.1-1.6">
            <t indent="0" pn="section-toc.1-1.6.1"><xref derivedContent="6" format="counter" sectionFormat="of" target="section-6"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-sample-uses-of-the-l3nm-dat">Sample Uses of the L3NM Data Model</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.6.2">
              <li pn="section-toc.1-1.6.2.1">
                <t indent="0" pn="section-toc.1-1.6.2.1.1"><xref derivedContent="6.1" format="counter" sectionFormat="of" target="section-6.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-enterprise-layer-3-vpn-serv">Enterprise Layer 3 VPN Services</xref></t>
              </li>
              <li pn="section-toc.1-1.6.2.2">
                <t indent="0" pn="section-toc.1-1.6.2.2.1"><xref derivedContent="6.2" format="counter" sectionFormat="of" target="section-6.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-multi-domain-resource-manag">Multi-Domain Resource Management</xref></t>
              </li>
              <li pn="section-toc.1-1.6.2.3">
                <t indent="0" pn="section-toc.1-1.6.2.3.1"><xref derivedContent="6.3" format="counter" sectionFormat="of" target="section-6.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-management-of-multicast-ser">Management of Multicast Services</xref></t>
              </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.7">
            <t indent="0" pn="section-toc.1-1.7.1"><xref derivedContent="7" format="counter" sectionFormat="of" target="section-7"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-description-of-the-l3nm-yan">Description of the L3NM YANG Module</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.7.2">
              <li pn="section-toc.1-1.7.2.1">
                <t indent="0" pn="section-toc.1-1.7.2.1.1"><xref derivedContent="7.1" format="counter" sectionFormat="of" target="section-7.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-overall-structure-of-the-mo">Overall Structure of the Module</xref></t>
              </li>
              <li pn="section-toc.1-1.7.2.2">
                <t indent="0" pn="section-toc.1-1.7.2.2.1"><xref derivedContent="7.2" format="counter" sectionFormat="of" target="section-7.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-vpn-profiles">VPN Profiles</xref></t>
              </li>
              <li pn="section-toc.1-1.7.2.3">
                <t indent="0" pn="section-toc.1-1.7.2.3.1"><xref derivedContent="7.3" format="counter" sectionFormat="of" target="section-7.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-vpn-services">VPN Services</xref></t>
              </li>
              <li pn="section-toc.1-1.7.2.4">
                <t indent="0" pn="section-toc.1-1.7.2.4.1"><xref derivedContent="7.4" format="counter" sectionFormat="of" target="section-7.4"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-vpn-instance-profiles">VPN Instance Profiles</xref></t>
              </li>
              <li pn="section-toc.1-1.7.2.5">
                <t indent="0" pn="section-toc.1-1.7.2.5.1"><xref derivedContent="7.5" format="counter" sectionFormat="of" target="section-7.5"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-vpn-nodes">VPN Nodes</xref></t>
              </li>
              <li pn="section-toc.1-1.7.2.6">
                <t indent="0" pn="section-toc.1-1.7.2.6.1"><xref derivedContent="7.6" format="counter" sectionFormat="of" target="section-7.6"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-vpn-network-accesses">VPN Network Accesses</xref></t>
                <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.7.2.6.2">
                  <li pn="section-toc.1-1.7.2.6.2.1">
                    <t indent="0" pn="section-toc.1-1.7.2.6.2.1.1"><xref derivedContent="7.6.1" format="counter" sectionFormat="of" target="section-7.6.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-connection">Connection</xref></t>
                  </li>
                  <li pn="section-toc.1-1.7.2.6.2.2">
                    <t indent="0" pn="section-toc.1-1.7.2.6.2.2.1"><xref derivedContent="7.6.2" format="counter" sectionFormat="of" target="section-7.6.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-ip-connection">IP Connection</xref></t>
                  </li>
                  <li pn="section-toc.1-1.7.2.6.2.3">
                    <t indent="0" pn="section-toc.1-1.7.2.6.2.3.1"><xref derivedContent="7.6.3" format="counter" sectionFormat="of" target="section-7.6.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-ce-pe-routing-protocols">CE-PE Routing Protocols</xref></t>
                    <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.7.2.6.2.3.2">
                      <li pn="section-toc.1-1.7.2.6.2.3.2.1">
                        <t indent="0" pn="section-toc.1-1.7.2.6.2.3.2.1.1"><xref derivedContent="7.6.3.1" format="counter" sectionFormat="of" target="section-7.6.3.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-static-routing">Static Routing</xref></t>
                      </li>
                      <li pn="section-toc.1-1.7.2.6.2.3.2.2">
                        <t indent="0" pn="section-toc.1-1.7.2.6.2.3.2.2.1"><xref derivedContent="7.6.3.2" format="counter" sectionFormat="of" target="section-7.6.3.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-bgp">BGP</xref></t>
                      </li>
                      <li pn="section-toc.1-1.7.2.6.2.3.2.3">
                        <t indent="0" pn="section-toc.1-1.7.2.6.2.3.2.3.1"><xref derivedContent="7.6.3.3" format="counter" sectionFormat="of" target="section-7.6.3.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-ospf">OSPF</xref></t>
                      </li>
                      <li pn="section-toc.1-1.7.2.6.2.3.2.4">
                        <t indent="0" pn="section-toc.1-1.7.2.6.2.3.2.4.1"><xref derivedContent="7.6.3.4" format="counter" sectionFormat="of" target="section-7.6.3.4"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-is-is">IS-IS</xref></t>
                      </li>
                      <li pn="section-toc.1-1.7.2.6.2.3.2.5">
                        <t indent="0" pn="section-toc.1-1.7.2.6.2.3.2.5.1"><xref derivedContent="7.6.3.5" format="counter" sectionFormat="of" target="section-7.6.3.5"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-rip">RIP</xref></t>
                      </li>
                      <li pn="section-toc.1-1.7.2.6.2.3.2.6">
                        <t indent="0" pn="section-toc.1-1.7.2.6.2.3.2.6.1"><xref derivedContent="7.6.3.6" format="counter" sectionFormat="of" target="section-7.6.3.6"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-vrrp">VRRP</xref></t>
                      </li>
                    </ul>
                  </li>
                  <li pn="section-toc.1-1.7.2.6.2.4">
                    <t indent="0" pn="section-toc.1-1.7.2.6.2.4.1"><xref derivedContent="7.6.4" format="counter" sectionFormat="of" target="section-7.6.4"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-oam">OAM</xref></t>
                  </li>
                  <li pn="section-toc.1-1.7.2.6.2.5">
                    <t indent="0" pn="section-toc.1-1.7.2.6.2.5.1"><xref derivedContent="7.6.5" format="counter" sectionFormat="of" target="section-7.6.5"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-security">Security</xref></t>
                  </li>
                  <li pn="section-toc.1-1.7.2.6.2.6">
                    <t indent="0" pn="section-toc.1-1.7.2.6.2.6.1"><xref derivedContent="7.6.6" format="counter" sectionFormat="of" target="section-7.6.6"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-services">Services</xref></t>
                    <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.7.2.6.2.6.2">
                      <li pn="section-toc.1-1.7.2.6.2.6.2.1">
                        <t indent="0" pn="section-toc.1-1.7.2.6.2.6.2.1.1"><xref derivedContent="7.6.6.1" format="counter" sectionFormat="of" target="section-7.6.6.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-overview">Overview</xref></t>
                      </li>
                      <li pn="section-toc.1-1.7.2.6.2.6.2.2">
                        <t indent="0" pn="section-toc.1-1.7.2.6.2.6.2.2.1"><xref derivedContent="7.6.6.2" format="counter" sectionFormat="of" target="section-7.6.6.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-qos">QoS</xref></t>
                      </li>
                    </ul>
                  </li>
                </ul>
              </li>
              <li pn="section-toc.1-1.7.2.7">
                <t indent="0" pn="section-toc.1-1.7.2.7.1"><xref derivedContent="7.7" format="counter" sectionFormat="of" target="section-7.7"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-multicast">Multicast</xref></t>
              </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.8">
            <t indent="0" pn="section-toc.1-1.8.1"><xref derivedContent="8" format="counter" sectionFormat="of" target="section-8"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-l3nm-yang-module">L3NM YANG Module</xref></t>
          </li>
          <li pn="section-toc.1-1.9">
            <t indent="0" pn="section-toc.1-1.9.1"><xref derivedContent="9" format="counter" sectionFormat="of" target="section-9"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-security-considerations">Security Considerations</xref></t>
          </li>
          <li pn="section-toc.1-1.10">
            <t indent="0" pn="section-toc.1-1.10.1"><xref derivedContent="10" format="counter" sectionFormat="of" target="section-10"/>. <xref derivedContent="" format="title" sectionFormat="of" target="name-iana-considerations">IANA Considerations</xref></t>
          </li>
          <li pn="section-toc.1-1.11">
            <t indent="0" pn="section-toc.1-1.11.1"><xref derivedContent="11" format="counter" sectionFormat="of" target="section-11"/>. <xref derivedContent="" format="title" sectionFormat="of" target="name-references">References</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.11.2">
              <li pn="section-toc.1-1.11.2.1">
                <t indent="0" pn="section-toc.1-1.11.2.1.1"><xref derivedContent="11.1" format="counter" sectionFormat="of" target="section-11.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-normative-references">Normative References</xref></t>
              </li>
              <li pn="section-toc.1-1.11.2.2">
                <t indent="0" pn="section-toc.1-1.11.2.2.1"><xref derivedContent="11.2" format="counter" sectionFormat="of" target="section-11.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-informative-references">Informative References</xref></t>
              </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.12">
            <t indent="0" pn="section-toc.1-1.12.1"><xref derivedContent="Appendix A" format="default" sectionFormat="of" target="section-appendix.a"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-l3vpn-examples">L3VPN Examples</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.12.2">
              <li pn="section-toc.1-1.12.2.1">
                <t indent="0" pn="section-toc.1-1.12.2.1.1"><xref derivedContent="A.1" format="counter" sectionFormat="of" target="section-appendix.a.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-4g-vpn-provisioning-example">4G VPN Provisioning Example</xref></t>
              </li>
              <li pn="section-toc.1-1.12.2.2">
                <t indent="0" pn="section-toc.1-1.12.2.2.1"><xref derivedContent="A.2" format="counter" sectionFormat="of" target="section-appendix.a.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-loopback-interface">Loopback Interface</xref></t>
              </li>
              <li pn="section-toc.1-1.12.2.3">
                <t indent="0" pn="section-toc.1-1.12.2.3.1"><xref derivedContent="A.3" format="counter" sectionFormat="of" target="section-appendix.a.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-overriding-vpn-instance-pro">Overriding VPN Instance Profile Parameters</xref></t>
              </li>
              <li pn="section-toc.1-1.12.2.4">
                <t indent="0" pn="section-toc.1-1.12.2.4.1"><xref derivedContent="A.4" format="counter" sectionFormat="of" target="section-appendix.a.4"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-multicast-vpn-provisioning-">Multicast VPN Provisioning Example</xref></t>
              </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.13">
            <t indent="0" pn="section-toc.1-1.13.1"><xref derivedContent="" format="none" sectionFormat="of" target="section-appendix.b"/><xref derivedContent="" format="title" sectionFormat="of" target="name-acknowledgements">Acknowledgements</xref></t>
          </li>
          <li pn="section-toc.1-1.14">
            <t indent="0" pn="section-toc.1-1.14.1"><xref derivedContent="" format="none" sectionFormat="of" target="section-appendix.c"/><xref derivedContent="" format="title" sectionFormat="of" target="name-contributors">Contributors</xref></t>
          </li>
          <li pn="section-toc.1-1.15">
            <t indent="0" pn="section-toc.1-1.15.1"><xref derivedContent="" format="none" sectionFormat="of" target="section-appendix.d"/><xref derivedContent="" format="title" sectionFormat="of" target="name-authors-addresses">Authors' Addresses</xref></t>
          </li>
        </ul>
      </section>
    </toc>
  </front>
  <middle>
    <section numbered="true" toc="include" removeInRFC="false" pn="section-1">
      <name slugifiedName="name-introduction">Introduction</name>
      <t indent="0" pn="section-1-1"><xref target="RFC8299" format="default" sectionFormat="of" derivedContent="RFC8299"/> defines a YANG Layer 3 Virtual Private
      Network Service Model (L3SM) that can be used for
      communication between customers and service providers. Such a model
      focuses on describing the customer view of the Virtual Private Network
      (VPN) services and provides an abstracted view of the customer's
      requested services. That approach limits the usage of the L3SM to the
      role of a customer service model (as per <xref target="RFC8309" format="default" sectionFormat="of" derivedContent="RFC8309"/>).</t>
      <t indent="0" pn="section-1-2">This document defines a YANG module called the "L3VPN Network Model"
      (L3NM). The L3NM is aimed at providing a network-centric view of Layer 3
      (L3) VPN services. This data model can be used to facilitate
      communication between the service orchestrator and the network
      controller/orchestrator by allowing more network-centric information
      to be included. It enables such additional capabilities as resource
      management, or it serves as a multi-domain orchestration interface where
      logical resources (such as route targets or route distinguishers) must
      be coordinated.</t>
      <t indent="0" pn="section-1-3">This document uses the common VPN YANG module defined in <xref target="RFC9181" format="default" sectionFormat="of" derivedContent="RFC9181"/>.</t>
      <t indent="0" pn="section-1-4">This document does not obsolete <xref target="RFC8299" format="default" sectionFormat="of" derivedContent="RFC8299"/>. These
      two modules are used for similar objectives but with different scopes
      and views.</t>
      <t indent="0" pn="section-1-5">The L3NM YANG module was initially built with a "prune and extend"
      approach, taking as a starting point the YANG module described in <xref target="RFC8299" format="default" sectionFormat="of" derivedContent="RFC8299"/>. Nevertheless, the L3NM is not defined as an
      augment to the L3SM, because a specific structure is required to meet
      network-oriented L3 needs.</t>
      <t indent="0" pn="section-1-6">Some information captured in the L3SM can be passed by the
      orchestrator in the L3NM (e.g., customer) or be used to feed some L3NM
      attributes (e.g., actual forwarding policies). Also, some information
      captured in the L3SM may be maintained locally within the orchestrator,
      which is in charge of maintaining the correlation between a customer
      view and its network instantiation. Likewise, some information captured
      and exposed using the L3NM can feed the service layer (e.g.,
      capabilities) to drive VPN service order handling and thus the
      L3SM.</t>
      <t indent="0" pn="section-1-7"><xref target="RFC8969" sectionFormat="of" section="5.1" format="default" derivedLink="https://rfc-editor.org/rfc/rfc8969#section-5.1" derivedContent="RFC8969"/> illustrates how the
      L3NM can be used within the network management automation
      architecture.</t>
      <t indent="0" pn="section-1-8">The L3NM does not attempt to address all deployment cases, especially
      those where L3VPN connectivity is supported through the coordination
      of different VPNs in different underlying networks. More complex
      deployment scenarios involving the coordination of different VPN
      instances and different technologies to provide end-to-end VPN
      connectivity are addressed by complementary YANG modules, e.g., <xref target="YANG-Composed-VPN" format="default" sectionFormat="of" derivedContent="YANG-Composed-VPN"/>.</t>
      <t indent="0" pn="section-1-9">The L3NM focuses on Layer 3 VPNs based on BGP Provider Edges (PEs) as
      described in <xref target="RFC4026" format="default" sectionFormat="of" derivedContent="RFC4026"/>, <xref target="RFC4110" format="default" sectionFormat="of" derivedContent="RFC4110"/>, and <xref target="RFC4364" format="default" sectionFormat="of" derivedContent="RFC4364"/>; and Multicast
      VPNs as described in <xref target="RFC6037" format="default" sectionFormat="of" derivedContent="RFC6037"/> and <xref target="RFC6513" format="default" sectionFormat="of" derivedContent="RFC6513"/>.</t>
      <t indent="0" pn="section-1-10">The YANG data model in this document conforms to the Network
      Management Datastore Architecture (NMDA) defined in <xref target="RFC8342" format="default" sectionFormat="of" derivedContent="RFC8342"/>.</t>
    </section>
    <section anchor="terminology" numbered="true" toc="include" removeInRFC="false" pn="section-2">
      <name slugifiedName="name-terminology">Terminology</name>
      <t indent="0" pn="section-2-1">The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>",
      "<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>",
      "<bcp14>SHALL NOT</bcp14>", "<bcp14>SHOULD</bcp14>",
      "<bcp14>SHOULD NOT</bcp14>",
      "<bcp14>RECOMMENDED</bcp14>", "<bcp14>NOT RECOMMENDED</bcp14>",
      "<bcp14>MAY</bcp14>", and "<bcp14>OPTIONAL</bcp14>" in this document
      are to be interpreted as described in BCP 14
      <xref target="RFC2119" format="default" sectionFormat="of" derivedContent="RFC2119"/> <xref target="RFC8174" format="default" sectionFormat="of" derivedContent="RFC8174"/> when, and only
      when, they appear in all capitals, as shown here.</t>
      <t indent="0" pn="section-2-2">This document assumes that the reader is familiar with the contents
      of <xref target="RFC6241" format="default" sectionFormat="of" derivedContent="RFC6241"/>, <xref target="RFC7950" format="default" sectionFormat="of" derivedContent="RFC7950"/>, <xref target="RFC8299" format="default" sectionFormat="of" derivedContent="RFC8299"/>, <xref target="RFC8309" format="default" sectionFormat="of" derivedContent="RFC8309"/>, and <xref target="RFC8453" format="default" sectionFormat="of" derivedContent="RFC8453"/> and uses the terminology defined in those
      documents.</t>
      <t indent="0" pn="section-2-3">This document uses the term "network model" as defined in <xref target="RFC8969" sectionFormat="of" section="2.1" format="default" derivedLink="https://rfc-editor.org/rfc/rfc8969#section-2.1" derivedContent="RFC8969"/>.</t>
      <t indent="0" pn="section-2-4">The meanings of the symbols in the tree diagrams are defined in <xref target="RFC8340" format="default" sectionFormat="of" derivedContent="RFC8340"/>.</t>
      <t indent="0" pn="section-2-5">This document makes use of the following terms:</t>
      <dl newline="false" spacing="normal" indent="3" pn="section-2-6">
        <dt pn="section-2-6.1">Layer 3 VPN Service Model (L3SM):</dt>
        <dd pn="section-2-6.2">A YANG data model that describes the service requirements of an L3VPN that
          interconnects a set of sites from the point of view of the customer.
          The customer service model does not provide details on the service
          provider network. The L3VPN customer service model is defined in
          <xref target="RFC8299" format="default" sectionFormat="of" derivedContent="RFC8299"/>.</dd>
        <dt pn="section-2-6.3">Layer 3 VPN Network Model (L3NM):</dt>
        <dd pn="section-2-6.4">A YANG data model that describes a VPN service in the service provider network.
          It contains information on the service provider network and might
          include allocated resources. It can be used by network controllers
          to manage and control the VPN service configuration in the service
          provider network. The corresponding YANG module can be used by a service
          orchestrator to request a VPN service to a network controller.</dd>
        <dt pn="section-2-6.5">Service orchestrator:</dt>
        <dd pn="section-2-6.6">A functional entity that
          interacts with the customer of an L3VPN. The service orchestrator
          interacts with the customer using the L3SM. The service orchestrator
          is responsible for the Customer Edge to Provider Edge (CE-PE)
          attachment circuits, the PE selection, and requesting the VPN
          service to the network controller.</dd>
        <dt pn="section-2-6.7">Network orchestrator:</dt>
        <dd pn="section-2-6.8">A functional entity that is
          hierarchically intermediate between a service orchestrator and
          network controllers. A network orchestrator can manage one or
          several network controllers.</dd>
        <dt pn="section-2-6.9">Network controller:</dt>
        <dd pn="section-2-6.10">A functional entity responsible
          for the control and management of the service provider network.</dd>
        <dt pn="section-2-6.11">VPN node:</dt>
        <dd pn="section-2-6.12">An abstraction that represents a set of
          policies applied on a PE and belonging to a single VPN service. A
          VPN service involves one or more VPN nodes. As it is an abstraction,
          the network controller will decide how to implement a VPN node. For
          example, in a BGP-based VPN, a VPN node could typically be mapped
          to a Virtual Routing and Forwarding (VRF) instance.</dd>
        <dt pn="section-2-6.13">VPN network access:</dt>
        <dd pn="section-2-6.14">An abstraction that represents the
          network interfaces that are associated with a given VPN node. Traffic
          coming from the VPN network access belongs to the VPN. The
          attachment circuits (bearers) between CEs and PEs are terminated in
          the VPN network access. A reference to the bearer is maintained to
          allow keeping the link between the L3SM and L3NM when both models are
          used in a given deployment.</dd>
        <dt pn="section-2-6.15">VPN site:</dt>
        <dd pn="section-2-6.16">A VPN customer's location that is connected
          to the service provider network via a CE-PE link, which can access
          at least one VPN <xref target="RFC4176" format="default" sectionFormat="of" derivedContent="RFC4176"/>.</dd>
        <dt pn="section-2-6.17">VPN service provider:</dt>
        <dd pn="section-2-6.18">A service provider that offers
          VPN-related services <xref target="RFC4176" format="default" sectionFormat="of" derivedContent="RFC4176"/>.</dd>
        <dt pn="section-2-6.19">Service provider network:</dt>
        <dd pn="section-2-6.20">A network that is able to
          provide VPN-related services.</dd>
      </dl>
      <t indent="0" pn="section-2-7">This document is aimed at modeling BGP PE-based VPNs in a service
      provider network, so the terms defined in <xref target="RFC4026" format="default" sectionFormat="of" derivedContent="RFC4026"/>
      and <xref target="RFC4176" format="default" sectionFormat="of" derivedContent="RFC4176"/> are used in this document as well.</t>
    </section>
    <section numbered="true" toc="include" removeInRFC="false" pn="section-3">
      <name slugifiedName="name-acronyms-and-abbreviations">Acronyms and Abbreviations</name>
      <t indent="0" pn="section-3-1">The following acronyms and abbreviations are used in this document:</t>
      <dl newline="false" spacing="compact" indent="8" pn="section-3-2">
        <dt pn="section-3-2.1">ACL</dt>
        <dd pn="section-3-2.2">Access Control List</dd>
        <dt pn="section-3-2.3">AS</dt>
        <dd pn="section-3-2.4">Autonomous System</dd>
        <dt pn="section-3-2.5">ASM</dt>
        <dd pn="section-3-2.6">Any-Source Multicast</dd>
        <dt pn="section-3-2.7">ASN</dt>
        <dd pn="section-3-2.8">AS Number</dd>
        <dt pn="section-3-2.9">BFD</dt>
        <dd pn="section-3-2.10">Bidirectional Forwarding Detection</dd>
        <dt pn="section-3-2.11">BGP</dt>
        <dd pn="section-3-2.12">Border Gateway Protocol</dd>
        <dt pn="section-3-2.13">BSR</dt>
        <dd pn="section-3-2.14">Bootstrap Router</dd>
        <dt pn="section-3-2.15">CE</dt>
        <dd pn="section-3-2.16">Customer Edge</dd>
        <dt pn="section-3-2.17">CsC</dt>
        <dd pn="section-3-2.18">Carriers' Carriers</dd>
        <dt pn="section-3-2.19">IGMP</dt>
        <dd pn="section-3-2.20">Internet Group Management Protocol</dd>
        <dt pn="section-3-2.21">L3NM</dt>
        <dd pn="section-3-2.22">L3VPN Network Model</dd>
        <dt pn="section-3-2.23">L3SM</dt>
        <dd pn="section-3-2.24">L3VPN Service Model</dd>
        <dt pn="section-3-2.25">L3VPN</dt>
        <dd pn="section-3-2.26">Layer 3 Virtual Private Network</dd>
        <dt pn="section-3-2.27">MLD</dt>
        <dd pn="section-3-2.28">Multicast Listener Discovery</dd>
        <dt pn="section-3-2.29">MSDP</dt>
        <dd pn="section-3-2.30">Multicast Source Discovery Protocol</dd>
        <dt pn="section-3-2.31">MVPN</dt>
        <dd pn="section-3-2.32">Multicast VPN</dd>
        <dt pn="section-3-2.33">NAT</dt>
        <dd pn="section-3-2.34">Network Address Translation</dd>
        <dt pn="section-3-2.35">OAM</dt>
        <dd pn="section-3-2.36">Operations, Administration, and Maintenance</dd>
        <dt pn="section-3-2.37">OSPF</dt>
        <dd pn="section-3-2.38">Open Shortest Path First</dd>
        <dt pn="section-3-2.39">PE</dt>
        <dd pn="section-3-2.40">Provider Edge</dd>
        <dt pn="section-3-2.41">PIM</dt>
        <dd pn="section-3-2.42">Protocol Independent Multicast</dd>
        <dt pn="section-3-2.43">QoS</dt>
        <dd pn="section-3-2.44">Quality of Service</dd>
        <dt pn="section-3-2.45">RD</dt>
        <dd pn="section-3-2.46">Route Distinguisher</dd>
        <dt pn="section-3-2.47">RP</dt>
        <dd pn="section-3-2.48">Rendezvous Point</dd>
        <dt pn="section-3-2.49">RT</dt>
        <dd pn="section-3-2.50">Route Target</dd>
        <dt pn="section-3-2.51">SA</dt>
        <dd pn="section-3-2.52">Security Association</dd>
        <dt pn="section-3-2.53">SSM</dt>
        <dd pn="section-3-2.54">Source-Specific Multicast</dd>
        <dt pn="section-3-2.55">VPN</dt>
        <dd pn="section-3-2.56">Virtual Private Network</dd>
        <dt pn="section-3-2.57">VRF</dt>
        <dd pn="section-3-2.58">Virtual Routing and Forwarding</dd>
      </dl>
    </section>
    <section anchor="ref" numbered="true" toc="include" removeInRFC="false" pn="section-4">
      <name slugifiedName="name-l3nm-reference-architecture">L3NM Reference Architecture</name>
      <t indent="0" pn="section-4-1"><xref target="xml_happy" format="default" sectionFormat="of" derivedContent="Figure 1"/> depicts the reference architecture
      for the L3NM. The figure is an expansion of the architecture presented
      in <xref target="RFC8299" sectionFormat="of" section="5" format="default" derivedLink="https://rfc-editor.org/rfc/rfc8299#section-5" derivedContent="RFC8299"/>; it decomposes the box
      marked "orchestration" in that section into three separate functional
      components: service orchestration, network orchestration, and domain
      orchestration.</t>
      <t indent="0" pn="section-4-2">Although some deployments may choose to construct a monolithic
      orchestration component (covering both service and network matters),
      this document advocates for a clear separation between service and
      network orchestration components for the sake of better flexibility.
      Such a design adheres to the L3VPN reference architecture defined in
      <xref target="RFC4176" sectionFormat="of" section="1.3" format="default" derivedLink="https://rfc-editor.org/rfc/rfc4176#section-1.3" derivedContent="RFC4176"/>. This separation relies
      upon a dedicated communication interface between these components and
      appropriate YANG modules that reflect network-related information. Such
      information is hidden from customers.</t>
      <t indent="0" pn="section-4-3">The intelligence for translating customer-facing information into
      network-centric information (and vice versa) is implementation specific.</t>
      <t indent="0" pn="section-4-4">The terminology from <xref target="RFC8309" format="default" sectionFormat="of" derivedContent="RFC8309"/> is used here to
      show the distinction between the customer service model, the service
      delivery model, the network configuration model, and the device
      configuration model. In that context, the "domain orchestration" and
      "config manager" roles may be performed by "controllers".</t>
      <figure anchor="xml_happy" align="left" suppress-title="false" pn="figure-1">
        <name slugifiedName="name-l3nm-reference-architecture-2">L3NM Reference Architecture</name>
        <artwork align="center" name="" type="ascii-art" alt="" pn="section-4-5.1">
                        +---------------+
                        |   Customer    |
                        +-------+-------+
        Customer Service Model  |
         (e.g., 'l3vpn-svc')    |
                        +-------+-------+
                        |    Service    |
                        | Orchestration |
                        +-------+-------+
       Service Delivery Model   |
           'l3vpn-ntw'          |
                        +-------+-------+
                        |   Network     |
                        | Orchestration |
                        +-------+-------+
  Network Configuration Model   |
                    +-----------+-----------+
                    |                       |
           +--------+------+       +--------+------+
           |    Domain     |       |     Domain    |
           | Orchestration |       | Orchestration |
           +---+-----------+       +--------+------+
Device         |        |                   |
Configuration  |        |                   |
Model          |        |                   |
          +----+----+   |                   |
          | Config  |   |                   |
          | Manager |   |                   |
          +----+----+   |                   |
               |        |                   |
               | NETCONF/CLI..................
               |        |                   |
        +------------------------------------------------+
                            Network

NETCONF:  Network Configuration Protocol
CLI:  Command-Line Interface
</artwork>
      </figure>
      <t indent="0" pn="section-4-6">The customer may use a variety of means to request a service that may
      trigger the instantiation of an L3NM. The customer may use the L3SM or
      more abstract models to request a service that relies upon an L3VPN
      service. For example, the customer may supply an IP Connectivity
      Provisioning Profile (CPP) that characterizes the requested service
      <xref target="RFC7297" format="default" sectionFormat="of" derivedContent="RFC7297"/>, an enhanced VPN (VPN+) service <xref target="I-D.ietf-teas-enhanced-vpn" format="default" sectionFormat="of" derivedContent="Enhanced-VPN-Framework"/>, or an IETF network slice
      service <xref target="Network-Slices-Framework" format="default" sectionFormat="of" derivedContent="Network-Slices-Framework"/>.</t>
      <t indent="0" pn="section-4-7">Note also that both the L3SM and the L3NM may be used in the context
      of the Abstraction and Control of TE Networks (ACTN) framework <xref target="RFC8453" format="default" sectionFormat="of" derivedContent="RFC8453"/>. <xref target="l3sm_actn" format="default" sectionFormat="of" derivedContent="Figure 2"/> shows the
      Customer Network Controller (CNC), the Multi-Domain Service Coordinator
      (MDSC), the Provisioning Network Controller (PNC) components, and the
      interfaces where the L3SM and L3NM are used.</t>
      <figure anchor="l3sm_actn" align="left" suppress-title="false" pn="figure-2">
        <name slugifiedName="name-l3sm-and-l3nm-in-the-contex">L3SM and L3NM in the Context of the ACTN</name>
        <artwork align="center" name="" type="ascii-art" alt="" pn="section-4-8.1">
        +----------------------------------+
        | Customer                         |
        | +-----------------------------+  |
        | |             CNC             |  |
        | +-----------------------------+  |
        +----+-----------------------+-----+
             |                       |
             | L3SM                  | L3SM
             |                       |
   +---------+---------+   +---------+---------+
   | MDSC              |   |       MDSC        |
   | +---------------+ |   |     (parent)      |
   | |    Service    | |   +---------+---------+
   | | Orchestration | |             |
   | +-------+-------+ |             | L3NM
   |         |         |             |
   |         | L3NM    |   +---------+---------+
   |         |         |   |       MDSC        |
   | +-------+-------+ |   |      (child)      |
   | |    Network    | |   +---------+---------+
   | | Orchestration | |             |
   | +---------------+ |             |
   +---------+---------+             |
             |                       |
             | Network Configuration |
             |                       |
+------------+-------+     +---------+------------+
| Domain             |     |           Domain     |
| Controller         |     |           Controller |
|       +---------+  |     |    +---------+       |
|       |   PNC   |  |     |    |   PNC   |       |
|       +---------+  |     |    +---------+       |
+------------+-------+     +---------+------------+
             |                       |
             | Device Configuration  |
             |                       |
        +----+---+              +----+---+
        | Device |              | Device |
        +--------+              +--------+
</artwork>
      </figure>
    </section>
    <section anchor="relation" numbered="true" toc="include" removeInRFC="false" pn="section-5">
      <name slugifiedName="name-relationship-to-other-yang-">Relationship to Other YANG Data Models</name>
      <t indent="0" pn="section-5-1">The "ietf-vpn-common" module <xref target="RFC9181" format="default" sectionFormat="of" derivedContent="RFC9181"/> includes a set of
      identities, types, and groupings that are meant to be reused by
      VPN-related YANG modules independently of the layer (e.g., Layer 2,
      Layer 3) and the type of the module (e.g., network model, service model),
      including future revisions of existing models (e.g., <xref target="RFC8299" format="default" sectionFormat="of" derivedContent="RFC8299"/> or <xref target="RFC8466" format="default" sectionFormat="of" derivedContent="RFC8466"/>). The L3NM
      reuses these common types and groupings.</t>
      <t indent="0" pn="section-5-2">In order to avoid data duplication and to ease passing data between
      layers when required (service layer to network layer and vice versa),
      early versions of the L3NM reused many of the data nodes that are
      defined in <xref target="RFC8299" format="default" sectionFormat="of" derivedContent="RFC8299"/>. Nevertheless, that approach
      was abandoned in favor of the "ietf-vpn-common" module because that
      initial design was interpreted as if the deployment of the L3NM depends on the
      L3SM, while this is not the case. For example, a service provider may
      decide to use the L3NM to build its L3VPN services without exposing the
      L3SM.</t>
      <t indent="0" pn="section-5-3">As discussed in <xref target="ref" format="default" sectionFormat="of" derivedContent="Section 4"/>, the L3NM is meant to
      manage L3VPN services within a service provider network. The module
      provides a network view of the service. Such a view is only visible
      within the service provider and is not exposed outside (to customers,
      for example). The items below discuss how the L3NM interfaces with other YANG modules:</t>
      <dl newline="false" spacing="normal" indent="3" pn="section-5-4">
        <dt pn="section-5-4.1">L3SM:</dt>
        <dd pn="section-5-4.2">
          <t indent="0" pn="section-5-4.2.1">The L3NM is not a customer service model.</t>
          <t indent="0" pn="section-5-4.2.2">The internal view of the service (i.e., the L3NM) may
          be mapped to an external view that is visible to customers: the L3VPN
          Service Model (L3SM) <xref target="RFC8299" format="default" sectionFormat="of" derivedContent="RFC8299"/>.
          </t>
          <t indent="0" pn="section-5-4.2.3">The L3NM can be fed with inputs that are
          requested by customers. Such requests typically rely upon an L3SM template.
          Concretely, some parts of the L3SM module can be directly mapped
          to the L3NM, while other parts are generated as a function of the
          requested service and local guidelines. Some other parts are local
          to the service provider and do not map directly to the L3SM.</t>
          <t indent="0" pn="section-5-4.2.4">Note that using the L3NM within a service provider does not
          assume, nor does it preclude, exposing the VPN service via the L3SM.
          This is deployment specific. Nevertheless, the design of the L3NM tries
          to align as much as possible with the features supported by the L3SM
          to ease the grafting of both the L3NM and the L3SM for the sake of highly automated
          VPN service provisioning and delivery.</t>
        </dd>
        <dt pn="section-5-4.3">Network Topology Modules:</dt>
        <dd pn="section-5-4.4">An L3VPN involves nodes that
          are part of a topology managed by the service provider network. The
          topology can be represented using the network topology YANG module
          defined in <xref target="RFC8345" format="default" sectionFormat="of" derivedContent="RFC8345"/> or its extension, such as a
          network YANG module for Service Attachment Points (SAPs) <xref target="YANG-SAPs" format="default" sectionFormat="of" derivedContent="YANG-SAPs"/>.</dd>
        <dt pn="section-5-4.5">Device Modules:</dt>
        <dd pn="section-5-4.6">
          <t indent="0" pn="section-5-4.6.1">The L3NM is not a device model.</t>
          <t indent="0" pn="section-5-4.6.2">Once a global VPN service is captured by means of the
          L3NM, the actual activation and provisioning of the VPN service will
          involve a variety of device modules to tweak the required functions
          for the delivery of the service. These functions are supported by
          the VPN nodes and can be managed using device YANG modules. A
          non-comprehensive list of such device YANG modules is provided
          below:</t>
          <ul spacing="normal" bare="false" empty="false" indent="3" pn="section-5-4.6.3">
            <li pn="section-5-4.6.3.1">Routing management <xref target="RFC8349" format="default" sectionFormat="of" derivedContent="RFC8349"/>.</li>
            <li pn="section-5-4.6.3.2">BGP <xref target="I-D.ietf-idr-bgp-model" format="default" sectionFormat="of" derivedContent="BGP-YANG"/>.</li>
            <li pn="section-5-4.6.3.3">PIM <xref target="PIM-YANG" format="default" sectionFormat="of" derivedContent="PIM-YANG"/>.</li>
            <li pn="section-5-4.6.3.4">NAT management <xref target="RFC8512" format="default" sectionFormat="of" derivedContent="RFC8512"/>.</li>
            <li pn="section-5-4.6.3.5">QoS management <xref target="I-D.ietf-rtgwg-qos-model" format="default" sectionFormat="of" derivedContent="QoS-YANG"/>.</li>
            <li pn="section-5-4.6.3.6">ACLs <xref target="RFC8519" format="default" sectionFormat="of" derivedContent="RFC8519"/>.</li>
          </ul>
          <t indent="0" pn="section-5-4.6.4">How the L3NM is used to derive
          device-specific actions is implementation specific.</t>
        </dd>
      </dl>
    </section>
    <section anchor="Use_of_the_data_model" numbered="true" toc="include" removeInRFC="false" pn="section-6">
      <name slugifiedName="name-sample-uses-of-the-l3nm-dat">Sample Uses of the L3NM Data Model</name>
      <t indent="0" pn="section-6-1">This section provides a non-exhaustive list of examples that illustrate
      contexts where the L3NM can be used.</t>
      <section anchor="enterprise_services" numbered="true" toc="include" removeInRFC="false" pn="section-6.1">
        <name slugifiedName="name-enterprise-layer-3-vpn-serv">Enterprise Layer 3 VPN Services</name>
        <t indent="0" pn="section-6.1-1">Enterprise L3VPNs are one of the most demanded services for
        carriers; therefore, L3NM can be useful for automating the
        provisioning and maintenance of these VPNs. Templates and batch
        processes can be built, and as a result many parameters are needed for
        the creation from scratch of a VPN that can be abstracted to the upper
        Software-Defined Networking (SDN) layer <xref target="RFC7149" format="default" sectionFormat="of" derivedContent="RFC7149"/> <xref target="RFC7426" format="default" sectionFormat="of" derivedContent="RFC7426"/>, but some manual intervention will
        still be required.</t>
        <t indent="0" pn="section-6.1-2">A common function that is supported by VPNs is the addition or
        removal of VPN nodes. Workflows can use the L3NM in these scenarios to
        add or prune nodes from the network data model as required.</t>
      </section>
      <section anchor="mdrmanagement" numbered="true" toc="include" removeInRFC="false" pn="section-6.2">
        <name slugifiedName="name-multi-domain-resource-manag">Multi-Domain Resource Management</name>
        <t indent="0" pn="section-6.2-1">The implementation of L3VPN services that span
        administratively separated domains (i.e., that are under the
        administration of different management systems or controllers)
        requires some network resources to be synchronized between systems.
        Particularly, resources must be adequately managed in each domain to
        avoid broken configurations.</t>
        <t indent="0" pn="section-6.2-2">For example, route targets (RTs) shall be synchronized between PEs.
        When all PEs are controlled by the same management system, RT
        allocation can be performed by that management system. In cases where
        the service spans multiple management systems, the task of
        allocating RTs has to be aligned across the domains; therefore, the
        network model must provide a way to specify RTs. In addition, route
        distinguishers (RDs) must also be synchronized to avoid collisions of
        RD allocations between separate management systems. An incorrect
        allocation might lead to the same RD and IP prefixes being exported by
        different PEs.</t>
      </section>
      <section anchor="ms_management" numbered="true" toc="include" removeInRFC="false" pn="section-6.3">
        <name slugifiedName="name-management-of-multicast-ser">Management of Multicast Services</name>
        <t indent="0" pn="section-6.3-1">Multicast services over L3VPNs can be implemented using dual PIM
        MVPNs (also known as the draft-rosen model) <xref target="RFC6037" format="default" sectionFormat="of" derivedContent="RFC6037"/> 
        or MVPNs based on Multiprotocol BGP (MP-BGP) <xref target="RFC6513" format="default" sectionFormat="of" derivedContent="RFC6513"/>
          <xref target="RFC6514" format="default" sectionFormat="of" derivedContent="RFC6514"/>.  Both
        methods are supported and equally effective, but the main difference
        is that MP-BGP-based MVPNs do not require multicast configuration on
        the service provider network. MP-BGP MVPNs employ the intra-AS BGP control plane and PIM Sparse Mode <xref target="RFC7761" format="default" sectionFormat="of" derivedContent="RFC7761"/> as the data plane. The
        PIM state information is maintained between PEs using the same
        architecture that is used for unicast VPNs.</t>
        <t indent="0" pn="section-6.3-2">On the other hand, <xref target="RFC6037" format="default" sectionFormat="of" derivedContent="RFC6037"/> has limitations,
        such as reduced options for transport, control plane scalability,
        availability, operational inconsistency, and the need to maintain
        state in the backbone. Because of these limitations, MP-BGP MVPNs provide the
        architectural model that has been taken as the base for implementing
        multicast services in L3VPNs. In this scenario, BGP is used to
        autodiscover MVPN PE members and the customer PIM signaling is sent
        across the provider's core through MP-BGP. The multicast traffic is
        transported on MPLS Point-to-Multipoint (P2MP) Label Switched Paths (LSPs).</t>
      </section>
    </section>
    <section anchor="YANG_explanation" numbered="true" toc="include" removeInRFC="false" pn="section-7">
      <name slugifiedName="name-description-of-the-l3nm-yan">Description of the L3NM YANG Module</name>
      <t indent="0" pn="section-7-1">The L3NM ("ietf-l3vpn-ntw") is defined to manage L3VPNs in a service
      provider network. In particular, the "ietf-l3vpn-ntw" module can be used
      to create, modify, and retrieve L3VPN services of a network.</t>
      <t indent="0" pn="section-7-2">The full tree diagram of the module can be generated using the
      "pyang" tool <xref target="PYANG" format="default" sectionFormat="of" derivedContent="PYANG"/>. That tree is not included
      here because it is too long (<xref target="RFC8340" sectionFormat="of" section="3.3" format="default" derivedLink="https://rfc-editor.org/rfc/rfc8340#section-3.3" derivedContent="RFC8340"/>). Instead, subtrees are provided for the
      reader's convenience.</t>
      <section anchor="structure_model" numbered="true" toc="include" removeInRFC="false" pn="section-7.1">
        <name slugifiedName="name-overall-structure-of-the-mo">Overall Structure of the Module</name>
        <t indent="0" pn="section-7.1-1">The "ietf-l3vpn-ntw" module uses two main containers:
        'vpn-profiles' and 'vpn-services' (see <xref target="ietf-l3vpn-ntw_tree" format="default" sectionFormat="of" derivedContent="Figure 3"/>).</t>
        <t indent="0" pn="section-7.1-2">The 'vpn-profiles' container is used by the provider to maintain a
        set of common VPN profiles that apply to one or several VPN services
        (<xref target="vpn_profiles" format="default" sectionFormat="of" derivedContent="Section 7.2"/>).</t>
        <t indent="0" pn="section-7.1-3">The 'vpn-services' container maintains the set of VPN services
        managed within the service provider network. The 'vpn-service' is the data
        structure that abstracts a VPN service (<xref target="vpn_service" format="default" sectionFormat="of" derivedContent="Section 7.3"/>).</t>
        <figure anchor="ietf-l3vpn-ntw_tree" align="left" suppress-title="false" pn="figure-3">
          <name slugifiedName="name-overall-l3nm-tree-structure">Overall L3NM Tree Structure</name>
          <sourcecode name="" type="yangtree" markers="false" pn="section-7.1-4.1">module: ietf-l3vpn-ntw
  +--rw l3vpn-ntw
     +--rw vpn-profiles
     |  ...
     +--rw vpn-services
        +--rw vpn-service* [vpn-id]
           ...
           +--rw vpn-nodes
              +--rw vpn-node* [vpn-node-id]
                 ...
                 +--rw vpn-network-accesses
                    +--rw vpn-network-access* [id]
                       ...
</sourcecode>
        </figure>
        <t indent="0" pn="section-7.1-5">Some of the data nodes are keyed by the address family. For the
        sake of data representation compactness, it is <bcp14>RECOMMENDED</bcp14> to use the
        dual-stack address family for data nodes that have the same value for
        both IPv4 and IPv6. If, for some reason, a data node is present for
        both dual-stack and IPv4 (or IPv6), the value that is indicated under
        dual-stack takes precedence over the value that is indicated under IPv4
        (or IPv6).</t>
      </section>
      <section anchor="vpn_profiles" numbered="true" toc="include" removeInRFC="false" pn="section-7.2">
        <name slugifiedName="name-vpn-profiles">VPN Profiles</name>
        <t indent="0" pn="section-7.2-1">The 'vpn-profiles' container (<xref target="vpn_profiles_tree" format="default" sectionFormat="of" derivedContent="Figure 4"/>) allows the VPN service provider to
        define and maintain a set of VPN profiles <xref target="RFC9181" format="default" sectionFormat="of" derivedContent="RFC9181"/> that apply to one or
        several VPN services.</t>
        <figure anchor="vpn_profiles_tree" align="left" suppress-title="false" pn="figure-4">
          <name slugifiedName="name-vpn-profiles-subtree-struct">VPN Profiles Subtree Structure</name>
          <sourcecode name="" type="yangtree" markers="false" pn="section-7.2-2.1">  +--rw l3vpn-ntw
     +--rw vpn-profiles
     |  +--rw valid-provider-identifiers
     |     +--rw external-connectivity-identifier* [id]
     |     |       {external-connectivity}?
     |     |  +--rw id    string
     |     +--rw encryption-profile-identifier* [id]
     |     |  +--rw id    string
     |     +--rw qos-profile-identifier* [id]
     |     |  +--rw id    string
     |     +--rw bfd-profile-identifier* [id]
     |     |  +--rw id    string
     |     +--rw forwarding-profile-identifier* [id]
     |     |  +--rw id    string
     |     +--rw routing-profile-identifier* [id]
     |        +--rw id    string
     +--rw vpn-services
        ...
</sourcecode>
        </figure>
        <t indent="0" pn="section-7.2-3">This document does not make any assumption about the exact
        definition of these profiles. The exact definition of the profiles is
        local to each VPN service provider. The model only includes an
        identifier for these profiles in order to facilitate identifying and
        binding local policies when building a VPN service. As shown in <xref target="vpn_profiles_tree" format="default" sectionFormat="of" derivedContent="Figure 4"/>, the following identifiers can be
        included:</t>
        <dl newline="false" spacing="normal" indent="3" pn="section-7.2-4">
          <dt pn="section-7.2-4.1">'external-connectivity-identifier':</dt>
          <dd pn="section-7.2-4.2">This identifier
            refers to a profile that defines the external connectivity
            provided to a VPN service (or a subset of VPN sites). External
            connectivity may be access to the Internet or restricted
            connectivity, such as access to a public/private cloud.</dd>
          <dt pn="section-7.2-4.3">'encryption-profile-identifier':</dt>
          <dd pn="section-7.2-4.4">An encryption
            profile refers to a set of policies related to the encryption
            schemes and setup that can be applied when building and offering a
            VPN service.</dd>
          <dt pn="section-7.2-4.5">'qos-profile-identifier':</dt>
          <dd pn="section-7.2-4.6">A Quality of Service (QoS)
            profile refers to a set of policies, such as classification,
            marking, and actions (e.g., <xref target="RFC3644" format="default" sectionFormat="of" derivedContent="RFC3644"/>).</dd>
          <dt pn="section-7.2-4.7">'bfd-profile-identifier':</dt>
          <dd pn="section-7.2-4.8">A Bidirectional Forwarding
            Detection (BFD) profile refers to a set of BFD policies <xref target="RFC5880" format="default" sectionFormat="of" derivedContent="RFC5880"/> that can be invoked when
            building a VPN service.</dd>
          <dt pn="section-7.2-4.9">'forwarding-profile-identifier':</dt>
          <dd pn="section-7.2-4.10">A forwarding
            profile refers to the policies that apply to the forwarding of
            packets conveyed within a VPN. Such policies may consist, for
            example, of applying Access Control Lists (ACLs).</dd>
          <dt pn="section-7.2-4.11">'routing-profile-identifier':</dt>
          <dd pn="section-7.2-4.12">A routing profile
            refers to a set of routing policies that will be invoked (e.g.,
            BGP policies) when delivering the VPN service.</dd>
        </dl>
      </section>
      <section anchor="vpn_service" numbered="true" toc="include" removeInRFC="false" pn="section-7.3">
        <name slugifiedName="name-vpn-services">VPN Services</name>
        <t indent="0" pn="section-7.3-1">The 'vpn-service' is the data structure that abstracts a VPN
        service in the service provider network. Each 'vpn-service' is
        uniquely identified by an identifier: 'vpn-id'. Such a 'vpn-id' is only
        meaningful locally (e.g., the network controller). The subtree of the
        'vpn-services' is shown in <xref target="vpn-service_tree" format="default" sectionFormat="of" derivedContent="Figure 5"/>.</t>
        <figure anchor="vpn-service_tree" align="left" suppress-title="false" pn="figure-5">
          <name slugifiedName="name-vpn-services-subtree-struct">VPN Services Subtree Structure</name>
          <sourcecode name="" type="yangtree" markers="false" pn="section-7.3-2.1">  +--rw l3vpn-ntw
     +--rw vpn-profiles
     |  ...
     +--rw vpn-services
        +--rw vpn-service* [vpn-id]
           +--rw vpn-id                   vpn-common:vpn-id
           +--rw vpn-name?                string
           +--rw vpn-description?         string
           +--rw customer-name?           string
           +--rw parent-service-id?       vpn-common:vpn-id
           +--rw vpn-type?                identityref
           +--rw vpn-service-topology?    identityref
           +--rw status
           |  +--rw admin-status
           |  |  +--rw status?         identityref
           |  |  +--rw last-change?   yang:date-and-time
           |  +--ro oper-status
           |     +--ro status?         identityref
           |     +--ro last-change?   yang:date-and-time
           +--rw vpn-instance-profiles
           |  ...
           +--rw underlay-transport
           |  +-- (type)?
           |     +--:(abstract)
           |     |  +--rw transport-instance-id?   string
           |     |  +--rw instance-type?           identityref
           |     +--:(protocol)
           |        +--rw protocol*                identityref
           +--rw external-connectivity
           |                   {vpn-common:external-connectivity}?
           |  +--rw (profile)?
           |     +--:(profile)
           |        +--rw profile-name?            leafref
           +--rw vpn-nodes
              ...
</sourcecode>
        </figure>
        <t indent="0" pn="section-7.3-3">The descriptions of the VPN service data nodes that are depicted in
        <xref target="vpn-service_tree" format="default" sectionFormat="of" derivedContent="Figure 5"/> are as follows:</t>
        <dl newline="false" spacing="normal" indent="3" pn="section-7.3-4">
          <dt pn="section-7.3-4.1">'vpn-id':</dt>
          <dd pn="section-7.3-4.2">An identifier that is used to uniquely
            identify the L3VPN service within the L3NM scope.</dd>
          <dt pn="section-7.3-4.3">'vpn-name':</dt>
          <dd pn="section-7.3-4.4">Associates a name with the service in
            order to facilitate the identification of the service.</dd>
          <dt pn="section-7.3-4.5">'vpn-description':</dt>
          <dd pn="section-7.3-4.6">
            <t indent="0" pn="section-7.3-4.6.1">Includes a textual description of
            the service. </t>
            <t indent="0" pn="section-7.3-4.6.2">The internal structure of a
            VPN description is local to each VPN service provider.</t>
          </dd>
          <dt pn="section-7.3-4.7">'customer-name':</dt>
          <dd pn="section-7.3-4.8">Indicates the name of the customer
            who ordered the service.</dd>
          <dt pn="section-7.3-4.9">'parent-service-id':</dt>
          <dd pn="section-7.3-4.10">Refers to an identifier of the
            parent service (e.g., L3SM, IETF network slice, VPN+) that
            triggered the creation of the VPN service. This identifier is used
            to easily correlate the (network) service as built in the network
            with a service order. A controller can use that correlation to
            enrich or populate some fields (e.g., description fields) as a
            function of local deployments.</dd>
          <dt pn="section-7.3-4.11">'vpn-type':</dt>
          <dd pn="section-7.3-4.12">Indicates the VPN type. The values are
            taken from <xref target="RFC9181" format="default" sectionFormat="of" derivedContent="RFC9181"/>. For
            the L3NM, this is typically set to "BGP/MPLS L3VPN", but other
            values may be defined to support specific Layer 3
            VPN capabilities (e.g., <xref target="RFC9136" format="default" sectionFormat="of" derivedContent="RFC9136"/>).</dd>
          <dt pn="section-7.3-4.13">'vpn-service-topology':</dt>
          <dd pn="section-7.3-4.14">Indicates the network
            topology for the service: 'hub-spoke', 'any-to-any', or 'custom'. The
            network implementation of this attribute is defined by the correct
            usage of import and export targets (<xref target="RFC4364" sectionFormat="of" section="4.3.5" format="default" derivedLink="https://rfc-editor.org/rfc/rfc4364#section-4.3.5" derivedContent="RFC4364"/>).</dd>
          <dt pn="section-7.3-4.15">'status':</dt>
          <dd pn="section-7.3-4.16">
            <t indent="0" pn="section-7.3-4.16.1">Used to track the service status of a
            given VPN service. Both operational status and administrative status are
            maintained together with a timestamp. For example, a service can
            be created but not put into effect.</t>
            <t indent="0" pn="section-7.3-4.16.2">Administrative status and operational status can be used
            as a trigger to detect service anomalies. For example, a service
            that is declared active at the service layer but is still
            inactive at the network layer may be an indication that network
            provision actions are needed to align the observed service status
            with the expected service status.</t>
          </dd>
          <dt pn="section-7.3-4.17">'vpn-instance-profiles':</dt>
          <dd pn="section-7.3-4.18">
            <t indent="0" pn="section-7.3-4.18.1">Defines reusable parameters
            for the same 'vpn-service'. </t>
            <t indent="0" pn="section-7.3-4.18.2">More details
            are provided in <xref target="ie_profiles" format="default" sectionFormat="of" derivedContent="Section 7.4"/>.</t>
          </dd>
          <dt pn="section-7.3-4.19">'underlay-transport':</dt>
          <dd pn="section-7.3-4.20">
            <t indent="0" pn="section-7.3-4.20.1">Describes the preference for
            the transport technology to carry the traffic of the VPN service.
            This preference is especially useful in networks with multiple
            domains and Network-to-Network Interface (NNI) types. The underlay
            transport can be expressed as an abstract transport instance
            (e.g., an identifier of a VPN+ instance, a virtual network
            identifier, or a network slice name) or as an ordered list of the
            actual protocols to be enabled in the network. </t>
            <t indent="0" pn="section-7.3-4.20.2">A rich set of protocol identifiers that can be
            used to refer to an underlay transport are defined in <xref target="RFC9181" format="default" sectionFormat="of" derivedContent="RFC9181"/>.</t>
          </dd>
          <dt pn="section-7.3-4.21">'external-connectivity':</dt>
          <dd pn="section-7.3-4.22">
            <t indent="0" pn="section-7.3-4.22.1">Indicates whether/how
            external connectivity is provided to the VPN service. For example,
            a service provider may provide external connectivity to a VPN
            customer (e.g., to a public cloud). Such a service may involve
            tweaking both filtering and NAT rules (e.g., binding a Virtual
            Routing and Forwarding (VRF) interface with a NAT instance as
            discussed in <xref target="RFC8512" sectionFormat="of" section="2.10" format="default" derivedLink="https://rfc-editor.org/rfc/rfc8512#section-2.10" derivedContent="RFC8512"/>).
            These value-added features may be bound to all, or a subset of,
            network accesses. Some of these value-added features may be
            implemented in a PE or in nodes other than PEs (e.g., a P node or
            even a dedicated node that hosts the NAT function). </t>
            <t indent="0" pn="section-7.3-4.22.2">Only a pointer to a local profile that defines
            the external-connectivity feature is supported in this
            document.</t>
          </dd>
          <dt pn="section-7.3-4.23">'vpn-node':</dt>
          <dd pn="section-7.3-4.24">
            <t indent="0" pn="section-7.3-4.24.1">An abstraction that represents a set
            of policies applied to a network node and belonging to a single
            'vpn-service'. A VPN service is typically built by adding
            instances of 'vpn-node' to the 'vpn-nodes' container. </t>
            <t indent="0" pn="section-7.3-4.24.2">A 'vpn-node' contains 'vpn-network-accesses',
            which are the interfaces attached to the VPN by which the customer
            traffic is received. Therefore, the customer sites are connected
            to the 'vpn-network-accesses'.</t>
            <t indent="0" pn="section-7.3-4.24.3">Note that
            because this is a network data model, information about customers'
            sites is not required in the model. Rather, such information is 
            relevant in the L3SM. Whether that information is included in the
            L3NM, e.g., to populate the various 'description' data nodes, is
            implementation specific. </t>
            <t indent="0" pn="section-7.3-4.24.4">More details are
            provided in <xref target="vpn_node" format="default" sectionFormat="of" derivedContent="Section 7.5"/>.</t>
          </dd>
        </dl>
      </section>
      <section anchor="ie_profiles" numbered="true" toc="include" removeInRFC="false" pn="section-7.4">
        <name slugifiedName="name-vpn-instance-profiles">VPN Instance Profiles</name>
        <t indent="0" pn="section-7.4-1">VPN instance profiles are meant to factorize data nodes that are
        used at many levels of the model. Generic VPN instance profiles are
        defined at the VPN service level and then called at the VPN node and
        VPN network access levels. Each VPN instance profile is identified by
        'profile-id'. This identifier is then referenced for one or multiple
        VPN nodes (<xref target="vpn_node" format="default" sectionFormat="of" derivedContent="Section 7.5"/>) so that the controller can
        identify generic resources (e.g., RTs and RDs) to be configured for a
        given VRF instance.</t>
        <t indent="0" pn="section-7.4-2">The subtree of the 'vpn-instance-profiles' is shown in <xref target="ie" format="default" sectionFormat="of" derivedContent="Figure 6"/>.</t>
        <figure anchor="ie" align="left" suppress-title="false" pn="figure-6">
          <name slugifiedName="name-subtree-structure-of-vpn-in">Subtree Structure of VPN Instance Profiles</name>
          <sourcecode name="" type="yangtree" markers="false" pn="section-7.4-3.1">  +--rw l3vpn-ntw
     +--rw vpn-profiles
     |  ...
     +--rw vpn-services
        +--rw vpn-service* [vpn-id]
           +--rw vpn-id                   vpn-common:vpn-id
           ...
           +--rw vpn-instance-profiles
           |  +--rw vpn-instance-profile* [profile-id]
           |     +--rw profile-id                 string
           |     +--rw role?                      identityref
           |     +--rw local-as?                  inet:as-number
           |     |      {vpn-common:rtg-bgp}?
           |     +--rw (rd-choice)?
           |     |  +--:(directly-assigned)
           |     |  |  +--rw rd?
           |     |  |         rt-types:route-distinguisher
           |     |  +--:(directly-assigned-suffix)
           |     |  |  +--rw rd-suffix?           uint16
           |     |  +--:(auto-assigned)
           |     |  |  +--rw rd-auto
           |     |  |     +--rw (auto-mode)?
           |     |  |     |  +--:(from-pool)
           |     |  |     |  |  +--rw rd-pool-name?   string
           |     |  |     |  +--:(full-auto)
           |     |  |     |     +--rw auto?           empty
           |     |  |     +--ro auto-assigned-rd?
           |     |  |          rt-types:route-distinguisher
           |     |  +--:(auto-assigned-suffix)
           |     |  |  +--rw rd-auto-suffix
           |     |  |     +--rw (auto-mode)?
           |     |  |     |  +--:(from-pool)
           |     |  |     |  |  +--rw rd-pool-name?        string
           |     |  |     |  +--:(full-auto)
           |     |  |     |     +--rw auto?                empty
           |     |  |     +--ro auto-assigned-rd-suffix?   uint16
           |     |  +--:(no-rd)
           |     |     +--rw no-rd?               empty
           |     +--rw address-family* [address-family]
           |     |  +--rw address-family          identityref
           |     |  +--rw vpn-targets
           |     |  |  +--rw vpn-target* [id]
           |     |  |  |  +--rw id                  uint8
           |     |  |  |  +--rw route-targets* [route-target]
           |     |  |  |  |  +--rw route-target
           |     |  |  |  |       rt-types:route-target
           |     |  |  |  +--rw route-target-type
           |     |  |  |          rt-types:route-target-type
           |     |  |  +--rw vpn-policies
           |     |  |     +--rw import-policy?   string
           |     |  |     +--rw export-policy?   string
           |     |  +--rw maximum-routes* [protocol]
           |     |     +--rw protocol          identityref
           |     |     +--rw maximum-routes?   uint32
           |     +--rw multicast {vpn-common:multicast}?
           |        ...
</sourcecode>
        </figure>
        <t indent="0" pn="section-7.4-4">The descriptions of the listed data nodes are as follows:</t>
        <dl newline="false" spacing="normal" indent="3" pn="section-7.4-5">
          <dt pn="section-7.4-5.1">'profile-id':</dt>
          <dd pn="section-7.4-5.2">Used to uniquely identify a VPN
            instance profile.</dd>
          <dt pn="section-7.4-5.3">'role':</dt>
          <dd pn="section-7.4-5.4">Indicates the role of the VPN instance
            profile in the VPN. Role values are defined in <xref target="RFC9181" format="default" sectionFormat="of" derivedContent="RFC9181"/> (e.g.,
            'any-to-any-role', 'spoke-role', 'hub-role').</dd>
          <dt pn="section-7.4-5.5">'local-as':</dt>
          <dd pn="section-7.4-5.6">Indicates the Autonomous System Number
            (ASN) that is configured for the VPN node.</dd>
          <dt pn="section-7.4-5.7">'rd':</dt>
          <dd pn="section-7.4-5.8">
            <t indent="0" pn="section-7.4-5.8.1">As defined in <xref target="RFC9181" format="default" sectionFormat="of" derivedContent="RFC9181"/>, the following RD
            assignment modes are supported: direct assignment, full automatic
            assignment, automatic assignment from a given pool, and no
            assignment. For illustration purposes, the following modes can be
            used in the deployment cases:</t>
            <dl newline="false" spacing="normal" indent="3" pn="section-7.4-5.8.2">
              <dt pn="section-7.4-5.8.2.1">'directly-assigned':</dt>
              <dd pn="section-7.4-5.8.2.2">The VPN service provider
                (service orchestrator) assigns RDs explicitly. This case will
                fit with a brownfield scenario where some existing services
                need to be updated by the VPN service provider.</dd>
              <dt pn="section-7.4-5.8.2.3">'full-auto':</dt>
              <dd pn="section-7.4-5.8.2.4">The network controller auto-assigns
                RDs. This can apply for the deployment of new services.</dd>
              <dt pn="section-7.4-5.8.2.5">'no-rd':</dt>
              <dd pn="section-7.4-5.8.2.6">The VPN service provider (service
                orchestrator) explicitly wants no RD to be assigned. This case
                can be used for CE testing within the network or for
                troubleshooting proposes.</dd>
            </dl>
            <t indent="0" pn="section-7.4-5.8.3">Also, the module accommodates deployments where only the
            Assigned Number subfield of RDs (<xref target="RFC4364" sectionFormat="of" section="4.2" format="default" derivedLink="https://rfc-editor.org/rfc/rfc4364#section-4.2" derivedContent="RFC4364"/>) is assigned from a pool while the
            Administrator subfield is set to, for example, the Router ID that is
            assigned to a VPN node. The module supports these modes for
            managing the Assigned Number subfield: explicit assignment,
            auto-assignment from a pool, and full auto-assignment.</t>
          </dd>
          <dt pn="section-7.4-5.9">'address-family':</dt>
          <dd pn="section-7.4-5.10">
            <t indent="0" pn="section-7.4-5.10.1">Includes a set of data nodes per address family:</t>
            <dl newline="false" spacing="normal" indent="3" pn="section-7.4-5.10.2">
              <dt pn="section-7.4-5.10.2.1">'address-family':</dt>
              <dd pn="section-7.4-5.10.2.2">Identifies the address family.
                It can be set to 'ipv4', 'ipv6', or 'dual-stack'.</dd>
              <dt pn="section-7.4-5.10.2.3">'vpn-targets':</dt>
              <dd pn="section-7.4-5.10.2.4">Specifies RT import/export rules
                for the VPN service (<xref target="RFC4364" sectionFormat="of" section="4.3" format="default" derivedLink="https://rfc-editor.org/rfc/rfc4364#section-4.3" derivedContent="RFC4364"/>).</dd>
              <dt pn="section-7.4-5.10.2.5">'maximum-routes':</dt>
              <dd pn="section-7.4-5.10.2.6">Indicates the maximum number
                of prefixes that the VPN node can accept for a given routing
                protocol. If 'protocol' is set to 'any', this means that the
                maximum value applies to each active routing protocol.</dd>
            </dl>
          </dd>
          <dt pn="section-7.4-5.11">'multicast':</dt>
          <dd pn="section-7.4-5.12">Enables multicast traffic in the VPN
            service. Refer to <xref target="mc" format="default" sectionFormat="of" derivedContent="Section 7.7"/>.</dd>
        </dl>
      </section>
      <section anchor="vpn_node" numbered="true" toc="include" removeInRFC="false" pn="section-7.5">
        <name slugifiedName="name-vpn-nodes">VPN Nodes</name>
        <t indent="0" pn="section-7.5-1">The 'vpn-node' is an abstraction that represents a set of common
        policies applied on a given network node (typically, a PE) and belonging
        to one L3VPN service. The 'vpn-node' includes a parameter to indicate
        the network node on which it is applied. In the case that the 'ne-id'
        points to a specific PE, the 'vpn-node' will likely be mapped to a
        VRF instance in the node. However, the model also allows pointing to an
        abstract node. In this case, the network controller will decide how to
        split the 'vpn-node' into VRF instances.</t>
        <t indent="0" pn="section-7.5-2">The VPN node subtree structure is shown in <xref target="vpn-node_tree" format="default" sectionFormat="of" derivedContent="Figure 7"/>.</t>
        <figure anchor="vpn-node_tree" align="left" suppress-title="false" pn="figure-7">
          <name slugifiedName="name-vpn-node-subtree-structure">VPN Node Subtree Structure</name>
          <sourcecode name="" type="yangtree" markers="false" pn="section-7.5-3.1">  +--rw l3vpn-ntw
     +--rw vpn-profiles
     |  ...
     +--rw vpn-services
        +--rw vpn-service* [vpn-id]
           ...
           +--rw vpn-nodes
              +--rw vpn-node* [vpn-node-id]
                 +--rw vpn-node-id                vpn-common:vpn-id
                 +--rw description?               string
                 +--rw ne-id?                     string
                 +--rw local-as?                  inet:as-number
                 |       {vpn-common:rtg-bgp}?
                 +--rw router-id?                 rt-types:router-id
                 +--rw active-vpn-instance-profiles
                 |  +--rw vpn-instance-profile* [profile-id]
                 |     +--rw profile-id                 leafref
                 |     +--rw router-id* [address-family]
                 |     |  +--rw address-family    identityref
                 |     |  +--rw router-id?        inet:ip-address
                 |     +--rw local-as?            inet:as-number
                 |     |     {vpn-common:rtg-bgp}?
                 |     +--rw (rd-choice)?
                 |     |  ....
                 |     +--rw address-family* [address-family]
                 |     |  +--rw address-family          identityref
                 |     |  |  ...
                 |     |  +--rw vpn-targets
                 |     |  |  ...
                 |     |  +--rw maximum-routes* [protocol]
                 |     |     ...
                 |     +--rw multicast {vpn-common:multicast}?
                 |        ...
                 +--rw msdp {msdp}?
                 |  +--rw peer?            inet:ipv4-address
                 |  +--rw local-address?   inet:ipv4-address
                 |  +--rw status
                 |     +--rw admin-status
                 |     |  +--rw status?         identityref
                 |     |  +--rw last-change?   yang:date-and-time
                 |     +--ro oper-status
                 |        +--ro status?         identityref
                 |        +--ro last-change?   yang:date-and-time
                 +--rw groups
                 |  +--rw group* [group-id]
                 |     +--rw group-id    string
                 +--rw status
                 |  +--rw admin-status
                 |  |  +--rw status?         identityref
                 |  |  +--rw last-change?   yang:date-and-time
                 |  +--ro oper-status
                 |     +--ro status?         identityref
                 |     +--ro last-change?   yang:date-and-time
                 +--rw vpn-network-accesses
                    ...
</sourcecode>
        </figure>
        <t indent="0" pn="section-7.5-4">The descriptions of the 'vpn-node' data nodes (<xref target="vpn-node_tree" format="default" sectionFormat="of" derivedContent="Figure 7"/>) are as follows:</t>
        <dl newline="false" spacing="normal" indent="3" pn="section-7.5-5">
          <dt pn="section-7.5-5.1">'vpn-node-id':</dt>
          <dd pn="section-7.5-5.2">An identifier that uniquely
            identifies a node that enables a VPN network access.</dd>
          <dt pn="section-7.5-5.3">'description':</dt>
          <dd pn="section-7.5-5.4">Provides a textual description of the
            VPN node.</dd>
          <dt pn="section-7.5-5.5">'ne-id':</dt>
          <dd pn="section-7.5-5.6">Includes a unique identifier of the network
            element where the VPN node is deployed.</dd>
          <dt pn="section-7.5-5.7">'local-as':</dt>
          <dd pn="section-7.5-5.8">Indicates the ASN that is
            configured for the VPN node.</dd>
          <dt pn="section-7.5-5.9">'router-id':</dt>
          <dd pn="section-7.5-5.10">Indicates a 32-bit number that is used
            to uniquely identify a router within an AS.</dd>
          <dt pn="section-7.5-5.11">'active-vpn-instance-profiles':</dt>
          <dd pn="section-7.5-5.12">
            <t indent="0" pn="section-7.5-5.12.1">Lists the set of
            active VPN instance profiles for this VPN node. Concretely, one or
            more VPN instance profiles that are defined at the VPN service
            level can be enabled at the VPN node level; each of these profiles
            is uniquely identified by means of 'profile-id'. The structure of
            'active-vpn-instance-profiles' is the same as the structure discussed in
            <xref target="ie_profiles" format="default" sectionFormat="of" derivedContent="Section 7.4"/>, except that the structure of
 'active-vpn-instance-profiles' includes 'router-id' but does not include the 'role' leaf. The value
            of 'router-id' indicated under 'active-vpn-instance-profiles'
            takes precedence over the 'router-id' under the 'vpn-node' for the
            indicated address family. For example, Router IDs can be
            configured per address family. This capability can be used, for
            example, to configure an IPv6 address as a Router ID when such a
            capability is supported by involved routers. </t>
            <t indent="0" pn="section-7.5-5.12.2">Values defined in 'active-vpn-instance-profiles'
            override the values defined at the VPN service level. An example is
            shown in <xref target="app-ex" format="default" sectionFormat="of" derivedContent="Appendix A.3"/>.</t>
          </dd>
          <dt pn="section-7.5-5.13">'msdp':</dt>
          <dd pn="section-7.5-5.14">For redundancy purposes, the Multicast Source
            Discovery Protocol (MSDP) <xref target="RFC3618" format="default" sectionFormat="of" derivedContent="RFC3618"/> may be
            enabled and used to share state information about sources between multiple
            Rendezvous Points (RPs). The purpose of MSDP in this context is to
            enhance the robustness of the multicast service. MSDP may be
            configured on non-RP routers; this is useful in a domain that
            does not support multicast sources but does support multicast
            transit.</dd>
          <dt pn="section-7.5-5.15">'groups':</dt>
          <dd pn="section-7.5-5.16">Lists the groups to which a VPN node
            belongs <xref target="RFC9181" format="default" sectionFormat="of" derivedContent="RFC9181"/>. For example, the
            'group-id' is used to associate redundancy or protection
            constraints with VPN nodes.</dd>
          <dt pn="section-7.5-5.17">'status':</dt>
          <dd pn="section-7.5-5.18">Tracks the status of a node involved in a
            VPN service. Both operational status and administrative status are
            maintained. A mismatch between the administrative status vs. the
            operational status can be used as a trigger to detect
            anomalies.</dd>
          <dt pn="section-7.5-5.19">'vpn-network-accesses':</dt>
          <dd pn="section-7.5-5.20">
            <t indent="0" pn="section-7.5-5.20.1">Represents the point to
            which sites are connected. </t>
            <t indent="0" pn="section-7.5-5.20.2">Note that
            unlike the L3SM, the L3NM does not need to model the customer
            site -- only the points that receive traffic from the site
            (i.e., the PE side of Provider Edge to Customer Edge (PE-CE) connections). Hence, the VPN network
            access contains the connectivity information between the
            provider's network and the customer premises. The VPN profiles
            ('vpn-profiles') have a set of routing policies that can be
            applied during the service creation. </t>
            <t indent="0" pn="section-7.5-5.20.3">See
            <xref target="sna" format="default" sectionFormat="of" derivedContent="Section 7.6"/> for more details.</t>
          </dd>
        </dl>
      </section>
      <section anchor="sna" numbered="true" toc="include" removeInRFC="false" pn="section-7.6">
        <name slugifiedName="name-vpn-network-accesses">VPN Network Accesses</name>
        <t indent="0" pn="section-7.6-1">The 'vpn-network-access' includes a set of data nodes that describe
        the access information for the traffic that belongs to a particular
        L3VPN (<xref target="vpnaccess" format="default" sectionFormat="of" derivedContent="Figure 8"/>).</t>
        <figure anchor="vpnaccess" align="left" suppress-title="false" pn="figure-8">
          <name slugifiedName="name-vpn-network-access-subtree-">VPN Network Access Subtree Structure</name>
          <sourcecode name="" type="yangtree" markers="false" pn="section-7.6-2.1">...
+--rw vpn-nodes
   +--rw vpn-node* [vpn-node-id]
      ...
      +--rw vpn-network-accesses
         +--rw vpn-network-access* [id]
            +--rw id                         vpn-common:vpn-id
            +--rw interface-id?              string
            +--rw description?               string
            +--rw vpn-network-access-type?   identityref
            +--rw vpn-instance-profile?      leafref
            +--rw status
            |  +--rw admin-status
            |  |  +--rw status?         identityref
            |  |  +--rw last-change?   yang:date-and-time
            |  +--ro oper-status
            |     +--ro status?         identityref
            |     +--ro last-change?   yang:date-and-time
            +--rw connection
            |  ...
            +--rw ip-connection
            |  ...
            +--rw routing-protocols
            |  ...
            +--rw oam
            |  ...
            +--rw security
            |  ...
            +--rw service
               ...
</sourcecode>
        </figure>
        <t indent="0" pn="section-7.6-3">A 'vpn-network-access' (<xref target="vpnaccess" format="default" sectionFormat="of" derivedContent="Figure 8"/>) includes the following data nodes:</t>
        <dl newline="false" spacing="normal" indent="3" pn="section-7.6-4">
          <dt pn="section-7.6-4.1">'id':</dt>
          <dd pn="section-7.6-4.2">An identifier of the VPN network
            access.</dd>
          <dt pn="section-7.6-4.3">'interface-id':</dt>
          <dd pn="section-7.6-4.4">Indicates the physical or logical
            interface on which the VPN network access is bound.</dd>
          <dt pn="section-7.6-4.5">'description':</dt>
          <dd pn="section-7.6-4.6">Includes a textual description of the
            VPN network access.</dd>
          <dt pn="section-7.6-4.7">'vpn-network-access-type':</dt>
          <dd pn="section-7.6-4.8">
            <t indent="0" pn="section-7.6-4.8.1">Used to select the
            type of network interface to be deployed in the devices. The
            available defined values are as follows:</t>
            <dl newline="false" spacing="normal" indent="3" pn="section-7.6-4.8.2">
              <dt pn="section-7.6-4.8.2.1">'point-to-point':</dt>
              <dd pn="section-7.6-4.8.2.2">Represents a direct connection
                between the endpoints. The controller must keep the
                association between a logical or physical interface on the
                device with the 'id' of the 'vpn-network-access'.</dd>
              <dt pn="section-7.6-4.8.2.3">'multipoint':</dt>
              <dd pn="section-7.6-4.8.2.4">Represents a multipoint connection
                between the customer site and the PEs. The controller must
                keep the association between a logical or physical interface
                on the device with the 'id' of the 'vpn-network-access'.</dd>
              <dt pn="section-7.6-4.8.2.5">'irb':</dt>
              <dd pn="section-7.6-4.8.2.6">Represents a connection coming from an
                L2VPN service. An identifier of such a service ('l2vpn-id') may
                be included in the 'connection' container, as depicted in <xref target="bearerethencap_tree" format="default" sectionFormat="of" derivedContent="Figure 9"/> (<xref target="connection" format="default" sectionFormat="of" derivedContent="Section 7.6.1"/>). The controller must keep
                the relationship between the logical tunnels or bridges on the
                devices with the 'id' of the 'vpn-network-access'.</dd>
              <dt pn="section-7.6-4.8.2.7">'loopback':</dt>
              <dd pn="section-7.6-4.8.2.8">Represents the creation of a logical
                interface on a device. An example that illustrates how a loopback
                interface can be used in the L3NM is provided in <xref target="loop" format="default" sectionFormat="of" derivedContent="Appendix A.2"/>.</dd>
            </dl>
          </dd>
          <dt pn="section-7.6-4.9">'vpn-instance-profile':</dt>
          <dd pn="section-7.6-4.10">Provides a pointer to an
            active VPN instance profile at the VPN node level. Referencing an
            active VPN instance profile implies that all associated data nodes
            will be inherited by the VPN network access. However, some
            inherited data nodes (e.g., multicast) can be overridden at the
            VPN network access level. In such a case, adjusted values take
            precedence over inherited values.</dd>
          <dt pn="section-7.6-4.11">'status':</dt>
          <dd pn="section-7.6-4.12">Indicates both operational status and
            administrative status of a VPN network access.</dd>
          <dt pn="section-7.6-4.13">'connection':</dt>
          <dd pn="section-7.6-4.14">Represents and groups the set of Layer
            2 connectivity from where the traffic of the L3VPN in a particular
            VPN network access is coming. See <xref target="connection" format="default" sectionFormat="of" derivedContent="Section 7.6.1"/>.</dd>
          <dt pn="section-7.6-4.15">'ip-connection':</dt>
          <dd pn="section-7.6-4.16">Contains Layer 3 connectivity
            information on a VPN network access (e.g., IP addressing). See
            <xref target="ip_conn" format="default" sectionFormat="of" derivedContent="Section 7.6.2"/>.</dd>
          <dt pn="section-7.6-4.17">'routing-protocols':</dt>
          <dd pn="section-7.6-4.18">Includes the CE-PE routing
            configuration information. See <xref target="rtg" format="default" sectionFormat="of" derivedContent="Section 7.6.3"/>.</dd>
          <dt pn="section-7.6-4.19">'oam':</dt>
          <dd pn="section-7.6-4.20">Specifies the Operations, Administration, and
            Maintenance (OAM) mechanisms used for a VPN network access. See
            <xref target="sec-oam" format="default" sectionFormat="of" derivedContent="Section 7.6.4"/>.</dd>
          <dt pn="section-7.6-4.21">'security':</dt>
          <dd pn="section-7.6-4.22">Specifies the authentication and the
            encryption to be applied for a given VPN network access. See <xref target="sec" format="default" sectionFormat="of" derivedContent="Section 7.6.5"/>.</dd>
          <dt pn="section-7.6-4.23">'service':</dt>
          <dd pn="section-7.6-4.24">Specifies the service parameters (e.g.,
            QoS, multicast) to apply for a given VPN network access. See <xref target="svc" format="default" sectionFormat="of" derivedContent="Section 7.6.6"/>.</dd>
        </dl>
        <section anchor="connection" numbered="true" toc="include" removeInRFC="false" pn="section-7.6.1">
          <name slugifiedName="name-connection">Connection</name>
          <t indent="0" pn="section-7.6.1-1">The 'connection' container represents the Layer 2 connectivity to
          the L3VPN for a particular VPN network access. As shown in the tree
          depicted in <xref target="bearerethencap_tree" format="default" sectionFormat="of" derivedContent="Figure 9"/>, the
          'connection' container defines protocols and parameters to enable
          such connectivity at Layer 2.</t>
          <t indent="0" pn="section-7.6.1-2">The traffic can enter the VPN with or without encapsulation
          (e.g., VLAN, QinQ). The 'encapsulation' container specifies the
          Layer 2 encapsulation to use (if any) and allows the configuration of the
          relevant tags.</t>
          <t indent="0" pn="section-7.6.1-3">The interface that is attached to the L3VPN is identified by the
          'interface-id' at the 'vpn-network-access' level. From a network
          model perspective, it is expected that the 'interface-id' is
          sufficient to identify the interface. However, specific Layer 2
          sub-interfaces may be required to be configured in some
          implementations/deployments. Such a Layer-2-specific interface can
          be included in 'l2-termination-point'.</t>
          <t indent="0" pn="section-7.6.1-4">If a Layer 2 tunnel is needed to terminate the service in the
          CE-PE connection, the 'l2-tunnel-service' container is used to
          specify the required parameters to set such a tunneling service (e.g.,
          a Virtual Private LAN Service (VPLS) or a Virtual eXtensible Local Area Network (VXLAN)). An identity called 'l2-tunnel-type' is defined for
          Layer 2 tunnel selection. The container can also identify the
          pseudowire (<xref target="RFC8077" sectionFormat="of" section="6.1" format="default" derivedLink="https://rfc-editor.org/rfc/rfc8077#section-6.1" derivedContent="RFC8077"/>).</t>
          <t indent="0" pn="section-7.6.1-5">As discussed in <xref target="sna" format="default" sectionFormat="of" derivedContent="Section 7.6"/>, 'l2vpn-id' is used to
          identify the L2VPN service that is associated with an Integrated Routing and Bridging (IRB)
          interface.</t>
          <t indent="0" pn="section-7.6.1-6">To accommodate implementations that require internal bridging, a
          local bridge reference can be specified in 'local-bridge-reference'.
          Such a reference may be a local bridge domain.</t>
          <t indent="0" pn="section-7.6.1-7">A site, as per <xref target="RFC4176" format="default" sectionFormat="of" derivedContent="RFC4176"/>, represents a VPN
          customer's location that is connected to the service provider
          network via a CE-PE link, which can access at least one VPN. The
          connection from the site to the service provider network is the
          bearer. Every site is associated with a list of bearers. A bearer is
          the Layer 2 connection with the site. In the L3NM, it is assumed
          that the bearer has been allocated by the service provider at the
          service orchestration stage. The bearer is associated with a network
          element and a port. Hence, a bearer is just a 'bearer-reference' to
          allow the association between a service request (e.g., the L3SM) and
          the L3NM.</t>
          <t indent="0" pn="section-7.6.1-8">The L3NM can be used to create a Link Aggregation Group (LAG) interface for a given L3VPN
          service ('lag-interface') <xref target="IEEE802.1AX" format="default" sectionFormat="of" derivedContent="IEEE802.1AX"/>. Such a
          LAG interface can be referenced under 'interface-id' (<xref target="sna" format="default" sectionFormat="of" derivedContent="Section 7.6"/>).</t>
          <figure anchor="bearerethencap_tree" align="left" suppress-title="false" pn="figure-9">
            <name slugifiedName="name-connection-subtree-structur">Connection Subtree Structure</name>
            <sourcecode name="" type="yangtree" markers="false" pn="section-7.6.1-9.1">...
+--rw connection
|  +--rw encapsulation
|  |  +--rw type?              identityref
|  |  +--rw dot1q
|  |  |  +--rw tag-type?   identityref
|  |  |  +--rw cvlan-id?   uint16
|  |  +--rw priority-tagged
|  |  |  +--rw tag-type?   identityref
|  |  +--rw qinq
|  |     +--rw tag-type?   identityref
|  |     +--rw svlan-id    uint16
|  |     +--rw cvlan-id    uint16
|  +--rw (l2-service)?
|  |  +--:(l2-tunnel-service)
|  |  |  +--rw l2-tunnel-service
|  |  |     +--rw type?         identityref
|  |  |     +--rw pseudowire
|  |  |     |  +--rw vcid?      uint32
|  |  |     |  +--rw far-end?   union
|  |  |     +--rw vpls
|  |  |     |  +--rw vcid?      uint32
|  |  |     |  +--rw far-end*   union
|  |  |     +--rw vxlan
|  |  |        +--rw vni-id             uint32
|  |  |        +--rw peer-mode?         identityref
|  |  |        +--rw peer-ip-address*   inet:ip-address
|  |  +--:(l2vpn)
|  |     +--rw l2vpn-id?            vpn-common:vpn-id
|  +--rw l2-termination-point?      string
|  +--rw local-bridge-reference?    string
|  +--rw bearer-reference?          string
|  |       {vpn-common:bearer-reference}?
|  +--rw lag-interface {vpn-common:lag-interface}?
|     +--rw lag-interface-id?   string
|     +--rw member-link-list
|        +--rw member-link* [name]
|           +--rw name    string
...
</sourcecode>
          </figure>
        </section>
        <section anchor="ip_conn" numbered="true" toc="include" removeInRFC="false" pn="section-7.6.2">
          <name slugifiedName="name-ip-connection">IP Connection</name>
          <t indent="0" pn="section-7.6.2-1">This container is used to group Layer 3 connectivity information,
          particularly the IP addressing information, of a VPN network access.
          The allocated address represents the PE interface address
          configuration. Note that a distinct Layer 3 interface other than the
          interface indicated under the 'connection' container may be needed to
          terminate the Layer 3 service. The identifier of such an interface is
          included in 'l3-termination-point'. For example, this data node can
          be used to carry the identifier of a bridge domain interface.</t>
          <t indent="0" pn="section-7.6.2-2">As shown in <xref target="ip_conn_tree" format="default" sectionFormat="of" derivedContent="Figure 10"/>, the
          'ip-connection' container can include IPv4, IPv6, or both if
          dual-stack is enabled.</t>
          <figure anchor="ip_conn_tree" align="left" suppress-title="false" pn="figure-10">
            <name slugifiedName="name-ip-connection-subtree-struc">IP Connection Subtree Structure</name>
            <sourcecode name="" type="yangtree" markers="false" pn="section-7.6.2-3.1">...
+--rw vpn-network-accesses
   +--rw vpn-network-access* [id]
      ...
      +--rw ip-connection
      |  +--rw l3-termination-point?     string
      |  +--rw ipv4 {vpn-common:ipv4}?
      |  |  ...
      |  +--rw ipv6 {vpn-common:ipv6}?
      |     ...
      ...
</sourcecode>
          </figure>
          <t indent="0" pn="section-7.6.2-4">For both IPv4 and IPv6, the IP connection supports three IP
          address assignment modes for customer addresses: provider DHCP, DHCP
          relay, and static addressing. Note that for the IPv6 case, Stateless Address Autoconfiguration (SLAAC)
          <xref target="RFC4862" format="default" sectionFormat="of" derivedContent="RFC4862"/> can be used. For both IPv4 and IPv6,
          'address-allocation-type' is used to indicate the IP address
          allocation mode to activate for a given VPN network access.</t>
          <t indent="0" pn="section-7.6.2-5">When 'address-allocation-type' is set to 'provider-dhcp', DHCP
          assignments can be made locally or by an external DHCP server. Such
          behavior is controlled by setting 'dhcp-service-type'.</t>
          <t indent="0" pn="section-7.6.2-6"><xref target="ip_conn_tree_v4" format="default" sectionFormat="of" derivedContent="Figure 11"/> shows the structure of the
          dynamic IPv4 address assignment (i.e., by means of DHCP).</t>
          <figure anchor="ip_conn_tree_v4" align="left" suppress-title="false" pn="figure-11">
            <name slugifiedName="name-ip-connection-subtree-struct">IP Connection Subtree Structure (IPv4)</name>
            <sourcecode name="" type="yangtree" markers="false" pn="section-7.6.2-7.1">...
+--rw ip-connection
|  +--rw l3-termination-point?     string
|  +--rw ipv4 {vpn-common:ipv4}?
|  |  +--rw local-address?             inet:ipv4-address
|  |  +--rw prefix-length?             uint8
|  |  +--rw address-allocation-type?   identityref
|  |  +--rw (allocation-type)?
|  |     +--:(provider-dhcp)
|  |     |  +--rw dhcp-service-type?   enumeration
|  |     |  +--rw (service-type)?
|  |     |     +--:(relay)
|  |     |     |  +--rw server-ip-address*
|  |     |     |          inet:ipv4-address
|  |     |     +--:(server)
|  |     |        +--rw (address-assign)?
|  |     |           +--:(number)
|  |     |           |  +--rw number-of-dynamic-address?
|  |     |           |           uint16
|  |     |           +--:(explicit)
|  |     |              +--rw customer-addresses
|  |     |                 +--rw address-pool* [pool-id]
|  |     |                    +--rw pool-id          string
|  |     |                    +--rw start-address
|  |     |                    |           inet:ipv4-address
|  |     |                    +--rw end-address?
|  |     |                                inet:ipv4-address
|  |     +--:(dhcp-relay)
|  |     |  +--rw customer-dhcp-servers
|  |     |     +--rw server-ip-address*   inet:ipv4-address
|  |     +--:(static-addresses)
|  |        ...
...
</sourcecode>
          </figure>
          <t indent="0" pn="section-7.6.2-8"><xref target="ip_conn_tree_v6" format="default" sectionFormat="of" derivedContent="Figure 12"/> shows the structure of the
          dynamic IPv6 address assignment (i.e., DHCPv6 and/or SLAAC). Note
          that if 'address-allocation-type' is set to 'slaac', the Prefix
          Information option of Router Advertisements that will be issued for
          SLAAC purposes will carry the IPv6 prefix that is determined by
          'local-address' and 'prefix-length'. For example, if 'local-address'
          is set to '2001:db8:0:1::1' and 'prefix-length' is set to '64', the
          IPv6 prefix that will be used is '2001:db8:0:1::/64'.</t>
          <figure anchor="ip_conn_tree_v6" align="left" suppress-title="false" pn="figure-12">
            <name slugifiedName="name-ip-connection-subtree-structu">IP Connection Subtree Structure (IPv6)</name>
            <sourcecode name="" type="yangtree" markers="false" pn="section-7.6.2-9.1">...
+--rw ip-connection
|  +--rw l3-termination-point?     string
|  +--rw ipv4 {vpn-common:ipv4}?
|  |  ...
|  +--rw ipv6 {vpn-common:ipv6}?
|     +--rw local-address?                 inet:ipv6-address
|     +--rw prefix-length?                 uint8
|     +--rw address-allocation-type?       identityref
|     +--rw (allocation-type)?
|        +--:(provider-dhcp)
|        |  +--rw provider-dhcp
|        |     +--rw dhcp-service-type?
|        |     |       enumeration
|        |     +--rw (service-type)?
|        |        +--:(relay)
|        |        |  +--rw server-ip-address*
|        |        |          inet:ipv6-address
|        |        +--:(server)
|        |           +--rw (address-assign)?
|        |              +--:(number)
|        |              |  +--rw number-of-dynamic-address?
|        |              |          uint16
|        |              +--:(explicit)
|        |                 +--rw customer-addresses
|        |                    +--rw address-pool*  [pool-id]
|        |                       +--rw pool-id      string
|        |                       +--rw start-address
|        |                       |       inet:ipv6-address
|        |                       +--rw end-address?
|        |                               inet:ipv6-address
|        +--:(dhcp-relay)
|        |  +--rw customer-dhcp-servers
|        |     +--rw server-ip-address*
|        |             inet:ipv6-address
|        +--:(static-addresses)
|           ...
</sourcecode>
          </figure>
          <t indent="0" pn="section-7.6.2-10">In the case of static addressing (<xref target="ip_conn_tree-static" format="default" sectionFormat="of" derivedContent="Figure 13"/>), the model supports the
          assignment of several IP addresses in the same 'vpn-network-access'.
          To identify which of the addresses is the primary address of a
          connection, the 'primary-address' reference <bcp14>MUST</bcp14> be set with the
          corresponding 'address-id'.</t>
          <figure anchor="ip_conn_tree-static" align="left" suppress-title="false" pn="figure-13">
            <name slugifiedName="name-ip-connection-subtree-structur">IP Connection Subtree Structure (Static Mode)</name>
            <sourcecode name="" type="yangtree" markers="false" pn="section-7.6.2-11.1">...
+--rw ip-connection
|  +--rw l3-termination-point?     string
|  +--rw ipv4 {vpn-common:ipv4}?
|  |  +--rw address-allocation-type?         identityref
|  |  +--rw (allocation-type)?
|  |     ...
|  |     +--:(static-addresses)
|  |        +--rw primary-address?        -&gt; ../address/address-id
|  |        +--rw address* [address-id]
|  |           +--rw address-id          string
|  |           +--rw customer-address?   inet:ipv4-address
|  +--rw ipv6 {vpn-common:ipv6}?
|     +--rw address-allocation-type?         identityref
|     +--rw (allocation-type)?
|        ...
|        +--:(static-addresses)
|           +--rw primary-address?     -&gt; ../address/address-id
|           +--rw address* [address-id]
|              +--rw address-id          string
|              +--rw customer-address?   inet:ipv6-address
...
</sourcecode>
          </figure>
        </section>
        <section anchor="rtg" numbered="true" toc="include" removeInRFC="false" pn="section-7.6.3">
          <name slugifiedName="name-ce-pe-routing-protocols">CE-PE Routing Protocols</name>
          <t indent="0" pn="section-7.6.3-1">A VPN service provider can configure one or more routing
          protocols associated with a particular 'vpn-network-access'. Such
          routing protocols are enabled between the PE and the CE. Each
          instance is uniquely identified to accommodate scenarios where
          multiple instances of the same routing protocol have to be
          configured on the same link.</t>
          <t indent="0" pn="section-7.6.3-2">The subtree of the 'routing-protocols' is shown in <xref target="routing" format="default" sectionFormat="of" derivedContent="Figure 14"/>.</t>
          <figure anchor="routing" align="left" suppress-title="false" pn="figure-14">
            <name slugifiedName="name-routing-subtree-structure">Routing Subtree Structure</name>
            <sourcecode name="" type="yangtree" markers="false" pn="section-7.6.3-3.1">  ...
  +--rw vpn-network-accesses
     +--rw vpn-network-access* [id]
        ...
        +--rw routing-protocols
        |  +--rw routing-protocol* [id]
        |     +--rw id   string
        |     +--rw type?               identityref
        |     +--rw routing-profiles* [id]
        |     |  +--rw id      leafref
        |     |  +--rw type?   identityref
        |     +--rw static
        |     |  ...
        |     +--rw bgp
        |     |  ...
        |     +--rw ospf
        |     |  ...
        |     +--rw isis
        |     |  ...
        |     +--rw rip
        |     |  ...
        |     +--rw vrrp
        |        ...
        +--rw security
            ...
</sourcecode>
          </figure>
          <t indent="0" pn="section-7.6.3-4">Multiple routing instances can be defined, each uniquely
          identified by an 'id'. The type of routing instance is indicated in
          'type'. The values of these attributes are those defined in <xref target="RFC9181" format="default" sectionFormat="of" derivedContent="RFC9181"/> (the 'routing-protocol-type'
          identity).</t>
          <t indent="0" pn="section-7.6.3-5">Configuring multiple instances of the same routing protocol does
          not automatically imply that, from a device configuration
          perspective, there will be parallel instances (e.g., multiple
          processes) running on the PE-CE link. It is up to each
          implementation (typically, network orchestration, as shown in <xref target="xml_happy" format="default" sectionFormat="of" derivedContent="Figure 1"/>) to decide on the appropriate
          configuration as a function of underlying capabilities and service
          provider operational guidelines. As an example, when multiple BGP
          peers need to be implemented, multiple instances of BGP must be
          configured as part of this model. However, from a device
          configuration point of view, this could be implemented as:</t>
          <ul spacing="normal" bare="false" empty="false" indent="3" pn="section-7.6.3-6">
            <li pn="section-7.6.3-6.1">Multiple BGP processes with a single neighbor running in each
              process.</li>
            <li pn="section-7.6.3-6.2">A single BGP process with multiple neighbors running.</li>
            <li pn="section-7.6.3-6.3">A combination thereof.</li>
          </ul>
          <t indent="0" pn="section-7.6.3-7">Routing configuration does not include low-level policies. Such
          policies are handled at the device configuration level. Local
          policies of a service provider (e.g., filtering) are implemented as
          part of the device configuration; these are not captured in the
          L3NM, but the model allows local profiles to be associated with
          routing instances ('routing-profiles'). Note that these routing
          profiles can be scoped to capture parameters that are globally
          applied to all L3VPN services within a service provider network,
          while customized L3VPN parameters are captured by means of the L3NM.
          The provisioning of an L3VPN service will thus rely upon the
          instantiation of these global routing profiles and the customized
          L3NM.</t>
          <section numbered="true" toc="include" removeInRFC="false" pn="section-7.6.3.1">
            <name slugifiedName="name-static-routing">Static Routing</name>
            <t indent="0" pn="section-7.6.3.1-1">The L3NM supports the configuration of one or more IPv4/IPv6
            static routes. Since the same structure is used for both IPv4 and
            IPv6, using one single container to group both
            static entries independently of their address family was considered at one time, but that
            design was abandoned to ease the mapping, using the structure provided in
            <xref target="RFC8299" format="default" sectionFormat="of" derivedContent="RFC8299"/>.</t>
            <t indent="0" pn="section-7.6.3.1-2">The static routing subtree structure is shown in <xref target="routing-static" format="default" sectionFormat="of" derivedContent="Figure 15"/>.</t>
            <figure anchor="routing-static" align="left" suppress-title="false" pn="figure-15">
              <name slugifiedName="name-static-routing-subtree-stru">Static Routing Subtree Structure</name>
              <sourcecode name="" type="yangtree" markers="false" pn="section-7.6.3.1-3.1">...
+--rw routing-protocols
|  +--rw routing-protocol* [id]
|     ...
|     +--rw static
|     |  +--rw cascaded-lan-prefixes
|     |     +--rw ipv4-lan-prefixes*
|     |     |       [lan next-hop]
|     |     |       {vpn-common:ipv4}?
|     |     |  +--rw lan         inet:ipv4-prefix
|     |     |  +--rw lan-tag?      string
|     |     |  +--rw next-hop      union
|     |     |  +--rw bfd-enable?   boolean
|     |     |  +--rw metric?       uint32
|     |     |  +--rw preference?   uint32
|     |     |  +--rw status
|     |     |     +--rw admin-status
|     |     |     |  +--rw status?         identityref
|     |     |     |  +--rw last-change?   yang:date-and-time
|     |     |     +--ro oper-status
|     |     |        +--ro status?         identityref
|     |     |        +--ro last-change?   yang:date-and-time
|     |     +--rw ipv6-lan-prefixes*
|     |             [lan next-hop]
|     |             {vpn-common:ipv6}?
|     |        +--rw lan         inet:ipv6-prefix
|     |        +--rw lan-tag?      string
|     |        +--rw next-hop      union
|     |        +--rw bfd-enable?   boolean
|     |        +--rw metric?       uint32
|     |        +--rw preference?   uint32
|     |        +--rw status
|     |           +--rw admin-status
|     |           |  +--rw status?         identityref
|     |           |  +--rw last-change?   yang:date-and-time
|     |           +--ro oper-status
|     |              +--ro status?         identityref
|     |              +--ro last-change?   yang:date-and-time
...
</sourcecode>
            </figure>
            <t indent="0" pn="section-7.6.3.1-4">As depicted in <xref target="routing-static" format="default" sectionFormat="of" derivedContent="Figure 15"/>, the
            following data nodes can be defined for a given IP prefix:</t>
            <dl newline="false" spacing="normal" indent="3" pn="section-7.6.3.1-5">
              <dt pn="section-7.6.3.1-5.1">'lan-tag':</dt>
              <dd pn="section-7.6.3.1-5.2">Indicates a local tag (e.g.,
                "myfavorite-lan") that is used to enforce local policies.</dd>
              <dt pn="section-7.6.3.1-5.3">'next-hop':</dt>
              <dd pn="section-7.6.3.1-5.4">Indicates the next hop to be used
                for the static route. It can be identified by an IP address,
                a predefined next-hop type (e.g., 'discard' or 'local-link'), etc.</dd>
              <dt pn="section-7.6.3.1-5.5">'bfd-enable':</dt>
              <dd pn="section-7.6.3.1-5.6">Indicates whether BFD is enabled
                or disabled for this static route entry.</dd>
              <dt pn="section-7.6.3.1-5.7">'metric':</dt>
              <dd pn="section-7.6.3.1-5.8">Indicates the metric associated with
                the static route entry. This metric is used when the route is exported
                into an IGP.</dd>
              <dt pn="section-7.6.3.1-5.9">'preference':</dt>
              <dd pn="section-7.6.3.1-5.10">Indicates the preference
                associated with the static route entry. This preference is
                used to select a preferred route among routes to the same
                destination prefix.</dd>
              <dt pn="section-7.6.3.1-5.11">'status':</dt>
              <dd pn="section-7.6.3.1-5.12">Used to convey the status of a static
                route entry. This data node can also be used to control the
                (de)activation of individual static route entries.</dd>
            </dl>
          </section>
          <section numbered="true" toc="include" removeInRFC="false" pn="section-7.6.3.2">
            <name slugifiedName="name-bgp">BGP</name>
            <t indent="0" pn="section-7.6.3.2-1">The L3NM allows the configuration of a BGP neighbor, including
            a set of parameters that are pertinent to be tweaked at the
            network level for service customization purposes. The 'bgp' container does not aim to include every
            BGP parameter; a comprehensive set of parameters belongs more to
            the BGP device model.</t>
            <t indent="0" pn="section-7.6.3.2-2">The BGP routing subtree structure is shown in <xref target="routing-bgp" format="default" sectionFormat="of" derivedContent="Figure 16"/>.</t>
            <figure anchor="routing-bgp" align="left" suppress-title="false" pn="figure-16">
              <name slugifiedName="name-bgp-routing-subtree-structu">BGP Routing Subtree Structure</name>
              <sourcecode name="" type="yangtree" markers="false" pn="section-7.6.3.2-3.1">...
+--rw routing-protocols
|  +--rw routing-protocol* [id]
|     ...
|     +--rw bgp
|     |  +--rw description?               string
|     |  +--rw local-as?                  inet:as-number
|     |  +--rw peer-as                    inet:as-number
|     |  +--rw address-family?            identityref
|     |  +--rw local-address?             union
|     |  +--rw neighbor*                  inet:ip-address
|     |  +--rw multihop?                  uint8
|     |  +--rw as-override?               boolean
|     |  +--rw allow-own-as?              uint8
|     |  +--rw prepend-global-as?         boolean
|     |  +--rw send-default-route?        boolean
|     |  +--rw site-of-origin?            rt-types:route-origin
|     |  +--rw ipv6-site-of-origin?       rt-types:ipv6-route-origin
|     |  +--rw redistribute-connected* [address-family]
|     |  |  +--rw address-family    identityref
|     |  |  +--rw enable?           boolean
|     |  +--rw bgp-max-prefix
|     |  |  +--rw max-prefix?          uint32
|     |  |  +--rw warning-threshold?   decimal64
|     |  |  +--rw violate-action?      enumeration
|     |  |  +--rw restart-timer?       uint32
|     |  +--rw bgp-timers
|     |  |  +--rw keepalive?   uint16
|     |  |  +--rw hold-time?   uint16
|     |  +--rw authentication
|     |  |  +--rw enable?            boolean
|     |  |  +--rw keying-material
|     |  |     +--rw (option)?
|     |  |        +--:(ao)
|     |  |        |  +--rw enable-ao?         boolean
|     |  |        |  +--rw ao-keychain?       key-chain:key-chain-ref
|     |  |        +--:(md5)
|     |  |        |  +--rw md5-keychain?      key-chain:key-chain-ref
|     |  |        +--:(explicit)
|     |  |        |  +--rw key-id?            uint32
|     |  |        |  +--rw key?               string
|     |  |        |  +--rw crypto-algorithm?  identityref
|     |  |        +--:(ipsec)
|     |  |           +--rw sa?             string
|     |  +--rw status
|     |     +--rw admin-status
|     |     |  +--rw status?         identityref
|     |     |  +--rw last-change?   yang:date-and-time
|     |     +--ro oper-status
|     |        +--ro status?         identityref
|     |        +--ro last-change?   yang:date-and-time
...
</sourcecode>
            </figure>
            <t indent="0" pn="section-7.6.3.2-4">The following data nodes are captured in <xref target="routing-bgp" format="default" sectionFormat="of" derivedContent="Figure 16"/>. It is up to the implementation
            (e.g., network orchestrator) to derive the corresponding BGP
            device configuration:</t>
            <dl newline="false" spacing="normal" indent="3" pn="section-7.6.3.2-5">
              <dt pn="section-7.6.3.2-5.1">'description':</dt>
              <dd pn="section-7.6.3.2-5.2">Includes a description of the BGP
                session.</dd>
              <dt pn="section-7.6.3.2-5.3">'local-as':</dt>
              <dd pn="section-7.6.3.2-5.4">Indicates a local AS Number (ASN), if
                a distinct ASN is required other than the ASN configured at
                the VPN node level.</dd>
              <dt pn="section-7.6.3.2-5.5">'peer-as':</dt>
              <dd pn="section-7.6.3.2-5.6">Conveys the customer's ASN.</dd>
              <dt pn="section-7.6.3.2-5.7">'address-family':</dt>
              <dd pn="section-7.6.3.2-5.8">
                <t indent="0" pn="section-7.6.3.2-5.8.1">Indicates the address family
                of the peer. It can be set to 'ipv4', 'ipv6', or 'dual-stack'.
                </t>
                <t indent="0" pn="section-7.6.3.2-5.8.2">This address family will be used
                together with the 'vpn-type' to derive the appropriate Address
                Family Identifiers (AFIs) / Subsequent Address Family
                Identifiers (SAFIs) that will be part of the derived device
                configurations (e.g., unicast IPv4 MPLS L3VPN (AFI,SAFI =
                1,128) as defined in <xref target="RFC4364" sectionFormat="of" section="4.3.4" format="default" derivedLink="https://rfc-editor.org/rfc/rfc4364#section-4.3.4" derivedContent="RFC4364"/>).</t>
              </dd>
              <dt pn="section-7.6.3.2-5.9">'local-address':</dt>
              <dd pn="section-7.6.3.2-5.10">Specifies an address or a
                reference to an interface to use when establishing the BGP
                transport session.</dd>
              <dt pn="section-7.6.3.2-5.11">'neighbor':</dt>
              <dd pn="section-7.6.3.2-5.12">Can indicate two neighbors (each for
                a given address family) or one neighbor (if the 'address-family'
                attribute is set to 'dual-stack'). A list of IP address(es) of
                the BGP neighbor(s) can then be conveyed in this data node.</dd>
              <dt pn="section-7.6.3.2-5.13">'multihop':</dt>
              <dd pn="section-7.6.3.2-5.14">Indicates the number of allowed IP
                hops between a PE and its BGP peer.</dd>
              <dt pn="section-7.6.3.2-5.15">'as-override':</dt>
              <dd pn="section-7.6.3.2-5.16">If set, this parameter indicates
                whether ASN override is enabled, i.e., replacing the ASN of the
                customer specified in the AS_PATH BGP attribute with the ASN
                identified in the 'local-as' attribute.</dd>
              <dt pn="section-7.6.3.2-5.17">'allow-own-as':</dt>
              <dd pn="section-7.6.3.2-5.18">Used in some topologies
                (e.g., hub-and-spoke) to allow the provider's ASN to be
                included in the AS_PATH BGP attribute received from a CE.
                Loops are prevented by setting 'allow-own-as' to a maximum
                number of the provider's ASN occurrences. By default, this parameter is set to '0' (that is, reject any AS_PATH attribute that
                includes the provider's ASN).</dd>
              <dt pn="section-7.6.3.2-5.19">'prepend-global-as':</dt>
              <dd pn="section-7.6.3.2-5.20">When distinct ASNs are
                configured at the VPN node and network access levels, this
                parameter controls whether the ASN provided at the VPN node
                level is prepended to the AS_PATH attribute.</dd>
              <dt pn="section-7.6.3.2-5.21">'send-default-route':</dt>
              <dd pn="section-7.6.3.2-5.22">Controls whether default
                routes can be advertised to the peer.</dd>
              <dt pn="section-7.6.3.2-5.23">'site-of-origin':</dt>
              <dd pn="section-7.6.3.2-5.24">Meant to uniquely identify
                the set of routes learned from a site via a particular CE-PE
                connection. It is used to prevent routing loops (<xref target="RFC4364" sectionFormat="of" section="7" format="default" derivedLink="https://rfc-editor.org/rfc/rfc4364#section-7" derivedContent="RFC4364"/>). The Site of Origin attribute
                is encoded as a Route Origin Extended Community.</dd>
              <dt pn="section-7.6.3.2-5.25">'ipv6-site-of-origin':</dt>
              <dd pn="section-7.6.3.2-5.26">Carries an IPv6 Address
                Specific BGP Extended Community that is used to indicate the
                Site of Origin for VRF information <xref target="RFC5701" format="default" sectionFormat="of" derivedContent="RFC5701"/>. It is used to prevent routing
                loops.</dd>
              <dt pn="section-7.6.3.2-5.27">'redistribute-connected':</dt>
              <dd pn="section-7.6.3.2-5.28">Controls whether the
                PE-CE link is advertised to other PEs.</dd>
              <dt pn="section-7.6.3.2-5.29">'bgp-max-prefix':</dt>
              <dd pn="section-7.6.3.2-5.30">
                <t indent="0" pn="section-7.6.3.2-5.30.1">Controls the behavior when a
                prefix maximum is reached.</t>
                <dl newline="false" spacing="normal" indent="3" pn="section-7.6.3.2-5.30.2">
                  <dt pn="section-7.6.3.2-5.30.2.1">'max-prefix':</dt>
                  <dd pn="section-7.6.3.2-5.30.2.2">Indicates the maximum number
                    of BGP prefixes allowed in the BGP session. If the limit
                    is reached, the action indicated in 'violate-action' will
                    be followed.</dd>
                  <dt pn="section-7.6.3.2-5.30.2.3">'warning-threshold':</dt>
                  <dd pn="section-7.6.3.2-5.30.2.4">A warning notification
                    is triggered when this limit is reached.</dd>
                  <dt pn="section-7.6.3.2-5.30.2.5">'violate-action':</dt>
                  <dd pn="section-7.6.3.2-5.30.2.6">Indicates which action to
                    execute when the maximum number of BGP prefixes is
                    reached. Examples of such actions include sending a warning
                    message, discarding extra paths from the peer, or restarting the
                    session.</dd>
                  <dt pn="section-7.6.3.2-5.30.2.7">'restart-timer':</dt>
                  <dd pn="section-7.6.3.2-5.30.2.8">Indicates, in seconds, the
                    time interval after which the BGP session will be
                    reestablished.</dd>
                </dl>
              </dd>
              <dt pn="section-7.6.3.2-5.31">'bgp-timers':</dt>
              <dd pn="section-7.6.3.2-5.32">Two timers can be captured in
                this container: (1) 'hold-time', which is the time interval
                that will be used for the Hold Timer (<xref target="RFC4271" sectionFormat="of" section="4.2" format="default" derivedLink="https://rfc-editor.org/rfc/rfc4271#section-4.2" derivedContent="RFC4271"/>) when establishing a BGP session and (2)
                'keepalive', which is the time interval for the KeepaliveTimer 
                between a PE and a BGP peer (<xref target="RFC4271" sectionFormat="of" section="4.4" format="default" derivedLink="https://rfc-editor.org/rfc/rfc4271#section-4.4" derivedContent="RFC4271"/>). Both timers are expressed in seconds.</dd>
              <dt pn="section-7.6.3.2-5.33">'authentication':</dt>
              <dd pn="section-7.6.3.2-5.34">
                <t indent="0" pn="section-7.6.3.2-5.34.1">The module adheres to the
                recommendations in <xref target="RFC4364" sectionFormat="of" section="13.2" format="default" derivedLink="https://rfc-editor.org/rfc/rfc4364#section-13.2" derivedContent="RFC4364"/>, as it allows enabling the TCP Authentication Option (TCP-AO) <xref target="RFC5925" format="default" sectionFormat="of" derivedContent="RFC5925"/> and accommodates the installed base
                that makes use of MD5. In addition, the module includes a
                provision for using IPsec.</t>
                <t indent="0" pn="section-7.6.3.2-5.34.2">This
                version of the L3NM assumes that parameters specific to the TCP-AO are preconfigured as part of the key chain that is referenced
                in the L3NM. No assumption is made about how such a key chain
                is preconfigured. However, the structure of the key chain
                should cover data nodes beyond those in <xref target="RFC8177" format="default" sectionFormat="of" derivedContent="RFC8177"/>, mainly SendID and RecvID (<xref target="RFC5925" sectionFormat="of" section="3.1" format="default" derivedLink="https://rfc-editor.org/rfc/rfc5925#section-3.1" derivedContent="RFC5925"/>).</t>
              </dd>
              <dt pn="section-7.6.3.2-5.35">'status':</dt>
              <dd pn="section-7.6.3.2-5.36">Indicates the status of the BGP
                routing instance.</dd>
            </dl>
          </section>
          <section numbered="true" toc="include" removeInRFC="false" pn="section-7.6.3.3">
            <name slugifiedName="name-ospf">OSPF</name>
            <t indent="0" pn="section-7.6.3.3-1">OSPF can be configured to run as a routing protocol on the
            'vpn-network-access'.</t>
            <t indent="0" pn="section-7.6.3.3-2">The OSPF routing subtree structure is shown in <xref target="routing-ospf" format="default" sectionFormat="of" derivedContent="Figure 17"/>.</t>
            <figure anchor="routing-ospf" align="left" suppress-title="false" pn="figure-17">
              <name slugifiedName="name-ospf-routing-subtree-struct">OSPF Routing Subtree Structure</name>
              <sourcecode name="" type="yangtree" markers="false" pn="section-7.6.3.3-3.1">...
+--rw routing-protocols
|  +--rw routing-protocol* [id]
|     ...
|     +--rw ospf
|     |  +--rw address-family?   identityref
|     |  +--rw area-id           yang:dotted-quad
|     |  +--rw metric?           uint16
|     |  +--rw sham-links  {vpn-common:rtg-ospf-sham-link}?
|     |  |  +--rw sham-link* [target-site]
|     |  |     +--rw target-site    string
|     |  |     +--rw metric?        uint16
|     |  +--rw max-lsa?          uint32
|     |  +--rw authentication
|     |  |  +--rw enable?            boolean
|     |  |  +--rw keying-material
|     |  |     +--rw (option)?
|     |  |        +--:(auth-key-chain)
|     |  |        |  +--rw key-chain?
|     |  |        |          key-chain:key-chain-ref
|     |  |        +--:(auth-key-explicit)
|     |  |        |  +--rw key-id?      uint32
|     |  |        |  +--rw key?         string
|     |  |        |  +--rw crypto-algorithm?
|     |  |        |          identityref
|     |  |        +--:(ipsec)
|     |  |           +--rw sa?    string
|     |  +--rw status
|     |     +--rw admin-status
|     |     |  +--rw status?        identityref
|     |     |  +--rw last-change?  yang:date-and-time
|     |     +--ro oper-status
|     |        +--ro status?        identityref
|     |        +--ro last-change?  yang:date-and-time
...
</sourcecode>
            </figure>
            <t indent="0" pn="section-7.6.3.3-4">The following data nodes are captured in <xref target="routing-ospf" format="default" sectionFormat="of" derivedContent="Figure 17"/>:</t>
            <dl newline="false" spacing="normal" indent="3" pn="section-7.6.3.3-5">
              <dt pn="section-7.6.3.3-5.1">'address-family':</dt>
              <dd pn="section-7.6.3.3-5.2">
                <t indent="0" pn="section-7.6.3.3-5.2.1">Indicates whether IPv4, IPv6,
                or both address families are to be activated. </t>
                <t indent="0" pn="section-7.6.3.3-5.2.2">When the IPv4 or dual-stack address family is
                requested, it is up to the implementation (e.g., network
                orchestrator) to decide whether OSPFv2 <xref target="RFC4577" format="default" sectionFormat="of" derivedContent="RFC4577"/> or OSPFv3 <xref target="RFC6565" format="default" sectionFormat="of" derivedContent="RFC6565"/> is used to announce IPv4 routes. Such a
                decision will typically be reflected in the device
                configurations that will be derived to implement the
                L3VPN.</t>
              </dd>
              <dt pn="section-7.6.3.3-5.3">'area-id':</dt>
              <dd pn="section-7.6.3.3-5.4">Indicates the OSPF Area ID.</dd>
              <dt pn="section-7.6.3.3-5.5">'metric':</dt>
              <dd pn="section-7.6.3.3-5.6">Associates a metric with OSPF
                routes.</dd>
              <dt pn="section-7.6.3.3-5.7">'sham-links':</dt>
              <dd pn="section-7.6.3.3-5.8">Used to create OSPF sham links
                between two VPN network accesses sharing the same area and
                having a backdoor link (<xref target="RFC4577" sectionFormat="of" section="4.2.7" format="default" derivedLink="https://rfc-editor.org/rfc/rfc4577#section-4.2.7" derivedContent="RFC4577"/> and <xref target="RFC6565" sectionFormat="of" section="5" format="default" derivedLink="https://rfc-editor.org/rfc/rfc6565#section-5" derivedContent="RFC6565"/>).</dd>
              <dt pn="section-7.6.3.3-5.9">'max-lsa':</dt>
              <dd pn="section-7.6.3.3-5.10">Sets the maximum number of Link State Advertisements (LSAs) that
                the OSPF instance will accept.</dd>
              <dt pn="section-7.6.3.3-5.11">'authentication':</dt>
              <dd pn="section-7.6.3.3-5.12">Controls the authentication
                schemes to be enabled for the OSPF instance. The following
                options are supported: IPsec for OSPFv3 authentication <xref target="RFC4552" format="default" sectionFormat="of" derivedContent="RFC4552"/>, and the Authentication Trailer for OSPFv2
                <xref target="RFC5709" format="default" sectionFormat="of" derivedContent="RFC5709"/> <xref target="RFC7474" format="default" sectionFormat="of" derivedContent="RFC7474"/>
                and OSPFv3 <xref target="RFC7166" format="default" sectionFormat="of" derivedContent="RFC7166"/>.</dd>
              <dt pn="section-7.6.3.3-5.13">'status':</dt>
              <dd pn="section-7.6.3.3-5.14">Indicates the status of the OSPF
                routing instance.</dd>
            </dl>
          </section>
          <section numbered="true" toc="include" removeInRFC="false" pn="section-7.6.3.4">
            <name slugifiedName="name-is-is">IS-IS</name>
            <t indent="0" pn="section-7.6.3.4-1">The model allows the user
            to configure IS-IS <xref target="ISO10589" format="default" sectionFormat="of" derivedContent="ISO10589"/> <xref target="RFC1195" format="default" sectionFormat="of" derivedContent="RFC1195"/> <xref target="RFC5308" format="default" sectionFormat="of" derivedContent="RFC5308"/> to run on
            the 'vpn-network-access' interface. See <xref target="routing-isis" format="default" sectionFormat="of" derivedContent="Figure 18"/>.</t>
            <figure anchor="routing-isis" align="left" suppress-title="false" pn="figure-18">
              <name slugifiedName="name-is-is-routing-subtree-struc">IS-IS Routing Subtree Structure</name>
              <sourcecode name="" type="yangtree" markers="false" pn="section-7.6.3.4-2.1">...
+--rw routing-protocols
|  +--rw routing-protocol* [id]
|     ...
|     +--rw isis
|     |  +--rw address-family?   identityref
|     |  +--rw area-address      area-address
|     |  +--rw level?            identityref
|     |  +--rw metric?           uint16
|     |  +--rw mode?             enumeration
|     |  +--rw authentication
|     |  |  +--rw enable?            boolean
|     |  |  +--rw keying-material
|     |  |     +--rw (option)?
|     |  |        +--:(auth-key-chain)
|     |  |        |  +--rw key-chain?
|     |  |        |          key-chain:key-chain-ref
|     |  |        +--:(auth-key-explicit)
|     |  |           +--rw key-id?             uint32
|     |  |           +--rw key?                string
|     |  |           +--rw crypto-algorithm?   identityref
|     |  +--rw status
|     |     +--rw admin-status
|     |     |  +--rw status?        identityref
|     |     |  +--rw last-change?  yang:date-and-time
|     |     +--ro oper-status
|     |        +--ro status?        identityref
|     |        +--ro last-change?  yang:date-and-time
...
</sourcecode>
            </figure>
            <t indent="0" pn="section-7.6.3.4-3">The following IS-IS data nodes are supported:</t>
            <dl newline="false" spacing="normal" indent="3" pn="section-7.6.3.4-4">
              <dt pn="section-7.6.3.4-4.1">'address-family':</dt>
              <dd pn="section-7.6.3.4-4.2">Indicates whether IPv4, IPv6,
                or both address families are to be activated.</dd>
              <dt pn="section-7.6.3.4-4.3">'area-address':</dt>
              <dd pn="section-7.6.3.4-4.4">Indicates the IS-IS area
                address.</dd>
              <dt pn="section-7.6.3.4-4.5">'level':</dt>
              <dd pn="section-7.6.3.4-4.6">Indicates the IS-IS level: Level 1,
                Level 2, or both.</dd>
              <dt pn="section-7.6.3.4-4.7">'metric':</dt>
              <dd pn="section-7.6.3.4-4.8">Associates a metric with IS-IS
                routes.</dd>
              <dt pn="section-7.6.3.4-4.9">'mode':</dt>
              <dd pn="section-7.6.3.4-4.10">Indicates the IS-IS interface mode type.
                It can be set to 'active' (that is, send or receive IS-IS
                protocol control packets) or 'passive' (that is, suppress the
                sending of IS-IS updates through the interface).</dd>
              <dt pn="section-7.6.3.4-4.11">'authentication':</dt>
              <dd pn="section-7.6.3.4-4.12">Controls the authentication
                schemes to be enabled for the IS-IS instance. Both the
                specification of a key chain <xref target="RFC8177" format="default" sectionFormat="of" derivedContent="RFC8177"/>
                and the direct specification of key and authentication
                algorithms are supported.</dd>
              <dt pn="section-7.6.3.4-4.13">'status':</dt>
              <dd pn="section-7.6.3.4-4.14">Indicates the status of the IS-IS
                routing instance.</dd>
            </dl>
          </section>
          <section numbered="true" toc="include" removeInRFC="false" pn="section-7.6.3.5">
            <name slugifiedName="name-rip">RIP</name>
            <t indent="0" pn="section-7.6.3.5-1">The model allows the user to
            configure RIP to run on the 'vpn-network-access' interface.  See
            <xref target="rip" format="default" sectionFormat="of" derivedContent="Figure 19"/>.</t>
            <figure anchor="rip" align="left" suppress-title="false" pn="figure-19">
              <name slugifiedName="name-rip-subtree-structure">RIP Subtree Structure</name>
              <sourcecode name="" type="yangtree" markers="false" pn="section-7.6.3.5-2.1">...
+--rw routing-protocols
|  +--rw routing-protocol* [id]
|     ...
|     +--rw rip
|     |  +--rw address-family?   identityref
|     |  +--rw timers
|     |  |  +--rw update-interval?     uint16
|     |  |  +--rw invalid-interval?    uint16
|     |  |  +--rw holddown-interval?   uint16
|     |  |  +--rw flush-interval?      uint16
|     |  +--rw default-metric?   uint8
|     |  +--rw authentication
|     |  |  +--rw enable?            boolean
|     |  |  +--rw keying-material
|     |  |     +--rw (option)?
|     |  |        +--:(auth-key-chain)
|     |  |        |  +--rw key-chain?
|     |  |        |          key-chain:key-chain-ref
|     |  |        +--:(auth-key-explicit)
|     |  |           +--rw key?                string
|     |  |           +--rw crypto-algorithm?   identityref
|     |  +--rw status
|     |     +--rw admin-status
|     |     |  +--rw status?        identityref
|     |     |  +--rw last-change?  yang:date-and-time
|     |     +--ro oper-status
|     |        +--ro status?        identityref
|     |        +--ro last-change?  yang:date-and-time
...
</sourcecode>
            </figure>
            <t indent="0" pn="section-7.6.3.5-3">As shown in <xref target="rip" format="default" sectionFormat="of" derivedContent="Figure 19"/>, the following RIP data
            nodes are supported:</t>
            <dl newline="false" spacing="normal" indent="3" pn="section-7.6.3.5-4">
              <dt pn="section-7.6.3.5-4.1">'address-family':</dt>
              <dd pn="section-7.6.3.5-4.2">Indicates whether IPv4, IPv6,
                or both address families are to be activated. This parameter
                is used to determine whether RIPv2 <xref target="RFC2453" format="default" sectionFormat="of" derivedContent="RFC2453"/>, RIP Next Generation (RIPng), or both are to be enabled <xref target="RFC2080" format="default" sectionFormat="of" derivedContent="RFC2080"/>.</dd>
              <dt pn="section-7.6.3.5-4.3">'timers':</dt>
              <dd pn="section-7.6.3.5-4.4">
                <t indent="0" pn="section-7.6.3.5-4.4.1">Indicates the following timers:</t>
                <dl newline="false" spacing="normal" indent="3" pn="section-7.6.3.5-4.4.2">
                  <dt pn="section-7.6.3.5-4.4.2.1">'update-interval':</dt>
                  <dd pn="section-7.6.3.5-4.4.2.2">The interval at which
                    RIP updates are sent.</dd>
                  <dt pn="section-7.6.3.5-4.4.2.3">'invalid-interval':</dt>
                  <dd pn="section-7.6.3.5-4.4.2.4">The interval before a
                    RIP route is declared invalid.</dd>
                  <dt pn="section-7.6.3.5-4.4.2.5">'holddown-interval':</dt>
                  <dd pn="section-7.6.3.5-4.4.2.6">The interval before
                    better RIP routes are released.</dd>
                  <dt pn="section-7.6.3.5-4.4.2.7">'flush-interval':</dt>
                  <dd pn="section-7.6.3.5-4.4.2.8">The interval before a
                    route is removed from the routing table.</dd>
                </dl>
                <t indent="0" pn="section-7.6.3.5-4.4.3">These timers are expressed in seconds.</t>
              </dd>
              <dt pn="section-7.6.3.5-4.5">'default-metric':</dt>
              <dd pn="section-7.6.3.5-4.6">Sets the default RIP
                metric.</dd>
              <dt pn="section-7.6.3.5-4.7">'authentication':</dt>
              <dd pn="section-7.6.3.5-4.8">Controls the authentication
                schemes to be enabled for the RIP instance.</dd>
              <dt pn="section-7.6.3.5-4.9">'status':</dt>
              <dd pn="section-7.6.3.5-4.10">Indicates the status of the RIP
                routing instance.</dd>
            </dl>
          </section>
          <section numbered="true" toc="include" removeInRFC="false" pn="section-7.6.3.6">
            <name slugifiedName="name-vrrp">VRRP</name>
            <t indent="0" pn="section-7.6.3.6-1">The model allows enabling the Virtual Router Redundancy Protocol (VRRP) on
            the 'vpn-network-access' interface. See <xref target="vrrp" format="default" sectionFormat="of" derivedContent="Figure 20"/>.</t>
            <figure anchor="vrrp" align="left" suppress-title="false" pn="figure-20">
              <name slugifiedName="name-vrrp-subtree-structure">VRRP Subtree Structure</name>
              <sourcecode name="" type="yangtree" markers="false" pn="section-7.6.3.6-2.1">...
+--rw routing-protocols
|  +--rw routing-protocol* [id]
|     ...
|     +--rw vrrp
|        +--rw address-family*   identityref
|        +--rw vrrp-group?       uint8
|        +--rw backup-peer?      inet:ip-address
|        +--rw virtual-ip-address*   inet:ip-address
|        +--rw priority?         uint8
|        +--rw ping-reply?       boolean
|        +--rw status
|           +--rw admin-status
|           |  +--rw status?        identityref
|           |  +--rw last-change?  yang:date-and-time
|           +--ro oper-status
|              +--ro status?        identityref
|              +--ro last-change?  yang:date-and-time
...
</sourcecode>
            </figure>
            <t indent="0" pn="section-7.6.3.6-3">The following data nodes are supported:</t>
            <dl newline="false" spacing="normal" indent="3" pn="section-7.6.3.6-4">
              <dt pn="section-7.6.3.6-4.1">'address-family':</dt>
              <dd pn="section-7.6.3.6-4.2">Indicates whether IPv4, IPv6,
                or both address families are to be activated. Note that VRRP
                version 3 <xref target="RFC5798" format="default" sectionFormat="of" derivedContent="RFC5798"/> supports both IPv4
                and IPv6.</dd>
              <dt pn="section-7.6.3.6-4.3">'vrrp-group':</dt>
              <dd pn="section-7.6.3.6-4.4">Used to identify the VRRP
                group.</dd>
              <dt pn="section-7.6.3.6-4.5">'backup-peer':</dt>
              <dd pn="section-7.6.3.6-4.6">Carries the IP address of the
                peer.</dd>
              <dt pn="section-7.6.3.6-4.7">'virtual-ip-address':</dt>
              <dd pn="section-7.6.3.6-4.8">Includes virtual IP
                addresses for a single VRRP group.</dd>
              <dt pn="section-7.6.3.6-4.9">'priority':</dt>
              <dd pn="section-7.6.3.6-4.10">Assigns the VRRP election priority
                for the backup virtual router.</dd>
              <dt pn="section-7.6.3.6-4.11">'ping-reply':</dt>
              <dd pn="section-7.6.3.6-4.12">Controls whether the VRRP speaker should
                reply to ping requests.</dd>
              <dt pn="section-7.6.3.6-4.13">'status':</dt>
              <dd pn="section-7.6.3.6-4.14">Indicates the status of the VRRP
                instance.</dd>
            </dl>
            <t indent="0" pn="section-7.6.3.6-5">Note that no authentication data node is included for
            VRRP, as there isn't any type of VRRP authentication at this time (see
            <xref target="RFC5798" sectionFormat="of" section="9" format="default" derivedLink="https://rfc-editor.org/rfc/rfc5798#section-9" derivedContent="RFC5798"/>).</t>
          </section>
        </section>
        <section anchor="sec-oam" numbered="true" toc="include" removeInRFC="false" pn="section-7.6.4">
          <name slugifiedName="name-oam">OAM</name>
          <t indent="0" pn="section-7.6.4-1">This container (<xref target="oam" format="default" sectionFormat="of" derivedContent="Figure 21"/>) defines the
          Operations, Administration, and Maintenance (OAM) mechanisms used
          for a VPN network access. In the current version of the L3NM, only
          BFD is supported.</t>
          <figure anchor="oam" align="left" suppress-title="false" pn="figure-21">
            <name slugifiedName="name-ip-connection-subtree-structure">IP Connection Subtree Structure (OAM)</name>
            <sourcecode name="" type="yangtree" markers="false" pn="section-7.6.4-2.1">...
+--rw oam
|  +--rw bfd {vpn-common:bfd}?
|     +--rw session-type?               identityref
|     +--rw desired-min-tx-interval?    uint32
|     +--rw required-min-rx-interval?   uint32
|     +--rw local-multiplier?           uint8
|     +--rw holdtime?                   uint32
|     +--rw profile?                    leafref
|     +--rw authentication!
|     |  +--rw key-chain?    key-chain:key-chain-ref
|     |  +--rw meticulous?   boolean
|     +--rw status
|        +--rw admin-status
|           |  +--rw status?         identityref
|           |  +--rw last-change?   yang:date-and-time
|           +--ro oper-status
|              +--ro status?         identityref
|              +--ro last-change?   yang:date-and-time
...
</sourcecode>
          </figure>
          <t indent="0" pn="section-7.6.4-3">The following OAM data nodes can be specified:</t>
          <dl newline="false" spacing="normal" indent="3" pn="section-7.6.4-4">
            <dt pn="section-7.6.4-4.1">'session-type':</dt>
            <dd pn="section-7.6.4-4.2">Indicates which BFD flavor is used
              to set up the session (e.g., classic BFD <xref target="RFC5880" format="default" sectionFormat="of" derivedContent="RFC5880"/>, Seamless BFD <xref target="RFC7880" format="default" sectionFormat="of" derivedContent="RFC7880"/>). By default, it is assumed that the BFD session will
              follow the behavior specified in <xref target="RFC5880" format="default" sectionFormat="of" derivedContent="RFC5880"/>.</dd>
            <dt pn="section-7.6.4-4.3">'desired-min-tx-interval':</dt>
            <dd pn="section-7.6.4-4.4">The minimum
              interval, in microseconds, that a PE would like to use when
              transmitting BFD Control packets, less any jitter applied.</dd>
            <dt pn="section-7.6.4-4.5">'required-min-rx-interval':</dt>
            <dd pn="section-7.6.4-4.6">The minimum
              interval, in microseconds, between received BFD Control packets
              that a PE is capable of supporting, less any jitter applied by
              the sender.</dd>
            <dt pn="section-7.6.4-4.7">'local-multiplier':</dt>
            <dd pn="section-7.6.4-4.8">The negotiated transmit
              interval, multiplied by this value, provides the detection time
              for the peer.</dd>
            <dt pn="section-7.6.4-4.9">'holdtime':</dt>
            <dd pn="section-7.6.4-4.10">Used to indicate the expected BFD
              holddown time, in milliseconds. This value may be inherited from
              the service request (see <xref target="RFC8299" sectionFormat="of" section="6.3.2.2.2" format="default" derivedLink="https://rfc-editor.org/rfc/rfc8299#section-6.3.2.2.2" derivedContent="RFC8299"/>).</dd>
            <dt pn="section-7.6.4-4.11">'profile':</dt>
            <dd pn="section-7.6.4-4.12">Refers to a BFD profile (<xref target="vpn_profiles" format="default" sectionFormat="of" derivedContent="Section 7.2"/>). Such a profile can be set by the
              provider or inherited from the service request (see <xref target="RFC8299" sectionFormat="of" section="6.3.2.2.2" format="default" derivedLink="https://rfc-editor.org/rfc/rfc8299#section-6.3.2.2.2" derivedContent="RFC8299"/>).</dd>
            <dt pn="section-7.6.4-4.13">'authentication':</dt>
            <dd pn="section-7.6.4-4.14">Includes the required
              information to enable the BFD authentication modes discussed in
              <xref target="RFC5880" sectionFormat="of" section="6.7" format="default" derivedLink="https://rfc-editor.org/rfc/rfc5880#section-6.7" derivedContent="RFC5880"/>. In particular,
              'meticulous' controls the activation of meticulous mode as
              discussed in Sections <xref target="RFC5880" section="6.7.3" sectionFormat="bare" format="default" derivedLink="https://rfc-editor.org/rfc/rfc5880#section-6.7.3" derivedContent="RFC5880"/> and <xref target="RFC5880" section="6.7.4" sectionFormat="bare" format="default" derivedLink="https://rfc-editor.org/rfc/rfc5880#section-6.7.4" derivedContent="RFC5880"/> of <xref target="RFC5880" format="default" sectionFormat="of" derivedContent="RFC5880"/>.</dd>
            <dt pn="section-7.6.4-4.15">'status':</dt>
            <dd pn="section-7.6.4-4.16">Indicates the status of BFD.</dd>
          </dl>
        </section>
        <section anchor="sec" numbered="true" toc="include" removeInRFC="false" pn="section-7.6.5">
          <name slugifiedName="name-security">Security</name>
          <t indent="0" pn="section-7.6.5-1">The 'security' container specifies the authentication and the
          encryption to be applied to traffic for a given VPN network access. As
          depicted in the subtree shown in <xref target="security" format="default" sectionFormat="of" derivedContent="Figure 22"/>,
          the L3NM can be used to directly control the encryption to be
          applied (e.g., Layer 2 or Layer 3 encryption) or invoke a local
          encryption profile.</t>
          <figure anchor="security" align="left" suppress-title="false" pn="figure-22">
            <name slugifiedName="name-security-subtree-structure">Security Subtree Structure</name>
            <sourcecode name="" type="yangtree" markers="false" pn="section-7.6.5-2.1">     ...
     +--rw vpn-services
        +--rw vpn-service* [vpn-id]
           ...
           +--rw vpn-nodes
              +--rw vpn-node* [vpn-node-id]
                 ...
                 +--rw vpn-network-accesses
                    +--rw vpn-network-access* [id]
                       ...
                       +--rw security
                       |  +--rw encryption {vpn-common:encryption}?
                       |  |  +--rw enabled?   boolean
                       |  |  +--rw layer?     enumeration
                       |  +--rw encryption-profile
                       |     +--rw (profile)?
                       |        +--:(provider-profile)
                       |        |  +--rw profile-name?        leafref
                       |        +--:(customer-profile)
                       |           +--rw customer-key-chain?
                       |                   key-chain:key-chain-ref
                       +--rw service
                           ...
</sourcecode>
          </figure>
        </section>
        <section anchor="svc" numbered="true" toc="include" removeInRFC="false" pn="section-7.6.6">
          <name slugifiedName="name-services">Services</name>
          <section numbered="true" toc="include" removeInRFC="false" pn="section-7.6.6.1">
            <name slugifiedName="name-overview">Overview</name>
            <t indent="0" pn="section-7.6.6.1-1">The 'service' container specifies the service parameters to
            apply for a given VPN network access (<xref target="services" format="default" sectionFormat="of" derivedContent="Figure 23"/>).</t>
            <figure anchor="services" align="left" suppress-title="false" pn="figure-23">
              <name slugifiedName="name-services-subtree-structure">Services Subtree Structure</name>
              <sourcecode name="" type="yangtree" markers="false" pn="section-7.6.6.1-2.1">...
+--rw vpn-network-accesses
   +--rw vpn-network-access* [id]
      ...
      +--rw service
         +--rw pe-to-ce-bandwidth?   uint64 {vpn-common:inbound-bw}?
         +--rw ce-to-pe-bandwidth?   uint64 {vpn-common:outbound-bw}?
         +--rw mtu?                  uint32
         +--rw qos {vpn-common:qos}?
         |  ...
         +--rw carriers-carrier
         |       {vpn-common:carriers-carrier}?
         |  +--rw signaling-type?   enumeration
         +--rw ntp
         |  +--rw broadcast?        enumeration
         |  +--rw auth-profile
         |  |  +--rw profile-id?    string
         |  +--rw status
         |     +--rw admin-status
         |     |  +--rw status?         identityref
         |     |  +--rw last-change?   yang:date-and-time
         |     +--ro oper-status
         |        +--ro status?         identityref
         |        +--ro last-change?   yang:date-and-time
         +--rw multicast {vpn-common:multicast}?
            ...
</sourcecode>
            </figure>
            <t indent="0" pn="section-7.6.6.1-3">The following data nodes are defined:</t>
            <dl newline="false" spacing="normal" indent="3" pn="section-7.6.6.1-4">
              <dt pn="section-7.6.6.1-4.1">'pe-to-ce-bandwidth':</dt>
              <dd pn="section-7.6.6.1-4.2">Indicates, in bits per
                second (bps), the inbound bandwidth of the connection (i.e., the
                download bandwidth from the service provider to the site).</dd>
              <dt pn="section-7.6.6.1-4.3">'ce-to-pe-bandwidth':</dt>
              <dd pn="section-7.6.6.1-4.4">Indicates, in bps, the
                outbound bandwidth of the connection (i.e., the upload bandwidth
                from the site to the service provider).</dd>
              <dt pn="section-7.6.6.1-4.5">'mtu':</dt>
              <dd pn="section-7.6.6.1-4.6">Indicates the MTU at the service
                level.</dd>
              <dt pn="section-7.6.6.1-4.7">'qos':</dt>
              <dd pn="section-7.6.6.1-4.8">Used to define a set of QoS policies
                to apply on a given connection (refer to <xref target="qos" format="default" sectionFormat="of" derivedContent="Section 7.6.6.2"/> for more details).</dd>
              <dt pn="section-7.6.6.1-4.9">'carriers-carrier':</dt>
              <dd pn="section-7.6.6.1-4.10">Groups a set of parameters
                that are used when Carriers' Carriers (CsC) is enabled, such as
                using BGP for signaling purposes <xref target="RFC8277" format="default" sectionFormat="of" derivedContent="RFC8277"/>.</dd>
              <dt pn="section-7.6.6.1-4.11">'ntp':</dt>
              <dd pn="section-7.6.6.1-4.12">Time synchronization may be needed in
                some VPNs, such as infrastructure and management VPNs. This
                container is used to enable the NTP service <xref target="RFC5905" format="default" sectionFormat="of" derivedContent="RFC5905"/>.</dd>
              <dt pn="section-7.6.6.1-4.13">'multicast':</dt>
              <dd pn="section-7.6.6.1-4.14">Specifies the multicast mode and
                other data nodes, such as the address family. Refer to <xref target="mc" format="default" sectionFormat="of" derivedContent="Section 7.7"/>.</dd>
            </dl>
          </section>
          <section anchor="qos" numbered="true" toc="include" removeInRFC="false" pn="section-7.6.6.2">
            <name slugifiedName="name-qos">QoS</name>
            <t indent="0" pn="section-7.6.6.2-1">The 'qos' container is used to define a set of QoS policies to
            apply on a given connection (<xref target="qos-sub" format="default" sectionFormat="of" derivedContent="Figure 24"/>). A
            QoS policy may be a classification or an action policy. For
            example, a QoS action can be defined to rate-limit
            inbound/outbound traffic of a given class of service. </t>
            <figure anchor="qos-sub" align="left" suppress-title="false" pn="figure-24">
              <name slugifiedName="name-overall-qos-subtree-structu">Overall QoS Subtree Structure</name>
              <sourcecode name="" type="yangtree" markers="false" pn="section-7.6.6.2-2.1">...
+--rw qos {vpn-common:qos}?
|  +--rw qos-classification-policy
|  |  +--rw rule* [id]
|  |     +--rw id             string
|  |     +--rw (match-type)?
|  |     |  +--:(match-flow)
|  |     |  |  +--rw (l3)?
|  |     |  |  |  +--:(ipv4)
|  |     |  |  |  |  ...
|  |     |  |  |  +--:(ipv6)
|  |     |  |  |     ...
|  |     |  |  +--rw (l4)?
|  |     |  |     +--:(tcp)
|  |     |  |     |  ...
|  |     |  |     +--:(udp)
|  |     |  |        ...
|  |     |  +--:(match-application)
|  |     |     +--rw match-application?
|  |     |             identityref
|  |     +--rw target-class-id?    string
|  +--rw qos-action
|  |  +--rw rule* [id]
|  |     +--rw id                     string
|  |     +--rw target-class-id?       string
|  |     +--rw inbound-rate-limit?    decimal64
|  |     +--rw outbound-rate-limit?   decimal64
|  +--rw qos-profile
|     +--rw qos-profile* [profile]
|        +--rw profile      leafref
|        +--rw direction?   identityref
...
</sourcecode>
            </figure>
            <t indent="0" pn="section-7.6.6.2-3">QoS classification can be based on many criteria, such as the following:</t>
            <dl newline="false" spacing="normal" indent="3" pn="section-7.6.6.2-4">
              <dt pn="section-7.6.6.2-4.1">Layer 3:</dt>
              <dd pn="section-7.6.6.2-4.2">As shown in <xref target="services-l3" format="default" sectionFormat="of" derivedContent="Figure 25"/>, classification can be based on
                any IP header field or a combination thereof. Both IPv4 and
                IPv6 are supported.</dd>
            </dl>
            <figure anchor="services-l3" align="left" suppress-title="false" pn="figure-25">
              <name slugifiedName="name-qos-subtree-structure-l3">QoS Subtree Structure (L3)</name>
              <sourcecode name="" type="yangtree" markers="false" pn="section-7.6.6.2-5.1">+--rw qos {vpn-common:qos}?
|  +--rw qos-classification-policy
|  |  +--rw rule* [id]
|  |     +--rw id           string
|  |     +--rw (match-type)?
|  |     |  +--:(match-flow)
|  |     |  |  +--rw (l3)?
|  |     |  |  |  +--:(ipv4)
|  |     |  |  |  |  +--rw ipv4
|  |     |  |  |  |     +--rw dscp?              inet:dscp
|  |     |  |  |  |     +--rw ecn?               uint8
|  |     |  |  |  |     +--rw length?            uint16
|  |     |  |  |  |     +--rw ttl?               uint8
|  |     |  |  |  |     +--rw protocol?          uint8
|  |     |  |  |  |     +--rw ihl?               uint8
|  |     |  |  |  |     +--rw flags?             bits
|  |     |  |  |  |     +--rw offset?            uint16
|  |     |  |  |  |     +--rw identification?    uint16
|  |     |  |  |  |     +--rw (destination-network)?
|  |     |  |  |  |     |  +--:(destination-ipv4-network)
|  |     |  |  |  |     |     +--rw destination-ipv4-network?
|  |     |  |  |  |     |             inet:ipv4-prefix
|  |     |  |  |  |     +--rw (source-network)?
|  |     |  |  |  |        +--:(source-ipv4-network)
|  |     |  |  |  |           +--rw source-ipv4-network?
|  |     |  |  |  |  inet:ipv4-prefix
|  |     |  |  |  +--:(ipv6)
|  |     |  |  |     +--rw ipv6
|  |     |  |  |        +--rw dscp?              inet:dscp
|  |     |  |  |        +--rw ecn?               uint8
|  |     |  |  |        +--rw length?            uint16
|  |     |  |  |        +--rw ttl?               uint8
|  |     |  |  |        +--rw protocol?          uint8
|  |     |  |  |        +--rw (destination-network)?
|  |     |  |  |        |  +--:(destination-ipv6-network)
|  |     |  |  |        |     +--rw destination-ipv6-network?
|  |     |  |  |        |             inet:ipv6-prefix
|  |     |  |  |        +--rw (source-network)?
|  |     |  |  |        |  +--:(source-ipv6-network)
|  |     |  |  |        |     +--rw source-ipv6-network?
|  |     |  |  |        |             inet:ipv6-prefix
|  |     |  |  |        +--rw flow-label?
|  |     |  |  |                   inet:ipv6-flow-label
...
</sourcecode>
            </figure>
            <dl newline="false" spacing="normal" indent="3" pn="section-7.6.6.2-6">
              <dt pn="section-7.6.6.2-6.1">Layer 4:</dt>
              <dd pn="section-7.6.6.2-6.2">
                <t indent="0" pn="section-7.6.6.2-6.2.1">As discussed in <xref target="RFC9181" format="default" sectionFormat="of" derivedContent="RFC9181"/>, any Layer 4
                protocol can be indicated in the 'protocol' data node under
                'l3' (<xref target="services-l3" format="default" sectionFormat="of" derivedContent="Figure 25"/>), but only TCP- and
                UDP-specific match criteria are elaborated in this version, as
                these protocols are widely used in the context of VPN
                services. Augmentations can be considered in the future to add
                other Layer-4-specific data nodes, if needed.</t>
                <t indent="0" pn="section-7.6.6.2-6.2.2">TCP- or UDP-related match criteria can be
                specified in the L3NM, as shown in <xref target="services-l4" format="default" sectionFormat="of" derivedContent="Figure 26"/>. </t>
                <t indent="0" pn="section-7.6.6.2-6.2.3">As
                discussed in <xref target="RFC9181" format="default" sectionFormat="of" derivedContent="RFC9181"/>, some transport
                protocols use existing protocols (e.g., TCP or UDP) as the
                substrate. The match criteria for such protocols may rely upon
                the 'protocol' setting under 'l3', TCP/UDP match criteria as shown in
                <xref target="services-l4" format="default" sectionFormat="of" derivedContent="Figure 26"/>, part of the TCP/UDP
                payload, or a combination thereof. This version of the module
                does not support such advanced match criteria. Future
                revisions of the VPN common module or augmentations to the
                L3NM may consider adding match criteria based on the transport
                protocol payload (e.g., by means of a bitmask match).</t>
              </dd>
            </dl>
            <figure anchor="services-l4" align="left" suppress-title="false" pn="figure-26">
              <name slugifiedName="name-qos-subtree-structure-l4">QoS Subtree Structure (L4)</name>
              <sourcecode name="" type="yangtree" markers="false" pn="section-7.6.6.2-7.1">+--rw qos {vpn-common:qos}?
|  +--rw qos-classification-policy
|  |  +--rw rule* [id]
|  |     +--rw id           string
|  |     +--rw (match-type)?
|  |     |  +--:(match-flow)
|  |     |  |  +--rw (l3)?
|  |     |  |  |  ...
|  |     |  |  +--rw (l4)?
|  |     |  |     +--:(tcp)
|  |     |  |     |  +--rw tcp
|  |     |  |     |     +--rw sequence-number?          uint32
|  |     |  |     |     +--rw acknowledgement-number?   uint32
|  |     |  |     |     +--rw data-offset?              uint8
|  |     |  |     |     +--rw reserved?                 uint8
|  |     |  |     |     +--rw flags?                    bits
|  |     |  |     |     +--rw window-size?              uint16
|  |     |  |     |     +--rw urgent-pointer?           uint16
|  |     |  |     |     +--rw options?                  binary
|  |     |  |     |     +--rw (source-port)?
|  |     |  |     |     |  +--:(source-port-range-or-operator)
|  |     |  |     |     |     +--rw source-port-range-or-operator
|  |     |  |     |     |        +--rw (port-range-or-operator)?
|  |     |  |     |     |           +--:(range)
|  |     |  |     |     |           |  +--rw lower-port
|  |     |  |     |     |           |  |       inet:port-number
|  |     |  |     |     |           |  +--rw upper-port
|  |     |  |     |     |           |          inet:port-number
|  |     |  |     |     |           +--:(operator)
|  |     |  |     |     |              +--rw operator? operator
|  |     |  |     |     |              +--rw port
|  |     |  |     |     |                      inet:port-number
|  |     |  |     |     +--rw (destination-port)?
|  |     |  |     |        +--:(destination-port-range-or-operator)
|  |     |  |     |          +--rw destination-port-range-or-operator
|  |     |  |     |             +--rw (port-range-or-operator)?
|  |     |  |     |                +--:(range)
|  |     |  |     |                |  +--rw lower-port
|  |     |  |     |                |  |       inet:port-number
|  |     |  |     |                |  +--rw upper-port
|  |     |  |     |                |          inet:port-number
|  |     |  |     |                +--:(operator)
|  |     |  |     |                   +--rw operator? operator
|  |     |  |     |                   +--rw port
|  |     |  |     |                           inet:port-number
|  |     |  |     +--:(udp)
|  |     |  |        +--rw udp
|  |     |  |           +--rw length?                    uint16
|  |     |  |           +--rw (source-port)?
|  |     |  |           |  +--:(source-port-range-or-operator)
|  |     |  |           |     +--rw source-port-range-or-operator
|  |     |  |           |        +--rw (port-range-or-operator)?
|  |     |  |           |           +--:(range)
|  |     |  |           |           |  +--rw lower-port
|  |     |  |           |           |  |       inet:port-number
|  |     |  |           |           |  +--rw upper-port
|  |     |  |           |           |          inet:port-number
|  |     |  |           |           +--:(operator)
|  |     |  |           |              +--rw operator?  operator
|  |     |  |           |              +--rw port
|  |     |  |           |                      inet:port-number
|  |     |  |           +--rw (destination-port)?
|  |     |  |              +--:(destination-port-range-or-operator)
|  |     |  |                +--rw destination-port-range-or-operator
|  |     |  |                    +--rw (port-range-or-operator)?
|  |     |  |                       +--:(range)
|  |     |  |                       |  +--rw lower-port
|  |     |  |                       |  |       inet:port-number
|  |     |  |                       |  +--rw upper-port
|  |     |  |                       |          inet:port-number
|  |     |  |                       +--:(operator)
|  |     |  |                          +--rw operator?   operator
|  |     |  |                          +--rw port
|  |     |  |                                  inet:port-number
...
</sourcecode>
            </figure>
            <dl newline="false" spacing="normal" indent="3" pn="section-7.6.6.2-8">
              <dt pn="section-7.6.6.2-8.1">Application match:</dt>
              <dd pn="section-7.6.6.2-8.2">Relies upon
                application-specific classification (<xref target="qos-sub" format="default" sectionFormat="of" derivedContent="Figure 24"/>).</dd>
            </dl>
          </section>
        </section>
      </section>
      <section anchor="mc" numbered="true" toc="include" removeInRFC="false" pn="section-7.7">
        <name slugifiedName="name-multicast">Multicast</name>
        <t indent="0" pn="section-7.7-1">Multicast may be enabled for a particular VPN at the VPN node and
        VPN network access levels (see <xref target="all-multicast" format="default" sectionFormat="of" derivedContent="Figure 27"/>).
        Some data nodes (e.g., max-groups (<xref target="mcast-vpn-profile" format="default" sectionFormat="of" derivedContent="Figure 28"/>)) can be controlled at various
        levels: VPN service, VPN node level, or VPN network access.</t>
        <figure anchor="all-multicast" align="left" suppress-title="false" pn="figure-27">
          <name slugifiedName="name-overall-multicast-subtree-s">Overall Multicast Subtree Structure</name>
          <sourcecode name="" type="yangtree" markers="false" pn="section-7.7-2.1">     ...
     +--rw vpn-services
        +--rw vpn-service* [vpn-id]
           ...
           +--rw vpn-instance-profiles
           |  +--rw vpn-instance-profile* [profile-id]
           |     ....
           |     +--rw multicast {vpn-common:multicast}?
           |        ...
           +--rw vpn-nodes
              +--rw vpn-node* [vpn-node-id]
                 ...
                 +--rw active-vpn-instance-profiles
                 |  +--rw vpn-instance-profile* [profile-id]
                 |     ...
                 |     +--rw multicast {vpn-common:multicast}?
                 |        ...
                 +--rw vpn-network-accesses
                    +--rw vpn-network-access* [id]
                       ...
                       +--rw service
                          ...
                          +--rw multicast {vpn-common:multicast}?
                             ...
</sourcecode>
        </figure>
        <t indent="0" pn="section-7.7-3">Multicast-related data nodes at the VPN instance profile level have
        the structure shown in <xref target="mcast-vpn-profile" format="default" sectionFormat="of" derivedContent="Figure 28"/>.
        </t>
        <figure anchor="mcast-vpn-profile" align="left" suppress-title="false" pn="figure-28">
          <name slugifiedName="name-multicast-subtree-structure">Multicast Subtree Structure (VPN Instance Profile Level)</name>
          <sourcecode name="" type="yangtree" markers="false" pn="section-7.7-4.1">...
+--rw vpn-services
   +--rw vpn-service* [vpn-id]
      ...
      +--rw vpn-instance-profiles
      |  +--rw vpn-instance-profile* [profile-id]
      |     ....
      |     +--rw multicast {vpn-common:multicast}?
      |        +--rw tree-flavor?   identityref
      |        +--rw rp
      |        |  +--rw rp-group-mappings
      |        |  |  +--rw rp-group-mapping* [id]
      |        |  |     +--rw id                  uint16
      |        |  |     +--rw provider-managed
      |        |  |     |  +--rw enabled?                   boolean
      |        |  |     |  +--rw rp-redundancy?             boolean
      |        |  |     |  +--rw optimal-traffic-delivery?  boolean
      |        |  |     |  +--rw anycast
      |        |  |     |     +--rw local-address?    inet:ip-address
      |        |  |     |     +--rw rp-set-address*   inet:ip-address
      |        |  |     +--rw rp-address          inet:ip-address
      |        |  |     +--rw groups
      |        |  |        +--rw group* [id]
      |        |  |           +--rw id                     uint16
      |        |  |           +--rw (group-format)
      |        |  |              +--:(group-prefix)
      |        |  |              |  +--rw group-address?
      |        |  |              |          inet:ip-prefix
      |        |  |              +--:(startend)
      |        |  |                 +--rw group-start?
      |        |  |                 |       inet:ip-address
      |        |  |                 +--rw group-end?
      |        |  |                 |       inet:ip-address
      |        |  +--rw rp-discovery
      |        |     +--rw rp-discovery-type?   identityref
      |        |     +--rw bsr-candidates
      |        |        +--rw bsr-candidate-address*
      |        |        |       inet:ip-address
      |        +--rw igmp {vpn-common:igmp and vpn-common:ipv4}?
      |        |  +--rw static-group* [group-addr]
      |        |  |  +--rw group-addr
      |        |  |  |       rt-types:ipv4-multicast-group-address
      |        |  |  +--rw source-addr?
      |        |  |          rt-types:ipv4-multicast-source-address
      |        |  +--rw max-groups?     uint32
      |        |  +--rw max-entries?    uint32
      |        |  +--rw version?        identityref
      |        +--rw mld {vpn-common:mld and vpn-common:ipv6}?
      |        |  +--rw static-group* [group-addr]
      |        |  |  +--rw group-addr
      |        |  |  |       rt-types:ipv6-multicast-group-address
      |        |  |  +--rw source-addr?
      |        |  |          rt-types:ipv6-multicast-source-address
      |        |  +--rw max-groups?     uint32
      |        |  +--rw max-entries?    uint32
      |        |  +--rw version?        identityref
      |        +--rw pim {vpn-common:pim}?
      |           +--rw hello-interval?
      |           |       rt-types:timer-value-seconds16
      |           +--rw dr-priority?      uint32
           ...
</sourcecode>
        </figure>
        <t indent="0" pn="section-7.7-5">The model supports a single type of tree per VPN access
        ('tree-flavor'): Any-Source Multicast (ASM), Source-Specific Multicast
        (SSM), or bidirectional.</t>
        <t indent="0" pn="section-7.7-6">When ASM is used, the model supports the configuration of
        Rendezvous Points (RPs). RP discovery may be 'static', 'bsr-rp', or
        'auto-rp'. When set to 'static', RP-to-multicast-group mappings
        <bcp14>MUST</bcp14> be configured as part of the 'rp-group-mappings' container. The
        RP <bcp14>MAY</bcp14> be a provider node or a customer node. When the RP is a
        customer node, the RP address must be configured using the
        'rp-address' leaf.</t>
        <t indent="0" pn="section-7.7-7">The model supports RP redundancy through the 'rp-redundancy' leaf.
        How the redundancy is achieved is out of scope.</t>
        <t indent="0" pn="section-7.7-8">When a particular VPN using ASM requires traffic
        delivery that is more optimal (e.g., requested per the guidance in <xref target="RFC8299" format="default" sectionFormat="of" derivedContent="RFC8299"/>),
        'optimal-traffic-delivery' can be set. When set to 'true', the
        implementation must use any mechanism to provide 
        traffic delivery that is more optimal for the customer. For example, anycast is one of the
        mechanisms for enhancing RP redundancy, providing resilience against failures, and
        recovering from failures quickly.</t>
        <t indent="0" pn="section-7.7-9">
 When configuring multicast-related parameters at the VPN node level
 (<xref target="mcast-vpn" format="default" sectionFormat="of" derivedContent="Figure 29"/>), the same structure as the structure depicted in
 <xref target="mcast-vpaccess" format="default" sectionFormat="of" derivedContent="Figure 30"/> is used.  When defined at the VPN node level, Internet Group Management Protocol (IGMP) parameters <xref target="RFC1112" format="default" sectionFormat="of" derivedContent="RFC1112"/> <xref target="RFC2236" format="default" sectionFormat="of" derivedContent="RFC2236"/> <xref target="RFC3376" format="default" sectionFormat="of" derivedContent="RFC3376"/>, Multicast
        Listener Discovery (MLD) parameters <xref target="RFC2710" format="default" sectionFormat="of" derivedContent="RFC2710"/> <xref target="RFC3810" format="default" sectionFormat="of" derivedContent="RFC3810"/>, and Protocol Independent Multicast (PIM) parameters <xref target="RFC7761" format="default" sectionFormat="of" derivedContent="RFC7761"/> are applicable to all VPN
        network accesses of that VPN node unless corresponding nodes are
        overridden at the VPN network access level.</t>
        <figure anchor="mcast-vpn" align="left" suppress-title="false" pn="figure-29">
          <name slugifiedName="name-multicast-subtree-structure-">Multicast Subtree Structure (VPN Node Level)</name>
          <sourcecode name="" type="yangtree" markers="false" pn="section-7.7-10.1">...
+--rw vpn-nodes
   +--rw vpn-node* [vpn-node-id]
      ...
      +--rw active-vpn-instance-profiles
      |  +--rw vpn-instance-profile* [profile-id]
      |     ...
      |     +--rw multicast {vpn-common:multicast}?
      |        +--rw tree-flavor*   identityref
      |        +--rw rp
      |        |  ...
      |        +--rw igmp {vpn-common:igmp and vpn-common:ipv4}?
      |        |  ...
      |        +--rw mld {vpn-common:mld and vpn-common:ipv6}?
      |        |  ...
      |        +--rw pim {vpn-common:pim}?
      |           ...
</sourcecode>
        </figure>
        <t indent="0" pn="section-7.7-11">Multicast-related data nodes at the VPN network access level are
        shown in <xref target="mcast-vpaccess" format="default" sectionFormat="of" derivedContent="Figure 30"/>. The values configured
        at the VPN network access level override the values configured for the
        corresponding data nodes at other levels.</t>
        <figure anchor="mcast-vpaccess" align="left" suppress-title="false" pn="figure-30">
          <name slugifiedName="name-multicast-subtree-structure-v">Multicast Subtree Structure (VPN Network Access Level)</name>
          <sourcecode name="" type="yangtree" markers="false" pn="section-7.7-12.1">...
+--rw vpn-network-accesses
   +--rw vpn-network-access* [id]
      ...
      +--rw service
         ...
         +--rw multicast {vpn-common:multicast}?
            +--rw access-type?      enumeration
            +--rw address-family?   identityref
            +--rw protocol-type?    enumeration
            +--rw remote-source?    boolean
            +--rw igmp  {vpn-common:igmp}?
            |  +--rw static-group* [group-addr]
            |  |  +--rw group-addr
            |  |          rt-types:ipv4-multicast-group-address
            |  |  +--rw source-addr?
            |  |          rt-types:ipv4-multicast-source-address
            |  +--rw max-groups?          uint32
            |  +--rw max-entries?         uint32
            |  +--rw max-group-sources?   uint32
            |  +--rw version?             identityref
            |  +--rw status
            |     +--rw admin-status
            |     |  +--rw status?         identityref
            |     |  +--rw last-change?   yang:date-and-time
            |     +--ro oper-status
            |        +--ro status?         identityref
            |        +--ro last-change?   yang:date-and-time
            +--rw mld {vpn-common:mld}?
            |  +--rw static-group* [group-addr]
            |  |  +--rw group-addr
            |  |          rt-types:ipv6-multicast-group-address
            |  |  +--rw source-addr?
            |  |          rt-types:ipv6-multicast-source-address
            |  +--rw max-groups?          uint32
            |  +--rw max-entries?         uint32
            |  +--rw max-group-sources?   uint32
            |  +--rw version?             identityref
            |  +--rw status
            |     +--rw admin-status
            |     |  +--rw status?         identityref
            |     |  +--rw last-change?   yang:date-and-time
            |     +--ro oper-status
            |        +--ro status?         identityref
            |        +--ro last-change?   yang:date-and-time
            +--rw pim {vpn-common:pim}?
               +--rw hello-interval?   rt-types:timer-value-seconds16
               +--rw dr-priority?      uint32
               +--rw status
                  +--rw admin-status
                  |  +--rw status?         identityref
                  |  +--rw last-change?   yang:date-and-time
                  +--ro oper-status
                     +--ro status?         identityref
                     +--ro last-change?   yang:date-and-time
</sourcecode>
        </figure>
      </section>
    </section>
    <section anchor="YANG_module" numbered="true" toc="include" removeInRFC="false" pn="section-8">
      <name slugifiedName="name-l3nm-yang-module">L3NM YANG Module</name>
      <t indent="0" pn="section-8-1">This module uses types defined in <xref target="RFC6991" format="default" sectionFormat="of" derivedContent="RFC6991"/>, 
      <xref target="RFC8343" format="default" sectionFormat="of" derivedContent="RFC8343"/>, and <xref target="RFC9181" format="default" sectionFormat="of" derivedContent="RFC9181"/>. It also uses groupings defined in <xref target="RFC8519" format="default" sectionFormat="of" derivedContent="RFC8519"/>, <xref target="RFC8177" format="default" sectionFormat="of" derivedContent="RFC8177"/>, and <xref target="RFC8294" format="default" sectionFormat="of" derivedContent="RFC8294"/>.</t>
      <sourcecode name="ietf-l3vpn-ntw@2022-02-14.yang" type="yang" markers="true" pn="section-8-2">
module ietf-l3vpn-ntw {
  yang-version 1.1;
  namespace "urn:ietf:params:xml:ns:yang:ietf-l3vpn-ntw";
  prefix l3nm;

  import ietf-vpn-common {
    prefix vpn-common;
    reference
      "RFC 9181: A Common YANG Data Model for Layer 2 and Layer 3
                 VPNs";
  }
  import ietf-inet-types {
    prefix inet;
    reference
      "RFC 6991: Common YANG Data Types, Section 4";
  }
  import ietf-yang-types {
    prefix yang;
    reference
      "RFC 6991: Common YANG Data Types, Section 3";
  }
  import ietf-key-chain {
    prefix key-chain;
    reference
      "RFC 8177: YANG Data Model for Key Chains";
  }
  import ietf-routing-types {
    prefix rt-types;
    reference
      "RFC 8294: Common YANG Data Types for the Routing Area";
  }
  import ietf-interfaces {
    prefix if;
    reference
      "RFC 8343: A YANG Data Model for Interface Management";
  }

  organization
    "IETF OPSAWG (Operations and Management Area Working Group)";
  contact
    "WG Web:   &lt;https://datatracker.ietf.org/wg/opsawg/&gt;
     WG List:  &lt;mailto:opsawg@ietf.org&gt;

     Author:   Samier Barguil
               &lt;mailto:samier.barguilgiraldo.ext@telefonica.com&gt;
     Editor:   Oscar Gonzalez de Dios
               &lt;mailto:oscar.gonzalezdedios@telefonica.com&gt;
     Editor:   Mohamed Boucadair
               &lt;mailto:mohamed.boucadair@orange.com&gt;
     Author:   Luis Angel Munoz
               &lt;mailto:luis-angel.munoz@vodafone.com&gt;
     Author:   Alejandro Aguado
               &lt;mailto:alejandro.aguado_martin@nokia.com&gt;";
  description
    "This YANG module defines a generic network-oriented model
     for the configuration of Layer 3 Virtual Private Networks.

     Copyright (c) 2022 IETF Trust and the persons identified as
     authors of the code.  All rights reserved.

     Redistribution and use in source and binary forms, with or
     without modification, is permitted pursuant to, and subject
     to the license terms contained in, the Revised BSD License
     set forth in Section 4.c of the IETF Trust's Legal Provisions
     Relating to IETF Documents
     (https://trustee.ietf.org/license-info).

     This version of this YANG module is part of RFC 9182; see the
     RFC itself for full legal notices.";

  revision 2022-02-14 {
    description
      "Initial revision.";
    reference
      "RFC 9182: A YANG Network Data Model for Layer 3 VPNs";
  }

  /* Features */

  feature msdp {
    description
      "This feature indicates that Multicast Source Discovery
       Protocol (MSDP) capabilities are supported by the VPN.";
    reference
      "RFC 3618: Multicast Source Discovery Protocol (MSDP)";
  }

  /* Identities */

  identity address-allocation-type {
    description
      "Base identity for address allocation type in the
       Provider Edge to Customer Edge (PE-CE) link.";
  }

  identity provider-dhcp {
    base address-allocation-type;
    description
      "The provider's network provides a DHCP service to the
       customer.";
  }

  identity provider-dhcp-relay {
    base address-allocation-type;
    description
      "The provider's network provides a DHCP relay service to the
       customer.";
  }

  identity provider-dhcp-slaac {
    if-feature "vpn-common:ipv6";
    base address-allocation-type;
    description
      "The provider's network provides a DHCP service to the
       customer as well as IPv6 Stateless Address
       Autoconfiguration (SLAAC).";
    reference
      "RFC 4862: IPv6 Stateless Address Autoconfiguration";
  }

  identity static-address {
    base address-allocation-type;
    description
      "The provider's network provides static IP addressing to the
       customer.";
  }

  identity slaac {
    if-feature "vpn-common:ipv6";
    base address-allocation-type;
    description
      "The provider's network uses IPv6 SLAAC to provide
       addressing to the customer.";
    reference
      "RFC 4862: IPv6 Stateless Address Autoconfiguration";
  }

  identity local-defined-next-hop {
    description
      "Base identity of local defined next hops.";
  }

  identity discard {
    base local-defined-next-hop;
    description
      "Indicates an action to discard traffic for the
       corresponding destination.
       For example, this can be used to black-hole traffic.";
  }

  identity local-link {
    base local-defined-next-hop;
    description
      "Treat traffic towards addresses within the specified
       next-hop prefix as though they are connected to a local
       link.";
  }

  identity l2-tunnel-type {
    description
      "Base identity for Layer 2 tunnel selection under the VPN
       network access.";
  }

  identity pseudowire {
    base l2-tunnel-type;
    description
      "Pseudowire tunnel termination in the VPN network access.";
  }

  identity vpls {
    base l2-tunnel-type;
    description
      "Virtual Private LAN Service (VPLS) tunnel termination in
       the VPN network access.";
  }

  identity vxlan {
    base l2-tunnel-type;
    description
      "Virtual eXtensible Local Area Network (VXLAN) tunnel
       termination in the VPN network access.";
  }

  /* Typedefs */

  typedef predefined-next-hop {
    type identityref {
      base local-defined-next-hop;
    }
    description
      "Predefined next-hop designation for locally generated
       routes.";
  }

  typedef area-address {
    type string {
      pattern '[0-9A-Fa-f]{2}(\.[0-9A-Fa-f]{4}){0,6}';
    }
    description
      "This type defines the area address format.";
  }

  /* Groupings */

  grouping vpn-instance-profile {
    description
      "Grouping for data nodes that may be factorized
       among many levels of the model.  The grouping can
       be used to define generic profiles at the VPN service
       level and then referenced at the VPN node and VPN
       network access levels.";
    leaf local-as {
      if-feature "vpn-common:rtg-bgp";
      type inet:as-number;
      description
        "Provider's Autonomous System (AS) number.  Used if the
         customer requests BGP routing.";
    }
    uses vpn-common:route-distinguisher;
    list address-family {
      key "address-family";
      description
        "Set of parameters per address family.";
      leaf address-family {
        type identityref {
          base vpn-common:address-family;
        }
        description
          "Indicates the address family (IPv4 and/or IPv6).";
      }
      container vpn-targets {
        description
          "Set of route targets to match for import and export
           routes to/from VRF.";
        uses vpn-common:vpn-route-targets;
      }
      list maximum-routes {
        key "protocol";
        description
          "Defines the maximum number of routes for VRF.";
        leaf protocol {
          type identityref {
            base vpn-common:routing-protocol-type;
          }
          description
            "Indicates the routing protocol.  A value of 'any'
             can be used to identify a limit that will apply for
             each active routing protocol.";
        }
        leaf maximum-routes {
          type uint32;
          description
            "Indicates the maximum number of prefixes that VRF can
             accept for this address family and protocol.";
        }
      }
    }
    container multicast {
      if-feature "vpn-common:multicast";
      description
        "Global multicast parameters.";
      leaf tree-flavor {
        type identityref {
          base vpn-common:multicast-tree-type;
        }
        description
          "Type of the multicast tree to be used.";
      }
      container rp {
        description
          "Rendezvous Point (RP) parameters.";
        container rp-group-mappings {
          description
            "RP-to-group mapping parameters.";
          list rp-group-mapping {
            key "id";
            description
              "List of RP-to-group mappings.";
            leaf id {
              type uint16;
              description
                "Unique identifier for the mapping.";
            }
            container provider-managed {
              description
                "Parameters for a provider-managed RP.";
              leaf enabled {
                type boolean;
                default "false";
                description
                  "Set to 'true' if the RP must be a
                   provider-managed node.  Set to 'false' if it is
                   a customer-managed node.";
              }
              leaf rp-redundancy {
                type boolean;
                default "false";
                description
                  "If set to 'true', it indicates that a
                   redundancy mechanism for the RP is required.";
              }
              leaf optimal-traffic-delivery {
                type boolean;
                default "false";
                description
                  "If set to 'true', the service provider (SP)
                   must ensure that the traffic uses an optimal
                   path.  An SP may use Anycast RP or
                   RP-tree-to-SPT ('SPT' is 'shortest path tree')
                   switchover architectures.";
              }
              container anycast {
                when "../rp-redundancy = 'true' and
                      ../optimal-traffic-delivery = 'true'" {
                  description
                    "Only applicable if both RP redundancy and
                     delivery through an optimal path are
                     activated.";
                }
                description
                  "PIM Anycast-RP parameters.";
                leaf local-address {
                  type inet:ip-address;
                  description
                    "IP local address for the PIM RP.  Usually
                     corresponds to the Router ID or the
                     primary address.";
                }
                leaf-list rp-set-address {
                  type inet:ip-address;
                  description
                    "Specifies the IP address of other RP routers
                     that share the same RP IP address.";
                }
              }
            }
            leaf rp-address {
              when "../provider-managed/enabled = 'false'" {
                description
                  "Relevant when the RP is not managed by the
                   provider.";
              }
              type inet:ip-address;
              mandatory true;
              description
                "Defines the address of the RP.
                 Used if the RP is managed by the customer.";
            }
            container groups {
              description
                "Multicast groups associated with the RP.";
              list group {
                key "id";
                description
                  "List of multicast groups.";
                leaf id {
                  type uint16;
                  description
                    "Identifier for the group.";
                }
                choice group-format {
                  mandatory true;
                  description
                    "Choice for multicast group format.";
                  case group-prefix {
                    leaf group-address {
                      type inet:ip-prefix;
                      description
                        "A single multicast group prefix.";
                    }
                  }
                  case startend {
                    leaf group-start {
                      type inet:ip-address;
                      description
                        "The first multicast group address in
                         the multicast group address range.";
                    }
                    leaf group-end {
                      type inet:ip-address;
                      description
                        "The last multicast group address in
                         the multicast group address range.";
                    }
                  }
                }
              }
            }
          }
        }
        container rp-discovery {
          description
            "RP discovery parameters.";
          leaf rp-discovery-type {
            type identityref {
              base vpn-common:multicast-rp-discovery-type;
            }
            default "vpn-common:static-rp";
            description
              "Type of RP discovery used.";
          }
          container bsr-candidates {
            when "derived-from-or-self(../rp-discovery-type, "
               + "'vpn-common:bsr-rp')" {
              description
                "Only applicable if the discovery type
                 is 'bsr-rp'.";
            }
            description
              "Container for the customer Bootstrap Router (BSR)
               candidate's addresses.";
            leaf-list bsr-candidate-address {
              type inet:ip-address;
              description
                "Specifies the address of the candidate BSR.";
            }
          }
        }
      }
      container igmp {
        if-feature "vpn-common:igmp and vpn-common:ipv4";
        description
          "Includes IGMP-related parameters.";
        list static-group {
          key "group-addr";
          description
            "Multicast static source/group associated with the
             IGMP session.";
          leaf group-addr {
            type rt-types:ipv4-multicast-group-address;
            description
              "Multicast group IPv4 address.";
          }
          leaf source-addr {
            type rt-types:ipv4-multicast-source-address;
            description
              "Multicast source IPv4 address.";
          }
        }
        leaf max-groups {
          type uint32;
          description
            "Indicates the maximum number of groups.";
        }
        leaf max-entries {
          type uint32;
          description
            "Indicates the maximum number of IGMP entries.";
        }
        leaf version {
          type identityref {
            base vpn-common:igmp-version;
          }
          default "vpn-common:igmpv2";
          description
            "Indicates the IGMP version.";
          reference
            "RFC 1112: Host Extensions for IP Multicasting
             RFC 2236: Internet Group Management Protocol,
                       Version 2
             RFC 3376: Internet Group Management Protocol,
                       Version 3";
        }
      }
      container mld {
        if-feature "vpn-common:mld and vpn-common:ipv6";
        description
          "Includes MLD-related parameters.";
        list static-group {
          key "group-addr";
          description
            "Multicast static source/group associated with the
             MLD session.";
          leaf group-addr {
            type rt-types:ipv6-multicast-group-address;
            description
              "Multicast group IPv6 address.";
          }
          leaf source-addr {
            type rt-types:ipv6-multicast-source-address;
            description
              "Multicast source IPv6 address.";
          }
        }
        leaf max-groups {
          type uint32;
          description
            "Indicates the maximum number of groups.";
        }
        leaf max-entries {
          type uint32;
          description
            "Indicates the maximum number of MLD entries.";
        }
        leaf version {
          type identityref {
            base vpn-common:mld-version;
          }
          default "vpn-common:mldv2";
          description
            "Indicates the MLD protocol version.";
          reference
            "RFC 2710: Multicast Listener Discovery (MLD) for IPv6
             RFC 3810: Multicast Listener Discovery Version 2
                       (MLDv2) for IPv6";
        }
      }
      container pim {
        if-feature "vpn-common:pim";
        description
          "Only applies when the protocol type is 'pim'.";
        leaf hello-interval {
          type rt-types:timer-value-seconds16;
          default "30";
          description
            "Interval between PIM Hello messages.  If set to
             'infinity' or 'not-set', no periodic Hello messages
             are sent.";
          reference
            "RFC 7761: Protocol Independent Multicast - Sparse
                       Mode (PIM-SM): Protocol Specification
                       (Revised), Section 4.11
             RFC 8294: Common YANG Data Types for the Routing
                       Area";
        }
        leaf dr-priority {
          type uint32;
          default "1";
          description
            "Indicates the preference associated with the
             Designated Router (DR) election process.  A larger
             value has a higher priority over a smaller value.";
          reference
            "RFC 7761: Protocol Independent Multicast - Sparse
                       Mode (PIM-SM): Protocol Specification
                       (Revised), Section 4.3.2";
        }
      }
    }
  }

  /* Main Blocks */
  /* Main l3vpn-ntw */

  container l3vpn-ntw {
    description
      "Main container for management of Layer 3 Virtual Private
       Network (L3VPN) services.";
    container vpn-profiles {
      description
        "Contains a set of valid VPN profiles to reference
         in the VPN service.";
      uses vpn-common:vpn-profile-cfg;
    }
    container vpn-services {
      description
        "Container for the VPN services.";
      list vpn-service {
        key "vpn-id";
        description
          "List of VPN services.";
        uses vpn-common:vpn-description;
        leaf parent-service-id {
          type vpn-common:vpn-id;
          description
            "Pointer to the parent service, if any.
             A parent service can be an L3SM, a slice request,
             a VPN+ service, etc.";
        }
        leaf vpn-type {
          type identityref {
            base vpn-common:service-type;
          }
          description
            "Indicates the service type.";
        }
        leaf vpn-service-topology {
          type identityref {
            base vpn-common:vpn-topology;
          }
          default "vpn-common:any-to-any";
          description
            "VPN service topology.";
        }
        uses vpn-common:service-status;
        container vpn-instance-profiles {
          description
            "Container for a list of VPN instance profiles.";
          list vpn-instance-profile {
            key "profile-id";
            description
              "List of VPN instance profiles.";
            leaf profile-id {
              type string;
              description
                "VPN instance profile identifier.";
            }
            leaf role {
              type identityref {
                base vpn-common:role;
              }
              default "vpn-common:any-to-any-role";
              description
                "Role of the VPN node in the VPN.";
            }
            uses vpn-instance-profile;
          }
        }
        container underlay-transport {
          description
            "Container for the underlay transport.";
          uses vpn-common:underlay-transport;
        }
        container external-connectivity {
          if-feature "vpn-common:external-connectivity";
          description
            "Container for external connectivity.";
          choice profile {
            description
              "Choice for the external connectivity profile.";
            case profile {
              leaf profile-name {
                type leafref {
                  path "/l3vpn-ntw/vpn-profiles"
                     + "/valid-provider-identifiers"
                     + "/external-connectivity-identifier/id";
                }
                description
                  "Name of the service provider's profile to be
                   applied at the VPN service level.";
              }
            }
          }
        }
        container vpn-nodes {
          description
            "Container for VPN nodes.";
          list vpn-node {
            key "vpn-node-id";
            description
              "Includes a list of VPN nodes.";
            leaf vpn-node-id {
              type vpn-common:vpn-id;
              description
                "An identifier of the VPN node.";
            }
            leaf description {
              type string;
              description
                "Textual description of the VPN node.";
            }
            leaf ne-id {
              type string;
              description
                "Unique identifier of the network element where
                 the VPN node is deployed.";
            }
            leaf local-as {
              if-feature "vpn-common:rtg-bgp";
              type inet:as-number;
              description
                "Provider's AS number.  Used if the customer
                 requests BGP routing.";
            }
            leaf router-id {
              type rt-types:router-id;
              description
                "A 32-bit number in the dotted-quad format that is
                 used to uniquely identify a node within an AS.
                 This identifier is used for both IPv4 and IPv6.";
            }
            container active-vpn-instance-profiles {
              description
                "Container for active VPN instance profiles.";
              list vpn-instance-profile {
                key "profile-id";
                description
                  "Includes a list of active VPN instance
                   profiles.";
                leaf profile-id {
                  type leafref {
                    path "/l3vpn-ntw/vpn-services/vpn-service"
                       + "/vpn-instance-profiles"
                       + "/vpn-instance-profile/profile-id";
                  }
                  description
                    "Node's active VPN instance profile.";
                }
                list router-id {
                  key "address-family";
                  description
                    "Router ID per address family.";
                  leaf address-family {
                    type identityref {
                      base vpn-common:address-family;
                    }
                    description
                      "Indicates the address family for which the
                       Router ID applies.";
                  }
                  leaf router-id {
                    type inet:ip-address;
                    description
                      "The 'router-id' information can be an IPv4
                       or IPv6 address.  This can be used,
                       for example, to configure an IPv6 address
                       as a Router ID when such a capability is
                       supported by underlay routers.  In such a
                       case, the configured value overrides the
                       generic value defined at the VPN node
                       level.";
                  }
                }
                uses vpn-instance-profile;
              }
            }
            container msdp {
              if-feature "msdp";
              description
                "Includes MSDP-related parameters.";
              leaf peer {
                type inet:ipv4-address;
                description
                  "Indicates the IPv4 address of the MSDP peer.";
              }
              leaf local-address {
                type inet:ipv4-address;
                description
                  "Indicates the IPv4 address of the local end.
                   This local address must be configured on
                   the node.";
              }
              uses vpn-common:service-status;
            }
            uses vpn-common:vpn-components-group;
            uses vpn-common:service-status;
            container vpn-network-accesses {
              description
                "List of network accesses.";
              list vpn-network-access {
                key "id";
                description
                  "List of network accesses.";
                leaf id {
                  type vpn-common:vpn-id;
                  description
                    "Identifier for the network access.";
                }
                leaf interface-id {
                  type string;
                  description
                    "Identifier for the physical or logical
                     interface.
                     The identification of the sub-interface
                     is provided at the connection level and/or
                     the IP connection level.";
                }
                leaf description {
                  type string;
                  description
                    "Textual description of the network access.";
                }
                leaf vpn-network-access-type {
                  type identityref {
                    base vpn-common:site-network-access-type;
                  }
                  default "vpn-common:point-to-point";
                  description
                    "Describes the type of connection, e.g.,
                     point to point.";
                }
                leaf vpn-instance-profile {
                  type leafref {
                    path "/l3vpn-ntw/vpn-services/vpn-service"
                       + "/vpn-nodes/vpn-node"
                       + "/active-vpn-instance-profiles"
                       + "/vpn-instance-profile/profile-id";
                  }
                  description
                    "An identifier of an active VPN instance
                     profile.";
                }
                uses vpn-common:service-status;
                container connection {
                  description
                    "Defines Layer 2 protocols and parameters that
                     are required to enable connectivity between
                     the PE and the CE.";
                  container encapsulation {
                    description
                      "Container for Layer 2 encapsulation.";
                    leaf type {
                      type identityref {
                        base vpn-common:encapsulation-type;
                      }
                      default "vpn-common:priority-tagged";
                      description
                        "Encapsulation type.  By default, the type
                         of the tagged interface is
                         'priority-tagged'.";
                    }
                    container dot1q {
                      when "derived-from-or-self(../type, "
                         + "'vpn-common:dot1q')" {
                        description
                          "Only applies when the type of the
                           tagged interface is 'dot1q'.";
                      }
                      description
                        "Tagged interface.";
                      leaf tag-type {
                        type identityref {
                          base vpn-common:tag-type;
                        }
                        default "vpn-common:c-vlan";
                        description
                          "Tag type.  By default, the tag type is
                           'c-vlan'.";
                      }
                      leaf cvlan-id {
                        type uint16 {
                          range "1..4094";
                        }
                        description
                          "VLAN identifier.";
                      }
                    }
                    container priority-tagged {
                      when "derived-from-or-self(../type, "
                         + "'vpn-common:priority-tagged')" {
                        description
                          "Only applies when the type of
                           the tagged interface is
                           'priority-tagged'.";
                      }
                      description
                        "Priority tagged.";
                      leaf tag-type {
                        type identityref {
                          base vpn-common:tag-type;
                        }
                        default "vpn-common:c-vlan";
                        description
                          "Tag type.  By default, the tag type is
                           'c-vlan'.";
                      }
                    }
                    container qinq {
                      when "derived-from-or-self(../type, "
                         + "'vpn-common:qinq')" {
                        description
                          "Only applies when the type of the
                           tagged interface is 'qinq'.";
                      }
                      description
                        "Includes QinQ parameters.";
                      leaf tag-type {
                        type identityref {
                          base vpn-common:tag-type;
                        }
                        default "vpn-common:s-c-vlan";
                        description
                          "Tag type.";
                      }
                      leaf svlan-id {
                        type uint16;
                        mandatory true;
                        description
                          "Service VLAN (S-VLAN) identifier.";
                      }
                      leaf cvlan-id {
                        type uint16;
                        mandatory true;
                        description
                          "Customer VLAN (C-VLAN) identifier.";
                      }
                    }
                  }
                  choice l2-service {
                    description
                      "The Layer 2 connectivity service can be
                       provided by indicating a pointer to an
                       L2VPN or by specifying a Layer 2 tunnel
                       service.";
                    container l2-tunnel-service {
                      description
                        "Defines a Layer 2 tunnel termination.
                         It is only applicable when a tunnel is
                         required.  The supported values are
                         'pseudowire', 'vpls', and 'vxlan'.  Other
                         values may be defined, if needed.";
                      leaf type {
                        type identityref {
                          base l2-tunnel-type;
                        }
                        description
                          "Selects the tunnel termination option
                           for each VPN network access.";
                      }
                      container pseudowire {
                        when "derived-from-or-self(../type, "
                           + "'pseudowire')" {
                          description
                            "Only applies when the Layer 2 service
                             type is 'pseudowire'.";
                        }
                        description
                          "Includes pseudowire termination
                           parameters.";
                        leaf vcid {
                          type uint32;
                          description
                            "Indicates a pseudowire (PW) or
                             virtual circuit (VC) identifier.";
                        }
                        leaf far-end {
                          type union {
                            type uint32;
                            type inet:ip-address;
                          }
                          description
                            "Neighbor reference.";
                          reference
                            "RFC 8077: Pseudowire Setup and
                                       Maintenance Using the Label
                                       Distribution Protocol
                                       (LDP), Section 6.1";
                        }
                      }
                      container vpls {
                        when "derived-from-or-self(../type, "
                           + "'vpls')" {
                          description
                            "Only applies when the Layer 2 service
                             type is 'vpls'.";
                        }
                        description
                          "VPLS termination parameters.";
                        leaf vcid {
                          type uint32;
                          description
                            "VC identifier.";
                        }
                        leaf-list far-end {
                          type union {
                            type uint32;
                            type inet:ip-address;
                          }
                          description
                            "Neighbor reference.";
                        }
                      }
                      container vxlan {
                        when "derived-from-or-self(../type, "
                           + "'vxlan')" {
                          description
                            "Only applies when the Layer 2 service
                             type is 'vxlan'.";
                        }
                        description
                          "VXLAN termination parameters.";
                        leaf vni-id {
                          type uint32;
                          mandatory true;
                          description
                            "VXLAN Network Identifier (VNI).";
                        }
                        leaf peer-mode {
                          type identityref {
                            base vpn-common:vxlan-peer-mode;
                          }
                          default "vpn-common:static-mode";
                          description
                            "Specifies the VXLAN access mode.  By
                             default, the peer mode is set to
                             'static-mode'.";
                        }
                        leaf-list peer-ip-address {
                          type inet:ip-address;
                          description
                            "List of a peer's IP addresses.";
                        }
                      }
                    }
                    case l2vpn {
                      leaf l2vpn-id {
                        type vpn-common:vpn-id;
                        description
                          "Indicates the L2VPN service associated
                           with an Integrated Routing and Bridging
                           (IRB) interface.";
                      }
                    }
                  }
                  leaf l2-termination-point {
                    type string;
                    description
                      "Specifies a reference to a local Layer 2
                       termination point, such as a Layer 2
                       sub-interface.";
                  }
                  leaf local-bridge-reference {
                    type string;
                    description
                      "Specifies a local bridge reference to
                       accommodate, for example, implementations
                       that require internal bridging.
                       A reference may be a local bridge domain.";
                  }
                  leaf bearer-reference {
                    if-feature "vpn-common:bearer-reference";
                    type string;
                    description
                      "This is an internal reference for the
                       service provider to identify the bearer
                       associated with this VPN.";
                  }
                  container lag-interface {
                    if-feature "vpn-common:lag-interface";
                    description
                      "Container for configuration of Link
                       Aggregation Group (LAG) interface
                       attributes.";
                    leaf lag-interface-id {
                      type string;
                      description
                        "LAG interface identifier.";
                    }
                    container member-link-list {
                      description
                        "Container for the member link list.";
                      list member-link {
                        key "name";
                        description
                          "Member link.";
                        leaf name {
                          type string;
                          description
                            "Member link name.";
                        }
                      }
                    }
                  }
                }
                container ip-connection {
                  description
                    "Defines IP connection parameters.";
                  leaf l3-termination-point {
                    type string;
                    description
                      "Specifies a reference to a local Layer 3
                       termination point, such as a bridge domain
                       interface.";
                  }
                  container ipv4 {
                    if-feature "vpn-common:ipv4";
                    description
                      "IPv4-specific parameters.";
                    leaf local-address {
                      type inet:ipv4-address;
                      description
                        "The IP address used at the provider's
                         interface.";
                    }
                    leaf prefix-length {
                      type uint8 {
                        range "0..32";
                      }
                      description
                        "Subnet prefix length expressed in bits.
                         It is applied to both local and customer
                         addresses.";
                    }
                    leaf address-allocation-type {
                      type identityref {
                        base address-allocation-type;
                      }
                      must "not(derived-from-or-self(current(), "
                         + "'slaac') or "
                         + "derived-from-or-self(current(), "
                         + "'provider-dhcp-slaac'))" {
                        error-message "SLAAC is only applicable "
                                    + "to IPv6.";
                      }
                      description
                        "Defines how addresses are allocated to
                         the peer site.

                         If there is no value for the address
                         allocation type, then IPv4 addressing
                         is not enabled.";
                    }
                    choice allocation-type {
                      description
                        "Choice of the IPv4 address allocation.";
                      case provider-dhcp {
                        description
                          "Parameters related to DHCP-allocated
                           addresses.  IP addresses are allocated
                           by DHCP, which is provided by the
                           operator.";
                        leaf dhcp-service-type {
                          type enumeration {
                            enum server {
                              description
                                "Local DHCP server.";
                            }
                            enum relay {
                              description
                                "Local DHCP relay.  DHCP requests
                                 are relayed to a provider's
                                 server.";
                            }
                          }
                          description
                            "Indicates the type of DHCP service to
                             be enabled on this access.";
                        }
                        choice service-type {
                          description
                            "Choice based on the DHCP service
                             type.";
                          case relay {
                            description
                              "Container for a list of the
                               provider's DHCP servers (i.e.,
                               'dhcp-service-type' is set to
                               'relay').";
                            leaf-list server-ip-address {
                              type inet:ipv4-address;
                              description
                                "IPv4 addresses of the provider's
                                 DHCP server, for use by the local
                                 DHCP relay.";
                            }
                          }
                          case server {
                            description
                              "A choice for how addresses are
                               assigned when a local DHCP server
                               is enabled.";
                            choice address-assign {
                              default "number";
                              description
                                "A choice for how IPv4 addresses
                                 are assigned.";
                              case number {
                                leaf number-of-dynamic-address {
                                  type uint16;
                                  default "1";
                                  description
                                    "Specifies the number of IP
                                     addresses to be assigned to
                                     the customer on this
                                     access.";
                                }
                              }
                              case explicit {
                                container customer-addresses {
                                  description
                                    "Container for customer
                                     addresses to be allocated
                                     using DHCP.";
                                  list address-pool {
                                    key "pool-id";
                                    description
                                      "Describes IP addresses to
                                       be allocated by DHCP.

                                       When only 'start-address'
                                       is present, it represents a
                                       single address.

                                       When both 'start-address'
                                       and 'end-address' are
                                       specified, it implies a
                                       range inclusive of both
                                       addresses.";
                                    leaf pool-id {
                                      type string;
                                      description
                                        "A pool identifier for the
                                         address range from
                                         'start-address' to
                                         'end-address'.";
                                    }
                                    leaf start-address {
                                      type inet:ipv4-address;
                                      mandatory true;
                                      description
                                        "Indicates the first
                                         address in the pool.";
                                    }
                                    leaf end-address {
                                      type inet:ipv4-address;
                                      description
                                        "Indicates the last
                                         address in the pool.";
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                      case dhcp-relay {
                        description
                          "The DHCP relay is provided by the
                           operator.";
                        container customer-dhcp-servers {
                          description
                            "Container for a list of the
                             customer's DHCP servers.";
                          leaf-list server-ip-address {
                            type inet:ipv4-address;
                            description
                              "IPv4 addresses of the customer's
                               DHCP server.";
                          }
                        }
                      }
                      case static-addresses {
                        description
                          "Lists the IPv4 addresses that are
                           used.";
                        leaf primary-address {
                          type leafref {
                            path "../address/address-id";
                          }
                          description
                            "Primary address of the connection.";
                        }
                        list address {
                          key "address-id";
                          description
                            "Lists the IPv4 addresses that are
                             used.";
                          leaf address-id {
                            type string;
                            description
                              "An identifier of the static IPv4
                               address.";
                          }
                          leaf customer-address {
                            type inet:ipv4-address;
                            description
                              "IPv4 address of the customer
                               side.";
                          }
                        }
                      }
                    }
                  }
                  container ipv6 {
                    if-feature "vpn-common:ipv6";
                    description
                      "IPv6-specific parameters.";
                    leaf local-address {
                      type inet:ipv6-address;
                      description
                        "IPv6 address of the provider side.";
                    }
                    leaf prefix-length {
                      type uint8 {
                        range "0..128";
                      }
                      description
                        "Subnet prefix length expressed in bits.
                         It is applied to both local and customer
                         addresses.";
                    }
                    leaf address-allocation-type {
                      type identityref {
                        base address-allocation-type;
                      }
                      description
                        "Defines how addresses are allocated.
                         If there is no value for the address
                         allocation type, then IPv6 addressing is
                         disabled.";
                    }
                    choice allocation-type {
                      description
                        "A choice based on the IPv6 allocation
                         type.";
                      container provider-dhcp {
                        when "derived-from-or-self(../address-allo"
                           + "cation-type, 'provider-dhcp') or "
                           + "derived-from-or-self(../address-allo"
                           + "cation-type, 'provider-dhcp-slaac')" {
                          description
                            "Only applies when addresses are
                             allocated by DHCPv6 as provided by
                             the operator.";
                        }
                        description
                          "Parameters related to DHCP-allocated
                           addresses.";
                        leaf dhcp-service-type {
                          type enumeration {
                            enum server {
                              description
                                "Local DHCPv6 server.";
                            }
                            enum relay {
                              description
                                "DHCPv6 relay.";
                            }
                          }
                          description
                            "Indicates the type of the DHCPv6
                             service to be enabled on this
                             access.";
                        }
                        choice service-type {
                          description
                            "Choice based on the DHCPv6 service
                             type.";
                          case relay {
                            leaf-list server-ip-address {
                              type inet:ipv6-address;
                              description
                                "IPv6 addresses of the provider's
                                 DHCPv6 server.";
                            }
                          }
                          case server {
                            choice address-assign {
                              default "number";
                              description
                                "Choice for how IPv6 prefixes are
                                 assigned by the DHCPv6 server.";
                              case number {
                                leaf number-of-dynamic-address {
                                  type uint16;
                                  default "1";
                                  description
                                    "Describes the number of IPv6
                                     prefixes that are allocated
                                     to the customer on this
                                     access.";
                                }
                              }
                              case explicit {
                                container customer-addresses {
                                  description
                                    "Container for customer IPv6
                                     addresses allocated by
                                     DHCPv6.";
                                  list address-pool {
                                    key "pool-id";
                                    description
                                      "Describes IPv6 addresses
                                       allocated by DHCPv6.

                                       When only 'start-address'
                                       is present, it represents a
                                       single address.

                                       When both 'start-address'
                                       and 'end-address' are
                                       specified, it implies a
                                       range inclusive of both
                                       addresses.";
                                    leaf pool-id {
                                      type string;
                                      description
                                        "A pool identifier for the
                                         address range from
                                         'start-address' to
                                         'end-address'.";
                                    }
                                    leaf start-address {
                                      type inet:ipv6-address;
                                      mandatory true;
                                      description
                                        "Indicates the first
                                         address.";
                                    }
                                    leaf end-address {
                                      type inet:ipv6-address;
                                      description
                                        "Indicates the last
                                         address.";
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                      case dhcp-relay {
                        description
                          "DHCPv6 relay provided by the
                           operator.";
                        container customer-dhcp-servers {
                          description
                            "Container for a list of the
                             customer's DHCP servers.";
                          leaf-list server-ip-address {
                            type inet:ipv6-address;
                            description
                              "Contains the IP addresses of the
                               customer's DHCPv6 server.";
                          }
                        }
                      }
                      case static-addresses {
                        description
                          "IPv6-specific parameters for static
                           allocation.";
                        leaf primary-address {
                          type leafref {
                            path "../address/address-id";
                          }
                          description
                            "Principal address of the
                             connection.";
                        }
                        list address {
                          key "address-id";
                          description
                            "Describes IPv6 addresses that are
                             used.";
                          leaf address-id {
                            type string;
                            description
                              "An identifier of an IPv6 address.";
                          }
                          leaf customer-address {
                            type inet:ipv6-address;
                            description
                              "An IPv6 address of the customer
                               side.";
                          }
                        }
                      }
                    }
                  }
                }
                container routing-protocols {
                  description
                    "Defines routing protocols.";
                  list routing-protocol {
                    key "id";
                    description
                      "List of routing protocols used on the
                       CE-PE link.  This list can be augmented.";
                    leaf id {
                      type string;
                      description
                        "Unique identifier for the routing
                         protocol.";
                    }
                    leaf type {
                      type identityref {
                        base vpn-common:routing-protocol-type;
                      }
                      description
                        "Type of routing protocol.";
                    }
                    list routing-profiles {
                      key "id";
                      description
                        "Routing profiles.";
                      leaf id {
                        type leafref {
                          path "/l3vpn-ntw/vpn-profiles"
                             + "/valid-provider-identifiers"
                             + "/routing-profile-identifier/id";
                        }
                        description
                          "Routing profile to be used.";
                      }
                      leaf type {
                        type identityref {
                          base vpn-common:ie-type;
                        }
                        description
                          "Import, export, or both.";
                      }
                    }
                    container static {
                      when "derived-from-or-self(../type, "
                         + "'vpn-common:static-routing')" {
                        description
                          "Only applies when the protocol is a
                           static routing protocol.";
                      }
                      description
                        "Configuration specific to static
                         routing.";
                      container cascaded-lan-prefixes {
                        description
                          "LAN prefixes from the customer.";
                        list ipv4-lan-prefixes {
                          if-feature "vpn-common:ipv4";
                          key "lan next-hop";
                          description
                            "List of LAN prefixes for the site.";
                          leaf lan {
                            type inet:ipv4-prefix;
                            description
                              "LAN prefixes.";
                          }
                          leaf lan-tag {
                            type string;
                            description
                              "Internal tag to be used in VPN
                               policies.";
                          }
                          leaf next-hop {
                            type union {
                              type inet:ip-address;
                              type predefined-next-hop;
                            }
                            description
                              "The next hop that is to be used
                               for the static route.  This may be
                               specified as an IP address or a
                               predefined next-hop type (e.g.,
                               'discard' or 'local-link').";
                          }
                          leaf bfd-enable {
                            if-feature "vpn-common:bfd";
                            type boolean;
                            description
                              "Enables Bidirectional Forwarding
                               Detection (BFD).";
                          }
                          leaf metric {
                            type uint32;
                            description
                              "Indicates the metric associated
                               with the static route.";
                          }
                          leaf preference {
                            type uint32;
                            description
                              "Indicates the preference associated
                               with the static route.";
                          }
                          uses vpn-common:service-status;
                        }
                        list ipv6-lan-prefixes {
                          if-feature "vpn-common:ipv6";
                          key "lan next-hop";
                          description
                            "List of LAN prefixes for the site.";
                          leaf lan {
                            type inet:ipv6-prefix;
                            description
                              "LAN prefixes.";
                          }
                          leaf lan-tag {
                            type string;
                            description
                              "Internal tag to be used in VPN
                               policies.";
                          }
                          leaf next-hop {
                            type union {
                              type inet:ip-address;
                              type predefined-next-hop;
                            }
                            description
                              "The next hop that is to be used for
                               the static route.  This may be
                               specified as an IP address or a
                               predefined next-hop type (e.g.,
                               'discard' or 'local-link').";
                          }
                          leaf bfd-enable {
                            if-feature "vpn-common:bfd";
                            type boolean;
                            description
                              "Enables BFD.";
                          }
                          leaf metric {
                            type uint32;
                            description
                              "Indicates the metric associated
                               with the static route.";
                          }
                          leaf preference {
                            type uint32;
                            description
                              "Indicates the preference associated
                               with the static route.";
                          }
                          uses vpn-common:service-status;
                        }
                      }
                    }
                    container bgp {
                      when "derived-from-or-self(../type, "
                         + "'vpn-common:bgp-routing')" {
                        description
                          "Only applies when the protocol is
                           BGP.";
                      }
                      description
                        "Configuration specific to BGP.";
                      leaf description {
                        type string;
                        description
                          "Includes a description of the BGP
                           session.

                           This description is meant to be used
                           for diagnostic purposes.  The semantic
                           of the description is local to an
                           implementation.";
                      }
                      leaf local-as {
                        type inet:as-number;
                        description
                          "Indicates a local AS Number (ASN), if
                           an ASN distinct from the ASN configured
                           at the VPN node level is needed.";
                      }
                      leaf peer-as {
                        type inet:as-number;
                        mandatory true;
                        description
                          "Indicates the customer's ASN when
                           the customer requests BGP routing.";
                      }
                      leaf address-family {
                        type identityref {
                          base vpn-common:address-family;
                        }
                        description
                          "This node contains the address families
                           to be activated.  'dual-stack' means
                           that both IPv4 and IPv6 will be
                           activated.";
                      }
                      leaf local-address {
                        type union {
                          type inet:ip-address;
                          type if:interface-ref;
                        }
                        description
                          "Sets the local IP address to use for
                           the BGP transport session.  This may be
                           expressed as either an IP address or a
                           reference to an interface.";
                      }
                      leaf-list neighbor {
                        type inet:ip-address;
                        description
                          "IP address(es) of the BGP neighbor.
                           IPv4 and IPv6 neighbors may be
                           indicated if two sessions will be used
                           for IPv4 and IPv6.";
                      }
                      leaf multihop {
                        type uint8;
                        description
                          "Describes the number of IP hops allowed
                           between a given BGP neighbor and
                           the PE.";
                      }
                      leaf as-override {
                        type boolean;
                        default "false";
                        description
                          "Defines whether ASN override is
                           enabled, i.e., replacing the ASN of
                           the customer specified in the AS_PATH
                           attribute with the local ASN.";
                      }
                      leaf allow-own-as {
                        type uint8;
                        default "0";
                        description
                          "If set, specifies the maximum number of
                           occurrences of the provider's ASN that
                           are permitted within the AS_PATH
                           before it is rejected.";
                      }
                      leaf prepend-global-as {
                        type boolean;
                        default "false";
                        description
                          "In some situations, the ASN that is
                           provided at the VPN node level may be
                           distinct from the ASN configured at the
                           VPN network access level.  When such
                           ASNs are provided, they are both
                           prepended to the BGP route updates
                           for this access.  To disable that
                           behavior, 'prepend-global-as'
                           must be set to 'false'.  In such a
                           case, the ASN that is provided at
                           the VPN node level is not prepended
                           to the BGP route updates for
                           this access.";
                      }
                      leaf send-default-route {
                        type boolean;
                        default "false";
                        description
                          "Defines whether default routes can be
                           advertised to a peer.  If set, the
                           default routes are advertised to a
                           peer.";
                      }
                      leaf site-of-origin {
                        when "../address-family = 'vpn-common:ipv4' "
                           + "or 'vpn-common:dual-stack'" {
                          description
                            "Only applies if IPv4 is activated.";
                        }
                        type rt-types:route-origin;
                        description
                          "The Site of Origin attribute is encoded
                           as a Route Origin Extended Community.
                           It is meant to uniquely identify the
                           set of routes learned from a site via a
                           particular CE-PE connection and is used
                           to prevent routing loops.";
                        reference
                          "RFC 4364: BGP/MPLS IP Virtual Private
                                     Networks (VPNs), Section 7";
                      }
                      leaf ipv6-site-of-origin {
                        when "../address-family = 'vpn-common:ipv6' "
                           + "or 'vpn-common:dual-stack'" {
                          description
                            "Only applies if IPv6 is activated.";
                        }
                        type rt-types:ipv6-route-origin;
                        description
                          "The IPv6 Site of Origin attribute is
                           encoded as an IPv6 Route Origin
                           Extended Community.  It is meant to
                           uniquely identify the set of routes
                           learned from a site via VRF
                           information.";
                        reference
                          "RFC 5701: IPv6 Address Specific BGP
                                     Extended Community
                                     Attribute";
                      }
                      list redistribute-connected {
                        key "address-family";
                        description
                          "Indicates, per address family, the
                           policy to follow for connected
                           routes.";
                        leaf address-family {
                          type identityref {
                            base vpn-common:address-family;
                          }
                          description
                            "Indicates the address family.";
                        }
                        leaf enable {
                          type boolean;
                          description
                            "Enables the redistribution of
                             connected routes.";
                        }
                      }
                      container bgp-max-prefix {
                        description
                          "Controls the behavior when a prefix
                           maximum is reached.";
                        leaf max-prefix {
                          type uint32;
                          default "5000";
                          description
                            "Indicates the maximum number of BGP
                             prefixes allowed in the BGP session.

                             It allows control of how many
                             prefixes can be received from a
                             neighbor.

                             If the limit is exceeded, the action
                             indicated in 'violate-action' will be
                             followed.";
                          reference
                            "RFC 4271: A Border Gateway Protocol 4
                                       (BGP-4), Section 8.2.2";
                        }
                        leaf warning-threshold {
                          type decimal64 {
                            fraction-digits 5;
                            range "0..100";
                          }
                          units "percent";
                          default "75";
                          description
                            "When this value is reached, a warning
                             notification will be triggered.";
                        }
                        leaf violate-action {
                          type enumeration {
                            enum warning {
                              description
                                "Only a warning message is sent to
                                 the peer when the limit is
                                 exceeded.";
                            }
                            enum discard-extra-paths {
                              description
                                "Discards extra paths when the
                                 limit is exceeded.";
                            }
                            enum restart {
                              description
                                "The BGP session restarts after
                                 the indicated time interval.";
                            }
                          }
                          description
                            "If the BGP neighbor 'max-prefix'
                             limit is reached, the action
                             indicated in 'violate-action'
                             will be followed.";
                        }
                        leaf restart-timer {
                          type uint32;
                          units "seconds";
                          description
                            "Time interval after which the BGP
                             session will be reestablished.";
                        }
                      }
                      container bgp-timers {
                        description
                          "Includes two BGP timers that can be
                           customized when building a VPN service
                           with BGP used as the CE-PE routing
                           protocol.";
                        leaf keepalive {
                          type uint16 {
                            range "0..21845";
                          }
                          units "seconds";
                          default "30";
                          description
                            "This timer indicates the KEEPALIVE
                             messages' frequency between a PE
                             and a BGP peer.

                             If set to '0', it indicates that
                             KEEPALIVE messages are disabled.

                             It is suggested that the maximum
                             time between KEEPALIVE messages be
                             one-third of the Hold Time
                             interval.";
                          reference
                            "RFC 4271: A Border Gateway Protocol 4
                                       (BGP-4), Section 4.4";
                        }
                        leaf hold-time {
                          type uint16 {
                            range "0 | 3..65535";
                          }
                          units "seconds";
                          default "90";
                          description
                            "Indicates the maximum number of
                             seconds that may elapse between the
                             receipt of successive KEEPALIVE
                             and/or UPDATE messages from the peer.

                             The Hold Time must be either zero or
                             at least three seconds.";
                          reference
                            "RFC 4271: A Border Gateway Protocol 4
                                       (BGP-4), Section 4.2";
                        }
                      }
                      container authentication {
                        description
                          "Container for BGP authentication
                           parameters between a PE and a CE.";
                        leaf enable {
                          type boolean;
                          default "false";
                          description
                            "Enables or disables authentication.";
                        }
                        container keying-material {
                          when "../enable = 'true'";
                          description
                            "Container for describing how a BGP
                             routing session is to be secured
                             between a PE and a CE.";
                          choice option {
                            description
                              "Choice of authentication options.";
                            case ao {
                              description
                                "Uses the TCP Authentication
                                 Option (TCP-AO).";
                              reference
                                "RFC 5925: The TCP Authentication
                                           Option";
                              leaf enable-ao {
                                type boolean;
                                description
                                  "Enables the TCP-AO.";
                              }
                              leaf ao-keychain {
                                type key-chain:key-chain-ref;
                                description
                                  "Reference to the TCP-AO key
                                   chain.";
                                reference
                                  "RFC 8177: YANG Data Model for
                                             Key Chains";
                              }
                            }
                            case md5 {
                              description
                                "Uses MD5 to secure the session.";
                              reference
                                "RFC 4364: BGP/MPLS IP Virtual
                                           Private Networks
                                           (VPNs), Section 13.2";
                              leaf md5-keychain {
                                type key-chain:key-chain-ref;
                                description
                                  "Reference to the MD5 key
                                   chain.";
                                reference
                                  "RFC 8177: YANG Data Model for
                                             Key Chains";
                              }
                            }
                            case explicit {
                              leaf key-id {
                                type uint32;
                                description
                                  "Key identifier.";
                              }
                              leaf key {
                                type string;
                                description
                                  "BGP authentication key.
                                   This model only supports the
                                   subset of keys that are
                                   representable as ASCII
                                   strings.";
                              }
                              leaf crypto-algorithm {
                                type identityref {
                                  base key-chain:crypto-algorithm;
                                }
                                description
                                  "Indicates the cryptographic
                                   algorithm associated with the
                                   key.";
                              }
                            }
                            case ipsec {
                              description
                                "Specifies a reference to an
                                 Internet Key Exchange Protocol
                                 (IKE) Security Association
                                 (SA).";
                              leaf sa {
                                type string;
                                description
                                  "Indicates the
                                   administrator-assigned name
                                   of the SA.";
                              }
                            }
                          }
                        }
                      }
                      uses vpn-common:service-status;
                    }
                    container ospf {
                      when "derived-from-or-self(../type, "
                         + "'vpn-common:ospf-routing')" {
                        description
                          "Only applies when the protocol is
                           OSPF.";
                      }
                      description
                        "Configuration specific to OSPF.";
                      leaf address-family {
                        type identityref {
                          base vpn-common:address-family;
                        }
                        description
                          "Indicates whether IPv4, IPv6, or
                           both are to be activated.";
                      }
                      leaf area-id {
                        type yang:dotted-quad;
                        mandatory true;
                        description
                          "Area ID.";
                        reference
                          "RFC 4577: OSPF as the Provider/Customer
                                     Edge Protocol for BGP/MPLS IP
                                     Virtual Private Networks
                                     (VPNs), Section 4.2.3
                           RFC 6565: OSPFv3 as a Provider Edge to
                                     Customer Edge (PE-CE) Routing
                                     Protocol, Section 4.2";
                      }
                      leaf metric {
                        type uint16;
                        default "1";
                        description
                          "Metric of the PE-CE link.  It is used
                           in the routing state calculation and
                           path selection.";
                      }
                      container sham-links {
                        if-feature "vpn-common:rtg-ospf-sham-link";
                        description
                          "List of sham links.";
                        reference
                          "RFC 4577: OSPF as the Provider/Customer
                                     Edge Protocol for BGP/MPLS IP
                                     Virtual Private Networks
                                     (VPNs), Section 4.2.7
                           RFC 6565: OSPFv3 as a Provider Edge to
                                     Customer Edge (PE-CE) Routing
                                     Protocol, Section 5";
                        list sham-link {
                          key "target-site";
                          description
                            "Creates a sham link with another
                             site.";
                          leaf target-site {
                            type string;
                            description
                              "Target site for the sham link
                               connection.  The site is referred
                               to by its identifier.";
                          }
                          leaf metric {
                            type uint16;
                            default "1";
                            description
                              "Metric of the sham link.  It is
                               used in the routing state
                               calculation and path selection.
                               The default value is set to '1'.";
                            reference
                              "RFC 4577: OSPF as the
                                         Provider/Customer Edge
                                         Protocol for BGP/MPLS IP
                                         Virtual Private Networks
                                         (VPNs), Section 4.2.7.3
                               RFC 6565: OSPFv3 as a Provider Edge
                                         to Customer Edge (PE-CE)
                                         Routing Protocol,
                                         Section 5.2";
                          }
                        }
                      }
                      leaf max-lsa {
                        type uint32 {
                          range "1..4294967294";
                        }
                        description
                          "Maximum number of allowed Link State
                           Advertisements (LSAs) that the OSPF
                           instance will accept.";
                      }
                      container authentication {
                        description
                          "Authentication configuration.";
                        leaf enable {
                          type boolean;
                          default "false";
                          description
                            "Enables or disables authentication.";
                        }
                        container keying-material {
                          when "../enable = 'true'";
                          description
                            "Container for describing how an OSPF
                             session is to be secured between a CE
                             and a PE.";
                          choice option {
                            description
                              "Options for OSPF authentication.";
                            case auth-key-chain {
                              leaf key-chain {
                                type key-chain:key-chain-ref;
                                description
                                  "Name of the key chain.";
                              }
                            }
                            case auth-key-explicit {
                              leaf key-id {
                                type uint32;
                                description
                                  "Key identifier.";
                              }
                              leaf key {
                                type string;
                                description
                                  "OSPF authentication key.
                                   This model only supports the
                                   subset of keys that are
                                   representable as ASCII
                                   strings.";
                              }
                              leaf crypto-algorithm {
                                type identityref {
                                  base key-chain:crypto-algorithm;
                                }
                                description
                                  "Indicates the cryptographic
                                   algorithm associated with the
                                   key.";
                              }
                            }
                            case ipsec {
                              leaf sa {
                                type string;
                                description
                                  "Indicates the
                                   administrator-assigned name
                                   of the SA.";
                                reference
                                  "RFC 4552: Authentication/
                                             Confidentiality for
                                             OSPFv3";
                              }
                            }
                          }
                        }
                      }
                      uses vpn-common:service-status;
                    }
                    container isis {
                      when "derived-from-or-self(../type, "
                         + "'vpn-common:isis-routing')" {
                        description
                          "Only applies when the protocol is
                           IS-IS.";
                      }
                      description
                        "Configuration specific to IS-IS.";
                      leaf address-family {
                        type identityref {
                          base vpn-common:address-family;
                        }
                        description
                          "Indicates whether IPv4, IPv6, or both
                           are to be activated.";
                      }
                      leaf area-address {
                        type area-address;
                        mandatory true;
                        description
                          "Area address.";
                      }
                      leaf level {
                        type identityref {
                          base vpn-common:isis-level;
                        }
                        description
                          "Can be 'level-1', 'level-2', or
                           'level-1-2'.";
                        reference
                          "RFC 9181: A Common YANG Data Model for
                                     Layer 2 and Layer 3 VPNs";
                      }
                      leaf metric {
                        type uint16;
                        default "1";
                        description
                          "Metric of the PE-CE link.  It is used
                           in the routing state calculation and
                           path selection.";
                      }
                      leaf mode {
                        type enumeration {
                          enum active {
                            description
                              "The interface sends or receives
                               IS-IS protocol control packets.";
                          }
                          enum passive {
                            description
                              "Suppresses the sending of IS-IS
                               updates through the specified
                               interface.";
                          }
                        }
                        default "active";
                        description
                          "IS-IS interface mode type.";
                      }
                      container authentication {
                        description
                          "Authentication configuration.";
                        leaf enable {
                          type boolean;
                          default "false";
                          description
                            "Enables or disables authentication.";
                        }
                        container keying-material {
                          when "../enable = 'true'";
                          description
                            "Container for describing how an IS-IS
                             session is to be secured between a CE
                             and a PE.";
                          choice option {
                            description
                              "Options for IS-IS authentication.";
                            case auth-key-chain {
                              leaf key-chain {
                                type key-chain:key-chain-ref;
                                description
                                  "Name of the key chain.";
                              }
                            }
                            case auth-key-explicit {
                              leaf key-id {
                                type uint32;
                                description
                                  "Key identifier.";
                              }
                              leaf key {
                                type string;
                                description
                                  "IS-IS authentication key.
                                   This model only supports the
                                   subset of keys that are
                                   representable as ASCII
                                   strings.";
                              }
                              leaf crypto-algorithm {
                                type identityref {
                                  base key-chain:crypto-algorithm;
                                }
                                description
                                  "Indicates the cryptographic
                                   algorithm associated with the
                                   key.";
                              }
                            }
                          }
                        }
                      }
                      uses vpn-common:service-status;
                    }
                    container rip {
                      when "derived-from-or-self(../type, "
                         + "'vpn-common:rip-routing')" {
                        description
                          "Only applies when the protocol is RIP.
                           For IPv4, the model assumes that RIP
                           version 2 is used.";
                      }
                      description
                        "Configuration specific to RIP routing.";
                      leaf address-family {
                        type identityref {
                          base vpn-common:address-family;
                        }
                        description
                          "Indicates whether IPv4, IPv6, or both
                           address families are to be activated.";
                      }
                      container timers {
                        description
                          "Indicates the RIP timers.";
                        reference
                          "RFC 2453: RIP Version 2";
                        leaf update-interval {
                          type uint16 {
                            range "1..32767";
                          }
                          units "seconds";
                          default "30";
                          description
                            "Indicates the RIP update time, i.e.,
                             the amount of time for which RIP
                             updates are sent.";
                        }
                        leaf invalid-interval {
                          type uint16 {
                            range "1..32767";
                          }
                          units "seconds";
                          default "180";
                          description
                            "The interval before a route is
                             declared invalid after no updates are
                             received.  This value is at least
                             three times the value for the
                             'update-interval' argument.";
                        }
                        leaf holddown-interval {
                          type uint16 {
                            range "1..32767";
                          }
                          units "seconds";
                          default "180";
                          description
                            "Specifies the interval before better
                             routes are released.";
                        }
                        leaf flush-interval {
                          type uint16 {
                            range "1..32767";
                          }
                          units "seconds";
                          default "240";
                          description
                            "Indicates the RIP flush timer, i.e.,
                             the amount of time that must elapse
                             before a route is removed from the
                             routing table.";
                        }
                      }
                      leaf default-metric {
                        type uint8 {
                          range "0..16";
                        }
                        default "1";
                        description
                          "Sets the default metric.";
                      }
                      container authentication {
                        description
                          "Authentication configuration.";
                        leaf enable {
                          type boolean;
                          default "false";
                          description
                            "Enables or disables authentication.";
                        }
                        container keying-material {
                          when "../enable = 'true'";
                          description
                            "Container for describing how a RIP
                             session is to be secured between a CE
                             and a PE.";
                          choice option {
                            description
                              "Specifies the authentication
                               scheme.";
                            case auth-key-chain {
                              leaf key-chain {
                                type key-chain:key-chain-ref;
                                description
                                  "Name of the key chain.";
                              }
                            }
                            case auth-key-explicit {
                              leaf key {
                                type string;
                                description
                                  "RIP authentication key.
                                   This model only supports the
                                   subset of keys that are
                                   representable as ASCII
                                   strings.";
                              }
                              leaf crypto-algorithm {
                                type identityref {
                                  base key-chain:crypto-algorithm;
                                }
                                description
                                  "Indicates the cryptographic
                                   algorithm associated with the
                                   key.";
                              }
                            }
                          }
                        }
                      }
                      uses vpn-common:service-status;
                    }
                    container vrrp {
                      when "derived-from-or-self(../type, "
                         + "'vpn-common:vrrp-routing')" {
                        description
                          "Only applies when the protocol is the
                           Virtual Router Redundancy Protocol
                           (VRRP).";
                      }
                      description
                        "Configuration specific to VRRP.";
                      reference
                        "RFC 5798: Virtual Router Redundancy
                                   Protocol (VRRP) Version 3 for
                                   IPv4 and IPv6";
                      leaf address-family {
                        type identityref {
                          base vpn-common:address-family;
                        }
                        description
                          "Indicates whether IPv4, IPv6, or both
                           address families are to be enabled.";
                      }
                      leaf vrrp-group {
                        type uint8 {
                          range "1..255";
                        }
                        description
                          "Includes the VRRP group identifier.";
                      }
                      leaf backup-peer {
                        type inet:ip-address;
                        description
                          "Indicates the IP address of the peer.";
                      }
                      leaf-list virtual-ip-address {
                        type inet:ip-address;
                        description
                          "Virtual IP addresses for a single VRRP
                           group.";
                        reference
                          "RFC 5798: Virtual Router Redundancy
                                     Protocol (VRRP) Version 3 for
                                     IPv4 and IPv6,
                                     Sections 1.2 and 1.3";
                      }
                      leaf priority {
                        type uint8 {
                          range "1..254";
                        }
                        default "100";
                        description
                          "Sets the local priority of the VRRP
                           speaker.";
                      }
                      leaf ping-reply {
                        type boolean;
                        default "false";
                        description
                          "Controls whether the VRRP speaker
                           should reply to ping requests.";
                      }
                      uses vpn-common:service-status;
                    }
                  }
                }
                container oam {
                  description
                    "Defines the Operations, Administration,
                     and Maintenance (OAM) mechanisms used.

                     BFD is set as a fault detection mechanism,
                     but other mechanisms can be defined in the
                     future.";
                  container bfd {
                    if-feature "vpn-common:bfd";
                    description
                      "Container for BFD.";
                    leaf session-type {
                      type identityref {
                        base vpn-common:bfd-session-type;
                      }
                      default "vpn-common:classic-bfd";
                      description
                        "Specifies the BFD session type.";
                    }
                    leaf desired-min-tx-interval {
                      type uint32;
                      units "microseconds";
                      default "1000000";
                      description
                        "The minimum interval between
                         transmissions of BFD Control packets, as
                         desired by the operator.";
                      reference
                        "RFC 5880: Bidirectional Forwarding
                                   Detection (BFD),
                                   Section 6.8.7";
                    }
                    leaf required-min-rx-interval {
                      type uint32;
                      units "microseconds";
                      default "1000000";
                      description
                        "The minimum interval between received BFD
                         Control packets that the PE should
                         support.";
                      reference
                        "RFC 5880: Bidirectional Forwarding
                                   Detection (BFD),
                                   Section 6.8.7";
                    }
                    leaf local-multiplier {
                      type uint8 {
                        range "1..255";
                      }
                      default "3";
                      description
                        "Specifies the detection multiplier that
                         is transmitted to a BFD peer.

                         The detection interval for the receiving
                         BFD peer is calculated by multiplying the
                         value of the negotiated transmission
                         interval by the received detection
                         multiplier value.";
                      reference
                        "RFC 5880: Bidirectional Forwarding
                                   Detection (BFD),
                                   Section 6.8.7";
                    }
                    leaf holdtime {
                      type uint32;
                      units "milliseconds";
                      description
                        "Expected BFD holdtime.

                         The customer may impose some fixed
                         values for the holdtime period if the
                         provider allows the customer to use
                         this function.

                         If the provider doesn't allow the
                         customer to use this function,
                         fixed values will not be set.";
                      reference
                        "RFC 5880: Bidirectional Forwarding
                                   Detection (BFD),
                                   Section 6.8.18";
                    }
                    leaf profile {
                      type leafref {
                        path "/l3vpn-ntw/vpn-profiles"
                           + "/valid-provider-identifiers"
                           + "/bfd-profile-identifier/id";
                      }
                      description
                        "Well-known service provider profile name.

                         The provider can propose some profiles
                         to the customer, depending on the
                         service level the customer wants to
                         achieve.";
                    }
                    container authentication {
                      presence "Enables BFD authentication";
                      description
                        "Parameters for BFD authentication.";
                      leaf key-chain {
                        type key-chain:key-chain-ref;
                        description
                          "Name of the key chain.";
                      }
                      leaf meticulous {
                        type boolean;
                        description
                          "Enables meticulous mode.";
                        reference
                          "RFC 5880: Bidirectional Forwarding
                                     Detection (BFD),
                                     Section 6.7";
                      }
                    }
                    uses vpn-common:service-status;
                  }
                }
                container security {
                  description
                    "Site-specific security parameters.";
                  container encryption {
                    if-feature "vpn-common:encryption";
                    description
                      "Container for CE-PE security encryption.";
                    leaf enabled {
                      type boolean;
                      default "false";
                      description
                        "If set to 'true', traffic encryption on
                         the connection is required.  Otherwise,
                         it is disabled.";
                    }
                    leaf layer {
                      when "../enabled = 'true'" {
                        description
                          "Included only when encryption
                           is enabled.";
                      }
                      type enumeration {
                        enum layer2 {
                          description
                            "Encryption occurs at Layer 2.";
                        }
                        enum layer3 {
                          description
                            "Encryption occurs at Layer 3.
                             For example, IPsec may be used when
                             a customer requests Layer 3
                             encryption.";
                        }
                      }
                      description
                        "Indicates the layer on which encryption
                         is applied.";
                    }
                  }
                  container encryption-profile {
                    when "../encryption/enabled = 'true'" {
                      description
                        "Indicates the layer on which encryption
                         is enabled.";
                    }
                    description
                      "Container for the encryption profile.";
                    choice profile {
                      description
                        "Choice for the encryption profile.";
                      case provider-profile {
                        leaf profile-name {
                          type leafref {
                            path "/l3vpn-ntw/vpn-profiles"
                               + "/valid-provider-identifiers"
                               + "/encryption-profile-identifier/id";
                          }
                          description
                            "Name of the service provider's
                             profile to be applied.";
                        }
                      }
                      case customer-profile {
                        leaf customer-key-chain {
                          type key-chain:key-chain-ref;
                          description
                            "Customer-supplied key chain.";
                        }
                      }
                    }
                  }
                }
                container service {
                  description
                    "Service parameters of the attachment.";
                  leaf pe-to-ce-bandwidth {
                    if-feature "vpn-common:inbound-bw";
                    type uint64;
                    units "bps";
                    description
                      "From the customer site's perspective, the
                       service inbound bandwidth of the connection
                       or download bandwidth from the SP to the
                       site.  Note that the L3SM uses
                       'input-bandwidth' to refer to the same
                       concept.";
                  }
                  leaf ce-to-pe-bandwidth {
                    if-feature "vpn-common:outbound-bw";
                    type uint64;
                    units "bps";
                    description
                      "From the customer site's perspective,
                       the service outbound bandwidth of the
                       connection or upload bandwidth from
                       the site to the SP.  Note that the L3SM
                       uses 'output-bandwidth' to refer to the
                       same concept.";
                  }
                  leaf mtu {
                    type uint32;
                    units "bytes";
                    description
                      "MTU at the service level.  If the service
                       is IP, it refers to the IP MTU.  If
                       Carriers' Carriers (CsC) is enabled, the
                       requested MTU will refer to the MPLS
                       maximum labeled packet size and not to the
                       IP MTU.";
                  }
                  container qos {
                    if-feature "vpn-common:qos";
                    description
                      "QoS configuration.";
                    container qos-classification-policy {
                      description
                        "Configuration of the traffic
                         classification policy.";
                      uses vpn-common:qos-classification-policy;
                    }
                    container qos-action {
                      description
                        "List of QoS action policies.";
                      list rule {
                        key "id";
                        description
                          "List of QoS actions.";
                        leaf id {
                          type string;
                          description
                            "An identifier of the QoS action
                             rule.";
                        }
                        leaf target-class-id {
                          type string;
                          description
                            "Identification of the class of
                             service.  This identifier is internal
                             to the administration.";
                        }
                        leaf inbound-rate-limit {
                          type decimal64 {
                            fraction-digits 5;
                            range "0..100";
                          }
                          units "percent";
                          description
                            "Specifies whether/how to rate-limit
                             the inbound traffic matching this QoS
                             policy.  It is expressed as a percent
                             of the value that is indicated in
                             'input-bandwidth'.";
                        }
                        leaf outbound-rate-limit {
                          type decimal64 {
                            fraction-digits 5;
                            range "0..100";
                          }
                          units "percent";
                          description
                            "Specifies whether/how to rate-limit
                             the outbound traffic matching this
                             QoS policy.  It is expressed as a
                             percent of the value that is
                             indicated in 'output-bandwidth'.";
                        }
                      }
                    }
                    container qos-profile {
                      description
                        "QoS profile configuration.";
                      list qos-profile {
                        key "profile";
                        description
                          "QoS profile.
                           Can be a standard profile or
                           a customized profile.";
                        leaf profile {
                          type leafref {
                            path "/l3vpn-ntw/vpn-profiles"
                               + "/valid-provider-identifiers"
                               + "/qos-profile-identifier/id";
                          }
                          description
                            "QoS profile to be used.";
                        }
                        leaf direction {
                          type identityref {
                            base vpn-common:qos-profile-direction;
                          }
                          default "vpn-common:both";
                          description
                            "The direction to which the QoS
                             profile is applied.";
                        }
                      }
                    }
                  }
                  container carriers-carrier {
                    if-feature "vpn-common:carriers-carrier";
                    description
                      "This container is used when the customer
                       provides MPLS-based services.  This is
                       only used in the case of CsC (i.e., a
                       customer builds an MPLS service using an
                       IP VPN to carry its traffic).";
                    leaf signaling-type {
                      type enumeration {
                        enum ldp {
                          description
                            "Uses LDP as the signaling protocol
                             between the PE and the CE.  In this
                             case, an IGP routing protocol must
                             also be configured.";
                        }
                        enum bgp {
                          description
                            "Uses BGP as the signaling protocol
                             between the PE and the CE.
                             In this case, BGP must also be
                             configured as the routing protocol.";
                          reference
                            "RFC 8277: Using BGP to Bind MPLS
                                       Labels to Address
                                       Prefixes";
                        }
                      }
                      default "bgp";
                      description
                        "MPLS signaling type.";
                    }
                  }
                  container ntp {
                    description
                      "Time synchronization may be needed in some
                       VPNs, such as infrastructure and management
                       VPNs.  This container includes parameters
                       to enable the NTP service.";
                    reference
                      "RFC 5905: Network Time Protocol Version 4:
                                 Protocol and Algorithms
                                 Specification";
                    leaf broadcast {
                      type enumeration {
                        enum client {
                          description
                            "The VPN node will listen to NTP
                             broadcast messages on this VPN
                             network access.";
                        }
                        enum server {
                          description
                            "The VPN node will behave as a
                             broadcast server.";
                        }
                      }
                      description
                        "Indicates the NTP broadcast mode to use
                         for the VPN network access.";
                    }
                    container auth-profile {
                      description
                        "Pointer to a local profile.";
                      leaf profile-id {
                        type string;
                        description
                          "A pointer to a local authentication
                           profile on the VPN node is provided.";
                      }
                    }
                    uses vpn-common:service-status;
                  }
                  container multicast {
                    if-feature "vpn-common:multicast";
                    description
                      "Multicast parameters for the network
                       access.";
                    leaf access-type {
                      type enumeration {
                        enum receiver-only {
                          description
                            "The peer site only has receivers.";
                        }
                        enum source-only {
                          description
                            "The peer site only has sources.";
                        }
                        enum source-receiver {
                          description
                            "The peer site has both sources and
                             receivers.";
                        }
                      }
                      default "source-receiver";
                      description
                        "Type of multicast site.";
                    }
                    leaf address-family {
                      type identityref {
                        base vpn-common:address-family;
                      }
                      description
                        "Indicates the address family.";
                    }
                    leaf protocol-type {
                      type enumeration {
                        enum host {
                          description
                            "Hosts are directly connected to the
                             provider network.

                             Host protocols, such as IGMP or MLD,
                             are required.";
                        }
                        enum router {
                          description
                            "Hosts are behind a customer router.
                             PIM will be implemented.";
                        }
                        enum both {
                          description
                            "Some hosts are behind a customer
                             router, and some others are directly
                             connected to the provider network.
                             Both host and routing protocols must
                             be used.

                             Typically, IGMP and PIM will be
                             implemented.";
                        }
                      }
                      default "both";
                      description
                        "Multicast protocol type to be used with
                         the customer site.";
                    }
                    leaf remote-source {
                      type boolean;
                      default "false";
                      description
                        "A remote multicast source is a source
                         that is not on the same subnet as the
                         VPN network access.  When set to 'true',
                         the multicast traffic from a remote
                         source is accepted.";
                    }
                    container igmp {
                      when "../protocol-type = 'host' and "
                         + "../address-family = 'vpn-common:ipv4' "
                         + "or 'vpn-common:dual-stack'";
                      if-feature "vpn-common:igmp";
                      description
                        "Includes IGMP-related parameters.";
                      list static-group {
                        key "group-addr";
                        description
                          "Multicast static source/group
                           associated with the IGMP session.";
                        leaf group-addr {
                          type rt-types:ipv4-multicast-group-address;
                          description
                            "Multicast group IPv4 address.";
                        }
                        leaf source-addr {
                          type
                            rt-types:ipv4-multicast-source-address;
                          description
                            "Multicast source IPv4 address.";
                        }
                      }
                      leaf max-groups {
                        type uint32;
                        description
                          "Indicates the maximum number of
                           groups.";
                      }
                      leaf max-entries {
                        type uint32;
                        description
                          "Indicates the maximum number of IGMP
                           entries.";
                      }
                      leaf max-group-sources {
                        type uint32;
                        description
                          "The maximum number of group sources.";
                      }
                      leaf version {
                        type identityref {
                          base vpn-common:igmp-version;
                        }
                        default "vpn-common:igmpv2";
                        description
                          "Indicates the IGMP version.";
                      }
                      uses vpn-common:service-status;
                    }
                    container mld {
                      when "../protocol-type = 'host' and "
                         + "../address-family = 'vpn-common:ipv6' "
                         + "or 'vpn-common:dual-stack'";
                      if-feature "vpn-common:mld";
                      description
                        "Includes MLD-related parameters.";
                      list static-group {
                        key "group-addr";
                        description
                          "Multicast static source/group associated
                           with the MLD session.";
                        leaf group-addr {
                          type rt-types:ipv6-multicast-group-address;
                          description
                            "Multicast group IPv6 address.";
                        }
                        leaf source-addr {
                          type
                            rt-types:ipv6-multicast-source-address;
                          description
                            "Multicast source IPv6 address.";
                        }
                      }
                      leaf max-groups {
                        type uint32;
                        description
                          "Indicates the maximum number of
                           groups.";
                      }
                      leaf max-entries {
                        type uint32;
                        description
                          "Indicates the maximum number of MLD
                           entries.";
                      }
                      leaf max-group-sources {
                        type uint32;
                        description
                          "The maximum number of group sources.";
                      }
                      leaf version {
                        type identityref {
                          base vpn-common:mld-version;
                        }
                        default "vpn-common:mldv2";
                        description
                          "Indicates the MLD protocol version.";
                      }
                      uses vpn-common:service-status;
                    }
                    container pim {
                      when "../protocol-type = 'router'";
                      if-feature "vpn-common:pim";
                      description
                        "Only applies when the protocol type is
                         'pim'.";
                      leaf hello-interval {
                        type rt-types:timer-value-seconds16;
                        default "30";
                        description
                          "Interval between PIM Hello messages.
                           If set to 'infinity' or 'not-set',
                           no periodic Hello messages are sent.";
                        reference
                          "RFC 7761: Protocol Independent
                                     Multicast - Sparse Mode
                                     (PIM-SM): Protocol
                                     Specification (Revised),
                                     Section 4.11
                           RFC 8294: Common YANG Data Types for
                                     the Routing Area";
                      }
                      leaf dr-priority {
                        type uint32;
                        default "1";
                        description
                          "Indicates the preference associated
                           with the DR election process.  A larger
                           value has a higher priority over a
                           smaller value.";
                        reference
                          "RFC 7761: Protocol Independent
                                     Multicast - Sparse Mode
                                     (PIM-SM): Protocol
                                     Specification (Revised),
                                     Section 4.3.2";
                      }
                      uses vpn-common:service-status;
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
</sourcecode>
    </section>
    <section anchor="Security" numbered="true" toc="include" removeInRFC="false" pn="section-9">
      <name slugifiedName="name-security-considerations">Security Considerations</name>
      <t indent="0" pn="section-9-1">The YANG module specified in this document defines a schema for data
that is designed to be accessed via network management protocols such
as NETCONF <xref target="RFC6241" format="default" sectionFormat="of" derivedContent="RFC6241"/> or RESTCONF <xref target="RFC8040" format="default" sectionFormat="of" derivedContent="RFC8040"/>.
The lowest NETCONF layer is the secure transport layer, and the
mandatory-to-implement secure transport is Secure Shell (SSH)
<xref target="RFC6242" format="default" sectionFormat="of" derivedContent="RFC6242"/>. The lowest RESTCONF layer is HTTPS, and the
mandatory-to-implement secure transport is TLS <xref target="RFC8446" format="default" sectionFormat="of" derivedContent="RFC8446"/>.</t>
      <t indent="0" pn="section-9-2">The Network Configuration Access Control Model (NACM) <xref target="RFC8341" format="default" sectionFormat="of" derivedContent="RFC8341"/>
provides the means to restrict access for particular NETCONF or RESTCONF users
to a preconfigured subset of all available NETCONF or RESTCONF protocol
operations and content.</t>
      <t indent="0" pn="section-9-3">There are a number of data nodes defined in this YANG module that are
writable/creatable/deletable (i.e., config true, which is the default). These
data nodes may be considered sensitive or vulnerable in some network
environments. Write operations (e.g., edit-config) and delete operations to these data nodes without
proper protection or authentication can have a negative effect on network operations. These are
the subtrees and data nodes and their sensitivity/vulnerability in
the "ietf-l3vpn-ntw" module:</t>
      <dl newline="false" spacing="normal" indent="3" pn="section-9-4">
        <dt pn="section-9-4.1">'vpn-profiles':</dt>
        <dd pn="section-9-4.2">This container includes a set of sensitive data
          that influence how the L3VPN service is delivered. For example, an
          attacker who has access to these data nodes may be able to
          manipulate routing policies, QoS policies, or encryption properties.
          These data nodes are defined with "nacm:default-deny-write" tagging
          <xref target="RFC9181" format="default" sectionFormat="of" derivedContent="RFC9181"/>.</dd>
        <dt pn="section-9-4.3">'vpn-services':</dt>
        <dd pn="section-9-4.4">An attacker who is able to access network nodes
          can undertake various attacks, such as deleting a running L3VPN
          service, interrupting all the traffic of a client. In addition, an
          attacker may modify the attributes of a running service (e.g., QoS,
          bandwidth, routing protocols, keying material), leading to
          malfunctioning of the service and therefore to Service Level Agreement (SLA) violations. In
          addition, an attacker could attempt to create an L3VPN service or
          add a new network access. In addition to using NACM to prevent
          unauthorized access, such activity can be detected by adequately
          monitoring and tracking network configuration changes.</dd>
      </dl>
      <t indent="0" pn="section-9-5">Some of the readable data nodes in this YANG module may be considered
sensitive or vulnerable in some network environments. It is thus important to
control read access (e.g., via get, get-config, or notification) to these data
nodes. These are the subtrees and data nodes and their
sensitivity/vulnerability:</t>
      <dl newline="false" spacing="normal" indent="3" pn="section-9-6">
        <dt pn="section-9-6.1">'customer-name' and 'ip-connection':</dt>
        <dd pn="section-9-6.2">An attacker can retrieve
          privacy-related information, which can be used to track a customer.
          Disclosing such information may be considered a violation of the
          customer-provider trust relationship.</dd>
        <dt pn="section-9-6.3">'keying-material':</dt>
        <dd pn="section-9-6.4">An attacker can retrieve the cryptographic
          keys protecting the underlying VPN service (CE-PE routing, in
          particular). These keys could be used to inject spoofed routing
          advertisements.</dd>
      </dl>
      <t indent="0" pn="section-9-7">Several data nodes ('bgp', 'ospf', 'isis', 'rip', and 'bfd') rely
      upon <xref target="RFC8177" format="default" sectionFormat="of" derivedContent="RFC8177"/> for authentication purposes.
      Therefore, this module inherits the security considerations discussed in
      <xref target="RFC8177" sectionFormat="of" section="5" format="default" derivedLink="https://rfc-editor.org/rfc/rfc8177#section-5" derivedContent="RFC8177"/>. Also, these data nodes
      support supplying explicit keys as strings in ASCII format. The use of
      keys in hexadecimal string format would afford greater key entropy with
      the same number of key-string octets. However, such a format is not
      included in this version of the L3NM, because it is not supported by the
      underlying device modules (e.g., <xref target="RFC8695" format="default" sectionFormat="of" derivedContent="RFC8695"/>).</t>
      <t indent="0" pn="section-9-8">As discussed in <xref target="rtg" format="default" sectionFormat="of" derivedContent="Section 7.6.3"/>, the module supports MD5
      to basically accommodate the installed BGP base. MD5 suffers from the
      security weaknesses discussed in <xref target="RFC6151" sectionFormat="of" section="2" format="default" derivedLink="https://rfc-editor.org/rfc/rfc6151#section-2" derivedContent="RFC6151"/> and <xref target="RFC6952" sectionFormat="of" section="2.1" format="default" derivedLink="https://rfc-editor.org/rfc/rfc6952#section-2.1" derivedContent="RFC6952"/>.</t>
      <t indent="0" pn="section-9-9"><xref target="RFC8633" format="default" sectionFormat="of" derivedContent="RFC8633"/> describes best current practices to be
      considered in VPNs making use of NTP. Moreover, a mechanism to provide
      cryptographic security for NTP is specified in <xref target="RFC8915" format="default" sectionFormat="of" derivedContent="RFC8915"/>.</t>
    </section>
    <section anchor="IANA" numbered="true" toc="include" removeInRFC="false" pn="section-10">
      <name slugifiedName="name-iana-considerations">IANA Considerations</name>
      <t indent="0" pn="section-10-1">IANA has registered the following URI in the "ns"
      subregistry within the "IETF XML Registry" <xref target="RFC3688" format="default" sectionFormat="of" derivedContent="RFC3688"/>:</t>
      <dl newline="false" spacing="compact" indent="3" pn="section-10-2">
        <dt pn="section-10-2.1">URI:</dt>
        <dd pn="section-10-2.2">urn:ietf:params:xml:ns:yang:ietf-l3vpn-ntw</dd>
        <dt pn="section-10-2.3">Registrant Contact:</dt>
        <dd pn="section-10-2.4">The IESG.</dd>
        <dt pn="section-10-2.5">XML:</dt>
        <dd pn="section-10-2.6">N/A; the requested URI is an XML namespace.</dd>
      </dl>
      <t indent="0" pn="section-10-3">IANA has registered the following YANG module in
      the "YANG Module Names" subregistry <xref target="RFC6020" format="default" sectionFormat="of" derivedContent="RFC6020"/>
      within the "YANG Parameters" registry.</t>
      <dl newline="false" spacing="compact" indent="3" pn="section-10-4">
        <dt pn="section-10-4.1">Name:</dt>
        <dd pn="section-10-4.2">ietf-l3vpn-ntw</dd>
        <dt pn="section-10-4.3">Maintained by IANA?</dt>
        <dd pn="section-10-4.4">N</dd>
        <dt pn="section-10-4.5">Namespace:</dt>
        <dd pn="section-10-4.6">urn:ietf:params:xml:ns:yang:ietf-l3vpn-ntw</dd>
        <dt pn="section-10-4.7">Prefix:</dt>
        <dd pn="section-10-4.8">l3nm</dd>
        <dt pn="section-10-4.9">Reference:</dt>
        <dd pn="section-10-4.10">RFC 9182</dd>
      </dl>
    </section>
  </middle>
  <back>
    <displayreference target="I-D.ietf-idr-bgp-model" to="BGP-YANG"/>
    <displayreference target="I-D.ietf-rtgwg-qos-model" to="QoS-YANG"/>
    <displayreference target="I-D.ietf-teas-enhanced-vpn" to="Enhanced-VPN-Framework"/>
    <references pn="section-11">
      <name slugifiedName="name-references">References</name>
      <references pn="section-11.1">
        <name slugifiedName="name-normative-references">Normative References</name>
        <reference anchor="ISO10589" target="https://www.iso.org/standard/30932.html" quoteTitle="true" derivedAnchor="ISO10589">
          <front>
            <title>Information technology - Telecommunications and information exchange between systems - Intermediate System to Intermediate System intra-domain routeing information exchange protocol for use in conjunction with the protocol for providing the connectionless-mode network service (ISO 8473)</title>
            <author>
              <organization showOnFrontPage="true">ISO</organization>
            </author>
            <date year="2002"/>
          </front>
          <refcontent>ISO/IEC 10589:2002</refcontent>
        </reference>
        <reference anchor="RFC1112" target="https://www.rfc-editor.org/info/rfc1112" quoteTitle="true" derivedAnchor="RFC1112">
          <front>
            <title>Host extensions for IP multicasting</title>
            <author initials="S.E." surname="Deering" fullname="S.E. Deering">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="1989" month="August"/>
            <abstract>
              <t indent="0">This memo specifies the extensions required of a host implementation of the Internet Protocol (IP) to support multicasting.  Recommended procedure for IP multicasting in the Internet.  This RFC obsoletes RFCs 998 and 1054.  [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="STD" value="5"/>
          <seriesInfo name="RFC" value="1112"/>
          <seriesInfo name="DOI" value="10.17487/RFC1112"/>
        </reference>
        <reference anchor="RFC1195" target="https://www.rfc-editor.org/info/rfc1195" quoteTitle="true" derivedAnchor="RFC1195">
          <front>
            <title>Use of OSI IS-IS for routing in TCP/IP and dual environments</title>
            <author initials="R.W." surname="Callon" fullname="R.W. Callon">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="1990" month="December"/>
            <abstract>
              <t indent="0">This memo specifies an integrated routing protocol, based on the OSI Intra-Domain IS-IS Routing Protocol, which may be used as an interior gateway protocol (IGP) to support TCP/IP as well as OSI.  This allows a single routing protocol to be used to support pure IP environments, pure OSI environments, and dual environments.  This specification was developed by the IS-IS working group of the Internet Engineering Task Force.  [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="1195"/>
          <seriesInfo name="DOI" value="10.17487/RFC1195"/>
        </reference>
        <reference anchor="RFC2080" target="https://www.rfc-editor.org/info/rfc2080" quoteTitle="true" derivedAnchor="RFC2080">
          <front>
            <title>RIPng for IPv6</title>
            <author initials="G." surname="Malkin" fullname="G. Malkin">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="R." surname="Minnear" fullname="R. Minnear">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="1997" month="January"/>
            <abstract>
              <t indent="0">This document specifies a routing protocol for an IPv6 internet.  It is based on protocols and algorithms currently in wide use in the IPv4 Internet [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="2080"/>
          <seriesInfo name="DOI" value="10.17487/RFC2080"/>
        </reference>
        <reference anchor="RFC2119" target="https://www.rfc-editor.org/info/rfc2119" quoteTitle="true" derivedAnchor="RFC2119">
          <front>
            <title>Key words for use in RFCs to Indicate Requirement Levels</title>
            <author initials="S." surname="Bradner" fullname="S. Bradner">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="1997" month="March"/>
            <abstract>
              <t indent="0">In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t>
            </abstract>
          </front>
          <seriesInfo name="BCP" value="14"/>
          <seriesInfo name="RFC" value="2119"/>
          <seriesInfo name="DOI" value="10.17487/RFC2119"/>
        </reference>
        <reference anchor="RFC2236" target="https://www.rfc-editor.org/info/rfc2236" quoteTitle="true" derivedAnchor="RFC2236">
          <front>
            <title>Internet Group Management Protocol, Version 2</title>
            <author initials="W." surname="Fenner" fullname="W. Fenner">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="1997" month="November"/>
            <abstract>
              <t indent="0">This memo documents IGMPv2, used by IP hosts to report their multicast group memberships to routers.  It updates STD 5, RFC 1112.  [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="2236"/>
          <seriesInfo name="DOI" value="10.17487/RFC2236"/>
        </reference>
        <reference anchor="RFC2453" target="https://www.rfc-editor.org/info/rfc2453" quoteTitle="true" derivedAnchor="RFC2453">
          <front>
            <title>RIP Version 2</title>
            <author initials="G." surname="Malkin" fullname="G. Malkin">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="1998" month="November"/>
            <abstract>
              <t indent="0">This document specifies an extension of the Routing Information Protocol (RIP) to expand the amount of useful information carried in RIP messages and to add a measure of security.  [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="STD" value="56"/>
          <seriesInfo name="RFC" value="2453"/>
          <seriesInfo name="DOI" value="10.17487/RFC2453"/>
        </reference>
        <reference anchor="RFC2710" target="https://www.rfc-editor.org/info/rfc2710" quoteTitle="true" derivedAnchor="RFC2710">
          <front>
            <title>Multicast Listener Discovery (MLD) for IPv6</title>
            <author initials="S." surname="Deering" fullname="S. Deering">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="W." surname="Fenner" fullname="W. Fenner">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="B." surname="Haberman" fullname="B. Haberman">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="1999" month="October"/>
            <abstract>
              <t indent="0">This document specifies the protocol used by an IPv6 router to discover the presence of multicast listeners (that is, nodes wishing to receive multicast packets) on its directly attached links, and to discover specifically which multicast addresses are of interest to those neighboring nodes.  [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="2710"/>
          <seriesInfo name="DOI" value="10.17487/RFC2710"/>
        </reference>
        <reference anchor="RFC3376" target="https://www.rfc-editor.org/info/rfc3376" quoteTitle="true" derivedAnchor="RFC3376">
          <front>
            <title>Internet Group Management Protocol, Version 3</title>
            <author initials="B." surname="Cain" fullname="B. Cain">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="S." surname="Deering" fullname="S. Deering">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="I." surname="Kouvelas" fullname="I. Kouvelas">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="B." surname="Fenner" fullname="B. Fenner">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="A." surname="Thyagarajan" fullname="A. Thyagarajan">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2002" month="October"/>
          </front>
          <seriesInfo name="RFC" value="3376"/>
          <seriesInfo name="DOI" value="10.17487/RFC3376"/>
        </reference>
        <reference anchor="RFC3688" target="https://www.rfc-editor.org/info/rfc3688" quoteTitle="true" derivedAnchor="RFC3688">
          <front>
            <title>The IETF XML Registry</title>
            <author initials="M." surname="Mealling" fullname="M. Mealling">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2004" month="January"/>
            <abstract>
              <t indent="0">This document describes an IANA maintained registry for IETF standards which use Extensible Markup Language (XML) related items such as Namespaces, Document Type Declarations (DTDs), Schemas, and Resource Description Framework (RDF) Schemas.</t>
            </abstract>
          </front>
          <seriesInfo name="BCP" value="81"/>
          <seriesInfo name="RFC" value="3688"/>
          <seriesInfo name="DOI" value="10.17487/RFC3688"/>
        </reference>
        <reference anchor="RFC3810" target="https://www.rfc-editor.org/info/rfc3810" quoteTitle="true" derivedAnchor="RFC3810">
          <front>
            <title>Multicast Listener Discovery Version 2 (MLDv2) for IPv6</title>
            <author initials="R." surname="Vida" fullname="R. Vida" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="L." surname="Costa" fullname="L. Costa" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2004" month="June"/>
            <abstract>
              <t indent="0">This document updates RFC 2710, and it specifies Version 2 of the ulticast Listener Discovery Protocol (MLDv2).  MLD is used by an IPv6 router to discover the presence of multicast listeners on directly attached links, and to discover which multicast addresses are of interest to those neighboring nodes.  MLDv2 is designed to be interoperable with MLDv1.  MLDv2 adds the ability for a node to report interest in listening to packets with a particular multicast address only from specific source addresses or from all sources except for specific source addresses.  [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="3810"/>
          <seriesInfo name="DOI" value="10.17487/RFC3810"/>
        </reference>
        <reference anchor="RFC4271" target="https://www.rfc-editor.org/info/rfc4271" quoteTitle="true" derivedAnchor="RFC4271">
          <front>
            <title>A Border Gateway Protocol 4 (BGP-4)</title>
            <author initials="Y." surname="Rekhter" fullname="Y. Rekhter" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="T." surname="Li" fullname="T. Li" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="S." surname="Hares" fullname="S. Hares" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2006" month="January"/>
            <abstract>
              <t indent="0">This document discusses the Border Gateway Protocol (BGP), which is an inter-Autonomous System routing protocol.</t>
              <t indent="0">The primary function of a BGP speaking system is to exchange network reachability information with other BGP systems.  This network reachability information includes information on the list of Autonomous Systems (ASes) that reachability information traverses. This information is sufficient for constructing a graph of AS connectivity for this reachability from which routing loops may be pruned, and, at the AS level, some policy decisions may be enforced.</t>
              <t indent="0">BGP-4 provides a set of mechanisms for supporting Classless Inter-Domain Routing (CIDR).  These mechanisms include support for advertising a set of destinations as an IP prefix, and eliminating the concept of network "class" within BGP.  BGP-4 also introduces mechanisms that allow aggregation of routes, including aggregation of AS paths.</t>
              <t indent="0">This document obsoletes RFC 1771.  [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="4271"/>
          <seriesInfo name="DOI" value="10.17487/RFC4271"/>
        </reference>
        <reference anchor="RFC4364" target="https://www.rfc-editor.org/info/rfc4364" quoteTitle="true" derivedAnchor="RFC4364">
          <front>
            <title>BGP/MPLS IP Virtual Private Networks (VPNs)</title>
            <author initials="E." surname="Rosen" fullname="E. Rosen">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="Y." surname="Rekhter" fullname="Y. Rekhter">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2006" month="February"/>
            <abstract>
              <t indent="0">This document describes a method by which a Service Provider may use an IP backbone to provide IP Virtual Private Networks (VPNs) for its customers.  This method uses a "peer model", in which the customers' edge routers (CE routers) send their routes to the Service Provider's edge routers (PE routers); there is no "overlay" visible to the customer's routing algorithm, and CE routers at different sites do not peer with each other.  Data packets are tunneled through the backbone, so that the core routers do not need to know the VPN routes.  [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="4364"/>
          <seriesInfo name="DOI" value="10.17487/RFC4364"/>
        </reference>
        <reference anchor="RFC4552" target="https://www.rfc-editor.org/info/rfc4552" quoteTitle="true" derivedAnchor="RFC4552">
          <front>
            <title>Authentication/Confidentiality for OSPFv3</title>
            <author initials="M." surname="Gupta" fullname="M. Gupta">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="N." surname="Melam" fullname="N. Melam">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2006" month="June"/>
            <abstract>
              <t indent="0">This document describes means and mechanisms to provide authentication/confidentiality to OSPFv3 using an IPv6 Authentication Header/Encapsulating Security Payload (AH/ESP) extension header.  [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="4552"/>
          <seriesInfo name="DOI" value="10.17487/RFC4552"/>
        </reference>
        <reference anchor="RFC4577" target="https://www.rfc-editor.org/info/rfc4577" quoteTitle="true" derivedAnchor="RFC4577">
          <front>
            <title>OSPF as the Provider/Customer Edge Protocol for BGP/MPLS IP Virtual Private Networks (VPNs)</title>
            <author initials="E." surname="Rosen" fullname="E. Rosen">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="P." surname="Psenak" fullname="P. Psenak">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="P." surname="Pillay-Esnault" fullname="P. Pillay-Esnault">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2006" month="June"/>
            <abstract>
              <t indent="0">Many Service Providers offer Virtual Private Network (VPN) services to their customers, using a technique in which customer edge routers (CE routers) are routing peers of provider edge routers (PE routers).  The Border Gateway Protocol (BGP) is used to distribute the customer's routes across the provider's IP backbone network, and Multiprotocol Label Switching (MPLS) is used to tunnel customer packets across the provider's backbone.  This is known as a "BGP/MPLS IP VPN".  The base specification for BGP/MPLS IP VPNs presumes that the routing protocol on the interface between a PE router and a CE router is BGP.  This document extends that specification by allowing the routing protocol on the PE/CE interface to be the Open Shortest Path First (OSPF) protocol.</t>
              <t indent="0">This document updates RFC 4364.  [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="4577"/>
          <seriesInfo name="DOI" value="10.17487/RFC4577"/>
        </reference>
        <reference anchor="RFC5308" target="https://www.rfc-editor.org/info/rfc5308" quoteTitle="true" derivedAnchor="RFC5308">
          <front>
            <title>Routing IPv6 with IS-IS</title>
            <author initials="C." surname="Hopps" fullname="C. Hopps">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2008" month="October"/>
            <abstract>
              <t indent="0">This document specifies a method for exchanging IPv6 routing information using the IS-IS routing protocol.  The described method utilizes two new TLVs: a reachability TLV and an interface address TLV to distribute the necessary IPv6 information throughout a routing domain.  Using this method, one can route IPv6 along with IPv4 and OSI using a single intra-domain routing protocol.  [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="5308"/>
          <seriesInfo name="DOI" value="10.17487/RFC5308"/>
        </reference>
        <reference anchor="RFC5701" target="https://www.rfc-editor.org/info/rfc5701" quoteTitle="true" derivedAnchor="RFC5701">
          <front>
            <title>IPv6 Address Specific BGP Extended Community Attribute</title>
            <author initials="Y." surname="Rekhter" fullname="Y. Rekhter">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2009" month="November"/>
            <abstract>
              <t indent="0">Current specifications of BGP Extended Communities (RFC 4360) support the IPv4 Address Specific Extended Community, but do not support an IPv6 Address Specific Extended Community.  The lack of an IPv6 Address Specific Extended Community may be a problem when an application uses the IPv4 Address Specific Extended Community, and one wants to use this application in a pure IPv6 environment.  This document defines a new BGP attribute, the IPv6 Address Specific Extended Community, that addresses this problem.  The IPv6 Address Specific Extended Community is similar to the IPv4 Address Specific Extended Community, except that it carries an IPv6 address rather than an IPv4 address.  [STANDARDS TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="5701"/>
          <seriesInfo name="DOI" value="10.17487/RFC5701"/>
        </reference>
        <reference anchor="RFC5709" target="https://www.rfc-editor.org/info/rfc5709" quoteTitle="true" derivedAnchor="RFC5709">
          <front>
            <title>OSPFv2 HMAC-SHA Cryptographic Authentication</title>
            <author initials="M." surname="Bhatia" fullname="M. Bhatia">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="V." surname="Manral" fullname="V. Manral">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="M." surname="Fanto" fullname="M. Fanto">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="R." surname="White" fullname="R. White">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="M." surname="Barnes" fullname="M. Barnes">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="T." surname="Li" fullname="T. Li">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="R." surname="Atkinson" fullname="R. Atkinson">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2009" month="October"/>
            <abstract>
              <t indent="0">This document describes how the National Institute of Standards and Technology (NIST) Secure Hash Standard family of algorithms can be used with OSPF version 2's built-in, cryptographic authentication mechanism.  This updates, but does not supercede, the cryptographic authentication mechanism specified in RFC 2328. [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="5709"/>
          <seriesInfo name="DOI" value="10.17487/RFC5709"/>
        </reference>
        <reference anchor="RFC5798" target="https://www.rfc-editor.org/info/rfc5798" quoteTitle="true" derivedAnchor="RFC5798">
          <front>
            <title>Virtual Router Redundancy Protocol (VRRP) Version 3 for IPv4 and IPv6</title>
            <author initials="S." surname="Nadas" fullname="S. Nadas" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2010" month="March"/>
            <abstract>
              <t indent="0">This memo defines the Virtual Router Redundancy Protocol (VRRP) for IPv4 and IPv6.  It is version three (3) of the protocol, and it is based on VRRP (version 2) for IPv4 that is defined in RFC 3768 and in "Virtual Router Redundancy Protocol for IPv6".  VRRP specifies an election protocol that dynamically assigns responsibility for a virtual router to one of the VRRP routers on a LAN.  The VRRP router controlling the IPv4 or IPv6 address(es) associated with a virtual router is called the Master, and it forwards packets sent to these IPv4 or IPv6 addresses.  VRRP Master routers are configured with virtual IPv4 or IPv6 addresses, and VRRP Backup routers infer the address family of the virtual addresses being carried based on the transport protocol.  Within a VRRP router, the virtual routers in each of the IPv4 and IPv6 address families are a domain unto themselves and do not overlap.  The election process provides dynamic failover in the forwarding responsibility should the Master become unavailable.  For IPv4, the advantage gained from using VRRP is a higher-availability default path without requiring configuration of dynamic routing or router discovery protocols on every end-host.  For IPv6, the advantage gained from using VRRP for IPv6 is a quicker switchover to Backup routers than can be obtained with standard IPv6 Neighbor Discovery mechanisms.  [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="5798"/>
          <seriesInfo name="DOI" value="10.17487/RFC5798"/>
        </reference>
        <reference anchor="RFC5880" target="https://www.rfc-editor.org/info/rfc5880" quoteTitle="true" derivedAnchor="RFC5880">
          <front>
            <title>Bidirectional Forwarding Detection (BFD)</title>
            <author initials="D." surname="Katz" fullname="D. Katz">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="D." surname="Ward" fullname="D. Ward">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2010" month="June"/>
            <abstract>
              <t indent="0">This document describes a protocol intended to detect faults in the bidirectional path between two forwarding engines, including interfaces, data link(s), and to the extent possible the forwarding engines themselves, with potentially very low latency.  It operates independently of media, data protocols, and routing protocols. [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="5880"/>
          <seriesInfo name="DOI" value="10.17487/RFC5880"/>
        </reference>
        <reference anchor="RFC5905" target="https://www.rfc-editor.org/info/rfc5905" quoteTitle="true" derivedAnchor="RFC5905">
          <front>
            <title>Network Time Protocol Version 4: Protocol and Algorithms Specification</title>
            <author initials="D." surname="Mills" fullname="D. Mills">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="J." surname="Martin" fullname="J. Martin" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="J." surname="Burbank" fullname="J. Burbank">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="W." surname="Kasch" fullname="W. Kasch">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2010" month="June"/>
            <abstract>
              <t indent="0">The Network Time Protocol (NTP) is widely used to synchronize computer clocks in the Internet.  This document describes NTP version 4 (NTPv4), which is backwards compatible with NTP version 3 (NTPv3), described in RFC 1305, as well as previous versions of the protocol. NTPv4 includes a modified protocol header to accommodate the Internet Protocol version 6 address family.  NTPv4 includes fundamental improvements in the mitigation and discipline algorithms that extend the potential accuracy to the tens of microseconds with modern workstations and fast LANs.  It includes a dynamic server discovery scheme, so that in many cases, specific server configuration is not required.  It corrects certain errors in the NTPv3 design and implementation and includes an optional extension mechanism.   [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="5905"/>
          <seriesInfo name="DOI" value="10.17487/RFC5905"/>
        </reference>
        <reference anchor="RFC5925" target="https://www.rfc-editor.org/info/rfc5925" quoteTitle="true" derivedAnchor="RFC5925">
          <front>
            <title>The TCP Authentication Option</title>
            <author initials="J." surname="Touch" fullname="J. Touch">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="A." surname="Mankin" fullname="A. Mankin">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="R." surname="Bonica" fullname="R. Bonica">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2010" month="June"/>
            <abstract>
              <t indent="0">This document specifies the TCP Authentication Option (TCP-AO), which obsoletes the TCP MD5 Signature option of RFC 2385 (TCP MD5).  TCP-AO specifies the use of stronger Message Authentication Codes (MACs), protects against replays even for long-lived TCP connections, and provides more details on the association of security with TCP connections than TCP MD5.  TCP-AO is compatible with either a static Master Key Tuple (MKT) configuration or an external, out-of-band MKT management mechanism; in either case, TCP-AO also protects connections when using the same MKT across repeated instances of a connection, using traffic keys derived from the MKT, and coordinates MKT changes between endpoints.  The result is intended to support current infrastructure uses of TCP MD5, such as to protect long-lived connections (as used, e.g., in BGP and LDP), and to support a larger set of MACs with minimal other system and operational changes.  TCP-AO uses a different option identifier than TCP MD5, even though TCP-AO and TCP MD5 are never permitted to be used simultaneously.  TCP-AO supports IPv6, and is fully compatible with the proposed requirements for the replacement of TCP MD5.  [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="5925"/>
          <seriesInfo name="DOI" value="10.17487/RFC5925"/>
        </reference>
        <reference anchor="RFC6020" target="https://www.rfc-editor.org/info/rfc6020" quoteTitle="true" derivedAnchor="RFC6020">
          <front>
            <title>YANG - A Data Modeling Language for the Network Configuration Protocol (NETCONF)</title>
            <author initials="M." surname="Bjorklund" fullname="M. Bjorklund" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2010" month="October"/>
            <abstract>
              <t indent="0">YANG is a data modeling language used to model configuration and state data manipulated by the Network Configuration Protocol (NETCONF), NETCONF remote procedure calls, and NETCONF notifications. [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="6020"/>
          <seriesInfo name="DOI" value="10.17487/RFC6020"/>
        </reference>
        <reference anchor="RFC6241" target="https://www.rfc-editor.org/info/rfc6241" quoteTitle="true" derivedAnchor="RFC6241">
          <front>
            <title>Network Configuration Protocol (NETCONF)</title>
            <author initials="R." surname="Enns" fullname="R. Enns" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="M." surname="Bjorklund" fullname="M. Bjorklund" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="J." surname="Schoenwaelder" fullname="J. Schoenwaelder" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="A." surname="Bierman" fullname="A. Bierman" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2011" month="June"/>
            <abstract>
              <t indent="0">The Network Configuration Protocol (NETCONF) defined in this document provides mechanisms to install, manipulate, and delete the configuration of network devices.  It uses an Extensible Markup Language (XML)-based data encoding for the configuration data as well as the protocol messages.  The NETCONF protocol operations are realized as remote procedure calls (RPCs).  This document obsoletes RFC 4741.  [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="6241"/>
          <seriesInfo name="DOI" value="10.17487/RFC6241"/>
        </reference>
        <reference anchor="RFC6242" target="https://www.rfc-editor.org/info/rfc6242" quoteTitle="true" derivedAnchor="RFC6242">
          <front>
            <title>Using the NETCONF Protocol over Secure Shell (SSH)</title>
            <author initials="M." surname="Wasserman" fullname="M. Wasserman">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2011" month="June"/>
            <abstract>
              <t indent="0">This document describes a method for invoking and running the Network Configuration Protocol (NETCONF) within a Secure Shell (SSH) session as an SSH subsystem.  This document obsoletes RFC 4742.  [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="6242"/>
          <seriesInfo name="DOI" value="10.17487/RFC6242"/>
        </reference>
        <reference anchor="RFC6513" target="https://www.rfc-editor.org/info/rfc6513" quoteTitle="true" derivedAnchor="RFC6513">
          <front>
            <title>Multicast in MPLS/BGP IP VPNs</title>
            <author initials="E." surname="Rosen" fullname="E. Rosen" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="R." surname="Aggarwal" fullname="R. Aggarwal" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2012" month="February"/>
            <abstract>
              <t indent="0">In order for IP multicast traffic within a BGP/MPLS IP VPN (Virtual Private Network) to travel from one VPN site to another, special protocols and procedures must be implemented by the VPN Service Provider.  These protocols and procedures are specified in this document.  [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="6513"/>
          <seriesInfo name="DOI" value="10.17487/RFC6513"/>
        </reference>
        <reference anchor="RFC6514" target="https://www.rfc-editor.org/info/rfc6514" quoteTitle="true" derivedAnchor="RFC6514">
          <front>
            <title>BGP Encodings and Procedures for Multicast in MPLS/BGP IP VPNs</title>
            <author initials="R." surname="Aggarwal" fullname="R. Aggarwal">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="E." surname="Rosen" fullname="E. Rosen">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="T." surname="Morin" fullname="T. Morin">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="Y." surname="Rekhter" fullname="Y. Rekhter">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2012" month="February"/>
            <abstract>
              <t indent="0">This document describes the BGP encodings and procedures for exchanging the information elements required by Multicast in MPLS/BGP IP VPNs, as specified in RFC 6513.  [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="6514"/>
          <seriesInfo name="DOI" value="10.17487/RFC6514"/>
        </reference>
        <reference anchor="RFC6565" target="https://www.rfc-editor.org/info/rfc6565" quoteTitle="true" derivedAnchor="RFC6565">
          <front>
            <title>OSPFv3 as a Provider Edge to Customer Edge (PE-CE) Routing Protocol</title>
            <author initials="P." surname="Pillay-Esnault" fullname="P. Pillay-Esnault">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="P." surname="Moyer" fullname="P. Moyer">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="J." surname="Doyle" fullname="J. Doyle">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="E." surname="Ertekin" fullname="E. Ertekin">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="M." surname="Lundberg" fullname="M. Lundberg">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2012" month="June"/>
            <abstract>
              <t indent="0">Many Service Providers (SPs) offer Virtual Private Network (VPN) services to their customers using a technique in which Customer Edge (CE) routers are routing peers of Provider Edge (PE) routers.  The Border Gateway Protocol (BGP) is used to distribute the customer's routes across the provider's IP backbone network, and Multiprotocol Label Switching (MPLS) is used to tunnel customer packets across the provider's backbone.  Support currently exists for both IPv4 and IPv6 VPNs; however, only Open Shortest Path First version 2 (OSPFv2) as PE-CE protocol is specified.  This document extends those specifications to support OSPF version 3 (OSPFv3) as a PE-CE routing protocol.  The OSPFv3 PE-CE functionality is identical to that of OSPFv2 except for the differences described in this document. [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="6565"/>
          <seriesInfo name="DOI" value="10.17487/RFC6565"/>
        </reference>
        <reference anchor="RFC6991" target="https://www.rfc-editor.org/info/rfc6991" quoteTitle="true" derivedAnchor="RFC6991">
          <front>
            <title>Common YANG Data Types</title>
            <author initials="J." surname="Schoenwaelder" fullname="J. Schoenwaelder" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2013" month="July"/>
            <abstract>
              <t indent="0">This document introduces a collection of common data types to be used with the YANG data modeling language.  This document obsoletes RFC 6021.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="6991"/>
          <seriesInfo name="DOI" value="10.17487/RFC6991"/>
        </reference>
        <reference anchor="RFC7166" target="https://www.rfc-editor.org/info/rfc7166" quoteTitle="true" derivedAnchor="RFC7166">
          <front>
            <title>Supporting Authentication Trailer for OSPFv3</title>
            <author initials="M." surname="Bhatia" fullname="M. Bhatia">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="V." surname="Manral" fullname="V. Manral">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="A." surname="Lindem" fullname="A. Lindem">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2014" month="March"/>
            <abstract>
              <t indent="0">Currently, OSPF for IPv6 (OSPFv3) uses IPsec as the only mechanism for authenticating protocol packets.  This behavior is different from authentication mechanisms present in other routing protocols (OSPFv2, Intermediate System to Intermediate System (IS-IS), RIP, and Routing Information Protocol Next Generation (RIPng)).  In some environments, it has been found that IPsec is difficult to configure and maintain and thus cannot be used.  This document defines an alternative mechanism to authenticate OSPFv3 protocol packets so that OSPFv3 does not depend only upon IPsec for authentication.</t>
              <t indent="0">The OSPFv3 Authentication Trailer was originally defined in RFC 6506. This document obsoletes RFC 6506 by providing a revised definition, including clarifications and refinements of the procedures.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="7166"/>
          <seriesInfo name="DOI" value="10.17487/RFC7166"/>
        </reference>
        <reference anchor="RFC7474" target="https://www.rfc-editor.org/info/rfc7474" quoteTitle="true" derivedAnchor="RFC7474">
          <front>
            <title>Security Extension for OSPFv2 When Using Manual Key Management</title>
            <author initials="M." surname="Bhatia" fullname="M. Bhatia">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="S." surname="Hartman" fullname="S. Hartman">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="D." surname="Zhang" fullname="D. Zhang">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="A." surname="Lindem" fullname="A. Lindem" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2015" month="April"/>
            <abstract>
              <t indent="0">The current OSPFv2 cryptographic authentication mechanism as defined in RFCs 2328 and 5709 is vulnerable to both inter-session and intra- session replay attacks when using manual keying.  Additionally, the existing cryptographic authentication mechanism does not cover the IP header.  This omission can be exploited to carry out various types of attacks.</t>
              <t indent="0">This document defines changes to the authentication sequence number mechanism that will protect OSPFv2 from both inter-session and intra- session replay attacks when using manual keys for securing OSPFv2 protocol packets.  Additionally, we also describe some changes in the cryptographic hash computation that will eliminate attacks resulting from OSPFv2 not protecting the IP header.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="7474"/>
          <seriesInfo name="DOI" value="10.17487/RFC7474"/>
        </reference>
        <reference anchor="RFC7761" target="https://www.rfc-editor.org/info/rfc7761" quoteTitle="true" derivedAnchor="RFC7761">
          <front>
            <title>Protocol Independent Multicast - Sparse Mode (PIM-SM): Protocol Specification (Revised)</title>
            <author initials="B." surname="Fenner" fullname="B. Fenner">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="M." surname="Handley" fullname="M. Handley">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="H." surname="Holbrook" fullname="H. Holbrook">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="I." surname="Kouvelas" fullname="I. Kouvelas">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="R." surname="Parekh" fullname="R. Parekh">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="Z." surname="Zhang" fullname="Z. Zhang">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="L." surname="Zheng" fullname="L. Zheng">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2016" month="March"/>
            <abstract>
              <t indent="0">This document specifies Protocol Independent Multicast - Sparse Mode (PIM-SM).  PIM-SM is a multicast routing protocol that can use the underlying unicast routing information base or a separate multicast-capable routing information base.  It builds unidirectional shared trees rooted at a Rendezvous Point (RP) per group, and it optionally creates shortest-path trees per source.</t>
              <t indent="0">This document obsoletes RFC 4601 by replacing it, addresses the errata filed against it, removes the optional (*,*,RP), PIM Multicast Border Router features and authentication using IPsec that lack sufficient deployment experience (see Appendix A), and moves the PIM specification to Internet Standard.</t>
            </abstract>
          </front>
          <seriesInfo name="STD" value="83"/>
          <seriesInfo name="RFC" value="7761"/>
          <seriesInfo name="DOI" value="10.17487/RFC7761"/>
        </reference>
        <reference anchor="RFC7950" target="https://www.rfc-editor.org/info/rfc7950" quoteTitle="true" derivedAnchor="RFC7950">
          <front>
            <title>The YANG 1.1 Data Modeling Language</title>
            <author initials="M." surname="Bjorklund" fullname="M. Bjorklund" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2016" month="August"/>
            <abstract>
              <t indent="0">YANG is a data modeling language used to model configuration data, state data, Remote Procedure Calls, and notifications for network management protocols.  This document describes the syntax and semantics of version 1.1 of the YANG language.  YANG version 1.1 is a maintenance release of the YANG language, addressing ambiguities and defects in the original specification.  There are a small number of backward incompatibilities from YANG version 1.  This document also specifies the YANG mappings to the Network Configuration Protocol (NETCONF).</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="7950"/>
          <seriesInfo name="DOI" value="10.17487/RFC7950"/>
        </reference>
        <reference anchor="RFC8040" target="https://www.rfc-editor.org/info/rfc8040" quoteTitle="true" derivedAnchor="RFC8040">
          <front>
            <title>RESTCONF Protocol</title>
            <author initials="A." surname="Bierman" fullname="A. Bierman">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="M." surname="Bjorklund" fullname="M. Bjorklund">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="K." surname="Watsen" fullname="K. Watsen">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2017" month="January"/>
            <abstract>
              <t indent="0">This document describes an HTTP-based protocol that provides a programmatic interface for accessing data defined in YANG, using the datastore concepts defined in the Network Configuration Protocol (NETCONF).</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8040"/>
          <seriesInfo name="DOI" value="10.17487/RFC8040"/>
        </reference>
        <reference anchor="RFC8174" target="https://www.rfc-editor.org/info/rfc8174" quoteTitle="true" derivedAnchor="RFC8174">
          <front>
            <title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
            <author initials="B." surname="Leiba" fullname="B. Leiba">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2017" month="May"/>
            <abstract>
              <t indent="0">RFC 2119 specifies common key words that may be used in protocol  specifications.  This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the  defined special meanings.</t>
            </abstract>
          </front>
          <seriesInfo name="BCP" value="14"/>
          <seriesInfo name="RFC" value="8174"/>
          <seriesInfo name="DOI" value="10.17487/RFC8174"/>
        </reference>
        <reference anchor="RFC8177" target="https://www.rfc-editor.org/info/rfc8177" quoteTitle="true" derivedAnchor="RFC8177">
          <front>
            <title>YANG Data Model for Key Chains</title>
            <author initials="A." surname="Lindem" fullname="A. Lindem" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="Y." surname="Qu" fullname="Y. Qu">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="D." surname="Yeung" fullname="D. Yeung">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="I." surname="Chen" fullname="I. Chen">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="J." surname="Zhang" fullname="J. Zhang">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2017" month="June"/>
            <abstract>
              <t indent="0">This document describes the key chain YANG data model.  Key chains are commonly used for routing protocol authentication and other applications requiring symmetric keys.  A key chain is a list containing one or more elements containing a Key ID, key string, send/accept lifetimes, and the associated authentication or encryption algorithm.  By properly overlapping the send and accept lifetimes of multiple key chain elements, key strings and algorithms may be gracefully updated.  By representing them in a YANG data model, key distribution can be automated.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8177"/>
          <seriesInfo name="DOI" value="10.17487/RFC8177"/>
        </reference>
        <reference anchor="RFC8294" target="https://www.rfc-editor.org/info/rfc8294" quoteTitle="true" derivedAnchor="RFC8294">
          <front>
            <title>Common YANG Data Types for the Routing Area</title>
            <author initials="X." surname="Liu" fullname="X. Liu">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="Y." surname="Qu" fullname="Y. Qu">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="A." surname="Lindem" fullname="A. Lindem">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="C." surname="Hopps" fullname="C. Hopps">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="L." surname="Berger" fullname="L. Berger">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2017" month="December"/>
            <abstract>
              <t indent="0">This document defines a collection of common data types using the YANG data modeling language.  These derived common types are designed to be imported by other modules defined in the routing area.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8294"/>
          <seriesInfo name="DOI" value="10.17487/RFC8294"/>
        </reference>
        <reference anchor="RFC8341" target="https://www.rfc-editor.org/info/rfc8341" quoteTitle="true" derivedAnchor="RFC8341">
          <front>
            <title>Network Configuration Access Control Model</title>
            <author initials="A." surname="Bierman" fullname="A. Bierman">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="M." surname="Bjorklund" fullname="M. Bjorklund">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2018" month="March"/>
            <abstract>
              <t indent="0">The standardization of network configuration interfaces for use with the Network Configuration Protocol (NETCONF) or the RESTCONF protocol requires a structured and secure operating environment that promotes human usability and multi-vendor interoperability.  There is a need for standard mechanisms to restrict NETCONF or RESTCONF protocol access for particular users to a preconfigured subset of all available NETCONF or RESTCONF protocol operations and content.  This document defines such an access control model.</t>
              <t indent="0">This document obsoletes RFC 6536.</t>
            </abstract>
          </front>
          <seriesInfo name="STD" value="91"/>
          <seriesInfo name="RFC" value="8341"/>
          <seriesInfo name="DOI" value="10.17487/RFC8341"/>
        </reference>
        <reference anchor="RFC8343" target="https://www.rfc-editor.org/info/rfc8343" quoteTitle="true" derivedAnchor="RFC8343">
          <front>
            <title>A YANG Data Model for Interface Management</title>
            <author initials="M." surname="Bjorklund" fullname="M. Bjorklund">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2018" month="March"/>
            <abstract>
              <t indent="0">This document defines a YANG data model for the management of network interfaces.  It is expected that interface-type-specific data models augment the generic interfaces data model defined in this document. The data model includes definitions for configuration and system state (status information and counters for the collection of statistics).</t>
              <t indent="0">The YANG data model in this document conforms to the Network Management Datastore Architecture (NMDA) defined in RFC 8342.</t>
              <t indent="0">This document obsoletes RFC 7223.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8343"/>
          <seriesInfo name="DOI" value="10.17487/RFC8343"/>
        </reference>
        <reference anchor="RFC8446" target="https://www.rfc-editor.org/info/rfc8446" quoteTitle="true" derivedAnchor="RFC8446">
          <front>
            <title>The Transport Layer Security (TLS) Protocol Version 1.3</title>
            <author initials="E." surname="Rescorla" fullname="E. Rescorla">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2018" month="August"/>
            <abstract>
              <t indent="0">This document specifies version 1.3 of the Transport Layer Security (TLS) protocol.  TLS allows client/server applications to communicate over the Internet in a way that is designed to prevent eavesdropping, tampering, and message forgery.</t>
              <t indent="0">This document updates RFCs 5705 and 6066, and obsoletes RFCs 5077, 5246, and 6961.  This document also specifies new requirements for TLS 1.2 implementations.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8446"/>
          <seriesInfo name="DOI" value="10.17487/RFC8446"/>
        </reference>
        <reference anchor="RFC8466" target="https://www.rfc-editor.org/info/rfc8466" quoteTitle="true" derivedAnchor="RFC8466">
          <front>
            <title>A YANG Data Model for Layer 2 Virtual Private Network (L2VPN) Service Delivery</title>
            <author initials="B." surname="Wen" fullname="B. Wen">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="G." surname="Fioccola" fullname="G. Fioccola" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="C." surname="Xie" fullname="C. Xie">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="L." surname="Jalil" fullname="L. Jalil">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2018" month="October"/>
            <abstract>
              <t indent="0">This document defines a YANG data model that can be used to configure a Layer 2 provider-provisioned VPN service.  It is up to a management system to take this as an input and generate specific configuration models to configure the different network elements to deliver the service.  How this configuration of network elements is done is out of scope for this document.</t>
              <t indent="0">The YANG data model defined in this document includes support for point-to-point Virtual Private Wire Services (VPWSs) and multipoint Virtual Private LAN Services (VPLSs) that use Pseudowires signaled using the Label Distribution Protocol (LDP) and the Border Gateway Protocol (BGP) as described in RFCs 4761 and 6624.</t>
              <t indent="0">The YANG data model defined in this document conforms to the Network Management Datastore Architecture defined in RFC 8342.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8466"/>
          <seriesInfo name="DOI" value="10.17487/RFC8466"/>
        </reference>
        <reference anchor="RFC8519" target="https://www.rfc-editor.org/info/rfc8519" quoteTitle="true" derivedAnchor="RFC8519">
          <front>
            <title>YANG Data Model for Network Access Control Lists (ACLs)</title>
            <author initials="M." surname="Jethanandani" fullname="M. Jethanandani">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="S." surname="Agarwal" fullname="S. Agarwal">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="L." surname="Huang" fullname="L. Huang">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="D." surname="Blair" fullname="D. Blair">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2019" month="March"/>
            <abstract>
              <t indent="0">This document defines a data model for Access Control Lists (ACLs). An ACL is a user-ordered set of rules used to configure the forwarding behavior in a device.  Each rule is used to find a match on a packet and define actions that will be performed on the packet.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8519"/>
          <seriesInfo name="DOI" value="10.17487/RFC8519"/>
        </reference>
        <reference anchor="RFC9181" target="https://www.rfc-editor.org/info/rfc9181" quoteTitle="true" derivedAnchor="RFC9181">
          <front>
            <title>A Common YANG Data Model for Layer 2 and Layer 3 VPNs</title>
            <author initials="S" surname="Barguil" fullname="Samier Barguil">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="O" surname="Gonzalez de Dios" fullname="Oscar Gonzalez de Dios" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="M" surname="Boucadair" fullname="Mohamed Boucadair" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="Q" surname="Wu" fullname="Qin Wu">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2022" month="February"/>
          </front>
          <seriesInfo name="RFC" value="9181"/>
          <seriesInfo name="DOI" value="10.17487/RFC9181"/>
        </reference>
      </references>
      <references pn="section-11.2">
        <name slugifiedName="name-informative-references">Informative References</name>
        <reference anchor="I-D.ietf-idr-bgp-model" quoteTitle="true" target="https://datatracker.ietf.org/doc/html/draft-ietf-idr-bgp-model-12" derivedAnchor="BGP-YANG">
          <front>
            <title>BGP YANG Model for Service Provider Networks</title>
            <author fullname="Mahesh Jethanandani">
              <organization showOnFrontPage="true">Kloud Services</organization>
            </author>
            <author fullname="Keyur Patel">
              <organization showOnFrontPage="true">Arrcus</organization>
            </author>
            <author fullname="Susan Hares">
              <organization showOnFrontPage="true">Huawei</organization>
            </author>
            <author fullname="Jeffrey Haas">
              <organization showOnFrontPage="true">Juniper Networks</organization>
            </author>
            <date month="October" day="25" year="2021"/>
            <abstract>
              <t indent="0">   This document defines a YANG data model for configuring and managing
   BGP, including protocol, policy, and operational aspects, such as
   RIB, based on data center, carrier, and content provider operational
   requirements.

              </t>
            </abstract>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-ietf-idr-bgp-model-12"/>
          <format type="TXT" target="https://www.ietf.org/archive/id/draft-ietf-idr-bgp-model-12.txt"/>
          <refcontent>Work in Progress</refcontent>
        </reference>
        <reference anchor="I-D.ietf-teas-enhanced-vpn" quoteTitle="true" target="https://datatracker.ietf.org/doc/html/draft-ietf-teas-enhanced-vpn-09" derivedAnchor="Enhanced-VPN-Framework">
          <front>
            <title>A Framework for Enhanced Virtual Private Network (VPN+) Services</title>
            <author fullname="Jie Dong">
              <organization showOnFrontPage="true">Huawei</organization>
            </author>
            <author fullname="Stewart Bryant">
              <organization showOnFrontPage="true">University of Surrey</organization>
            </author>
            <author fullname="Zhenqiang Li">
              <organization showOnFrontPage="true">China Mobile</organization>
            </author>
            <author fullname="Takuya Miyasaka">
              <organization showOnFrontPage="true">KDDI Corporation</organization>
            </author>
            <author fullname="Young Lee">
              <organization showOnFrontPage="true">Samsung</organization>
            </author>
            <date month="October" day="25" year="2021"/>
            <abstract>
              <t indent="0">   This document describes the framework for Enhanced Virtual Private
   Network (VPN+) services.  The purpose of enhanced VPNs is to support
   the needs of new applications, particularly applications that are
   associated with 5G services, by utilizing an approach that is based
   on existing VPN and Traffic Engineering (TE) technologies and adds
   characteristics that specific services require over those provided by
   traditional VPNs.

   Typically, VPN+ will be used to underpin network slicing, but could
   also be of use in its own right providing enhanced connectivity
   services between customer sites.

   It is envisaged that enhanced VPNs will be delivered using a
   combination of existing, modified, and new networking technologies.
   This document provides an overview of relevant technologies and
   identifies some areas for potential new work.

              </t>
            </abstract>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-ietf-teas-enhanced-vpn-09"/>
          <format type="TXT" target="https://www.ietf.org/archive/id/draft-ietf-teas-enhanced-vpn-09.txt"/>
          <refcontent>Work in Progress</refcontent>
        </reference>
        <reference anchor="IEEE802.1AX" target="https://ieeexplore.ieee.org/document/9105034" quoteTitle="true" derivedAnchor="IEEE802.1AX">
          <front>
            <title>802.1AX-2020 - IEEE Standard for Local and Metropolitan Area Networks--Link Aggregation</title>
            <author>
              <organization showOnFrontPage="true">IEEE</organization>
            </author>
          </front>
          <refcontent>IEEE Std 802.1AX-2020</refcontent>
        </reference>
        <reference anchor="Network-Slices-Framework" quoteTitle="true" target="https://datatracker.ietf.org/doc/html/draft-ietf-teas-ietf-network-slices-05" derivedAnchor="Network-Slices-Framework">
          <front>
            <title>Framework for IETF Network Slices</title>
            <author initials="A" surname="Farrel" fullname="Adrian Farrel" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="E" surname="Gray" fullname="Eric Gray">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="J" surname="Drake" fullname="John Drake">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="R" surname="Rokui" fullname="Reza Rokui">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="S" surname="Homma" fullname="Shunsuke Homma">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="K" surname="Makhijani" fullname="Kiran Makhijani">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="LM" surname="Contreras" fullname="Luis M. Contreras">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="J" surname="Tantsura" fullname="Jeff Tantsura">
              <organization showOnFrontPage="true"/>
            </author>
            <date month="October" day="25" year="2021"/>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-ietf-teas-ietf-network-slices-05"/>
          <refcontent>Work in Progress</refcontent>
        </reference>
        <reference anchor="PIM-YANG" quoteTitle="true" target="https://datatracker.ietf.org/doc/html/draft-ietf-pim-yang-17" derivedAnchor="PIM-YANG">
          <front>
            <title>A YANG Data Model for Protocol Independent Multicast (PIM)</title>
            <author fullname="Xufeng Liu">
              <organization showOnFrontPage="true"/>
            </author>
            <author fullname="Pete McAllister">
              <organization showOnFrontPage="true"/>
            </author>
            <author fullname="Anish Peter">
              <organization showOnFrontPage="true"/>
            </author>
            <author fullname="Mahesh Sivakumar">
              <organization showOnFrontPage="true"/>
            </author>
            <author fullname="Yisong Liu">
              <organization showOnFrontPage="true"/>
            </author>
            <author fullname="Fangwei Hu">
              <organization showOnFrontPage="true"/>
            </author>
            <date month="May" day="19" year="2018"/>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-ietf-pim-yang-17"/>
          <refcontent>Work in Progress</refcontent>
        </reference>
        <reference anchor="PYANG" target="https://github.com/mbj4668/pyang" quoteTitle="true" derivedAnchor="PYANG">
          <front>
            <title>pyang</title>
            <author>
              <organization showOnFrontPage="true"/>
            </author>
            <date month="December" year="2021"/>
          </front>
          <refcontent>commit 524cf61</refcontent>
        </reference>
        <reference anchor="I-D.ietf-rtgwg-qos-model" quoteTitle="true" target="https://datatracker.ietf.org/doc/html/draft-ietf-rtgwg-qos-model-06" derivedAnchor="QoS-YANG">
          <front>
            <title>A YANG Data Model for Quality of Service (QoS)</title>
            <author fullname="Aseem Choudhary">
              <organization showOnFrontPage="true">Cisco Systems</organization>
            </author>
            <author fullname="Mahesh Jethanandani">
              <organization showOnFrontPage="true">VMware</organization>
            </author>
            <author fullname="Ebben Aries">
              <organization showOnFrontPage="true">Juniper Networks</organization>
            </author>
            <author fullname="Ing-Wher Chen">
              <organization showOnFrontPage="true">The MITRE Corporation</organization>
            </author>
            <date month="November" day="8" year="2021"/>
            <abstract>
              <t indent="0">   This document describes a YANG Data model for Quality of Service
   (QoS) configuration in network devices.  This document doesn't
   describe QoS statistics counters.

              </t>
            </abstract>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-ietf-rtgwg-qos-model-06"/>
          <format type="TXT" target="https://www.ietf.org/archive/id/draft-ietf-rtgwg-qos-model-06.txt"/>
          <refcontent>Work in Progress</refcontent>
        </reference>
        <reference anchor="RFC3618" target="https://www.rfc-editor.org/info/rfc3618" quoteTitle="true" derivedAnchor="RFC3618">
          <front>
            <title>Multicast Source Discovery Protocol (MSDP)</title>
            <author initials="B." surname="Fenner" fullname="B. Fenner" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="D." surname="Meyer" fullname="D. Meyer" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2003" month="October"/>
            <abstract>
              <t indent="0">The Multicast Source Discovery Protocol (MSDP) describes a mechanism to connect multiple IP Version 4 Protocol Independent Multicast Sparse-Mode (PIM-SM) domains together.  Each PIM-SM domain uses its own independent Rendezvous Point (RP) and does not have to depend on RPs in other domains.  This document reflects existing MSDP implementations.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="3618"/>
          <seriesInfo name="DOI" value="10.17487/RFC3618"/>
        </reference>
        <reference anchor="RFC3644" target="https://www.rfc-editor.org/info/rfc3644" quoteTitle="true" derivedAnchor="RFC3644">
          <front>
            <title>Policy Quality of Service (QoS) Information Model</title>
            <author initials="Y." surname="Snir" fullname="Y. Snir">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="Y." surname="Ramberg" fullname="Y. Ramberg">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="J." surname="Strassner" fullname="J. Strassner">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="R." surname="Cohen" fullname="R. Cohen">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="B." surname="Moore" fullname="B. Moore">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2003" month="November"/>
            <abstract>
              <t indent="0">This document presents an object-oriented information model for representing Quality of Service (QoS) network management policies.  This document is based on the IETF Policy Core Information Model and its extensions.  It defines an information model for QoS enforcement for differentiated and integrated services using policy.  It is important to note that this document defines an information model, which by definition is independent of any particular data storage mechanism and access protocol.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="3644"/>
          <seriesInfo name="DOI" value="10.17487/RFC3644"/>
        </reference>
        <reference anchor="RFC4026" target="https://www.rfc-editor.org/info/rfc4026" quoteTitle="true" derivedAnchor="RFC4026">
          <front>
            <title>Provider Provisioned Virtual Private Network (VPN) Terminology</title>
            <author initials="L." surname="Andersson" fullname="L. Andersson">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="T." surname="Madsen" fullname="T. Madsen">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2005" month="March"/>
            <abstract>
              <t indent="0">The widespread interest in provider-provisioned Virtual Private Network (VPN) solutions lead to memos proposing different and overlapping solutions.  The IETF working groups (first Provider Provisioned VPNs and later Layer 2 VPNs and Layer 3 VPNs) have discussed these proposals and documented specifications.  This has lead to the development of a partially new set of concepts used to describe the set of VPN services. </t>
              <t indent="0">To a certain extent, more than one term covers the same concept, and sometimes the same term covers more than one concept.  This document seeks to make the terminology in the area clearer and more intuitive.  This memo provides information for the Internet community.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="4026"/>
          <seriesInfo name="DOI" value="10.17487/RFC4026"/>
        </reference>
        <reference anchor="RFC4110" target="https://www.rfc-editor.org/info/rfc4110" quoteTitle="true" derivedAnchor="RFC4110">
          <front>
            <title>A Framework for Layer 3 Provider-Provisioned Virtual Private Networks (PPVPNs)</title>
            <author initials="R." surname="Callon" fullname="R. Callon">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="M." surname="Suzuki" fullname="M. Suzuki">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2005" month="July"/>
            <abstract>
              <t indent="0">This document provides a framework for Layer 3 Provider-Provisioned Virtual Private Networks (PPVPNs).  This framework is intended to aid in the standardization of protocols and mechanisms for support of layer 3 PPVPNs.  It is the intent of this document to produce a coherent description of the significant technical issues that are important in the design of layer 3 PPVPN solutions.  Selection of specific approaches, making choices regarding engineering tradeoffs, and detailed protocol specification, are outside of the scope of this framework document.  This memo provides information for the Internet community.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="4110"/>
          <seriesInfo name="DOI" value="10.17487/RFC4110"/>
        </reference>
        <reference anchor="RFC4176" target="https://www.rfc-editor.org/info/rfc4176" quoteTitle="true" derivedAnchor="RFC4176">
          <front>
            <title>Framework for Layer 3 Virtual Private Networks (L3VPN) Operations and Management</title>
            <author initials="Y." surname="El Mghazli" fullname="Y. El Mghazli" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="T." surname="Nadeau" fullname="T. Nadeau">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="M." surname="Boucadair" fullname="M. Boucadair">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="K." surname="Chan" fullname="K. Chan">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="A." surname="Gonguet" fullname="A. Gonguet">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2005" month="October"/>
            <abstract>
              <t indent="0">This document provides a framework for the operation and management of Layer 3 Virtual Private Networks (L3VPNs).  This framework intends to produce a coherent description of the significant technical issues that are important in the design of L3VPN management solutions. The selection of specific approaches, and making choices among information models and protocols are outside the scope of this document.  This memo provides information for the Internet community.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="4176"/>
          <seriesInfo name="DOI" value="10.17487/RFC4176"/>
        </reference>
        <reference anchor="RFC4862" target="https://www.rfc-editor.org/info/rfc4862" quoteTitle="true" derivedAnchor="RFC4862">
          <front>
            <title>IPv6 Stateless Address Autoconfiguration</title>
            <author initials="S." surname="Thomson" fullname="S. Thomson">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="T." surname="Narten" fullname="T. Narten">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="T." surname="Jinmei" fullname="T. Jinmei">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2007" month="September"/>
            <abstract>
              <t indent="0">This document specifies the steps a host takes in deciding how to autoconfigure its interfaces in IP version 6.  The autoconfiguration process includes generating a link-local address, generating global addresses via stateless address autoconfiguration, and the Duplicate Address Detection procedure to verify the uniqueness of the addresses on a link.  [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="4862"/>
          <seriesInfo name="DOI" value="10.17487/RFC4862"/>
        </reference>
        <reference anchor="RFC6037" target="https://www.rfc-editor.org/info/rfc6037" quoteTitle="true" derivedAnchor="RFC6037">
          <front>
            <title>Cisco Systems' Solution for Multicast in BGP/MPLS IP VPNs</title>
            <author initials="E." surname="Rosen" fullname="E. Rosen" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="Y." surname="Cai" fullname="Y. Cai" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="IJ." surname="Wijnands" fullname="IJ. Wijnands">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2010" month="October"/>
            <abstract>
              <t indent="0">This document describes the MVPN (Multicast in BGP/MPLS IP VPNs) solution designed and deployed by Cisco Systems.  The procedures specified in this document are largely a subset of the generalized MVPN framework recently standardized by the IETF.  However, as the deployment of the procedures specified herein predates the publication of IETF standards (in some cases by over five years), an implementation based on these procedures differs in some respects from a fully standards-compliant implementation.  These differences are pointed out in the document.  This document defines a Historic  Document for the Internet community.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="6037"/>
          <seriesInfo name="DOI" value="10.17487/RFC6037"/>
        </reference>
        <reference anchor="RFC6151" target="https://www.rfc-editor.org/info/rfc6151" quoteTitle="true" derivedAnchor="RFC6151">
          <front>
            <title>Updated Security Considerations for the MD5 Message-Digest and the HMAC-MD5 Algorithms</title>
            <author initials="S." surname="Turner" fullname="S. Turner">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="L." surname="Chen" fullname="L. Chen">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2011" month="March"/>
            <abstract>
              <t indent="0">This document updates the security considerations for the MD5 message digest algorithm.  It also updates the security considerations for HMAC-MD5.  This document is not an Internet Standards Track  specification; it is published for informational purposes.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="6151"/>
          <seriesInfo name="DOI" value="10.17487/RFC6151"/>
        </reference>
        <reference anchor="RFC6952" target="https://www.rfc-editor.org/info/rfc6952" quoteTitle="true" derivedAnchor="RFC6952">
          <front>
            <title>Analysis of BGP, LDP, PCEP, and MSDP Issues According to the Keying and Authentication for Routing Protocols (KARP) Design Guide</title>
            <author initials="M." surname="Jethanandani" fullname="M. Jethanandani">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="K." surname="Patel" fullname="K. Patel">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="L." surname="Zheng" fullname="L. Zheng">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2013" month="May"/>
            <abstract>
              <t indent="0">This document analyzes TCP-based routing protocols, the Border Gateway Protocol (BGP), the Label Distribution Protocol (LDP), the Path Computation Element Communication Protocol (PCEP), and the Multicast Source Distribution Protocol (MSDP), according to guidelines set forth in Section 4.2 of "Keying and Authentication for            Routing Protocols Design Guidelines", RFC 6518.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="6952"/>
          <seriesInfo name="DOI" value="10.17487/RFC6952"/>
        </reference>
        <reference anchor="RFC7149" target="https://www.rfc-editor.org/info/rfc7149" quoteTitle="true" derivedAnchor="RFC7149">
          <front>
            <title>Software-Defined Networking: A Perspective from within a Service Provider Environment</title>
            <author initials="M." surname="Boucadair" fullname="M. Boucadair">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="C." surname="Jacquenet" fullname="C. Jacquenet">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2014" month="March"/>
            <abstract>
              <t indent="0">Software-Defined Networking (SDN) has been one of the major buzz words of the networking industry for the past couple of years.  And yet, no clear definition of what SDN actually covers has been broadly admitted so far.  This document aims to clarify the SDN landscape by providing a perspective on requirements, issues, and other considerations about SDN, as seen from within a service provider environment.</t>
              <t indent="0">It is not meant to endlessly discuss what SDN truly means but rather to suggest a functional taxonomy of the techniques that can be used under an SDN umbrella and to elaborate on the various pending issues the combined activation of such techniques inevitably raises.  As such, a definition of SDN is only mentioned for the sake of clarification.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="7149"/>
          <seriesInfo name="DOI" value="10.17487/RFC7149"/>
        </reference>
        <reference anchor="RFC7297" target="https://www.rfc-editor.org/info/rfc7297" quoteTitle="true" derivedAnchor="RFC7297">
          <front>
            <title>IP Connectivity Provisioning Profile (CPP)</title>
            <author initials="M." surname="Boucadair" fullname="M. Boucadair">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="C." surname="Jacquenet" fullname="C. Jacquenet">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="N." surname="Wang" fullname="N. Wang">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2014" month="July"/>
            <abstract>
              <t indent="0">This document describes the Connectivity Provisioning Profile (CPP) and proposes a CPP template to capture IP/MPLS connectivity requirements to be met within a service delivery context (e.g., Voice over IP or IP TV).  The CPP defines the set of IP transfer parameters to be supported by the underlying transport network together with a reachability scope and bandwidth/capacity needs.  Appropriate performance metrics, such as one-way delay or one-way delay variation, are used to characterize an IP transfer service.  Both global and restricted reachability scopes can be captured in the CPP.</t>
              <t indent="0">Such a generic CPP template is meant to (1) facilitate the automation of the service negotiation and activation procedures, thus accelerating service provisioning, (2) set (traffic) objectives of Traffic Engineering functions and service management functions, and (3) improve service and network management systems with 'decision- making' capabilities based upon negotiated/offered CPPs.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="7297"/>
          <seriesInfo name="DOI" value="10.17487/RFC7297"/>
        </reference>
        <reference anchor="RFC7426" target="https://www.rfc-editor.org/info/rfc7426" quoteTitle="true" derivedAnchor="RFC7426">
          <front>
            <title>Software-Defined Networking (SDN): Layers and Architecture Terminology</title>
            <author initials="E." surname="Haleplidis" fullname="E. Haleplidis" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="K." surname="Pentikousis" fullname="K. Pentikousis" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="S." surname="Denazis" fullname="S. Denazis">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="J." surname="Hadi Salim" fullname="J. Hadi Salim">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="D." surname="Meyer" fullname="D. Meyer">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="O." surname="Koufopavlou" fullname="O. Koufopavlou">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2015" month="January"/>
            <abstract>
              <t indent="0">Software-Defined Networking (SDN) refers to a new approach for network programmability, that is, the capacity to initialize, control, change, and manage network behavior dynamically via open interfaces.  SDN emphasizes the role of software in running networks through the introduction of an abstraction for the data forwarding plane and, by doing so, separates it from the control plane.  This separation allows faster innovation cycles at both planes as experience has already shown.  However, there is increasing confusion as to what exactly SDN is, what the layer structure is in an SDN architecture, and how layers interface with each other.  This document, a product of the IRTF Software-Defined Networking Research Group (SDNRG), addresses these questions and provides a concise reference for the SDN research community based on relevant peer-reviewed literature, the RFC series, and relevant documents by other standards organizations.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="7426"/>
          <seriesInfo name="DOI" value="10.17487/RFC7426"/>
        </reference>
        <reference anchor="RFC7880" target="https://www.rfc-editor.org/info/rfc7880" quoteTitle="true" derivedAnchor="RFC7880">
          <front>
            <title>Seamless Bidirectional Forwarding Detection (S-BFD)</title>
            <author initials="C." surname="Pignataro" fullname="C. Pignataro">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="D." surname="Ward" fullname="D. Ward">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="N." surname="Akiya" fullname="N. Akiya">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="M." surname="Bhatia" fullname="M. Bhatia">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="S." surname="Pallagatti" fullname="S. Pallagatti">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2016" month="July"/>
            <abstract>
              <t indent="0">This document defines Seamless Bidirectional Forwarding Detection (S-BFD), a simplified mechanism for using BFD with a large proportion of negotiation aspects eliminated, thus providing benefits such as quick provisioning, as well as improved control and flexibility for network nodes initiating path monitoring.</t>
              <t indent="0">This document updates RFC 5880.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="7880"/>
          <seriesInfo name="DOI" value="10.17487/RFC7880"/>
        </reference>
        <reference anchor="RFC8077" target="https://www.rfc-editor.org/info/rfc8077" quoteTitle="true" derivedAnchor="RFC8077">
          <front>
            <title>Pseudowire Setup and Maintenance Using the Label Distribution Protocol (LDP)</title>
            <author initials="L." surname="Martini" fullname="L. Martini" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="G." surname="Heron" fullname="G. Heron" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2017" month="February"/>
            <abstract>
              <t indent="0">Layer 2 services (such as Frame Relay, Asynchronous Transfer Mode, and Ethernet) can be emulated over an MPLS backbone by encapsulating the Layer 2 Protocol Data Units (PDUs) and then transmitting them over pseudowires (PWs).  It is also possible to use pseudowires to provide low-rate Time-Division Multiplexed and Synchronous Optical NETworking circuit emulation over an MPLS-enabled network.  This document specifies a protocol for establishing and maintaining the pseudowires, using extensions to the Label Distribution Protocol (LDP).  Procedures for encapsulating Layer 2 PDUs are specified in other documents.</t>
              <t indent="0">This document is a rewrite of RFC 4447 for publication as an Internet Standard.</t>
            </abstract>
          </front>
          <seriesInfo name="STD" value="84"/>
          <seriesInfo name="RFC" value="8077"/>
          <seriesInfo name="DOI" value="10.17487/RFC8077"/>
        </reference>
        <reference anchor="RFC8277" target="https://www.rfc-editor.org/info/rfc8277" quoteTitle="true" derivedAnchor="RFC8277">
          <front>
            <title>Using BGP to Bind MPLS Labels to Address Prefixes</title>
            <author initials="E." surname="Rosen" fullname="E. Rosen">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2017" month="October"/>
            <abstract>
              <t indent="0">This document specifies a set of procedures for using BGP to advertise that a specified router has bound a specified MPLS label (or a specified sequence of MPLS labels organized as a contiguous part of a label stack) to a specified address prefix.  This can be done by sending a BGP UPDATE message whose Network Layer Reachability Information field contains both the prefix and the MPLS label(s) and whose Next Hop field identifies the node at which said prefix is bound to said label(s).  This document obsoletes RFC 3107.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8277"/>
          <seriesInfo name="DOI" value="10.17487/RFC8277"/>
        </reference>
        <reference anchor="RFC8299" target="https://www.rfc-editor.org/info/rfc8299" quoteTitle="true" derivedAnchor="RFC8299">
          <front>
            <title>YANG Data Model for L3VPN Service Delivery</title>
            <author initials="Q." surname="Wu" fullname="Q. Wu" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="S." surname="Litkowski" fullname="S. Litkowski">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="L." surname="Tomotaki" fullname="L. Tomotaki">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="K." surname="Ogaki" fullname="K. Ogaki">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2018" month="January"/>
            <abstract>
              <t indent="0">This document defines a YANG data model that can be used for communication between customers and network operators and to deliver a Layer 3 provider-provisioned VPN service.  This document is limited to BGP PE-based VPNs as described in RFCs 4026, 4110, and 4364.  This model is intended to be instantiated at the management system to deliver the overall service.  It is not a configuration model to be used directly on network elements.  This model provides an abstracted view of the Layer 3 IP VPN service configuration components.  It will be up to the management system to take this model as input and use specific configuration models to configure the different network elements to deliver the service.  How the configuration of network elements is done is out of scope for this document.</t>
              <t indent="0">This document obsoletes RFC 8049; it replaces the unimplementable module in that RFC with a new module with the same name that is not backward compatible.  The changes are a series of small fixes to the YANG module and some clarifications to the text.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8299"/>
          <seriesInfo name="DOI" value="10.17487/RFC8299"/>
        </reference>
        <reference anchor="RFC8309" target="https://www.rfc-editor.org/info/rfc8309" quoteTitle="true" derivedAnchor="RFC8309">
          <front>
            <title>Service Models Explained</title>
            <author initials="Q." surname="Wu" fullname="Q. Wu">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="W." surname="Liu" fullname="W. Liu">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="A." surname="Farrel" fullname="A. Farrel">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2018" month="January"/>
            <abstract>
              <t indent="0">The IETF has produced many modules in the YANG modeling language. The majority of these modules are used to construct data models to model devices or monolithic functions.</t>
              <t indent="0">A small number of YANG modules have been defined to model services (for example, the Layer 3 Virtual Private Network Service Model (L3SM) produced by the L3SM working group and documented in RFC 8049).</t>
              <t indent="0">This document describes service models as used within the IETF and also shows where a service model might fit into a software-defined networking architecture.  Note that service models do not make any assumption of how a service is actually engineered and delivered for a customer; details of how network protocols and devices are engineered to deliver a service are captured in other modules that are not exposed through the interface between the customer and the provider.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8309"/>
          <seriesInfo name="DOI" value="10.17487/RFC8309"/>
        </reference>
        <reference anchor="RFC8340" target="https://www.rfc-editor.org/info/rfc8340" quoteTitle="true" derivedAnchor="RFC8340">
          <front>
            <title>YANG Tree Diagrams</title>
            <author initials="M." surname="Bjorklund" fullname="M. Bjorklund">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="L." surname="Berger" fullname="L. Berger" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2018" month="March"/>
            <abstract>
              <t indent="0">This document captures the current syntax used in YANG module tree diagrams.  The purpose of this document is to provide a single location for this definition.  This syntax may be updated from time to time based on the evolution of the YANG language.</t>
            </abstract>
          </front>
          <seriesInfo name="BCP" value="215"/>
          <seriesInfo name="RFC" value="8340"/>
          <seriesInfo name="DOI" value="10.17487/RFC8340"/>
        </reference>
        <reference anchor="RFC8342" target="https://www.rfc-editor.org/info/rfc8342" quoteTitle="true" derivedAnchor="RFC8342">
          <front>
            <title>Network Management Datastore Architecture (NMDA)</title>
            <author initials="M." surname="Bjorklund" fullname="M. Bjorklund">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="J." surname="Schoenwaelder" fullname="J. Schoenwaelder">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="P." surname="Shafer" fullname="P. Shafer">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="K." surname="Watsen" fullname="K. Watsen">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="R." surname="Wilton" fullname="R. Wilton">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2018" month="March"/>
            <abstract>
              <t indent="0">Datastores are a fundamental concept binding the data models written in the YANG data modeling language to network management protocols such as the Network Configuration Protocol (NETCONF) and RESTCONF. This document defines an architectural framework for datastores based on the experience gained with the initial simpler model, addressing requirements that were not well supported in the initial model.  This document updates RFC 7950.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8342"/>
          <seriesInfo name="DOI" value="10.17487/RFC8342"/>
        </reference>
        <reference anchor="RFC8345" target="https://www.rfc-editor.org/info/rfc8345" quoteTitle="true" derivedAnchor="RFC8345">
          <front>
            <title>A YANG Data Model for Network Topologies</title>
            <author initials="A." surname="Clemm" fullname="A. Clemm">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="J." surname="Medved" fullname="J. Medved">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="R." surname="Varga" fullname="R. Varga">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="N." surname="Bahadur" fullname="N. Bahadur">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="H." surname="Ananthakrishnan" fullname="H. Ananthakrishnan">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="X." surname="Liu" fullname="X. Liu">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2018" month="March"/>
            <abstract>
              <t indent="0">This document defines an abstract (generic, or base) YANG data model for network/service topologies and inventories.  The data model serves as a base model that is augmented with technology-specific details in other, more specific topology and inventory data models.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8345"/>
          <seriesInfo name="DOI" value="10.17487/RFC8345"/>
        </reference>
        <reference anchor="RFC8349" target="https://www.rfc-editor.org/info/rfc8349" quoteTitle="true" derivedAnchor="RFC8349">
          <front>
            <title>A YANG Data Model for Routing Management (NMDA Version)</title>
            <author initials="L." surname="Lhotka" fullname="L. Lhotka">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="A." surname="Lindem" fullname="A. Lindem">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="Y." surname="Qu" fullname="Y. Qu">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2018" month="March"/>
            <abstract>
              <t indent="0">This document specifies three YANG modules and one submodule. Together, they form the core routing data model that serves as a framework for configuring and managing a routing subsystem.  It is expected that these modules will be augmented by additional YANG modules defining data models for control-plane protocols, route filters, and other functions.  The core routing data model provides common building blocks for such extensions -- routes, Routing Information Bases (RIBs), and control-plane protocols.</t>
              <t indent="0">The YANG modules in this document conform to the Network Management Datastore Architecture (NMDA).  This document obsoletes RFC 8022.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8349"/>
          <seriesInfo name="DOI" value="10.17487/RFC8349"/>
        </reference>
        <reference anchor="RFC8453" target="https://www.rfc-editor.org/info/rfc8453" quoteTitle="true" derivedAnchor="RFC8453">
          <front>
            <title>Framework for Abstraction and Control of TE Networks (ACTN)</title>
            <author initials="D." surname="Ceccarelli" fullname="D. Ceccarelli" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="Y." surname="Lee" fullname="Y. Lee" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2018" month="August"/>
            <abstract>
              <t indent="0">Traffic Engineered (TE) networks have a variety of mechanisms to facilitate the separation of the data plane and control plane.  They also have a range of management and provisioning protocols to configure and activate network resources.  These mechanisms represent key technologies for enabling flexible and dynamic networking.  The term "Traffic Engineered network" refers to a network that uses any connection-oriented technology under the control of a distributed or centralized control plane to support dynamic provisioning of end-to- end connectivity.</t>
              <t indent="0">Abstraction of network resources is a technique that can be applied to a single network domain or across multiple domains to create a single virtualized network that is under the control of a network operator or the customer of the operator that actually owns the network resources.</t>
              <t indent="0">This document provides a framework for Abstraction and Control of TE Networks (ACTN) to support virtual network services and connectivity services.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8453"/>
          <seriesInfo name="DOI" value="10.17487/RFC8453"/>
        </reference>
        <reference anchor="RFC8512" target="https://www.rfc-editor.org/info/rfc8512" quoteTitle="true" derivedAnchor="RFC8512">
          <front>
            <title>A YANG Module for Network Address Translation (NAT) and Network Prefix Translation (NPT)</title>
            <author initials="M." surname="Boucadair" fullname="M. Boucadair" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="S." surname="Sivakumar" fullname="S. Sivakumar">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="C." surname="Jacquenet" fullname="C. Jacquenet">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="S." surname="Vinapamula" fullname="S. Vinapamula">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="Q." surname="Wu" fullname="Q. Wu">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2019" month="January"/>
            <abstract>
              <t indent="0">This document defines a YANG module for the Network Address Translation (NAT) function.</t>
              <t indent="0">Network Address Translation from IPv4 to IPv4 (NAT44), Network Address and Protocol Translation from IPv6 Clients to IPv4 Servers (NAT64), customer-side translator (CLAT), Stateless IP/ICMP Translation (SIIT), Explicit Address Mappings (EAM) for SIIT, IPv6-to-IPv6 Network Prefix Translation (NPTv6), and Destination NAT are covered in this document.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8512"/>
          <seriesInfo name="DOI" value="10.17487/RFC8512"/>
        </reference>
        <reference anchor="RFC8633" target="https://www.rfc-editor.org/info/rfc8633" quoteTitle="true" derivedAnchor="RFC8633">
          <front>
            <title>Network Time Protocol Best Current Practices</title>
            <author initials="D." surname="Reilly" fullname="D. Reilly">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="H." surname="Stenn" fullname="H. Stenn">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="D." surname="Sibold" fullname="D. Sibold">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2019" month="July"/>
            <abstract>
              <t indent="0">The Network Time Protocol (NTP) is one of the oldest protocols on the Internet and has been widely used since its initial publication. This document is a collection of best practices for the general operation of NTP servers and clients on the Internet.  It includes recommendations for the stable, accurate, and secure operation of NTP infrastructure.  This document is targeted at NTP version 4 as described in RFC 5905.</t>
            </abstract>
          </front>
          <seriesInfo name="BCP" value="223"/>
          <seriesInfo name="RFC" value="8633"/>
          <seriesInfo name="DOI" value="10.17487/RFC8633"/>
        </reference>
        <reference anchor="RFC8695" target="https://www.rfc-editor.org/info/rfc8695" quoteTitle="true" derivedAnchor="RFC8695">
          <front>
            <title>A YANG Data Model for the Routing Information Protocol (RIP)</title>
            <author initials="X." surname="Liu" fullname="X. Liu">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="P." surname="Sarda" fullname="P. Sarda">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="V." surname="Choudhary" fullname="V. Choudhary">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2020" month="February"/>
            <abstract>
              <t indent="0">This document describes a data model for the management of the Routing Information Protocol (RIP).  Both RIP version 2 and RIPng are covered.  The data model includes definitions for configuration, operational state, and Remote Procedure Calls (RPCs).</t>
              <t indent="0">The YANG data model in this document conforms to the Network Management Datastore Architecture (NMDA).</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8695"/>
          <seriesInfo name="DOI" value="10.17487/RFC8695"/>
        </reference>
        <reference anchor="RFC8792" target="https://www.rfc-editor.org/info/rfc8792" quoteTitle="true" derivedAnchor="RFC8792">
          <front>
            <title>Handling Long Lines in Content of Internet-Drafts and RFCs</title>
            <author initials="K." surname="Watsen" fullname="K. Watsen">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="E." surname="Auerswald" fullname="E. Auerswald">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="A." surname="Farrel" fullname="A. Farrel">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="Q." surname="Wu" fullname="Q. Wu">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2020" month="June"/>
            <abstract>
              <t indent="0">This document defines two strategies for handling long lines in width-bounded text content.  One strategy, called the "single backslash" strategy, is based on the historical use of a single backslash ('\') character to indicate where line-folding has occurred, with the continuation occurring with the first character that is not a space character (' ') on the next line.  The second strategy, called the "double backslash" strategy, extends the first strategy by adding a second backslash character to identify where the continuation begins and is thereby able to handle cases not supported by the first strategy.  Both strategies use a self-describing header enabling automated reconstitution of the original content.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8792"/>
          <seriesInfo name="DOI" value="10.17487/RFC8792"/>
        </reference>
        <reference anchor="RFC8915" target="https://www.rfc-editor.org/info/rfc8915" quoteTitle="true" derivedAnchor="RFC8915">
          <front>
            <title>Network Time Security for the Network Time Protocol</title>
            <author initials="D." surname="Franke" fullname="D. Franke">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="D." surname="Sibold" fullname="D. Sibold">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="K." surname="Teichel" fullname="K. Teichel">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="M." surname="Dansarie" fullname="M. Dansarie">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="R." surname="Sundblad" fullname="R. Sundblad">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2020" month="September"/>
            <abstract>
              <t indent="0">This memo specifies Network Time Security (NTS), a mechanism for using Transport Layer Security (TLS) and Authenticated Encryption with Associated Data (AEAD) to provide cryptographic security for the client-server mode of the Network Time Protocol (NTP). </t>
              <t indent="0">NTS is structured as a suite of two loosely coupled sub-protocols. The first (NTS Key Establishment (NTS-KE)) handles initial authentication and key establishment over TLS. The second (NTS Extension Fields for NTPv4) handles encryption and authentication during NTP time synchronization via extension fields in the NTP packets, and holds all required state only on the client via opaque cookies.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8915"/>
          <seriesInfo name="DOI" value="10.17487/RFC8915"/>
        </reference>
        <reference anchor="RFC8969" target="https://www.rfc-editor.org/info/rfc8969" quoteTitle="true" derivedAnchor="RFC8969">
          <front>
            <title>A Framework for Automating Service and Network Management with YANG</title>
            <author initials="Q." surname="Wu" fullname="Q. Wu" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="M." surname="Boucadair" fullname="M. Boucadair" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="D." surname="Lopez" fullname="D. Lopez">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="C." surname="Xie" fullname="C. Xie">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="L." surname="Geng" fullname="L. Geng">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2021" month="January"/>
            <abstract>
              <t indent="0">Data models provide a programmatic approach to represent services and networks. Concretely, they can be used to derive configuration information for network and service components, and state information that will be monitored and tracked.  Data models can be used during the service and network management life cycle (e.g., service instantiation, service provisioning, service optimization, service monitoring, service diagnosing, and service assurance).  Data models are also instrumental in the automation of network management, and they can provide closed-loop control for adaptive and deterministic service creation, delivery, and maintenance.</t>
              <t indent="0">This document describes a framework for service and network management automation that takes advantage of YANG modeling technologies. This framework is drawn from a network operator perspective irrespective of the origin of a data model; thus, it can accommodate YANG modules that are developed outside the IETF.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8969"/>
          <seriesInfo name="DOI" value="10.17487/RFC8969"/>
        </reference>
        <reference anchor="RFC9136" target="https://www.rfc-editor.org/info/rfc9136" quoteTitle="true" derivedAnchor="RFC9136">
          <front>
            <title>IP Prefix Advertisement in Ethernet VPN (EVPN)</title>
            <author initials="J." surname="Rabadan" fullname="J. Rabadan" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="W." surname="Henderickx" fullname="W. Henderickx">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="J." surname="Drake" fullname="J. Drake">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="W." surname="Lin" fullname="W. Lin">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="A." surname="Sajassi" fullname="A. Sajassi">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2021" month="October"/>
            <abstract>
              <t indent="0">The BGP MPLS-based Ethernet VPN (EVPN) (RFC 7432) mechanism provides a flexible control plane that allows intra-subnet connectivity in an MPLS and/or Network Virtualization Overlay (NVO) (RFC 7365) network. In some networks, there is also a need for dynamic and efficient inter-subnet connectivity across Tenant Systems and end devices that can be physical or virtual and do not necessarily participate in dynamic routing protocols. This document defines a new EVPN route type for the advertisement of IP prefixes and explains some use-case examples where this new route type is used.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="9136"/>
          <seriesInfo name="DOI" value="10.17487/RFC9136"/>
        </reference>
        <reference anchor="YANG-Composed-VPN" quoteTitle="true" target="https://datatracker.ietf.org/doc/html/draft-evenwu-opsawg-yang-composed-vpn-03" derivedAnchor="YANG-Composed-VPN">
          <front>
            <title>YANG Data Model for Composed VPN Service Delivery</title>
            <author initials="R" surname="Even" fullname="Roni Even">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="B" surname="Wu" fullname="Bo Wu">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="Q" surname="Wu" fullname="Qin Wu">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="Y" surname="Cheng" fullname="Ying Cheng">
              <organization showOnFrontPage="true"/>
            </author>
            <date month="March" day="8" year="2019"/>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-evenwu-opsawg-yang-composed-vpn-03"/>
          <refcontent>Work in Progress</refcontent>
        </reference>
        <reference anchor="YANG-SAPs" quoteTitle="true" target="https://datatracker.ietf.org/doc/html/draft-ietf-opsawg-sap-00" derivedAnchor="YANG-SAPs">
          <front>
            <title>A Network YANG Model for Service Attachment Points</title>
            <author initials="O" surname="Gonzalez de Dios" fullname="Oscar Gonzalez de Dios">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="S" surname="Barguil" fullname="Samier Barguil">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="Q" surname="Wu" fullname="Qin Wu">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="M" surname="Boucadair" fullname="Mohamed Boucadair">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="V" surname="Lopez" fullname="Victor Lopez">
              <organization showOnFrontPage="true"/>
            </author>
            <date month="January" day="25" year="2022"/>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-ietf-opsawg-sap-00"/>
          <refcontent>Work in Progress</refcontent>
        </reference>
      </references>
    </references>
    <section anchor="examples" numbered="true" toc="include" removeInRFC="false" pn="section-appendix.a">
      <name slugifiedName="name-l3vpn-examples">L3VPN Examples</name>
      <section anchor="mbh-vpn" numbered="true" toc="include" removeInRFC="false" pn="section-appendix.a.1">
        <name slugifiedName="name-4g-vpn-provisioning-example">4G VPN Provisioning Example</name>
        <t indent="0" pn="section-appendix.a.1-1">L3VPNs are widely used to deploy 3G/4G, fixed, and enterprise
        services, mainly because several traffic discrimination policies can be
        applied within the network to deliver to the mobile customers a
        service that meets the SLA requirements.</t>
        <t indent="0" pn="section-appendix.a.1-2">Typically, and as shown in <xref target="vpn-service-mbh" format="default" sectionFormat="of" derivedContent="Figure 31"/>,
        an eNodeB (CE) is directly connected to the access routers
        of the mobile backhaul and their logical interfaces (one or many,
        according to the service type) are configured in a VPN that transports
        the packets to the mobile core platforms. In this example, a
        'vpn-node' is created with two 'vpn-network-accesses'.</t>
        <figure anchor="vpn-service-mbh" align="left" suppress-title="false" pn="figure-31">
          <name slugifiedName="name-mobile-backhaul-example">Mobile Backhaul Example</name>
          <artwork align="center" name="" type="ascii-art" alt="" pn="section-appendix.a.1-3.1">
+-------------+                  +------------------+
|             |                  | PE               |
|             |                  |  198.51.100.1    |
|   eNodeB    |&gt;--------/-------&gt;|...........       |
|             |          vlan 1  |          |       |
|             |&gt;--------/-------&gt;|......    |       |
|             |          vlan 2  |     |    |       |
|             | Direct           |  +-------------+ |
+-------------+ Routing          |  | vpn-node-id | |
                                 |  | 44          | |
                                 |  +-------------+ |
                                 |                  |
                                 +------------------+
</artwork>
        </figure>
        <t indent="0" pn="section-appendix.a.1-4">To create an L3VPN service using the L3NM, the following steps can
        be followed.</t>
        <t indent="0" pn="section-appendix.a.1-5">First, create the 4G VPN service (<xref target="service-mbh2" format="default" sectionFormat="of" derivedContent="Figure 32"/>).</t>
        <figure anchor="service-mbh2" align="left" suppress-title="false" pn="figure-32">
          <name slugifiedName="name-create-vpn-service">Create VPN Service</name>
          <sourcecode name="" type="" markers="false" pn="section-appendix.a.1-6.1">
POST: /restconf/data/ietf-l3vpn-ntw:l3vpn-ntw/vpn-services
Host: example.com
Content-Type: application/yang-data+json

{
 "ietf-l3vpn-ntw:vpn-services": {
   "vpn-service": [
     {
       "vpn-id": "4G",
       "vpn-description": "VPN to deploy 4G services",
       "customer-name": "mycustomer",
       "vpn-service-topology": "custom",
       "vpn-instance-profiles": {
         "vpn-instance-profile": [
           {
             "profile-id": "simple-profile",
             "local-as": 65550,
             "rd": "0:65550:1",
             "address-family": [
               {
                 "address-family": "ietf-vpn-common:dual-stack",
                 "vpn-targets": {
                   "vpn-target": [
                     {
                       "id": 1,
                       "route-targets": [
                         {
                           "route-target": "0:65550:1"
                         }
                       ],
                       "route-target-type": "both"
                     }
                   ]
                 }
               }
             ]
           }
         ]
       }
     }
   ]
 }
}
</sourcecode>
        </figure>
        <t indent="0" pn="section-appendix.a.1-7">Second, create a VPN node, as depicted in <xref target="service-mbh3" format="default" sectionFormat="of" derivedContent="Figure 33"/>. In this type of service, the VPN node
        is equivalent to VRF configured in the physical device
        ('ne-id'=198.51.100.1).  NOTE: '\' line wrapping in Figures <xref target="service-mbh3" format="counter" sectionFormat="of" derivedContent="33"/> and <xref target="service-mbh4" format="counter" sectionFormat="of" derivedContent="34"/> is implemented per <xref target="RFC8792" format="default" sectionFormat="of" derivedContent="RFC8792"/>.</t>
        <figure anchor="service-mbh3" align="left" suppress-title="false" pn="figure-33">
          <name slugifiedName="name-create-vpn-node">Create VPN Node</name>
          <sourcecode name="" type="" markers="false" pn="section-appendix.a.1-8.1">POST: /restconf/data/ietf-l3vpn-ntw:l3vpn-ntw/\
      vpn-services/vpn-service=4G
Host: example.com
Content-Type: application/yang-data+json

{
  "ietf-l3vpn-ntw:vpn-nodes": {
    "vpn-node": [
      {
        "vpn-node-id": "44",
        "ne-id": "198.51.100.1",
        "active-vpn-instance-profiles": {
          "vpn-instance-profile": [
            {
              "profile-id": "simple-profile"
            }
          ]
        }
      }
    ]
  }
}
</sourcecode>
        </figure>
        <t indent="0" pn="section-appendix.a.1-9">Finally, two VPN network accesses are created using the same
        physical port ('interface-id'=1/1/1). Each 'vpn-network-access' has a
        particular VLAN interface (1,2): "SYNC" and "DATA" (<xref target="service-mbh4" format="default" sectionFormat="of" derivedContent="Figure 34"/>). These interfaces differentiate the traffic between them.</t>
        <figure anchor="service-mbh4" align="left" suppress-title="false" pn="figure-34">
          <name slugifiedName="name-create-vpn-network-access">Create VPN Network Access</name>
          <sourcecode name="" type="" markers="false" pn="section-appendix.a.1-10.1">POST: /restconf/data/ietf-l3vpn-ntw:l3vpn-ntw/\
      vpn-services/vpn-service=4G/vpn-nodes/vpn-node=44
content-type: application/yang-data+json

{
  "ietf-l3vpn-ntw:vpn-network-accesses": {
    "vpn-network-access": [
      {
        "id": "1/1/1.1",
        "interface-id": "1/1/1",
        "description": "Interface SYNC to eNODE-B",
        "vpn-network-access-type": "ietf-vpn-common:point-to-point",
        "vpn-instance-profile": "simple-profile",
        "status": {
          "admin-status": {
            "status": "ietf-vpn-common:admin-up"
          }
        },
        "connection": {
          "encapsulation": {
            "type": "ietf-vpn-common:dot1q",
            "dot1q": {
              "cvlan-id": 1
            }
          }
        },
        "ip-connection": {
          "ipv4": {
            "local-address": "192.0.2.1",
            "prefix-length": 30,
            "address-allocation-type": "static-address",
            "static-addresses": {
              "primary-address": "1",
              "address": [
                {
                  "address-id": "1",
                  "customer-address": "192.0.2.2"
                }
              ]
            }
          },
          "ipv6": {
            "local-address": "2001:db8::1",
            "prefix-length": 64,
            "address-allocation-type": "static-address",
            "primary-address": "1",
            "address": [
              {
                "address-id": "1",
                "customer-address": "2001:db8::2"
              }
            ]
          }
        },
        "routing-protocols": {
          "routing-protocol": [
            {
              "id": "1",
              "type": "ietf-vpn-common:direct"
            }
          ]
        }
      },
      {
        "id": "1/1/1.2",
        "interface-id": "1/1/1",
        "description": "Interface DATA to eNODE-B",
        "vpn-network-access-type": "ietf-vpn-common:point-to-point",
        "vpn-instance-profile": "simple-profile",
        "status": {
          "admin-status": {
            "status": "ietf-vpn-common:admin-up"
          }
        },
        "connection": {
          "encapsulation": {
            "type": "ietf-vpn-common:dot1q",
            "dot1q": {
              "cvlan-id": 2
            }
          }
        },
        "ip-connection": {
          "ipv4": {
            "local-address": "192.0.2.1",
            "prefix-length": 30,
            "address-allocation-type": "static-address",
            "static-addresses": {
              "primary-address": "1",
              "address": [
                {
                  "address-id": "1",
                  "customer-address": "192.0.2.2"
                }
              ]
            }
          },
          "ipv6": {
            "local-address": "2001:db8::1",
            "prefix-length": 64,
            "address-allocation-type": "static-address",
            "primary-address": "1",
            "address": [
              {
                "address-id": "1",
                "customer-address": "2001:db8::2"
              }
            ]
          }
        },
        "routing-protocols": {
          "routing-protocol": [
            {
              "id": "1",
              "type": "ietf-vpn-common:direct"
            }
          ]
        }
      }
    ]
  }
}
</sourcecode>
        </figure>
      </section>
      <section anchor="loop" numbered="true" toc="include" removeInRFC="false" pn="section-appendix.a.2">
        <name slugifiedName="name-loopback-interface">Loopback Interface</name>
        <t indent="0" pn="section-appendix.a.2-1">An example of a loopback interface is depicted in <xref target="loopback" format="default" sectionFormat="of" derivedContent="Figure 35"/>.</t>
        <figure anchor="loopback" align="left" suppress-title="false" pn="figure-35">
          <name slugifiedName="name-vpn-network-access-with-a-l">VPN Network Access with a Loopback Interface (Message Body)</name>
          <sourcecode name="" type="json" markers="false" pn="section-appendix.a.2-2.1">{
  "ietf-l3vpn-ntw:vpn-network-accesses": {
    "vpn-network-access": [
      {
        "id": "vpn-access-loopback",
        "interface-id": "Loopback1",
        "description": "An example of a loopback interface.",
        "vpn-network-access-type": "ietf-vpn-common:loopback",
        "status": {
          "admin-status": {
            "status": "ietf-vpn-common:admin-up"
          }
        },
        "ip-connection": {
          "ipv6": {
            "local-address": "2001:db8::4",
            "prefix-length": 128
          }
        }
      }
    ]
  }
}
</sourcecode>
        </figure>
      </section>
      <section anchor="app-ex" numbered="true" toc="include" removeInRFC="false" pn="section-appendix.a.3">
        <name slugifiedName="name-overriding-vpn-instance-pro">Overriding VPN Instance Profile Parameters</name>
        <t indent="0" pn="section-appendix.a.3-1"><xref target="override-ex" format="default" sectionFormat="of" derivedContent="Figure 36"/> shows a simplified example to
        illustrate how some information that is provided at the VPN service
        level (particularly as part of the 'vpn-instance-profiles') can be
        overridden by information configured at the VPN node level. In this
        example, PE3 and PE4 inherit the 'vpn-instance-profiles' parameters
        that are specified at the VPN service level, but PE1 and PE2 are
        provided with "maximum-routes" values at the VPN node level that
        override the values that are specified at the VPN service level.</t>
        <figure anchor="override-ex" align="left" suppress-title="false" pn="figure-36">
          <name slugifiedName="name-vpn-instance-profile-exampl">VPN Instance Profile Example (Message Body)</name>
          <sourcecode name="" type="json" markers="false" pn="section-appendix.a.3-2.1">{
  "ietf-l3vpn-ntw:vpn-services": {
    "vpn-service": [
      {
        "vpn-id": "override-example",
        "vpn-service-topology": "ietf-vpn-common:hub-spoke",
        "vpn-instance-profiles": {
          "vpn-instance-profile": [
            {
              "profile-id": "HUB",
              "role": "ietf-vpn-common:hub-role",
              "local-as": 64510,
              "rd-suffix": 1001,
              "address-family": [
                {
                  "address-family": "ietf-vpn-common:dual-stack",
                  "maximum-routes": [
                    {
                      "protocol": "ietf-vpn-common:any",
                      "maximum-routes": 100
                    }
                  ]
                }
              ]
            },
            {
              "profile-id": "SPOKE",
              "role": "ietf-vpn-common:spoke-role",
              "local-as": 64510,
              "address-family": [
                {
                  "address-family": "ietf-vpn-common:dual-stack",
                  "maximum-routes": [
                    {
                      "protocol": "ietf-vpn-common:any",
                      "maximum-routes": 1000
                    }
                  ]
                }
              ]
            }
          ]
        },
        "vpn-nodes": {
          "vpn-node": [
            {
              "vpn-node-id": "PE1",
              "ne-id": "pe1",
              "router-id": "198.51.100.1",
              "active-vpn-instance-profiles": {
                "vpn-instance-profile": [
                  {
                    "profile-id": "HUB",
                    "rd": "1:198.51.100.1:1001",
                    "address-family": [
                      {
                        "address-family":
                                 "ietf-vpn-common:dual-stack",
                        "maximum-routes": [
                          {
                            "protocol": "ietf-vpn-common:any",
                            "maximum-routes": 10
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            },
            {
              "vpn-node-id": "PE2",
              "ne-id": "pe2",
              "router-id": "198.51.100.2",
              "active-vpn-instance-profiles": {
                "vpn-instance-profile": [
                  {
                    "profile-id": "SPOKE",
                    "address-family": [
                      {
                        "address-family":
                                 "ietf-vpn-common:dual-stack",
                        "maximum-routes": [
                          {
                            "protocol": "ietf-vpn-common:any",
                            "maximum-routes": 100
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            },
            {
              "vpn-node-id": "PE3",
              "ne-id": "pe3",
              "router-id": "198.51.100.3",
              "active-vpn-instance-profiles": {
                "vpn-instance-profile": [
                  {
                    "profile-id": "SPOKE"
                  }
                ]
              }
            },
            {
              "vpn-node-id": "PE4",
              "ne-id": "pe4",
              "router-id": "198.51.100.4",
              "active-vpn-instance-profiles": {
                "vpn-instance-profile": [
                  {
                    "profile-id": "SPOKE"
                  }
                ]
              }
            }
          ]
        }
      }
    ]
  }
}
</sourcecode>
        </figure>
      </section>
      <section anchor="multicast_vpn_example" numbered="true" toc="include" removeInRFC="false" pn="section-appendix.a.4">
        <name slugifiedName="name-multicast-vpn-provisioning-">Multicast VPN Provisioning Example</name>
        <t indent="0" pn="section-appendix.a.4-1">IPTV is mainly distributed through multicast over the LANs. In the
        following example, PIM - Sparse Mode (PIM-SM) is enabled and functional between the PE and
        the CE. The PE receives multicast traffic from a CE that is directly
        connected to the multicast source. The signaling between the PE and the CE is
        achieved using BGP. Also, the RP is statically configured for a multicast
        group.</t>
        <figure anchor="service-mc1" align="left" suppress-title="false" pn="figure-37">
          <name slugifiedName="name-multicast-l3vpn-service-exa">Multicast L3VPN Service Example</name>
          <artwork align="center" name="" type="ascii-art" alt="" pn="section-appendix.a.4-2.1">
+-----------+   +------+     +------+    +-----------+
| Multicast |---|  CE  |--/--|  PE  |----|  Backbone |
|  source   |   +------+     +------+    |   IP/MPLS |
+-----------+                            +-----------+
</artwork>
        </figure>
        <t indent="0" pn="section-appendix.a.4-3"><xref target="service-mc2" format="default" sectionFormat="of" derivedContent="Figure 38"/> illustrates how to configure a
        multicast L3VPN service using the L3NM.</t>
        <t indent="0" pn="section-appendix.a.4-4">First, the multicast service is created together with a generic VPN
        instance profile (see the excerpt of the request message body shown in
        <xref target="service-mc2" format="default" sectionFormat="of" derivedContent="Figure 38"/>).</t>
        <figure anchor="service-mc2" align="left" suppress-title="false" pn="figure-38">
          <name slugifiedName="name-create-multicast-vpn-servic">Create Multicast VPN Service (Excerpt of the Message Request Body)</name>
          <sourcecode name="" type="json" markers="false" pn="section-appendix.a.4-5.1">{
  "ietf-l3vpn-ntw:vpn-services": {
    "vpn-service": [
      {
        "vpn-id": "Multicast-IPTV",
        "vpn-description": "Multicast IPTV VPN service",
        "customer-name": "a-name",
        "vpn-service-topology": "ietf-vpn-common:hub-spoke",
        "vpn-instance-profiles": {
          "vpn-instance-profile": [
            {
              "profile-id": "multicast",
              "role": "ietf-vpn-common:hub-role",
              "local-as": 65536,
              "multicast": {
                "rp": {
                  "rp-group-mappings": {
                    "rp-group-mapping": [
                      {
                        "id": 1,
                        "rp-address": "203.0.113.17",
                        "groups": {
                          "group": [
                            {
                              "id": 1,
                              "group-address": "239.130.0.0/15"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "rp-discovery": {
                    "rp-discovery-type": "ietf-vpn-common:static-rp"
                  }
                }
              }
            }
          ]
        }
      }
    ]
  }
}
</sourcecode>
        </figure>
        <t indent="0" pn="section-appendix.a.4-6">Then, the VPN nodes are created (see the excerpt of the request
        message body shown in <xref target="service-mc3" format="default" sectionFormat="of" derivedContent="Figure 39"/>). In this
        example, the VPN node will represent VRF configured in the physical
        device.</t>
        <figure anchor="service-mc3" align="left" suppress-title="false" pn="figure-39">
          <name slugifiedName="name-create-multicast-vpn-node-e">Create Multicast VPN Node (Excerpt of the Message Request Body)</name>
          <sourcecode name="" type="json" markers="false" pn="section-appendix.a.4-7.1">{
  "ietf-l3vpn-ntw:vpn-node": [
    {
      "vpn-node-id": "500003105",
      "description": "VRF-IPTV-MULTICAST",
      "ne-id": "198.51.100.10",
      "router-id": "198.51.100.10",
      "active-vpn-instance-profiles": {
        "vpn-instance-profile": [
          {
            "profile-id": "multicast",
            "rd": "65536:31050202"
          }
        ]
      }
    }
  ]
}
</sourcecode>
        </figure>
        <t indent="0" pn="section-appendix.a.4-8">Finally, create the VPN network access with multicast enabled (see
        the excerpt of the request message body shown in <xref target="service-mc4" format="default" sectionFormat="of" derivedContent="Figure 40"/>).</t>
        <figure anchor="service-mc4" align="left" suppress-title="false" pn="figure-40">
          <name slugifiedName="name-create-vpn-network-access-e">Create VPN Network Access (Excerpt of the Message Request Body)</name>
          <sourcecode name="" type="json" markers="false" pn="section-appendix.a.4-9.1">{
  "ietf-l3vpn-ntw:vpn-network-access": {
    "id": "1/1/1",
    "description": "Connected-to-source",
    "vpn-network-access-type": "ietf-vpn-common:point-to-point",
    "vpn-instance-profile": "multicast",
    "status": {
      "admin-status": {
        "status": "ietf-vpn-common:admin-up"
      },
      "ip-connection": {
        "ipv4": {
          "local-address": "203.0.113.1",
          "prefix-length": 30,
          "address-allocation-type": "static-address",
          "static-addresses": {
            "primary-address": "1",
            "address": [
              {
                "address-id": "1",
                "customer-address": "203.0.113.2"
              }
            ]
          }
        }
      },
      "routing-protocols": {
        "routing-protocol": [
          {
            "id": "1",
            "type": "ietf-vpn-common:bgp-routing",
            "bgp": {
              "description": "Connected to CE",
              "peer-as": "65537",
              "address-family": "ietf-vpn-common:ipv4",
              "neighbor": "203.0.113.2"
            }
          }
        ]
      },
      "service": {
        "pe-to-ce-bandwidth": "100000000",
        "ce-to-pe-bandwidth": "100000000",
        "mtu": 1500,
        "multicast": {
          "access-type": "source-only",
          "address-family": "ietf-vpn-common:ipv4",
          "protocol-type": "router",
          "pim": {
            "hello-interval": 30,
            "status": {
              "admin-status": {
                "status": "ietf-vpn-common:admin-up"
              }
            }
          }
        }
      }
    }
  }
}
</sourcecode>
        </figure>
      </section>
    </section>
    <section numbered="false" toc="include" removeInRFC="false" pn="section-appendix.b">
      <name slugifiedName="name-acknowledgements">Acknowledgements</name>
      <t indent="0" pn="section-appendix.b-1">During the discussions of this work, helpful comments, suggestions,
      and reviews were received from (listed alphabetically) <contact fullname="Raul Arco"/>,
      <contact fullname="Miguel Cros Cecilia"/>, <contact fullname="Joe Clarke"/>, <contact fullname="Dhruv Dhody"/>, <contact fullname="Adrian Farrel"/>, <contact fullname="Roque Gagliano"/>, <contact fullname="Christian Jacquenet"/>, <contact fullname="Kireeti Kompella"/>, <contact fullname="Julian Lucek"/>, <contact fullname="Greg Mirsky"/>, and <contact fullname="Tom Petch"/>. Many thanks to them. Thanks to <contact fullname="Philip Eardley"/> for
      the review of an early draft version of the document.</t>
      <t indent="0" pn="section-appendix.b-2"><contact fullname="Daniel King"/>, <contact fullname="Daniel Voyer"/>, <contact fullname="Luay Jalil"/>, and <contact fullname="Stephane Litkowski"/>
      contributed to early draft versions of this document. Many thanks to <contact fullname="Robert Wilton"/> for the AD review. Thanks to <contact fullname="Andrew Malis"/> for the routing directorate
      review, <contact fullname="Rifaat Shekh-Yusef"/> for the security directorate review, <contact fullname="Qin Wu"/>
      for the opsdir review, and <contact fullname="Pete Resnick"/> for the genart directorate
      review. Thanks to <contact fullname="Michael Scharf"/> for the discussion on the TCP-AO. Thanks to <contact fullname="Martin Duke"/>, <contact fullname="Lars Eggert"/>, <contact fullname="Zaheduzzaman Sarker"/>, <contact fullname="Roman Danyliw"/>, <contact fullname="Erik Kline"/>, <contact fullname="Benjamin Kaduk"/>, <contact fullname="Francesca Palombini"/>,
      and <contact fullname="Éric Vyncke"/> for the IESG review.</t>
      <t indent="0" pn="section-appendix.b-3">This work was supported in part by the European Commission-funded
      H2020-ICT-2016-2 METRO-HAUL project (G.A. 761727) and Horizon 2020
      Secured autonomic traffic management for a Tera of SDN flows (Teraflow)
      project (G.A. 101015857).</t>
    </section>
    <section anchor="Contributors" numbered="false" toc="include" removeInRFC="false" pn="section-appendix.c">
      <name slugifiedName="name-contributors">Contributors</name>
      <contact fullname="Victor Lopez">
        <organization showOnFrontPage="true">Nokia</organization>
        <address>
          <postal>
            <street/>
            <city>Madrid</city>
            <region/>
            <code/>
            <country>Spain</country>
          </postal>
          <email>victor.lopez@nokia.com</email>
        </address>
      </contact>
      <contact fullname="Qin Wu">
        <organization showOnFrontPage="true">Huawei</organization>
        <address>
          <email>bill.wu@huawei.com</email>
        </address>
      </contact>
      <contact fullname="Manuel Lopez">
        <organization showOnFrontPage="true">Vodafone</organization>
        <address>
          <postal>
            <country>Spain</country>
          </postal>
          <email>manuel-julian.lopez@vodafone.com</email>
        </address>
      </contact>
      <contact fullname="Lucia Oliva Ballega">
        <organization showOnFrontPage="true">Telefonica</organization>
        <address>
          <email>lucia.olivaballega.ext@telefonica.com</email>
        </address>
      </contact>
      <contact fullname="Erez Segev">
        <organization showOnFrontPage="true">Ribbon Communications</organization>
        <address>
          <email>erez.segev@rbbn.com</email>
        </address>
      </contact>
      <contact fullname="Paul Sherratt">
        <organization showOnFrontPage="true">Gamma Telecom</organization>
        <address>
          <email>paul.sherratt@gamma.co.uk</email>
        </address>
      </contact>
    </section>
    <section anchor="authors-addresses" numbered="false" removeInRFC="false" toc="include" pn="section-appendix.d">
      <name slugifiedName="name-authors-addresses">Authors' Addresses</name>
      <author fullname="Samier Barguil" initials="S." surname="Barguil">
        <organization showOnFrontPage="true">Telefonica</organization>
        <address>
          <postal>
            <city>Madrid</city>
            <country>Spain</country>
          </postal>
          <email>samier.barguilgiraldo.ext@telefonica.com</email>
        </address>
      </author>
      <author fullname="Oscar Gonzalez de Dios" initials="O." role="editor" surname="Gonzalez de Dios">
        <organization showOnFrontPage="true">Telefonica</organization>
        <address>
          <postal>
            <city>Madrid</city>
            <country>Spain</country>
          </postal>
          <email>oscar.gonzalezdedios@telefonica.com</email>
        </address>
      </author>
      <author fullname="Mohamed Boucadair" initials="M." role="editor" surname="Boucadair">
        <organization showOnFrontPage="true">Orange</organization>
        <address>
          <postal>
            <city>Rennes</city>
            <code>35000</code>
            <country>France</country>
          </postal>
          <email>mohamed.boucadair@orange.com</email>
        </address>
      </author>
      <author fullname="Luis Angel Munoz" initials="L." surname="Munoz">
        <organization showOnFrontPage="true">Vodafone</organization>
        <address>
          <postal>
            <country>Spain</country>
          </postal>
          <email>luis-angel.munoz@vodafone.com</email>
        </address>
      </author>
      <author fullname="Alejandro Aguado" initials="A." surname="Aguado">
        <organization showOnFrontPage="true">Nokia</organization>
        <address>
          <postal>
            <city>Madrid</city>
            <country>Spain</country>
          </postal>
          <email>alejandro.aguado_martin@nokia.com</email>
        </address>
      </author>
    </section>
  </back>
</rfc>
