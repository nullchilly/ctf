<?xml version='1.0' encoding='utf-8'?>
<rfc xmlns:xi="http://www.w3.org/2001/XInclude" version="3" category="std" consensus="true" docName="draft-ietf-cdni-uri-signing-26" indexInclude="true" ipr="trust200902" number="9246" prepTime="2022-06-14T18:30:03" scripts="Common,Latin" sortRefs="true" submissionType="IETF" symRefs="true" tocDepth="4" tocInclude="true" xml:lang="en">
  <link href="https://datatracker.ietf.org/doc/draft-ietf-cdni-uri-signing-26" rel="prev"/>
  <link href="https://dx.doi.org/10.17487/rfc9246" rel="alternate"/>
  <link href="urn:issn:2070-1721" rel="alternate"/>
  <front>
    <title abbrev="CDNI URI Signing">URI Signing for Content Delivery Network Interconnection (CDNI)</title>
    <seriesInfo name="RFC" value="9246" stream="IETF"/>
    <author fullname="Ray van Brandenburg" initials="R" surname="van Brandenburg">
      <organization showOnFrontPage="true">Tiledmedia</organization>
      <address>
        <postal>
          <street>Anna van Buerenplein 1</street>
          <city>Den Haag</city>
          <region/>
          <code>2595DA</code>
          <country>Netherlands</country>
        </postal>
        <phone>+31 88 866 7000</phone>
        <email>ray@tiledmedia.com</email>
      </address>
    </author>
    <author fullname="Kent Leung" initials="K" surname="Leung">
      <address>
        <email>mail4kentl@gmail.com</email>
      </address>
    </author>
    <author fullname="Phil Sorber" initials="P" surname="Sorber">
      <organization showOnFrontPage="true">Apple, Inc.</organization>
      <address>
        <postal>
          <street>1800 Wazee Street</street>
          <extaddr>Suite 410</extaddr>
          <city>Denver</city>
          <region>CO</region>
          <code>80202</code>
          <country>United States</country>
        </postal>
        <email>sorber@apple.com</email>
      </address>
    </author>
    <date month="06" year="2022"/>
    <area>art</area>
    <workgroup>cdni</workgroup>
    <keyword>jwt, json, token, cdn, url, http, hls, dash</keyword>
    <abstract pn="section-abstract">
      <t indent="0" pn="section-abstract-1">This document describes how the concept of URI Signing supports the
      content access control requirements of Content Delivery Network Interconnection (CDNI) and proposes a URI Signing
      method as a JSON Web Token (JWT) profile.</t>
      <t indent="0" pn="section-abstract-2">The proposed URI Signing method specifies the information needed to
      be included in the URI to transmit the signed JWT, as well as the claims needed
      by the signed JWT to authorize a User Agent (UA). The
      mechanism described can be used both in CDNI and single Content Delivery Network (CDN)
      scenarios.</t>
    </abstract>
    <boilerplate>
      <section anchor="status-of-memo" numbered="false" removeInRFC="false" toc="exclude" pn="section-boilerplate.1">
        <name slugifiedName="name-status-of-this-memo">Status of This Memo</name>
        <t indent="0" pn="section-boilerplate.1-1">
            This is an Internet Standards Track document.
        </t>
        <t indent="0" pn="section-boilerplate.1-2">
            This document is a product of the Internet Engineering Task Force
            (IETF).  It represents the consensus of the IETF community.  It has
            received public review and has been approved for publication by
            the Internet Engineering Steering Group (IESG).  Further
            information on Internet Standards is available in Section 2 of 
            RFC 7841.
        </t>
        <t indent="0" pn="section-boilerplate.1-3">
            Information about the current status of this document, any
            errata, and how to provide feedback on it may be obtained at
            <eref target="https://www.rfc-editor.org/info/rfc9246" brackets="none"/>.
        </t>
      </section>
      <section anchor="copyright" numbered="false" removeInRFC="false" toc="exclude" pn="section-boilerplate.2">
        <name slugifiedName="name-copyright-notice">Copyright Notice</name>
        <t indent="0" pn="section-boilerplate.2-1">
            Copyright (c) 2022 IETF Trust and the persons identified as the
            document authors. All rights reserved.
        </t>
        <t indent="0" pn="section-boilerplate.2-2">
            This document is subject to BCP 78 and the IETF Trust's Legal
            Provisions Relating to IETF Documents
            (<eref target="https://trustee.ietf.org/license-info" brackets="none"/>) in effect on the date of
            publication of this document. Please review these documents
            carefully, as they describe your rights and restrictions with
            respect to this document. Code Components extracted from this
            document must include Revised BSD License text as described in
            Section 4.e of the Trust Legal Provisions and are provided without
            warranty as described in the Revised BSD License.
        </t>
      </section>
    </boilerplate>
    <toc>
      <section anchor="toc" numbered="false" removeInRFC="false" toc="exclude" pn="section-toc.1">
        <name slugifiedName="name-table-of-contents">Table of Contents</name>
        <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1">
          <li pn="section-toc.1-1.1">
            <t indent="0" pn="section-toc.1-1.1.1"><xref derivedContent="1" format="counter" sectionFormat="of" target="section-1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-introduction">Introduction</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.1.2">
              <li pn="section-toc.1-1.1.2.1">
                <t indent="0" keepWithNext="true" pn="section-toc.1-1.1.2.1.1"><xref derivedContent="1.1" format="counter" sectionFormat="of" target="section-1.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-terminology">Terminology</xref></t>
              </li>
              <li pn="section-toc.1-1.1.2.2">
                <t indent="0" keepWithNext="true" pn="section-toc.1-1.1.2.2.1"><xref derivedContent="1.2" format="counter" sectionFormat="of" target="section-1.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-background-and-overview-on-">Background and Overview on URI Signing</xref></t>
              </li>
              <li pn="section-toc.1-1.1.2.3">
                <t indent="0" keepWithNext="true" pn="section-toc.1-1.1.2.3.1"><xref derivedContent="1.3" format="counter" sectionFormat="of" target="section-1.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-cdni-uri-signing-overview">CDNI URI Signing Overview</xref></t>
              </li>
              <li pn="section-toc.1-1.1.2.4">
                <t indent="0" pn="section-toc.1-1.1.2.4.1"><xref derivedContent="1.4" format="counter" sectionFormat="of" target="section-1.4"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-uri-signing-in-a-non-cdni-c">URI Signing in a Non-CDNI Context</xref></t>
              </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.2">
            <t indent="0" pn="section-toc.1-1.2.1"><xref derivedContent="2" format="counter" sectionFormat="of" target="section-2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-jwt-format-and-processing-r">JWT Format and Processing Requirements</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.2.2">
              <li pn="section-toc.1-1.2.2.1">
                <t indent="0" pn="section-toc.1-1.2.2.1.1"><xref derivedContent="2.1" format="counter" sectionFormat="of" target="section-2.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-jwt-claims">JWT Claims</xref></t>
                <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.2.2.1.2">
                  <li pn="section-toc.1-1.2.2.1.2.1">
                    <t indent="0" pn="section-toc.1-1.2.2.1.2.1.1"><xref derivedContent="2.1.1" format="counter" sectionFormat="of" target="section-2.1.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-issuer-iss-claim">Issuer (iss) Claim</xref></t>
                  </li>
                  <li pn="section-toc.1-1.2.2.1.2.2">
                    <t indent="0" pn="section-toc.1-1.2.2.1.2.2.1"><xref derivedContent="2.1.2" format="counter" sectionFormat="of" target="section-2.1.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-subject-sub-claim">Subject (sub) Claim</xref></t>
                  </li>
                  <li pn="section-toc.1-1.2.2.1.2.3">
                    <t indent="0" pn="section-toc.1-1.2.2.1.2.3.1"><xref derivedContent="2.1.3" format="counter" sectionFormat="of" target="section-2.1.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-audience-aud-claim">Audience (aud) Claim</xref></t>
                  </li>
                  <li pn="section-toc.1-1.2.2.1.2.4">
                    <t indent="0" pn="section-toc.1-1.2.2.1.2.4.1"><xref derivedContent="2.1.4" format="counter" sectionFormat="of" target="section-2.1.4"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-expiry-time-exp-claim">Expiry Time (exp) Claim</xref></t>
                  </li>
                  <li pn="section-toc.1-1.2.2.1.2.5">
                    <t indent="0" pn="section-toc.1-1.2.2.1.2.5.1"><xref derivedContent="2.1.5" format="counter" sectionFormat="of" target="section-2.1.5"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-not-before-nbf-claim">Not Before (nbf) Claim</xref></t>
                  </li>
                  <li pn="section-toc.1-1.2.2.1.2.6">
                    <t indent="0" pn="section-toc.1-1.2.2.1.2.6.1"><xref derivedContent="2.1.6" format="counter" sectionFormat="of" target="section-2.1.6"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-issued-at-iat-claim">Issued At (iat) Claim</xref></t>
                  </li>
                  <li pn="section-toc.1-1.2.2.1.2.7">
                    <t indent="0" pn="section-toc.1-1.2.2.1.2.7.1"><xref derivedContent="2.1.7" format="counter" sectionFormat="of" target="section-2.1.7"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-jwt-id-jti-claim">JWT ID (jti) Claim</xref></t>
                  </li>
                  <li pn="section-toc.1-1.2.2.1.2.8">
                    <t indent="0" pn="section-toc.1-1.2.2.1.2.8.1"><xref derivedContent="2.1.8" format="counter" sectionFormat="of" target="section-2.1.8"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-cdni-claim-set-version-cdni">CDNI Claim Set Version (cdniv) Claim</xref></t>
                  </li>
                  <li pn="section-toc.1-1.2.2.1.2.9">
                    <t indent="0" pn="section-toc.1-1.2.2.1.2.9.1"><xref derivedContent="2.1.9" format="counter" sectionFormat="of" target="section-2.1.9"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-cdni-critical-claims-set-cd">CDNI Critical Claims Set (cdnicrit) Claim</xref></t>
                  </li>
                  <li pn="section-toc.1-1.2.2.1.2.10">
                    <t indent="0" pn="section-toc.1-1.2.2.1.2.10.1"><xref derivedContent="2.1.10" format="counter" sectionFormat="of" target="section-2.1.10"/>. <xref derivedContent="" format="title" sectionFormat="of" target="name-client-ip-address-cdniip-cl">Client IP Address (cdniip) Claim</xref></t>
                  </li>
                  <li pn="section-toc.1-1.2.2.1.2.11">
                    <t indent="0" pn="section-toc.1-1.2.2.1.2.11.1"><xref derivedContent="2.1.11" format="counter" sectionFormat="of" target="section-2.1.11"/>. <xref derivedContent="" format="title" sectionFormat="of" target="name-cdni-uri-container-cdniuc-c">CDNI URI Container (cdniuc) Claim</xref></t>
                  </li>
                  <li pn="section-toc.1-1.2.2.1.2.12">
                    <t indent="0" pn="section-toc.1-1.2.2.1.2.12.1"><xref derivedContent="2.1.12" format="counter" sectionFormat="of" target="section-2.1.12"/>. <xref derivedContent="" format="title" sectionFormat="of" target="name-cdni-expiration-time-settin">CDNI Expiration Time Setting (cdniets) Claim</xref></t>
                  </li>
                  <li pn="section-toc.1-1.2.2.1.2.13">
                    <t indent="0" pn="section-toc.1-1.2.2.1.2.13.1"><xref derivedContent="2.1.13" format="counter" sectionFormat="of" target="section-2.1.13"/>. <xref derivedContent="" format="title" sectionFormat="of" target="name-cdni-signed-token-transport">CDNI Signed Token Transport (cdnistt) Claim</xref></t>
                  </li>
                  <li pn="section-toc.1-1.2.2.1.2.14">
                    <t indent="0" pn="section-toc.1-1.2.2.1.2.14.1"><xref derivedContent="2.1.14" format="counter" sectionFormat="of" target="section-2.1.14"/>. <xref derivedContent="" format="title" sectionFormat="of" target="name-cdni-signed-token-depth-cdn">CDNI Signed Token Depth (cdnistd) Claim</xref></t>
                  </li>
                  <li pn="section-toc.1-1.2.2.1.2.15">
                    <t indent="0" pn="section-toc.1-1.2.2.1.2.15.1"><xref derivedContent="2.1.15" format="counter" sectionFormat="of" target="section-2.1.15"/>. <xref derivedContent="" format="title" sectionFormat="of" target="name-uri-container-forms">URI Container Forms</xref></t>
                    <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.2.2.1.2.15.2">
                      <li pn="section-toc.1-1.2.2.1.2.15.2.1">
                        <t indent="0" pn="section-toc.1-1.2.2.1.2.15.2.1.1"><xref derivedContent="2.1.15.1" format="counter" sectionFormat="of" target="section-2.1.15.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-uri-hash-container-hash">URI Hash Container (hash:)</xref></t>
                      </li>
                      <li pn="section-toc.1-1.2.2.1.2.15.2.2">
                        <t indent="0" pn="section-toc.1-1.2.2.1.2.15.2.2.1"><xref derivedContent="2.1.15.2" format="counter" sectionFormat="of" target="section-2.1.15.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-uri-regular-expression-cont">URI Regular Expression Container (regex:)</xref></t>
                      </li>
                    </ul>
                  </li>
                </ul>
              </li>
              <li pn="section-toc.1-1.2.2.2">
                <t indent="0" pn="section-toc.1-1.2.2.2.1"><xref derivedContent="2.2" format="counter" sectionFormat="of" target="section-2.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-jwt-header">JWT Header</xref></t>
              </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.3">
            <t indent="0" pn="section-toc.1-1.3.1"><xref derivedContent="3" format="counter" sectionFormat="of" target="section-3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-uri-signing-token-renewal">URI Signing Token Renewal</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.3.2">
              <li pn="section-toc.1-1.3.2.1">
                <t indent="0" pn="section-toc.1-1.3.2.1.1"><xref derivedContent="3.1" format="counter" sectionFormat="of" target="section-3.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-overview">Overview</xref></t>
              </li>
              <li pn="section-toc.1-1.3.2.2">
                <t indent="0" pn="section-toc.1-1.3.2.2.1"><xref derivedContent="3.2" format="counter" sectionFormat="of" target="section-3.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-signed-token-renewal-mechan">Signed Token Renewal Mechanism</xref></t>
                <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.3.2.2.2">
                  <li pn="section-toc.1-1.3.2.2.2.1">
                    <t indent="0" pn="section-toc.1-1.3.2.2.2.1.1"><xref derivedContent="3.2.1" format="counter" sectionFormat="of" target="section-3.2.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-required-claims">Required Claims</xref></t>
                  </li>
                </ul>
              </li>
              <li pn="section-toc.1-1.3.2.3">
                <t indent="0" pn="section-toc.1-1.3.2.3.1"><xref derivedContent="3.3" format="counter" sectionFormat="of" target="section-3.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-communicating-a-signed-jwt-">Communicating a Signed JWT in Signed Token Renewal</xref></t>
                <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.3.2.3.2">
                  <li pn="section-toc.1-1.3.2.3.2.1">
                    <t indent="0" pn="section-toc.1-1.3.2.3.2.1.1"><xref derivedContent="3.3.1" format="counter" sectionFormat="of" target="section-3.3.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-support-for-cross-domain-re">Support for Cross-Domain Redirection</xref></t>
                  </li>
                </ul>
              </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.4">
            <t indent="0" pn="section-toc.1-1.4.1"><xref derivedContent="4" format="counter" sectionFormat="of" target="section-4"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-relationship-with-cdni-inte">Relationship with CDNI Interfaces</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.4.2">
              <li pn="section-toc.1-1.4.2.1">
                <t indent="0" pn="section-toc.1-1.4.2.1.1"><xref derivedContent="4.1" format="counter" sectionFormat="of" target="section-4.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-cdni-control-interface">CDNI Control Interface</xref></t>
              </li>
              <li pn="section-toc.1-1.4.2.2">
                <t indent="0" pn="section-toc.1-1.4.2.2.1"><xref derivedContent="4.2" format="counter" sectionFormat="of" target="section-4.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-cdni-footprint-capabilities">CDNI Footprint &amp; Capabilities Advertisement Interface</xref></t>
              </li>
              <li pn="section-toc.1-1.4.2.3">
                <t indent="0" pn="section-toc.1-1.4.2.3.1"><xref derivedContent="4.3" format="counter" sectionFormat="of" target="section-4.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-cdni-request-routing-redire">CDNI Request Routing Redirection Interface</xref></t>
              </li>
              <li pn="section-toc.1-1.4.2.4">
                <t indent="0" pn="section-toc.1-1.4.2.4.1"><xref derivedContent="4.4" format="counter" sectionFormat="of" target="section-4.4"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-cdni-metadata-interface">CDNI Metadata Interface</xref></t>
              </li>
              <li pn="section-toc.1-1.4.2.5">
                <t indent="0" pn="section-toc.1-1.4.2.5.1"><xref derivedContent="4.5" format="counter" sectionFormat="of" target="section-4.5"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-cdni-logging-interface">CDNI Logging Interface</xref></t>
              </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.5">
            <t indent="0" pn="section-toc.1-1.5.1"><xref derivedContent="5" format="counter" sectionFormat="of" target="section-5"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-uri-signing-message-flow">URI Signing Message Flow</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.5.2">
              <li pn="section-toc.1-1.5.2.1">
                <t indent="0" pn="section-toc.1-1.5.2.1.1"><xref derivedContent="5.1" format="counter" sectionFormat="of" target="section-5.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-http-redirection">HTTP Redirection</xref></t>
              </li>
              <li pn="section-toc.1-1.5.2.2">
                <t indent="0" pn="section-toc.1-1.5.2.2.1"><xref derivedContent="5.2" format="counter" sectionFormat="of" target="section-5.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-dns-redirection">DNS Redirection</xref></t>
              </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.6">
            <t indent="0" pn="section-toc.1-1.6.1"><xref derivedContent="6" format="counter" sectionFormat="of" target="section-6"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-iana-considerations">IANA Considerations</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.6.2">
              <li pn="section-toc.1-1.6.2.1">
                <t indent="0" pn="section-toc.1-1.6.2.1.1"><xref derivedContent="6.1" format="counter" sectionFormat="of" target="section-6.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-cdni-payload-type">CDNI Payload Type</xref></t>
                <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.6.2.1.2">
                  <li pn="section-toc.1-1.6.2.1.2.1">
                    <t indent="0" pn="section-toc.1-1.6.2.1.2.1.1"><xref derivedContent="6.1.1" format="counter" sectionFormat="of" target="section-6.1.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-cdni-urisigning-payload-typ">CDNI UriSigning Payload Type</xref></t>
                  </li>
                </ul>
              </li>
              <li pn="section-toc.1-1.6.2.2">
                <t indent="0" pn="section-toc.1-1.6.2.2.1"><xref derivedContent="6.2" format="counter" sectionFormat="of" target="section-6.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-cdni-logging-record-type">CDNI Logging Record Type</xref></t>
                <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.6.2.2.2">
                  <li pn="section-toc.1-1.6.2.2.2.1">
                    <t indent="0" pn="section-toc.1-1.6.2.2.2.1.1"><xref derivedContent="6.2.1" format="counter" sectionFormat="of" target="section-6.2.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-cdni-logging-record-version">CDNI Logging Record Version 2 for HTTP</xref></t>
                  </li>
                </ul>
              </li>
              <li pn="section-toc.1-1.6.2.3">
                <t indent="0" pn="section-toc.1-1.6.2.3.1"><xref derivedContent="6.3" format="counter" sectionFormat="of" target="section-6.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-cdni-logging-field-names">CDNI Logging Field Names</xref></t>
              </li>
              <li pn="section-toc.1-1.6.2.4">
                <t indent="0" pn="section-toc.1-1.6.2.4.1"><xref derivedContent="6.4" format="counter" sectionFormat="of" target="section-6.4"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-cdni-uri-signing-verificati">CDNI URI Signing Verification Code</xref></t>
              </li>
              <li pn="section-toc.1-1.6.2.5">
                <t indent="0" pn="section-toc.1-1.6.2.5.1"><xref derivedContent="6.5" format="counter" sectionFormat="of" target="section-6.5"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-cdni-uri-signing-signed-tok">CDNI URI Signing Signed Token Transport</xref></t>
              </li>
              <li pn="section-toc.1-1.6.2.6">
                <t indent="0" pn="section-toc.1-1.6.2.6.1"><xref derivedContent="6.6" format="counter" sectionFormat="of" target="section-6.6"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-json-web-token-claims-regis">JSON Web Token Claims Registration</xref></t>
                <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.6.2.6.2">
                  <li pn="section-toc.1-1.6.2.6.2.1">
                    <t indent="0" pn="section-toc.1-1.6.2.6.2.1.1"><xref derivedContent="6.6.1" format="counter" sectionFormat="of" target="section-6.6.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-registry-contents">Registry Contents</xref></t>
                  </li>
                </ul>
              </li>
              <li pn="section-toc.1-1.6.2.7">
                <t indent="0" pn="section-toc.1-1.6.2.7.1"><xref derivedContent="6.7" format="counter" sectionFormat="of" target="section-6.7"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-expert-review-guidance">Expert Review Guidance</xref></t>
              </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.7">
            <t indent="0" pn="section-toc.1-1.7.1"><xref derivedContent="7" format="counter" sectionFormat="of" target="section-7"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-security-considerations">Security Considerations</xref></t>
          </li>
          <li pn="section-toc.1-1.8">
            <t indent="0" pn="section-toc.1-1.8.1"><xref derivedContent="8" format="counter" sectionFormat="of" target="section-8"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-privacy">Privacy</xref></t>
          </li>
          <li pn="section-toc.1-1.9">
            <t indent="0" pn="section-toc.1-1.9.1"><xref derivedContent="9" format="counter" sectionFormat="of" target="section-9"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-references">References</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.9.2">
              <li pn="section-toc.1-1.9.2.1">
                <t indent="0" pn="section-toc.1-1.9.2.1.1"><xref derivedContent="9.1" format="counter" sectionFormat="of" target="section-9.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-normative-references">Normative References</xref></t>
              </li>
              <li pn="section-toc.1-1.9.2.2">
                <t indent="0" pn="section-toc.1-1.9.2.2.1"><xref derivedContent="9.2" format="counter" sectionFormat="of" target="section-9.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-informative-references">Informative References</xref></t>
              </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.10">
            <t indent="0" pn="section-toc.1-1.10.1"><xref derivedContent="Appendix A" format="default" sectionFormat="of" target="section-appendix.a"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-signed-uri-package-example">Signed URI Package Example</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.10.2">
              <li pn="section-toc.1-1.10.2.1">
                <t indent="0" pn="section-toc.1-1.10.2.1.1"><xref derivedContent="A.1" format="counter" sectionFormat="of" target="section-appendix.a.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-simple-example">Simple Example</xref></t>
              </li>
              <li pn="section-toc.1-1.10.2.2">
                <t indent="0" pn="section-toc.1-1.10.2.2.1"><xref derivedContent="A.2" format="counter" sectionFormat="of" target="section-appendix.a.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-complex-example">Complex Example</xref></t>
              </li>
              <li pn="section-toc.1-1.10.2.3">
                <t indent="0" pn="section-toc.1-1.10.2.3.1"><xref derivedContent="A.3" format="counter" sectionFormat="of" target="section-appendix.a.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-signed-token-renewal-exampl">Signed Token Renewal Example</xref></t>
              </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.11">
            <t indent="0" pn="section-toc.1-1.11.1"><xref derivedContent="" format="none" sectionFormat="of" target="section-appendix.b"/><xref derivedContent="" format="title" sectionFormat="of" target="name-acknowledgements">Acknowledgements</xref></t>
          </li>
          <li pn="section-toc.1-1.12">
            <t indent="0" pn="section-toc.1-1.12.1"><xref derivedContent="" format="none" sectionFormat="of" target="section-appendix.c"/><xref derivedContent="" format="title" sectionFormat="of" target="name-contributors">Contributors</xref></t>
          </li>
          <li pn="section-toc.1-1.13">
            <t indent="0" pn="section-toc.1-1.13.1"><xref derivedContent="" format="none" sectionFormat="of" target="section-appendix.d"/><xref derivedContent="" format="title" sectionFormat="of" target="name-authors-addresses">Authors' Addresses</xref></t>
          </li>
        </ul>
      </section>
    </toc>
  </front>
  <middle>
    <section numbered="true" toc="include" removeInRFC="false" pn="section-1">
      <name slugifiedName="name-introduction">Introduction</name>
      <t indent="0" pn="section-1-1">This document describes the concept of URI Signing and how it can be
      used to provide access authorization in the case of redirection between
      cooperating CDNs and between a Content Service Provider (CSP)
      and a CDN. The primary goal of URI Signing is to make sure that only
      authorized UAs are able to access the content, with a CSP
      being able to authorize every individual request. It should be noted
      that URI Signing is not a content protection scheme; if a CSP wants to
      protect the content itself, other mechanisms, such as Digital Rights Management (DRM), are more
      appropriate. In addition to access control, URI Signing also has
      benefits in reducing the impact of denial-of-service attacks.</t>
      <t indent="0" pn="section-1-2">The overall problem space for CDN Interconnection (CDNI) is described
      in the CDNI Problem Statement <xref target="RFC6707" format="default" sectionFormat="of" derivedContent="RFC6707"/>
      specification. This document, along with the <xref target="RFC7337" format="default" sectionFormat="of" derivedContent="RFC7337">Content Distribution Network Interconnection (CDNI) Requirements</xref> document and the <xref target="RFC7336" format="default" sectionFormat="of" derivedContent="RFC7336">Framework for Content Distribution Network Interconnection (CDNI)</xref>, describes the
      need for interconnected CDNs to be able to implement an access control
      mechanism that enforces a CSP's distribution policies.</t>
      <t indent="0" pn="section-1-3">Specifically, the <xref target="RFC7336" format="default" sectionFormat="of" derivedContent="RFC7336">CDNI Framework</xref>
      states:</t>
      <ul empty="true" spacing="normal" bare="false" indent="3" pn="section-1-4">
        <li pn="section-1-4.1">The CSP may also trust the CDN operator to perform actions such as
        delegating traffic to additional downstream CDNs, and to enforce per-request authorization performed by the CSP using
        techniques such as URI Signing.</li>
      </ul>
      <t indent="0" pn="section-1-5">In particular, the following requirement is listed in the <xref target="RFC7337" format="default" sectionFormat="of" derivedContent="RFC7337">CDNI Requirements</xref>:</t>
      <ul empty="true" spacing="normal" bare="false" indent="3" pn="section-1-6">
        <li pn="section-1-6.1">
          <blockquote pn="section-1-6.1.1">
            <dl indent="3" newline="false" spacing="normal" pn="section-1-6.1.1.1">
              <dt pn="section-1-6.1.1.1.1">MI-16</dt>
              <dd pn="section-1-6.1.1.1.2">{HIGH} The CDNI Metadata interface shall allow signaling of
          authorization checks and validation that are to be performed
          by the Surrogate before delivery.  For example, this could
          potentially include the need to validate information (e.g.,
          Expiry time, Client IP address) required for access
          authorization.</dd>
            </dl>
          </blockquote>
        </li>
      </ul>
      <t indent="0" pn="section-1-7">This document defines a method of signing URIs that allows Surrogates in
      interconnected CDNs to enforce a per-request authorization initiated by
      the CSP. Splitting the role of initiating per-request authorization by
      the CSP and the role of verifying this authorization by the CDN allows
      any arbitrary distribution policy to be enforced across CDNs without the
      need of CDNs to have any awareness of the specific CSP distribution
      policies.</t>
      <t indent="0" pn="section-1-8">The method is implemented using signed JSON Web Tokens (JWTs) <xref target="RFC7519" format="default" sectionFormat="of" derivedContent="RFC7519"/>.</t>
      <section numbered="true" toc="include" removeInRFC="false" pn="section-1.1">
        <name slugifiedName="name-terminology">Terminology</name>
        <t indent="0" pn="section-1.1-1">
    The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>", "<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>", "<bcp14>SHALL NOT</bcp14>", "<bcp14>SHOULD</bcp14>", "<bcp14>SHOULD NOT</bcp14>", "<bcp14>RECOMMENDED</bcp14>", "<bcp14>NOT RECOMMENDED</bcp14>",
    "<bcp14>MAY</bcp14>", and "<bcp14>OPTIONAL</bcp14>" in this document are to be interpreted as
    described in BCP 14 <xref target="RFC2119" format="default" sectionFormat="of" derivedContent="RFC2119"/> <xref target="RFC8174" format="default" sectionFormat="of" derivedContent="RFC8174"/> 
    when, and only when, they appear in all capitals, as shown here.
        </t>
        <t indent="0" pn="section-1.1-2">This document uses the terminology defined in the <xref target="RFC6707" format="default" sectionFormat="of" derivedContent="RFC6707">CDNI Problem Statement</xref>.</t>
        <t indent="0" pn="section-1.1-3">This document also uses the terminology of the <xref target="RFC7519" format="default" sectionFormat="of" derivedContent="RFC7519">JSON Web Token (JWT)</xref>.</t>
        <t indent="0" pn="section-1.1-4">In addition, the following terms are used throughout this
        document:</t>
        <dl indent="3" newline="false" spacing="normal" pn="section-1.1-5">
          <dt pn="section-1.1-5.1">FCI:
</dt>
          <dd pn="section-1.1-5.2">Footprint &amp; Capabilities Advertisement interface 
</dd>
          <dt pn="section-1.1-5.3">Signed URI:
          </dt>
          <dd pn="section-1.1-5.4">A URI for which a signed JWT is provided.
	  </dd>
          <dt pn="section-1.1-5.5">Target CDN URI:
          </dt>
          <dd pn="section-1.1-5.6">A URI created by the CSP to direct a UA towards the upstream CDN (uCDN). The Target CDN URI can be signed by the CSP and verified by the uCDN and possibly further downstream CDNs (dCDNs).
	  </dd>
          <dt pn="section-1.1-5.7">Redirection URI:
          </dt>
          <dd pn="section-1.1-5.8">A URI created by the uCDN to redirect a UA towards the dCDN. The Redirection URI can be signed by the uCDN and verified by the dCDN. In a cascaded CDNI scenario, there can be more than one Redirection URI.
	  </dd>
          <dt pn="section-1.1-5.9">Signed Token Renewal: 
          </dt>
          <dd pn="section-1.1-5.10">A series of signed JWTs that are used for subsequent access to a
	  set of related resources in a CDN, such as a set of HTTP Adaptive
	  Streaming files. Every time a signed JWT is used to access a
	  particular resource, a new signed JWT is sent along with the
	  resource that can be used to request the next resource in the
	  set. When generating a new signed JWT in Signed Token Renewal,
	  parameters are carried over from one signed JWT to the next.
	  </dd>
        </dl>
      </section>
      <section anchor="background" numbered="true" toc="include" removeInRFC="false" pn="section-1.2">
        <name slugifiedName="name-background-and-overview-on-">Background and Overview on URI Signing</name>
        <t indent="0" pn="section-1.2-1">A CSP and CDN are assumed to have a trust relationship that enables
        the CSP to authorize access to a content item, which is
        realized in practice by including a set of claims in a signed JWT
        in the URI before redirecting a UA to the CDN. Using these
        attributes, it is possible for a CDN to check an incoming content
        request to see whether it was authorized by the CSP (e.g., based on
        a time window or pattern matching the URI). To prevent the UA from altering the claims,
        the JWT <bcp14>MUST</bcp14> be signed.</t>
        <t indent="0" pn="section-1.2-2"><xref target="fig_single_cdn" format="default" sectionFormat="of" derivedContent="Figure 1"/> presents an overview of the URI Signing
        mechanism in the case of a CSP with a single CDN. When the UA browses
        for content on CSP's website (1), it receives HTML web pages with
        embedded content URIs. Upon requesting these URIs, the CSP redirects
        to a CDN, creating a Target CDN URI (2) (alternatively, the Target
        CDN URI itself is embedded in the HTML). The Target CDN URI is the
        Signed URI, which may include the IP address of the UA and/or a time
        window. The Signed URI always contains a signed JWT generated by the
        CSP using a shared secret or private key. Once the UA receives the
        response with the Signed URI, it sends a new HTTP request using the
        Signed URI to the CDN (3). Upon receiving the request, the CDN
        authenticates the Signed URI by verifying the signed JWT.
        If applicable, the CDN checks whether the time window is still valid
        in the Signed URI and the pattern matches the URI of the request.
        After these claims are verified, the CDN delivers the content (4).</t>
        <t indent="0" pn="section-1.2-3">Note: While using a symmetric shared key is supported, it is <bcp14>NOT RECOMMENDED</bcp14>.
        See the <xref target="security" format="default" sectionFormat="of" derivedContent="Section 7">Security Considerations</xref> about the
        limitations of shared keys.</t>
        <figure anchor="fig_single_cdn" align="left" suppress-title="false" pn="figure-1">
          <name slugifiedName="name-uri-signing-in-a-cdn-enviro">URI Signing in a CDN Environment</name>
          <artwork name="" type="" align="left" alt="" pn="section-1.2-4.1">
                --------
               /        \
               |   CSP  |&lt; * * * * * * * * * * *
               \        /        Trust         *
                --------      relationship     *
                  ^  |                         *
                  |  |                         *
       1. Browse  |  | 2. Signed               *
            for   |  |    URI                  *
          content |  |                         *
                  |  v                         v
                +------+ 3. Signed URI     --------
                | User |-----------------&gt;/        \
                | Agent|                  |  CDN   |
                |      |&lt;-----------------\        /
                +------+ 4. Content        --------
                            Delivery
</artwork>
        </figure>
      </section>
      <section numbered="true" toc="include" removeInRFC="false" pn="section-1.3">
        <name slugifiedName="name-cdni-uri-signing-overview">CDNI URI Signing Overview</name>
        <t indent="0" pn="section-1.3-1">In a CDNI environment, as shown in <xref target="fig_cdni_env" format="default" sectionFormat="of" derivedContent="Figure 2"/> below, URI Signing operates the same way in the
        initial steps 1 and 2, but the later steps involve multiple CDNs
        delivering the content. The main difference from the
        single CDN case is a redirection step between the uCDN and the
        dCDN. In step 3, the UA may send an HTTP request or a DNS request,
        depending on whether HTTP-based or DNS-based request routing is used.
        The uCDN responds by directing the UA towards the
        dCDN using either a Redirection URI (i.e., a Signed URI generated by
        the uCDN) or a DNS reply, respectively (4). Once the UA
        receives the response, it sends the Redirection URI/Target CDN URI to
        the dCDN (5). The received URI is verified by the
        dCDN before delivering the content (6).</t>
        <t indent="0" pn="section-1.3-2">Note: The CDNI call flows are covered in <xref target="operation" format="default" sectionFormat="of" derivedContent="Section 5">URI Signing Message Flow</xref>.</t>
        <figure anchor="fig_cdni_env" align="left" suppress-title="false" pn="figure-2">
          <name slugifiedName="name-uri-signing-in-a-cdni-envir">URI Signing in a CDNI Environment</name>
          <artwork name="" type="" align="left" alt="" pn="section-1.3-3.1">
                                   +-------------------------+
                                   |Request Redirection Modes|
                                   +-------------------------+
                                   | a) HTTP                 |
                                   | b) DNS                  |
                                   +-------------------------+
                --------
               /        \&lt; * * * * * * * * * * * * * *
               |   CSP  |&lt; * * * * * * * * * * *     *
               \        /        Trust         *     *
                --------      relationship     *     *
                  ^  |                         *     *
                  |  | 2. Signed               *     *
       1. Browse  |  |    URI in               *     *
            for   |  |    HTML                 *     *
          content |  |                         *     *
                  |  v   3.a)Signed URI        v     *
                +------+   b)DNS request   --------  * Trust
                | User |-----------------&gt;/        \ * relationship
                | Agent|                  |  uCDN  | * (optional)
                |      |&lt;-----------------\        / *
                +------+ 4.a)Redirection URI-------  *
                  ^  |     b)DNS Reply         ^     *
                  |  |                         *     *
                  |  |      Trust relationship *     *
                  |  |                         *     *
      6. Content  |  | 5.a)Redirection URI     *     *
         delivery |  |   b)Signed URI(after    v     v
                  |  |     DNS exchange)      --------
                  |  +----------------------&gt;/        \ [May be
                  |                          |  dCDN  |  cascaded
                  +--------------------------\        /  CDNs]
                                              --------
           </artwork>
        </figure>
        <t indent="0" pn="section-1.3-4">The trust relationships between CSP, uCDN, and
        dCDN have direct implications for URI Signing. In the case shown in
        <xref target="fig_cdni_env" format="default" sectionFormat="of" derivedContent="Figure 2"/>, the CSP has a trust relationship with the
        uCDN. The delivery of the content may be delegated to a
        dCDN, which has a relationship with the uCDN but may
        have no relationship with the CSP.</t>
        <t indent="0" pn="section-1.3-5">In CDNI, there are two methods for request routing: DNS-based and
        HTTP-based. For DNS-based request routing, the Signed URI (i.e., the Target
        CDN URI) provided by the CSP reaches the CDN directly. In
        the case where the dCDN does not have a trust relationship
        with the CSP, this means that either an asymmetric public/private key
        method needs to be used for computing the signed JWT (because the CSP and
        dCDN are not able to exchange symmetric shared secret keys). Shared keys <bcp14>MUST NOT</bcp14>
        be redistributed.</t>
        <t indent="0" pn="section-1.3-6">For HTTP-based request routing, the Signed URI (i.e., the Target CDN
        URI) provided by the CSP reaches the uCDN. After this URI has
        been verified by the uCDN, the uCDN
        creates and signs a new Redirection URI, redirecting the UA to the
        dCDN. Since this new URI can have a new signed JWT, the relationship between the
        dCDN and CSP is not relevant. Because a
        relationship between uCDN and dCDN always exists,
        either asymmetric public/private keys or symmetric shared secret keys
        can be used for URI Signing with HTTP-based request routing. Note that the signed Redirection URI <bcp14>MUST</bcp14>
        maintain HTTPS as the scheme if it was present in the original, and it <bcp14>MAY</bcp14> be upgraded from "http:" to "https:".</t>
        <t indent="0" pn="section-1.3-7">Two types of keys can be used for URI Signing: asymmetric keys and
        symmetric shared keys. Asymmetric keys are based on a public/private key pair
        mechanism and always contain a private key known only to the entity
        signing the URI (either CSP or uCDN) and a public key for the
        verification of the Signed URI. With symmetric keys, the same key is
        used by both the signing entity for signing the URI and the
        verifying entity for verifying the Signed URI. Regardless of the type
        of keys used, the verifying entity has to obtain the key in a manner that allows trust to
        be placed in the assertions made using that key (either the
        public or the symmetric key). There are very different requirements
        (outside the scope of this document) for distributing asymmetric keys
        and symmetric keys. Key distribution for symmetric keys requires
        confidentiality to prevent third parties from getting access to the key,
        since they could then generate valid Signed URIs for unauthorized
        requests. Key distribution for asymmetric keys does not require
        confidentiality since public keys can typically be distributed openly
        (because they cannot be used to sign URIs) and the corresponding private keys are kept
        secret by the URI signer.</t>
        <t indent="0" pn="section-1.3-8">Note: While using a symmetric shared key is supported, it is <bcp14>NOT RECOMMENDED</bcp14>.
        See the <xref target="security" format="default" sectionFormat="of" derivedContent="Section 7">Security Considerations</xref> about the
        limitations of shared keys.</t>
      </section>
      <section numbered="true" toc="include" removeInRFC="false" pn="section-1.4">
        <name slugifiedName="name-uri-signing-in-a-non-cdni-c">URI Signing in a Non-CDNI Context</name>
        <t indent="0" pn="section-1.4-1">While the URI Signing method defined in this document was primarily
        created for the purpose of allowing URI Signing in CDNI scenarios,
        i.e., between a uCDN and a dCDN, there is
        nothing in the defined URI Signing method that precludes it from being
        used in a non-CDNI context. As such, the described mechanism could be
        used in a single-CDN scenario such as shown in <xref target="fig_single_cdn" format="default" sectionFormat="of" derivedContent="Figure 1"/>
        in <xref target="background" format="default" sectionFormat="of" derivedContent="Section 1.2"/> for example
        to allow a CSP that uses different CDNs to only have to implement a
        single URI Signing mechanism.</t>
      </section>
    </section>
    <section anchor="jwt_profile" numbered="true" toc="include" removeInRFC="false" pn="section-2">
      <name slugifiedName="name-jwt-format-and-processing-r">JWT Format and Processing Requirements</name>
      <t indent="0" pn="section-2-1">The concept behind URI Signing is based on embedding a signed <xref target="RFC7519" format="default" sectionFormat="of" derivedContent="RFC7519">JSON Web Token (JWT)</xref>
      in an <xref target="RFC7230" format="default" sectionFormat="of" derivedContent="RFC7230">HTTP or HTTPS URI</xref> (see <xref target="RFC7230" sectionFormat="of" section="2.7" format="default" derivedLink="https://rfc-editor.org/rfc/rfc7230#section-2.7" derivedContent="RFC7230"/>). The signed JWT contains a number of
      claims that can be verified to ensure the UA has legitimate access to the content.</t>
      <t indent="0" pn="section-2-2">This document specifies the following attribute for embedding a signed JWT in a Target CDN URI or Redirection URI:</t>
      <dl indent="3" newline="false" spacing="normal" pn="section-2-3">
        <dt pn="section-2-3.1">URI Signing Package (URISigningPackage): 
        </dt>
        <dd pn="section-2-3.2">The URI attribute that encapsulates all the URI Signing claims in
	a signed JWT encoded format. This attribute is exposed in the Signed
	URI as a path-style parameter or a form-style parameter.
	</dd>
      </dl>
      <t indent="0" pn="section-2-4">The parameter name of the URI Signing Package Attribute is
      defined in the <xref target="metadata" format="default" sectionFormat="of" derivedContent="Section 4.4">CDNI Metadata</xref>. If the CDNI Metadata interface
      is not used, or does not include a parameter name for the URI Signing
      Package Attribute, the parameter name can be set by configuration (out of
      scope of this document).</t>
      <t indent="0" pn="section-2-5">The URI Signing Package will be found by parsing any path-style parameters and
      form-style parameters looking for a key name matching the URI Signing Package Attribute.
      Both parameter styles <bcp14>MUST</bcp14> be supported to allow flexibility of operation.
      The first matching parameter <bcp14>SHOULD</bcp14> be taken to provide the signed JWT, though providing
      more than one matching key is undefined behavior. Path-style parameters generated in the
      form indicated by <xref target="RFC6570" sectionFormat="of" section="3.2.7" format="default" derivedLink="https://rfc-editor.org/rfc/rfc6570#section-3.2.7" derivedContent="RFC6570"/> and
      Form-style parameters generated in the form indicated by Sections <xref target="RFC6570" section="3.2.8" sectionFormat="bare" format="default" derivedLink="https://rfc-editor.org/rfc/rfc6570#section-3.2.8" derivedContent="RFC6570"/> and <xref target="RFC6570" sectionFormat="bare" section="3.2.9" format="default" derivedLink="https://rfc-editor.org/rfc/rfc6570#section-3.2.9" derivedContent="RFC6570"/> of
      <xref target="RFC6570" format="default" sectionFormat="of" derivedContent="RFC6570"/> <bcp14>MUST</bcp14> be supported.</t>
      <t indent="0" pn="section-2-6">The following is an example where the URI Signing Package Attribute name is "token" and the signed JWT is "SIGNEDJWT":</t>
      <sourcecode markers="false" pn="section-2-7">http://example.com/media/path?come=data&amp;token=SIGNEDJWT&amp;other=data</sourcecode>
      <section anchor="jwt_claims" numbered="true" toc="include" removeInRFC="false" pn="section-2.1">
        <name slugifiedName="name-jwt-claims">JWT Claims</name>
        <t indent="0" pn="section-2.1-1">This section identifies the set of claims that can be
        used to enforce the CSP distribution policy. New claims can be introduced in the future to extend the
        distribution policy capabilities.</t>
        <t indent="0" pn="section-2.1-2">In order to provide distribution policy flexibility,
        the exact subset of claims used in a given signed JWT is a runtime decision.
        Claim requirements are defined in the <xref target="metadata" format="default" sectionFormat="of" derivedContent="Section 4.4">CDNI Metadata</xref>.
        If the CDNI Metadata interface is not used, or
        does not include claim requirements, the claim requirements
        can be set by configuration (out of scope of this document).</t>
        <t indent="0" pn="section-2.1-3">The following claims (where the "JSON Web Token Claims" registry
        claim name is specified in parentheses below) are used to enforce the
        distribution policies.  All of the listed claims are mandatory
        to implement in a URI Signing implementation but are not necessarily
        mandatory to use in a given signed JWT. (The "optional" and
        "mandatory" identifiers in square brackets refer to whether or
        not a given claim <bcp14>MUST</bcp14> be present in a URI Signing JWT.)</t>
        <t indent="0" pn="section-2.1-4">Note: The time on the entities that generate and
        verify the Signed URI <bcp14>MUST</bcp14> be in sync. In the CDNI case, this
        means that CSP, uCDN, and dCDN servers need to be
        time synchronized. It is <bcp14>RECOMMENDED</bcp14> to use
        <xref target="RFC5905" format="default" sectionFormat="of" derivedContent="RFC5905">NTP</xref> for time synchronization.</t>
        <t indent="0" pn="section-2.1-5">Note: See the <xref target="security" format="default" sectionFormat="of" derivedContent="Section 7">Security
        Considerations</xref> on the limitations of using an
        expiration time and Client IP address for distribution policy
        enforcement.</t>
        <section anchor="iss_claim" numbered="true" toc="include" removeInRFC="false" pn="section-2.1.1">
          <name slugifiedName="name-issuer-iss-claim">Issuer (iss) Claim</name>
          <t indent="0" pn="section-2.1.1-1">Issuer (iss) [optional] - The semantics in
            <xref target="RFC7519" sectionFormat="of" section="4.1.1" format="default" derivedLink="https://rfc-editor.org/rfc/rfc7519#section-4.1.1" derivedContent="RFC7519"/> <bcp14>MUST</bcp14> be followed.
            If this claim is used, it <bcp14>MUST</bcp14> be used to identify the
            Issuer (signer) of the JWT.  In particular, the recipient will have already
            received, in trusted configuration, a mapping of Issuer name to one or more
            keys used to sign JWTs and must verify that the JWT was signed by one of
            those keys. If this claim is used and the CDN verifying the
            signed JWT does not support Issuer verification, or if the
            Issuer in the signed JWT does not match the list of known
            acceptable Issuers, or if the Issuer claim does not
            match the key used to sign the JWT, the CDN <bcp14>MUST</bcp14> reject the request. If the
            received signed JWT contains an Issuer claim, then any
            JWT subsequently generated for CDNI redirection <bcp14>MUST</bcp14> also contain an Issuer
            claim, and the Issuer value <bcp14>MUST</bcp14> be updated to identify the
            redirecting CDN.  If the received signed JWT does not
            contain an Issuer claim, an Issuer claim <bcp14>MAY</bcp14> be added to
            a signed JWT generated for CDNI redirection.</t>
        </section>
        <section anchor="sub_claim" numbered="true" toc="include" removeInRFC="false" pn="section-2.1.2">
          <name slugifiedName="name-subject-sub-claim">Subject (sub) Claim</name>
          <t indent="0" pn="section-2.1.2-1">Subject (sub) [optional] - The semantics in <xref target="RFC7519" sectionFormat="of" section="4.1.2" format="default" derivedLink="https://rfc-editor.org/rfc/rfc7519#section-4.1.2" derivedContent="RFC7519"/> <bcp14>MUST</bcp14> be followed.
            If this claim is used, it <bcp14>MUST</bcp14> be a JSON Web Encryption (<xref target="RFC7516" format="default" sectionFormat="of" derivedContent="RFC7516">JWE</xref>)
            Object in compact serialization form, because it contains
            personally identifiable information. This claim contains
            information about the Subject (for example, a user or an agent)
            that <bcp14>MAY</bcp14> be used to verify the signed JWT.
            If the received signed JWT contains a Subject claim, then any
            JWT subsequently generated for CDNI redirection <bcp14>MUST</bcp14> also
            contain a Subject claim, and the Subject value <bcp14>MUST</bcp14> be the same
            as in the received signed JWT. A signed JWT generated for CDNI
            redirection <bcp14>MUST NOT</bcp14> add a Subject claim if no Subject claim
            existed in the received signed JWT.</t>
        </section>
        <section anchor="aud_claim" numbered="true" toc="include" removeInRFC="false" pn="section-2.1.3">
          <name slugifiedName="name-audience-aud-claim">Audience (aud) Claim</name>
          <t indent="0" pn="section-2.1.3-1">Audience (aud) [optional] - The semantics in <xref target="RFC7519" sectionFormat="of" section="4.1.3" format="default" derivedLink="https://rfc-editor.org/rfc/rfc7519#section-4.1.3" derivedContent="RFC7519"/> <bcp14>MUST</bcp14> be followed.
            This claim is used to ensure that the CDN verifying the JWT is an intended recipient
            of the request. The claim <bcp14>MUST</bcp14>
            contain an identity belonging to the chain of entities involved in
            processing the request (e.g., identifying the CSP or any CDN in the chain)
            that the recipient is configured to use for the processing of this request.
            A CDN <bcp14>MAY</bcp14> modify the claim as long it can generate a valid signature.</t>
        </section>
        <section anchor="exp_claim" numbered="true" toc="include" removeInRFC="false" pn="section-2.1.4">
          <name slugifiedName="name-expiry-time-exp-claim">Expiry Time (exp) Claim</name>
          <t indent="0" pn="section-2.1.4-1">Expiry Time (exp) [optional] - The semantics in <xref target="RFC7519" sectionFormat="of" section="4.1.4" format="default" derivedLink="https://rfc-editor.org/rfc/rfc7519#section-4.1.4" derivedContent="RFC7519"/> <bcp14>MUST</bcp14> be followed,
          though URI Signing implementations <bcp14>MUST NOT</bcp14> allow for
          any time-synchronization "leeway".  If this claim is used and the
          CDN verifying the signed JWT does not support Expiry Time
          verification, or if the Expiry Time in the signed JWT corresponds to
          a time equal to or earlier than the time of the content request, the
          CDN <bcp14>MUST</bcp14> reject the request.  If the received signed
          JWT contains an Expiry Time claim, then any JWT subsequently
          generated for CDNI redirection <bcp14>MUST</bcp14> also contain an
          Expiry Time claim, and the Expiry Time value <bcp14>MUST</bcp14> be
          the same as in the received signed JWT.  A signed JWT generated for
          CDNI redirection <bcp14>MUST NOT</bcp14> add an Expiry Time claim if
          no Expiry Time claim existed in the received signed JWT.</t>
        </section>
        <section anchor="nbf_claim" numbered="true" toc="include" removeInRFC="false" pn="section-2.1.5">
          <name slugifiedName="name-not-before-nbf-claim">Not Before (nbf) Claim</name>
          <t indent="0" pn="section-2.1.5-1">Not Before (nbf) [optional] - The semantics in <xref target="RFC7519" sectionFormat="of" section="4.1.5" format="default" derivedLink="https://rfc-editor.org/rfc/rfc7519#section-4.1.5" derivedContent="RFC7519"/> <bcp14>MUST</bcp14> be followed,
            though URI Signing implementations <bcp14>MUST NOT</bcp14> allow for any time-synchronization "leeway".
            If this claim is used and the CDN verifying the signed JWT does not support
            Not Before time verification, or if the Not Before time in the
            signed JWT corresponds to a time later than the time of
            the content request, the CDN <bcp14>MUST</bcp14> reject the
            request.
            If the received signed JWT contains a Not Before time claim, then any
            JWT subsequently generated for CDNI redirection <bcp14>MUST</bcp14> also
            contain a Not Before time claim, and the Not Before time value <bcp14>MUST</bcp14> be
            the same as in the received signed JWT.  A signed JWT
            generated for CDNI redirection <bcp14>MUST NOT</bcp14> add a Not Before time
            claim if no Not Before time claim existed in the received
            signed JWT.</t>
        </section>
        <section anchor="iat_claim" numbered="true" toc="include" removeInRFC="false" pn="section-2.1.6">
          <name slugifiedName="name-issued-at-iat-claim">Issued At (iat) Claim</name>
          <t indent="0" pn="section-2.1.6-1">Issued At (iat) [optional] - The semantics in <xref target="RFC7519" sectionFormat="of" section="4.1.6" format="default" derivedLink="https://rfc-editor.org/rfc/rfc7519#section-4.1.6" derivedContent="RFC7519"/> <bcp14>MUST</bcp14> be followed.
            If the received signed JWT contains an Issued At claim, then any
            JWT subsequently generated for CDNI redirection <bcp14>MUST</bcp14> also contain an Issued At
            claim, and the Issued At value <bcp14>MUST</bcp14> be updated to identify the
            time the new JWT was generated.  If the received signed
            JWT does not contain an Issued At claim, an Issued At
            claim <bcp14>MAY</bcp14> be added to a signed JWT generated for CDNI redirection.</t>
        </section>
        <section anchor="jti_claim" numbered="true" toc="include" removeInRFC="false" pn="section-2.1.7">
          <name slugifiedName="name-jwt-id-jti-claim">JWT ID (jti) Claim</name>
          <t indent="0" pn="section-2.1.7-1">JWT ID (jti) [optional] - The semantics in <xref target="RFC7519" sectionFormat="of" section="4.1.7" format="default" derivedLink="https://rfc-editor.org/rfc/rfc7519#section-4.1.7" derivedContent="RFC7519"/> <bcp14>MUST</bcp14> be followed.
            A JWT ID can be used to prevent replay attacks if the CDN stores a
            list of all previously used values and verifies
            that the value in the current JWT has never been used
            before.  If the signed JWT contains a JWT ID claim and the
            CDN verifying the signed JWT either does not support JWT ID
            storage or has previously seen the value used in a request for the same content, then the CDN <bcp14>MUST</bcp14> reject the request.
            If the received signed JWT contains a JWT ID claim, then any
            JWT subsequently generated for CDNI redirection <bcp14>MUST</bcp14> also
            contain a JWT ID claim, and the value <bcp14>MUST</bcp14> be the
            same as in the received signed JWT.
            If the received signed JWT does not contain a
            JWT ID claim, a JWT ID claim <bcp14>MUST NOT</bcp14> be added to a signed JWT
            generated for CDNI redirection. Sizing of the JWT ID is application
            dependent given the desired security constraints.</t>
        </section>
        <section anchor="cdniv_claim" numbered="true" toc="include" removeInRFC="false" pn="section-2.1.8">
          <name slugifiedName="name-cdni-claim-set-version-cdni">CDNI Claim Set Version (cdniv) Claim</name>
          <t indent="0" pn="section-2.1.8-1">CDNI Claim Set Version (cdniv) [optional] - The CDNI Claim Set Version (cdniv)
            claim provides a means within a signed JWT to tie the claim set to a specific version
            of this specification. The cdniv claim is intended to allow changes in and facilitate
            upgrades across specifications. The type is a JSON integer and the value <bcp14>MUST</bcp14> be set to "1"
            for this version of the specification. In the absence of this claim, the value is assumed
            to be "1". For future versions, this claim will be mandatory. Implementations <bcp14>MUST</bcp14> reject
            signed JWTs with unsupported CDNI Claim Set versions.</t>
        </section>
        <section anchor="cdnicrit_claim" numbered="true" toc="include" removeInRFC="false" pn="section-2.1.9">
          <name slugifiedName="name-cdni-critical-claims-set-cd">CDNI Critical Claims Set (cdnicrit) Claim</name>
          <t indent="0" pn="section-2.1.9-1">CDNI Critical Claims Set (cdnicrit) [optional] - The CDNI Critical Claims Set (cdnicrit) claim
            indicates that extensions to this specification are being used that
            <bcp14>MUST</bcp14> be understood and processed.  Its value is a comma-separated listing
            of claims in the Signed JWT that use those extensions.
            If any of the listed extension claims are not understood
            and supported by the recipient, then the Signed JWT <bcp14>MUST</bcp14> be rejected.  Producers
            <bcp14>MUST NOT</bcp14> include claim names defined by this specification, duplicate names, or names that do not
            occur as claim names within the Signed JWT in the cdnicrit
            list.  Producers <bcp14>MUST NOT</bcp14> use the empty list "" as the cdnicrit
            value.  Recipients <bcp14>MAY</bcp14> consider the Signed JWT to be invalid if the cdnicrit
            list contains any claim names defined by this
            specification or if any other constraints
            on its use are violated.  This claim <bcp14>MUST</bcp14> be understood and processed by all implementations.</t>
        </section>
        <section anchor="cdniip_claim" numbered="true" toc="include" removeInRFC="false" pn="section-2.1.10">
          <name slugifiedName="name-client-ip-address-cdniip-cl">Client IP Address (cdniip) Claim</name>
          <t indent="0" pn="section-2.1.10-1">Client IP Address (cdniip) [optional] - The Client IP Address (cdniip) claim holds an IP address or IP prefix for
            which the Signed URI is valid. This is represented in CIDR
            notation with dotted decimal format for <xref target="RFC0791" format="default" sectionFormat="of" derivedContent="RFC0791">IPv4 addresses</xref> or canonical text
            representation for <xref target="RFC5952" format="default" sectionFormat="of" derivedContent="RFC5952">IPv6 addresses</xref>.
            The request <bcp14>MUST</bcp14> be rejected if sourced from a client outside the
            specified IP range. Since the Client IP is considered
            personally identifiable information, this field
            <bcp14>MUST</bcp14> be a JSON Web Encryption (<xref target="RFC7516" format="default" sectionFormat="of" derivedContent="RFC7516">JWE</xref>)
            Object in compact serialization form.  If the CDN verifying the
            signed JWT does not support Client IP verification, or if the
            Client IP in the signed JWT does not match the source IP
            address in the content request, the CDN <bcp14>MUST</bcp14>
            reject the request. The type of this claim is a JSON string that
            contains the JWE.
            If the received signed JWT contains a Client IP claim, then any
            JWT subsequently generated for CDNI redirection <bcp14>MUST</bcp14> also
            contain a Client IP claim, and the Client IP value <bcp14>MUST</bcp14> be
            the same as in the received signed JWT.  A signed JWT
            generated for CDNI redirection <bcp14>MUST NOT</bcp14> add a Client IP
            claim if no Client IP claim existed in the received
            signed JWT.</t>
          <t indent="0" pn="section-2.1.10-2">It should be noted that use of this claim can cause issues, for example,
            in situations with dual-stack IPv4 and IPv6 networks, MPTCP, QUIC, and
            mobile clients switching from Wi-Fi to Cellular networks where the client's
            source address can change, even between address families. This claim exists
            mainly for legacy feature parity reasons; therefore, use of this claim should
            be done judiciously. An example of a reasonable use case would be making a
            signed JWT for an internal preview of an asset where the end consumer understands
            that they must be originated from the same IP for the entirety of the session.
            Using this claim at large is <bcp14>NOT RECOMMENDED</bcp14>.</t>
        </section>
        <section anchor="cdniuc_claim" numbered="true" toc="include" removeInRFC="false" pn="section-2.1.11">
          <name slugifiedName="name-cdni-uri-container-cdniuc-c">CDNI URI Container (cdniuc) Claim</name>
          <t indent="0" pn="section-2.1.11-1">URI Container (cdniuc) [mandatory] - The URI Container (cdniuc)
            holds the URI representation before a URI Signing Package is
            added. This representation can take one of several forms detailed in
            <xref target="uri_container_forms" format="default" sectionFormat="of" derivedContent="Section 2.1.15"/>. If the URI Container used in the signed
            JWT does not match the URI of the content request,  the CDN verifying the
            signed JWT <bcp14>MUST</bcp14> reject the request. When comparing the URI, the percent encoded
            form as defined in <xref target="RFC3986" sectionFormat="of" section="2.1" format="default" derivedLink="https://rfc-editor.org/rfc/rfc3986#section-2.1" derivedContent="RFC3986"/> <bcp14>MUST</bcp14> be used. When
            redirecting a URI, the CDN generating the new signed JWT <bcp14>MAY</bcp14> change the URI
            Container to comport with the URI being used in the redirection.</t>
        </section>
        <section anchor="cdniets_claim" numbered="true" toc="include" removeInRFC="false" pn="section-2.1.12">
          <name slugifiedName="name-cdni-expiration-time-settin">CDNI Expiration Time Setting (cdniets) Claim</name>
          <t indent="0" pn="section-2.1.12-1">CDNI Expiration Time Setting (cdniets) [optional] - The CDNI Expiration
            Time Setting (cdniets) claim provides a means for setting the value
            of the Expiry Time (exp) claim when generating a subsequent signed JWT
            in Signed Token Renewal. Its type is a JSON numeric value. It
            denotes the number of seconds to be added to the time at which the JWT is verified
            that gives the value of the Expiry Time (exp) claim of the next signed JWT.
            The CDNI Expiration Time Setting (cdniets) <bcp14>SHOULD NOT</bcp14> be used when not using Signed Token Renewal
            and <bcp14>MUST</bcp14> be present when using Signed Token Renewal.</t>
        </section>
        <section anchor="cdnistt_claim" numbered="true" toc="include" removeInRFC="false" pn="section-2.1.13">
          <name slugifiedName="name-cdni-signed-token-transport">CDNI Signed Token Transport (cdnistt) Claim</name>
          <t indent="0" pn="section-2.1.13-1">CDNI Signed Token Transport (cdnistt) [optional] - The CDNI Signed Token Transport (cdnistt) claim
          provides a means of signaling the method through which a new signed JWT
          is transported from the CDN to the UA and vice versa for the purpose of Signed Token Renewal. Its type is a JSON integer.
          Values for this claim are defined in <xref target="sec.IANA.cdnistt" format="default" sectionFormat="of" derivedContent="Section 6.5"/>. If using
          this claim, you <bcp14>MUST</bcp14> also specify a CDNI Expiration Time Setting (cdniets) as noted above.</t>
        </section>
        <section anchor="cdnistd_claim" numbered="true" toc="include" removeInRFC="false" pn="section-2.1.14">
          <name slugifiedName="name-cdni-signed-token-depth-cdn">CDNI Signed Token Depth (cdnistd) Claim</name>
          <t indent="0" pn="section-2.1.14-1">CDNI Signed Token Depth (cdnistd) [optional] - The CDNI Signed Token Depth (cdnistd) claim is used to
          associate a subsequent signed JWT, generated as the result of a CDNI Signed Token Transport claim,
          with a specific URI subset. Its type is a JSON integer. Signed JWTs <bcp14>MUST NOT</bcp14> use a negative
          value for the CDNI Signed Token Depth claim.</t>
          <t indent="0" pn="section-2.1.14-2">If the transport used for Signed Token Transport allows the CDN to associate the path component of a
          URI with tokens (e.g., an HTTP Cookie Path as described in <xref target="RFC6265" sectionFormat="of" section="4.1.2.4" format="default" derivedLink="https://rfc-editor.org/rfc/rfc6265#section-4.1.2.4" derivedContent="RFC6265"/>),
          the CDNI Signed Token Depth value is the number of path segments that should be
          considered significant for this association. A CDNI Signed Token Depth of zero means that the
          client <bcp14>SHOULD</bcp14> be directed to return the token with requests for any path. If the CDNI Signed
          Token Depth is greater than zero, then the CDN <bcp14>SHOULD</bcp14> send the client a token to return for
          future requests wherein the first CDNI Signed Token Depth segments of the path match the first
          CDNI Signed Token Depth segments of the Signed URI path. This matching <bcp14>MUST</bcp14> use the URI with the
          token removed, as specified in <xref target="uri_container_forms" format="default" sectionFormat="of" derivedContent="Section 2.1.15"/>.</t>
          <t indent="0" pn="section-2.1.14-3">If the URI path to match contains fewer segments than the CDNI Signed Token Depth claim, a signed JWT
          <bcp14>MUST NOT</bcp14> be generated for the purposes of Signed Token Renewal. If the CDNI Signed Token Depth
          claim is omitted, it means the same thing as if its value were zero. If the received signed JWT
          contains a CDNI Signed Token Depth claim, then any JWT subsequently generated for CDNI
          redirection or Signed Token Transport <bcp14>MUST</bcp14> also contain a CDNI Signed Token Depth claim, and the
          value <bcp14>MUST</bcp14> be the same as in the received signed JWT.</t>
        </section>
        <section anchor="uri_container_forms" numbered="true" toc="include" removeInRFC="false" pn="section-2.1.15">
          <name slugifiedName="name-uri-container-forms">URI Container Forms</name>
          <t indent="0" pn="section-2.1.15-1">The URI Container (cdniuc) claim takes one of the following forms: 'hash:' or 'regex:'. More forms may be added in the future to extend the capabilities.</t>
          <t indent="0" pn="section-2.1.15-2">Before comparing a URI with contents of this container, the following steps <bcp14>MUST</bcp14> be performed:
          </t>
          <ul spacing="normal" bare="false" empty="false" indent="3" pn="section-2.1.15-3">
            <li pn="section-2.1.15-3.1">Prior to verification, remove the signed JWT from the
            URI. This removal is only for the purpose of determining if the
            URI matches; all other purposes will use the original URI. If the
            signed JWT is terminated by anything other than a sub-delimiter
            (as defined in <xref target="RFC3986" section="2.2" sectionFormat="of" format="default" derivedLink="https://rfc-editor.org/rfc/rfc3986#section-2.2" derivedContent="RFC3986"/>), everything from the
            reserved character (as defined in <xref target="RFC3986" section="2.2" format="default" sectionFormat="of" derivedLink="https://rfc-editor.org/rfc/rfc3986#section-2.2" derivedContent="RFC3986"/>) that precedes the URI Signing Package Attribute to the last character of the signed
              JWT will be removed, inclusive. Otherwise, everything from the first character of the
              URI Signing Package Attribute to the sub-delimiter that terminates the signed
              JWT will be removed, inclusive.</li>
            <li pn="section-2.1.15-3.2">Normalize the URI according to <xref target="RFC7230" sectionFormat="of" section="2.7.3" format="default" derivedLink="https://rfc-editor.org/rfc/rfc7230#section-2.7.3" derivedContent="RFC7230"/> and Sections
	      <xref target="RFC3986" section="6.2.2" sectionFormat="bare" format="default" derivedLink="https://rfc-editor.org/rfc/rfc3986#section-6.2.2" derivedContent="RFC3986"/> and <xref target="RFC3986" section="6.2.3" sectionFormat="bare" format="default" derivedLink="https://rfc-editor.org/rfc/rfc3986#section-6.2.3" derivedContent="RFC3986"/> of 
              <xref target="RFC3986" format="default" sectionFormat="of" derivedContent="RFC3986"/>. This applies to both generation
              and verification of the signed JWT.</li>
          </ul>
          <section anchor="uri_container_forms_hash" numbered="true" toc="include" removeInRFC="false" pn="section-2.1.15.1">
            <name slugifiedName="name-uri-hash-container-hash">URI Hash Container (hash:)</name>
            <t indent="0" pn="section-2.1.15.1-1">Prefixed with 'hash:', this string is a URL Segment form (<xref target="RFC6920" section="5" sectionFormat="of" format="default" derivedLink="https://rfc-editor.org/rfc/rfc6920#section-5" derivedContent="RFC6920"/>) of the URI.</t>
          </section>
          <section anchor="uri_container_forms_regex" numbered="true" toc="include" removeInRFC="false" pn="section-2.1.15.2">
            <name slugifiedName="name-uri-regular-expression-cont">URI Regular Expression Container (regex:)</name>
            <t indent="0" pn="section-2.1.15.2-1">Prefixed with 'regex:', this string is any regular expression compatible with POSIX (Section 9 of <xref target="POSIX.1" format="default" sectionFormat="of" derivedContent="POSIX.1"/>) Extended Regular
            Expression used to match against the
            requested URI.  These regular expressions <bcp14>MUST</bcp14> be
            evaluated in the POSIX locale (Section 7.2 of <xref target="POSIX.1" format="default" sectionFormat="of" derivedContent="POSIX.1"/>).
            </t>
            <t indent="0" pn="section-2.1.15.2-2">Note: Because '\' has special meaning in JSON <xref target="RFC8259" format="default" sectionFormat="of" derivedContent="RFC8259"/> as the escape character within JSON strings, the regular expression character '\' <bcp14>MUST</bcp14> be escaped as '\\'.</t>
            <t indent="0" pn="section-2.1.15.2-3">An example of a 'regex:' is the following:</t>
            <sourcecode markers="false" pn="section-2.1.15.2-4">
[^:]*\\://[^/]*/dir/content/quality_[^/]*/segment.{3}\\.mp4(\\?.*)?
</sourcecode>
            <t indent="0" pn="section-2.1.15.2-5">Note: Due to computational complexity of executing arbitrary regular expressions, it is <bcp14>RECOMMENDED</bcp14> to only execute after verifying the JWT to ensure its authenticity.</t>
          </section>
        </section>
      </section>
      <section anchor="jwt_header" numbered="true" toc="include" removeInRFC="false" pn="section-2.2">
        <name slugifiedName="name-jwt-header">JWT Header</name>
        <t indent="0" pn="section-2.2-1">The header of the JWT <bcp14>MAY</bcp14> be passed via the CDNI Metadata interface instead of
      being included in the URISigningPackage. The header value <bcp14>MUST</bcp14> be transmitted in
      the serialized encoded form and prepended to the JWT payload and signature passed in
      the URISigningPackage prior to verification. This reduces the size of the signed JWT
      token.</t>
      </section>
    </section>
    <section anchor="uri_signing_token_renewal" numbered="true" toc="include" removeInRFC="false" pn="section-3">
      <name slugifiedName="name-uri-signing-token-renewal">URI Signing Token Renewal</name>
      <section anchor="token_renewal_intro" numbered="true" toc="include" removeInRFC="false" pn="section-3.1">
        <name slugifiedName="name-overview">Overview</name>
        <t indent="0" pn="section-3.1-1">For content that is delivered via HTTP in a segmented fashion,
        such as <xref target="MPEG-DASH" format="default" sectionFormat="of" derivedContent="MPEG-DASH">MPEG-DASH</xref> or <xref target="RFC8216" format="default" sectionFormat="of" derivedContent="RFC8216"> HTTP Live Streaming (HLS)</xref>,
        special provisions need to be made in order to ensure URI Signing can be
        applied. In general, segmented protocols work by breaking large objects
        (e.g., videos) into a sequence of small independent segments. Such segments
        are then referenced by a separate manifest file, which either includes
        a list of URLs to the segments or specifies an algorithm through which
        a User Agent can construct the URLs to the segments. Requests for segments
        therefore originate from the manifest file and, unless the URLs in the
        manifest file point to the CSP, are not subjected to redirection and URI Signing.
        This opens up a vulnerability to malicious User Agents sharing the
        manifest file and deep linking to the segments.</t>
        <t indent="0" pn="section-3.1-2">One method for dealing with this vulnerability would be to include, in
        the manifest itself, Signed URIs that point to the individual segments.
        There exist a number of issues with that approach. First, it requires the
        CDN delivering the manifest to rewrite the manifest file for each User Agent,
        which would require the CDN to be aware of the exact segmentation protocol
        used. Secondly, it could also require the expiration time of the
        Signed URIs to be valid for an extended duration if the content
        described by the manifest is meant to be consumed in real time. For instance, if the manifest file were
        to contain a segmented video stream of more than 30 minutes in length,
        Signed URIs would require to be valid for at least 30 minutes, thereby reducing
        their effectiveness and that of the URI Signing mechanism in general.
        For a more detailed analysis of how segmented protocols such as HTTP Adaptive Streaming protocols affect CDNI,
        see <xref target="RFC6983" format="default" sectionFormat="of" derivedContent="RFC6983">Models for HTTP-Adaptive-Streaming-Aware Content Distribution Network Interconnection (CDNI)</xref>.</t>
        <t indent="0" pn="section-3.1-3">The method described in this section allows CDNs to use URI Signing
        for segmented content without
        having to include the Signed URIs in the manifest files themselves.</t>
      </section>
      <section anchor="uri_signing_mechanism" numbered="true" toc="include" removeInRFC="false" pn="section-3.2">
        <name slugifiedName="name-signed-token-renewal-mechan">Signed Token Renewal Mechanism</name>
        <t indent="0" pn="section-3.2-1">In order to allow for effective access control of segmented content, the
        URI Signing mechanism defined in this section is based on a method
        through which subsequent segment requests can be linked together.
        As part of the JWT verification procedure, the CDN can generate a new
        signed JWT that the UA can use to do a subsequent request. More specifically,
        whenever a UA successfully retrieves a segment, it receives, in the
        HTTP 2xx Successful message, a signed JWT that it can use whenever it
        requests the next segment. As long as each successive signed JWT
        is correctly verified before a new one is generated, the model is not
        broken, and the User Agent can successfully retrieve additional segments.
        Given the fact that with segmented protocols it is usually not possible to
        determine a priori which segment will be requested next (i.e., to allow for
        seeking within the content and for switching to a different representation),
        the Signed Token Renewal uses the
        URI Regular Expression Container scoping mechanisms in the URI Container
        (cdniuc) claim to allow a signed JWT to be valid for more than one URL.</t>
        <t indent="0" pn="section-3.2-2">In order for this renewal of signed JWTs to work, it is necessary for
        a UA to extract the signed JWT from the HTTP 2xx Successful message of an
        earlier request and use it to retrieve the next segment. The exact mechanism
        by which the client does this is outside the scope of this document.
        However, in order to also support legacy UAs that do not include any
        specific provisions for the handling of signed JWTs, <xref target="communicating_token" format="default" sectionFormat="of" derivedContent="Section 3.3"/>
        defines a mechanism using HTTP Cookies <xref target="RFC6265" format="default" sectionFormat="of" derivedContent="RFC6265"/> that allows such UAs to support
        the concept of renewing signed JWTs without requiring any additional UA support.</t>
        <section numbered="true" toc="include" removeInRFC="false" pn="section-3.2.1">
          <name slugifiedName="name-required-claims">Required Claims</name>
          <t indent="0" pn="section-3.2.1-1">The <xref target="cdnistt_claim" format="default" sectionFormat="of" derivedContent="Section 2.1.13">cdnistt claim</xref> and <xref target="cdniets_claim" format="default" sectionFormat="of" derivedContent="Section 2.1.12">cdniets claim</xref>
            <bcp14>MUST</bcp14> both be present for Signed Token Renewal. cdnistt <bcp14>MAY</bcp14> be set to
          a value of '0' to mean no Signed Token Renewal, but there still <bcp14>MUST</bcp14> be a corresponding cdniets that verifies as
          a JSON number. However, if use of Signed Token Renewal is not desired, it is <bcp14>RECOMMENDED</bcp14> to simply omit both.</t>
        </section>
      </section>
      <section anchor="communicating_token" numbered="true" toc="include" removeInRFC="false" pn="section-3.3">
        <name slugifiedName="name-communicating-a-signed-jwt-">Communicating a Signed JWT in Signed Token Renewal</name>
        <t indent="0" pn="section-3.3-1">This section assumes the value of the CDNI Signed Token Transport (cdnistt) claim
        has been set to 1.</t>
        <t indent="0" pn="section-3.3-2">When using the Signed Token Renewal mechanism, the signed JWT is
        transported to the UA via a 'URISigningPackage' cookie added to the
        HTTP 2xx Successful message along with the content being returned to
        the UA, or to the HTTP 3xx Redirection message in case the UA is
        redirected to a different server.</t>
        <section numbered="true" toc="include" removeInRFC="false" pn="section-3.3.1">
          <name slugifiedName="name-support-for-cross-domain-re">Support for Cross-Domain Redirection</name>
          <t indent="0" pn="section-3.3.1-1">For security purposes, the use of cross-domain cookies is not supported
          in some application environments. As a result, the Cookie-based
          method for transport of the Signed Token described in <xref target="communicating_token" format="default" sectionFormat="of" derivedContent="Section 3.3"/>
          might break if used in combination with an HTTP 3xx Redirection
          response where the target URL is in a different domain. In such
          scenarios, Signed Token Renewal of a signed JWT <bcp14>SHOULD</bcp14> be communicated
          via the query string instead, in a similar fashion to how regular
          signed JWTs (outside of Signed Token Renewal) are communicated. Note
          the value of the CDNI Signed Token Transport (cdnistt) claim
          <bcp14>MUST</bcp14> be set to 2.</t>
          <t indent="0" pn="section-3.3.1-2">Note that the process described herein only works in cases where both the manifest
          file and segments constituting the segmented content are delivered from
          the same domain. In other words, any redirection between different domains needs to be
          carried out while retrieving the manifest file.</t>
        </section>
      </section>
    </section>
    <section anchor="cdni_interfaces" numbered="true" toc="include" removeInRFC="false" pn="section-4">
      <name slugifiedName="name-relationship-with-cdni-inte">Relationship with CDNI Interfaces</name>
      <t indent="0" pn="section-4-1">Some of the CDNI Interfaces need enhancements to support URI Signing.
      A dCDN that supports URI Signing needs to be
      able to advertise this capability to the uCDN. The uCDN
      needs to select a dCDN based on such capability when the CSP
      requires access control to enforce its distribution policy via URI
      Signing. Also, the uCDN needs to be able to distribute via the
      CDNI Metadata interface the information necessary to allow the
      dCDN to verify a Signed URI. Events that pertain to URI
      Signing (e.g., request denial or delivery after an access authorization decision has been made)
      need to be included in the logs communicated through the CDNI Logging
      interface.</t>
      <section anchor="control" numbered="true" toc="include" removeInRFC="false" pn="section-4.1">
        <name slugifiedName="name-cdni-control-interface">CDNI Control Interface</name>
        <t indent="0" pn="section-4.1-1">URI Signing has no impact on this interface.</t>
      </section>
      <section anchor="advertisement" numbered="true" toc="include" removeInRFC="false" pn="section-4.2">
        <name slugifiedName="name-cdni-footprint-capabilities">CDNI Footprint &amp; Capabilities Advertisement Interface</name>
        <t indent="0" pn="section-4.2-1">The CDNI Request Routing: Footprint and Capabilities
        Semantics document <xref target="RFC8008" format="default" sectionFormat="of" derivedContent="RFC8008"/> defines support for
        advertising CDNI Metadata capabilities via CDNI Payload
        Type. The CDNI Payload Type registered in <xref target="sec.IANA.payload" format="default" sectionFormat="of" derivedContent="Section 6.1"/>
        can be used for capability advertisement.</t>
      </section>
      <section anchor="redirection" numbered="true" toc="include" removeInRFC="false" pn="section-4.3">
        <name slugifiedName="name-cdni-request-routing-redire">CDNI Request Routing Redirection Interface</name>
        <t indent="0" pn="section-4.3-1">The <xref target="RFC7975" format="default" sectionFormat="of" derivedContent="RFC7975">CDNI Request Routing
        Redirection Interface</xref> describes the recursive request
        redirection method. For URI Signing, the uCDN signs the URI
        provided by the dCDN. URI Signing therefore has no impact
        on this interface.</t>
      </section>
      <section anchor="metadata" numbered="true" toc="include" removeInRFC="false" pn="section-4.4">
        <name slugifiedName="name-cdni-metadata-interface">CDNI Metadata Interface</name>
        <t indent="0" pn="section-4.4-1">The <xref target="RFC8006" format="default" sectionFormat="of" derivedContent="RFC8006">CDNI Metadata
        Interface</xref> describes the CDNI Metadata distribution needed to
        enable content acquisition and delivery. For URI Signing, a new
        CDNI Metadata object is specified.</t>
        <t indent="0" pn="section-4.4-2">The UriSigning Metadata object contains information to enable URI
        Signing and verification by a dCDN. The UriSigning properties are
        defined below.</t>
        <ul empty="true" spacing="normal" bare="false" indent="3" pn="section-4.4-3">
          <li pn="section-4.4-3.1">
            <t indent="0" pn="section-4.4-3.1.1">Property: enforce</t>
            <ul empty="true" spacing="normal" bare="false" indent="3" pn="section-4.4-3.1.2">
              <li pn="section-4.4-3.1.2.1">
                <dl indent="3" newline="false" spacing="normal" pn="section-4.4-3.1.2.1.1">
                  <dt pn="section-4.4-3.1.2.1.1.1">Description: 
                  </dt>
                  <dd pn="section-4.4-3.1.2.1.1.2">URI Signing enforcement flag. Specifically, this flag indicates if the access to content is subject to URI Signing. URI Signing requires the dCDN to ensure that the URI is signed and verified before delivering content. Otherwise, the dCDN does not perform verification, regardless of whether or not the URI is signed.
		  </dd>
                  <dt pn="section-4.4-3.1.2.1.1.3">Type:
</dt>
                  <dd pn="section-4.4-3.1.2.1.1.4">Boolean
</dd>
                  <dt pn="section-4.4-3.1.2.1.1.5">Mandatory-to-Specify:
</dt>
                  <dd pn="section-4.4-3.1.2.1.1.6">No. The default is true.
</dd>
                </dl>
              </li>
            </ul>
          </li>
          <li pn="section-4.4-3.2">
            <t indent="0" pn="section-4.4-3.2.1">Property: issuers</t>
            <ul empty="true" spacing="normal" bare="false" indent="3" pn="section-4.4-3.2.2">
              <li pn="section-4.4-3.2.2.1">
                <dl indent="3" newline="false" spacing="normal" pn="section-4.4-3.2.2.1.1">
                  <dt pn="section-4.4-3.2.2.1.1.1">Description:
</dt>
                  <dd pn="section-4.4-3.2.2.1.1.2">A list of valid Issuers against which                            
                the Issuer claim in the signed JWT may be cross-referenced.
</dd>
                  <dt pn="section-4.4-3.2.2.1.1.3">Type:
</dt>
                  <dd pn="section-4.4-3.2.2.1.1.4">Array of Strings
</dd>
                  <dt pn="section-4.4-3.2.2.1.1.5">Mandatory-to-Specify:
</dt>
                  <dd pn="section-4.4-3.2.2.1.1.6">No. The default is an empty list.  An empty list means that any Issuer in
the trusted key store of Issuers is acceptable.
</dd>
                </dl>
              </li>
            </ul>
          </li>
          <li pn="section-4.4-3.3">
            <t indent="0" pn="section-4.4-3.3.1">Property: package-attribute</t>
            <ul empty="true" spacing="normal" bare="false" indent="3" pn="section-4.4-3.3.2">
              <li pn="section-4.4-3.3.2.1">
                <dl indent="3" newline="false" spacing="normal" pn="section-4.4-3.3.2.1.1">
                  <dt pn="section-4.4-3.3.2.1.1.1">Description:
                  </dt>
                  <dd pn="section-4.4-3.3.2.1.1.2">The attribute name to use for the URI Signing                    
                Package.
		  </dd>
                  <dt pn="section-4.4-3.3.2.1.1.3">
		Type:
                  </dt>
                  <dd pn="section-4.4-3.3.2.1.1.4">String</dd>
                  <dt pn="section-4.4-3.3.2.1.1.5">Mandatory-to-Specify:</dt>
                  <dd pn="section-4.4-3.3.2.1.1.6">No. The default is
                "URISigningPackage".</dd>
                </dl>
              </li>
            </ul>
          </li>
          <li pn="section-4.4-3.4">
            <t indent="0" pn="section-4.4-3.4.1">Property: jwt-header</t>
            <ul empty="true" spacing="normal" bare="false" indent="3" pn="section-4.4-3.4.2">
              <li pn="section-4.4-3.4.2.1">
                <dl indent="3" newline="false" spacing="normal" pn="section-4.4-3.4.2.1.1">
                  <dt pn="section-4.4-3.4.2.1.1.1">Description:
                  </dt>
                  <dd pn="section-4.4-3.4.2.1.1.2">The header part of JWT that is used for verifying a signed
		JWT when the JWT token in the URI Signing Package does not
		contain a header part.
		</dd>
                  <dt pn="section-4.4-3.4.2.1.1.3">Type:		  		
                  </dt>
                  <dd pn="section-4.4-3.4.2.1.1.4">String
		</dd>
                  <dt pn="section-4.4-3.4.2.1.1.5">Mandatory-to-Specify:
                  </dt>
                  <dd pn="section-4.4-3.4.2.1.1.6">No. By default, the header is assumed to be included 
in the JWT token.
		</dd>
                </dl>
              </li>
            </ul>
          </li>
        </ul>
        <t indent="0" pn="section-4.4-4">The following is an example of a URI Signing metadata payload with all default values:</t>
        <sourcecode type="json" markers="false" pn="section-4.4-5">
{
  "generic-metadata-type": "MI.UriSigning"
  "generic-metadata-value": {}
}
</sourcecode>
        <t indent="0" pn="section-4.4-6">The following is an example of a URI Signing metadata payload with explicit values:</t>
        <sourcecode type="json" markers="false" pn="section-4.4-7">
{
  "generic-metadata-type": "MI.UriSigning"
  "generic-metadata-value":
    {
      "enforce": true,
      "issuers": ["csp", "ucdn1", "ucdn2"],
      "package-attribute": "usp",
      "jwt-header":
        {
            "alg": "ES256",
            "kid": "P5UpOv0eMq1wcxLf7WxIg09JdSYGYFDOWkldueaImf0"
        }
    }
}
</sourcecode>
      </section>
      <section anchor="logging" numbered="true" toc="include" removeInRFC="false" pn="section-4.5">
        <name slugifiedName="name-cdni-logging-interface">CDNI Logging Interface</name>
        <t indent="0" pn="section-4.5-1">For URI Signing, the dCDN reports that enforcement of the
        access control was applied to the request for content delivery. When
        the request is denied due to enforcement of URI Signing, the reason is
        logged.</t>
        <t indent="0" pn="section-4.5-2">The following CDNI Logging field for URI Signing <bcp14>SHOULD</bcp14> be
        supported in the HTTP Request Logging Record as specified in "<xref target="RFC7937" format="title" sectionFormat="of" derivedContent="Content Distribution Network Interconnection (CDNI) Logging Interface"/>" <xref target="RFC7937" format="default" sectionFormat="of" derivedContent="RFC7937"/>
        using the new "cdni_http_request_v2" record-type registered in
        <xref target="sec.IANA.record_type.cdni_http_request_v2" format="default" sectionFormat="of" derivedContent="Section 6.2.1"/>.</t>
        <ul spacing="normal" bare="false" empty="false" indent="3" pn="section-4.5-3">
          <li pn="section-4.5-3.1">
            <t indent="0" pn="section-4.5-3.1.1">s-uri-signing (mandatory): </t>
            <dl indent="3" newline="false" spacing="normal" pn="section-4.5-3.1.2">
              <dt pn="section-4.5-3.1.2.1">Format:
              </dt>
              <dd pn="section-4.5-3.1.2.2">3DIGIT
	      </dd>
              <dt pn="section-4.5-3.1.2.3">Field value:
              </dt>
              <dd pn="section-4.5-3.1.2.4">this characterizes the URI Signing verification performed by
	      the Surrogate on the request. The allowed values are registered
	      in <xref target="sec.IANA.field.s-uri-signing.values" format="default" sectionFormat="of" derivedContent="Section 6.4"/>.
	      </dd>
              <dt pn="section-4.5-3.1.2.5">Occurrence:
              </dt>
              <dd pn="section-4.5-3.1.2.6">there <bcp14>MUST</bcp14> be zero or exactly one instance of    
                this field.
	      </dd>
            </dl>
          </li>
          <li pn="section-4.5-3.2">
            <t indent="0" pn="section-4.5-3.2.1">s-uri-signing-deny-reason (optional): </t>
            <dl indent="3" newline="false" spacing="normal" pn="section-4.5-3.2.2">
              <dt pn="section-4.5-3.2.2.1">Format:
              </dt>
              <dd pn="section-4.5-3.2.2.2">QSTRING
	      </dd>
              <dt pn="section-4.5-3.2.2.3">Field value:
              </dt>
              <dd pn="section-4.5-3.2.2.4">a string for providing further information in case the signed JWT was rejected, e.g., for debugging purposes.
	      </dd>
              <dt pn="section-4.5-3.2.2.5">Occurrence: 
              </dt>
              <dd pn="section-4.5-3.2.2.6">there <bcp14>MUST</bcp14> be zero or exactly one instance of    
                this field.
	      </dd>
            </dl>
          </li>
        </ul>
      </section>
    </section>
    <section anchor="operation" numbered="true" toc="include" removeInRFC="false" pn="section-5">
      <name slugifiedName="name-uri-signing-message-flow">URI Signing Message Flow</name>
      <t indent="0" pn="section-5-1">URI Signing supports both HTTP-based and DNS-based request routing.
      <xref target="RFC7519" format="default" sectionFormat="of" derivedContent="RFC7519">JSON Web Token (JWT)</xref> defines a
      compact, URL-safe means of representing
      claims to be transferred between two parties.  The claims in a Signed JWT
      are encoded as a JSON object that is used as the payload of a JSON
      Web Signature (JWS) structure enabling the claims to be digitally
      signed or integrity protected with a Message Authentication Code
      (MAC).</t>
      <section anchor="http" numbered="true" toc="include" removeInRFC="false" pn="section-5.1">
        <name slugifiedName="name-http-redirection">HTTP Redirection</name>
        <t indent="0" pn="section-5.1-1">For HTTP-based request routing, a set of
        information that is unique to a given end user content request
        is included in a Signed JWT, using
        key information that is specific to a pair of adjacent CDNI hops (e.g.,
        between the CSP and the uCDN or between the
        uCDN and a dCDN). This allows a CDNI hop to ascertain the
        authenticity of a given request received from a previous CDNI hop.</t>
        <t indent="0" pn="section-5.1-2">The URI Signing method
        (assuming HTTP redirection, iterative request routing, and a CDN
        path with two CDNs) includes the following steps:</t>
        <figure anchor="fig_http_routing" align="left" suppress-title="false" pn="figure-3">
          <name slugifiedName="name-http-based-request-routing-">HTTP-Based Request Routing with URI Signing</name>
          <artwork name="" type="" align="left" alt="" pn="section-5.1-3.1">
     End-User           dCDN                 uCDN                 CSP
     |                    |                    |                    |
     |               1.CDNI FCI used to        |                    |
     |        advertise URI Signing capability |                    |
     |                    |-------------------&gt;|                    |
     |                    |                    |                    |
     |              2.Provides information to verify Signed JWT     |
     |                    |                    |&lt;-------------------|
     |                    |                    |                    |
     |        3.CDNI Metadata interface used to|                    |
     |           provide URI Signing attributes|                    |
     |                    |&lt;-------------------|                    |
     :                    :                    :                    :
     :   (Later in time)  :                    :                    :
     |4.Authorization request                  |                    |
     |-------------------------------------------------------------&gt;|
     |                    |                    |  [Apply distribution
     |                    |                    |   policy]          |
     |                    |                    |                    |
     |                    |             (ALT: Authorization decision)
     |5.Request is denied |                    |      &lt;Negative&gt;    |
     |&lt;-------------------------------------------------------------|
     |                    |                    |                    |
     |6.CSP provides Signed URI                |      &lt;Positive&gt;    |
     |&lt;-------------------------------------------------------------|
     |                    |                    |                    |
     |7.Content request   |                    |                    |
     |----------------------------------------&gt;| [Verify URI        |
     |                    |                    |  signature]        |
     |                    |                    |                    |
     |                    |    (ALT: Verification result)           |
     |8.Request is denied |          &lt;Negative&gt;|                    |
     |&lt;----------------------------------------|                    |
     |                    |                    |                    |
     |9.Re-sign URI and redirect to  &lt;Positive&gt;|                    |
     |  dCDN (newly Signed URI)                |                    |
     |&lt;----------------------------------------|                    |
     |                    |                    |                    |
     |10.Content request  |                    |                    |
     |-------------------&gt;| [Verify URI        |                    |
     |                    |  signature]        |                    |
     |                    |                    |                    |
     |    (ALT: Verification result)           |                    |
     |11.Request is denied| &lt;Negative&gt;         |                    |
     |&lt;-------------------|                    |                    |
     |                    |                    |                    |
     |12.Content delivery | &lt;Positive&gt;         |                    |
     |&lt;-------------------|                    |                    |
     :                    :                    :                    :
     :   (Later in time)  :                    :                    :
     |13.CDNI Logging interface to include URI Signing information  |
     |                    |-------------------&gt;|                    |</artwork>
        </figure>
        <ol spacing="normal" type="1" indent="adaptive" start="1" pn="section-5.1-4"><li pn="section-5.1-4.1" derivedCounter="1.">Using the CDNI Footprint &amp; Capabilities Advertisement
            interface, the dCDN advertises its capabilities
            including URI Signing support to the uCDN.</li>
          <li pn="section-5.1-4.2" derivedCounter="2.">CSP provides to the uCDN the information needed to
            verify Signed URIs from that CSP. For example, this
            information will include one or more keys used for validation.</li>
          <li pn="section-5.1-4.3" derivedCounter="3.">Using the CDNI Metadata interface, the uCDN
            communicates to a dCDN the information needed to
            verify Signed URIs from the uCDN for the given
            CSP. For example, this information may include the URI query
            string parameter name for the URI Signing Package Attribute
            in addition to keys used for validation.</li>
          <li pn="section-5.1-4.4" derivedCounter="4.">When a UA requests a piece of protected content from the CSP,
            the CSP makes a specific authorization decision for this unique
            request based on its local distribution policy.</li>
          <li pn="section-5.1-4.5" derivedCounter="5.">If the authorization decision is negative, the CSP rejects the
            request and sends an error code (e.g., 403 Forbidden) in the HTTP
            response.</li>
          <li pn="section-5.1-4.6" derivedCounter="6.">If the authorization decision is positive, the CSP computes a
            Signed JWT that is based on unique parameters of that request and
            conveys it to the end user as the URI to use to request the
            content.</li>
          <li pn="section-5.1-4.7" derivedCounter="7.">On receipt of the corresponding content request, the
            uCDN verifies the Signed JWT in the URI using the
            information provided by the CSP.</li>
          <li pn="section-5.1-4.8" derivedCounter="8.">If the verification result is negative, the uCDN rejects
            the request and sends an error code 403 Forbidden in the HTTP
            response.</li>
          <li pn="section-5.1-4.9" derivedCounter="9.">If the verification result is positive, the uCDN computes a
            Signed JWT that is based on unique parameters of that request and
            provides it to the end user as the URI to use to further request the
            content from the dCDN.</li>
          <li pn="section-5.1-4.10" derivedCounter="10.">On receipt of the corresponding content request, the
            dCDN verifies the Signed JWT in the Signed URI using the
            information provided by the uCDN in the CDNI
            Metadata.</li>
          <li pn="section-5.1-4.11" derivedCounter="11.">If the verification result is negative, the dCDN rejects the
            request and sends an error code 403 Forbidden in the HTTP
            response.</li>
          <li pn="section-5.1-4.12" derivedCounter="12.">If the verification result is positive, the dCDN serves the
            request and delivers the content.</li>
          <li pn="section-5.1-4.13" derivedCounter="13.">At a later time, the dCDN reports logging events that
            include URI Signing information.</li>
        </ol>
        <t indent="0" pn="section-5.1-5">With HTTP-based request routing, URI Signing matches well the
        general chain of trust model of CDNI both with symmetric and
        asymmetric keys because the key information only needs to be specific
        to a pair of adjacent CDNI hops.</t>
        <t indent="0" pn="section-5.1-6">Note: While using a symmetric shared key is supported, it is <bcp14>NOT RECOMMENDED</bcp14>.
        See the <xref target="security" format="default" sectionFormat="of" derivedContent="Section 7">Security Considerations</xref> about the
        limitations of shared keys.</t>
      </section>
      <section anchor="dns" numbered="true" toc="include" removeInRFC="false" pn="section-5.2">
        <name slugifiedName="name-dns-redirection">DNS Redirection</name>
        <t indent="0" pn="section-5.2-1">For DNS-based request routing, the CSP and uCDN must
        agree on a trust model appropriate to the security requirements of the
        CSP's particular content. Use of asymmetric public/private keys allows
        for unlimited distribution of the public key to dCDNs.
        However, if a shared secret key is required, then the distribution <bcp14>SHOULD</bcp14>
        be performed by the CSP directly.</t>
        <t indent="0" pn="section-5.2-2">Note: While using a symmetric shared key is supported, it is <bcp14>NOT RECOMMENDED</bcp14>.
        See the <xref target="security" format="default" sectionFormat="of" derivedContent="Section 7">Security Considerations</xref> about the
        limitations of shared keys.</t>
        <t indent="0" pn="section-5.2-3">The URI Signing method
        (assuming iterative DNS request routing and a CDN path with two
        CDNs) includes the following steps.</t>
        <figure anchor="fig_dns_routing" align="left" suppress-title="false" pn="figure-4">
          <name slugifiedName="name-dns-based-request-routing-w">DNS-based Request Routing with URI Signing</name>
          <artwork name="" type="" align="left" alt="" pn="section-5.2-4.1">
     End-User            dCDN                 uCDN                CSP
     |                    |                    |                    |
     |               1.CDNI FCI used to        |                    |
     |        advertise URI Signing capability |                    |
     |                    |-------------------&gt;|                    |
     |                    |                    |                    |
     |              2.Provides information to verify Signed JWT     |
     |                    |                    |&lt;-------------------|
     |        3.CDNI Metadata interface used to|                    |
     |           provide URI Signing attributes|                    |
     |                    |&lt;-------------------|                    |
     :                    :                    :                    :
     :   (Later in time)  :                    :                    :
     |4.Authorization request                  |                    |
     |-------------------------------------------------------------&gt;|
     |                    |                    |  [Apply distribution
     |                    |                    |   policy]          |
     |                    |                    |                    |
     |                    |             (ALT: Authorization decision)
     |5.Request is denied |                    |      &lt;Negative&gt;    |
     |&lt;-------------------------------------------------------------|
     |                    |                    |                    |
     |6.Provides Signed URI                    |      &lt;Positive&gt;    |
     |&lt;-------------------------------------------------------------|
     |                    |                    |                    |
     |7.DNS request       |                    |                    |
     |----------------------------------------&gt;|                    |
     |                    |                    |                    |
     |8.Redirect DNS to dCDN                   |                    |
     |&lt;----------------------------------------|                    |
     |                    |                    |                    |
     |9.DNS request       |                    |                    |
     |-------------------&gt;|                    |                    |
     |                    |                    |                    |
     |10.IP address of Surrogate               |                    |
     |&lt;-------------------|                    |                    |
     |                    |                    |                    |
     |11.Content request  |                    |                    |
     |-------------------&gt;| [Verify URI        |                    |
     |                    |  signature]        |                    |
     |                    |                    |                    |
     |    (ALT: Verification result)           |                    |
     |12.Request is denied| &lt;Negative&gt;         |                    |
     |&lt;-------------------|                    |                    |
     |                    |                    |                    |
     |13.Content delivery | &lt;Positive&gt;         |                    |
     |&lt;-------------------|                    |                    |
     :                    :                    :                    :
     :   (Later in time)  :                    :                    :
     |14.CDNI Logging interface to report URI Signing information   |
     |                    |-------------------&gt;|                    |
</artwork>
        </figure>
        <ol spacing="normal" type="1" indent="adaptive" start="1" pn="section-5.2-5">
	  <li pn="section-5.2-5.1" derivedCounter="1.">Using the CDNI Footprint &amp; Capabilities Advertisement
            interface, the dCDN advertises its capabilities
            including URI Signing support to the uCDN.</li>
          <li pn="section-5.2-5.2" derivedCounter="2.">CSP provides to the uCDN the information needed to
            verify Signed JWTs from that CSP. For example, this
            information will include one or more keys used for validation.</li>
          <li pn="section-5.2-5.3" derivedCounter="3.">Using the CDNI Metadata interface, the uCDN
            communicates to a dCDN the information needed to
            verify Signed JWTs from the CSP (e.g., the URI query
            string parameter name for the URI Signing Package Attribute). In
            the case of symmetric shared key, the uCDN <bcp14>MUST NOT</bcp14> share the key
            with a dCDN.</li>
          <li pn="section-5.2-5.4" derivedCounter="4.">When a UA requests a piece of protected content from the CSP,
            the CSP makes a specific authorization decision for this unique
            request based on its local distribution policy.</li>
          <li pn="section-5.2-5.5" derivedCounter="5.">If the authorization decision is negative, the CSP rejects the
            request and sends an error code (e.g., 403 Forbidden) in the HTTP
            response.</li>
          <li pn="section-5.2-5.6" derivedCounter="6.">If the authorization decision is positive, the CSP computes a
            Signed JWT that is based on unique parameters of that
            request and includes it in the URI provided to the end user to
            request the content.</li>
          <li pn="section-5.2-5.7" derivedCounter="7.">The end user sends a DNS request to the uCDN.</li>
          <li pn="section-5.2-5.8" derivedCounter="8.">On receipt of the DNS request, the uCDN redirects
            the request to the dCDN.</li>
          <li pn="section-5.2-5.9" derivedCounter="9.">The end user sends a DNS request to the dCDN.</li>
          <li pn="section-5.2-5.10" derivedCounter="10.">On receipt of the DNS request, the dCDN responds with
            IP address of one of its Surrogates.</li>
          <li pn="section-5.2-5.11" derivedCounter="11.">On receipt of the corresponding content request, the
            dCDN verifies the Signed JWT in the URI using the
            information provided by the uCDN in the CDNI
            Metadata.</li>
          <li pn="section-5.2-5.12" derivedCounter="12.">If the verification result is negative, the dCDN rejects the
            request and sends an error code 403 Forbidden in the HTTP
            response.</li>
          <li pn="section-5.2-5.13" derivedCounter="13.">If the verification result is positive, the dCDN serves the
            request and delivers the content.</li>
          <li pn="section-5.2-5.14" derivedCounter="14.">At a later time, dCDN reports logging events that
            includes URI Signing information.</li>
        </ol>
        <t indent="0" pn="section-5.2-6">With DNS-based request routing, URI Signing matches well the
        general chain of trust model of CDNI when used with asymmetric keys
        because the only key information that needs to be distributed across
        multiple, possibly untrusted, CDNI hops is the public key, which
        is generally not confidential.</t>
        <t indent="0" pn="section-5.2-7">With DNS-based request routing, URI Signing does not match well with the
        general chain of trust model of CDNI when used with symmetric keys
        because the symmetric key information needs to be distributed across
        multiple CDNI hops to CDNs with which the CSP may not have a trust
        relationship. This raises a security concern for applicability of URI
        Signing with symmetric keys in case of DNS-based inter-CDN request
        routing. Due to these flaws, this architecture <bcp14>MUST NOT</bcp14> be implemented.</t>
        <t indent="0" pn="section-5.2-8">Note: While using a symmetric shared key is supported, it is <bcp14>NOT RECOMMENDED</bcp14>.
        See the <xref target="security" format="default" sectionFormat="of" derivedContent="Section 7">Security Considerations</xref> about the
        limitations of shared keys.</t>
      </section>
    </section>
    <section anchor="sec.IANA" numbered="true" toc="include" removeInRFC="false" pn="section-6">
      <name slugifiedName="name-iana-considerations">IANA Considerations</name>
      <section anchor="sec.IANA.payload" numbered="true" toc="include" removeInRFC="false" pn="section-6.1">
        <name slugifiedName="name-cdni-payload-type">CDNI Payload Type</name>
        <t indent="0" pn="section-6.1-1">IANA has registered the following CDNI
        Payload Type under the IANA "CDNI Payload Types" registry:</t>
        <table align="center" pn="table-1">
          <thead>
            <tr>
              <th align="left" colspan="1" rowspan="1">Payload Type</th>
              <th align="left" colspan="1" rowspan="1">Specification</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left" colspan="1" rowspan="1">MI.UriSigning</td>
              <td align="left" colspan="1" rowspan="1">RFC 9246</td>
            </tr>
          </tbody>
        </table>
        <section anchor="sec.IANA.payload.UriSigning" numbered="true" toc="include" removeInRFC="false" pn="section-6.1.1">
          <name slugifiedName="name-cdni-urisigning-payload-typ">CDNI UriSigning Payload Type</name>
          <dl indent="3" newline="false" spacing="normal" pn="section-6.1.1-1">
            <dt pn="section-6.1.1-1.1">Purpose:
            </dt>
            <dd pn="section-6.1.1-1.2">The purpose of this payload type is to distinguish                      
          UriSigning Metadata interface (MI) objects (and any associated capability advertisement).
	    </dd>
            <dt pn="section-6.1.1-1.3">Interface: 
            </dt>
            <dd pn="section-6.1.1-1.4">MI/FCI
	    </dd>
            <dt pn="section-6.1.1-1.5">Encoding:
            </dt>
            <dd pn="section-6.1.1-1.6">see <xref target="metadata" format="default" sectionFormat="of" derivedContent="Section 4.4"/>
            </dd>
          </dl>
        </section>
      </section>
      <section anchor="sec.IANA.logging_record" numbered="true" toc="include" removeInRFC="false" pn="section-6.2">
        <name slugifiedName="name-cdni-logging-record-type">CDNI Logging Record Type</name>
        <t indent="0" pn="section-6.2-1">IANA has registered the following CDNI
        Logging record-type under the IANA "CDNI Logging record-types" registry:</t>
        <table align="center" pn="table-2">
          <thead>
            <tr>
              <th align="left" colspan="1" rowspan="1">record-types</th>
              <th align="left" colspan="1" rowspan="1">Reference</th>
              <th align="left" colspan="1" rowspan="1">Description</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left" colspan="1" rowspan="1">cdni_http_request_v2</td>
              <td align="left" colspan="1" rowspan="1">RFC 9246</td>
              <td align="left" colspan="1" rowspan="1">Extension to CDNI Logging Record version 1 for content
          delivery using HTTP, to include URI Signing Logging fields</td>
            </tr>
          </tbody>
        </table>
        <section anchor="sec.IANA.record_type.cdni_http_request_v2" numbered="true" toc="include" removeInRFC="false" pn="section-6.2.1">
          <name slugifiedName="name-cdni-logging-record-version">CDNI Logging Record Version 2 for HTTP</name>
          <t indent="0" pn="section-6.2.1-1">The "cdni_http_request_v2" record-type supports all of
          the fields supported by the "cdni_http_request_v1"
          record-type <xref target="RFC7937" format="default" sectionFormat="of" derivedContent="RFC7937"/> plus the
          two additional fields "s-uri-signing" and
          "s-uri-signing-deny-reason", registered by this document in
          <xref target="sec.IANA.fields" format="default" sectionFormat="of" derivedContent="Section 6.3"/>.  The name,
          format, field value, and occurrence information for the two
          new fields can be found in
          <xref target="logging" format="default" sectionFormat="of" derivedContent="Section 4.5"/> of this
          document.</t>
        </section>
      </section>
      <section anchor="sec.IANA.fields" numbered="true" toc="include" removeInRFC="false" pn="section-6.3">
        <name slugifiedName="name-cdni-logging-field-names">CDNI Logging Field Names</name>
        <t indent="0" pn="section-6.3-1">IANA has registered the following CDNI
        Logging fields under the IANA "CDNI Logging Field Names" registry:</t>
        <table align="center" pn="table-3">
          <thead>
            <tr>
              <th align="left" colspan="1" rowspan="1">Field Name</th>
              <th align="left" colspan="1" rowspan="1">Reference</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left" colspan="1" rowspan="1">s-uri-signing</td>
              <td align="left" colspan="1" rowspan="1">RFC 9246</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">s-uri-signing-deny-reason</td>
              <td align="left" colspan="1" rowspan="1">RFC 9246</td>
            </tr>
          </tbody>
        </table>
      </section>
      <section anchor="sec.IANA.field.s-uri-signing.values" numbered="true" toc="include" removeInRFC="false" pn="section-6.4">
        <name slugifiedName="name-cdni-uri-signing-verificati">CDNI URI Signing Verification Code</name>
        <t indent="0" pn="section-6.4-1">IANA has created a new "CDNI URI Signing Verification Code" subregistry in the
        "Content Delivery Networks Interconnection (CDNI) Parameters" registry. The "CDNI URI Signing Verification Code"
        namespace defines the valid values associated with the s-uri-signing CDNI Logging field. The CDNI URI Signing
        Verification Code is a 3DIGIT value as defined in <xref target="logging" format="default" sectionFormat="of" derivedContent="Section 4.5"/>. Additions to the CDNI URI Signing
        Verification Code namespace will conform to the "Specification Required" policy as defined in
        <xref target="RFC8126" format="default" sectionFormat="of" derivedContent="RFC8126"/>. Updates to this subregistry are expected to be infrequent.</t>
        <table align="center" pn="table-4">
          <thead>
            <tr>
              <th align="left" colspan="1" rowspan="1">Value</th>
              <th align="left" colspan="1" rowspan="1">Reference</th>
              <th align="left" colspan="1" rowspan="1">Description</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left" colspan="1" rowspan="1">000</td>
              <td align="left" colspan="1" rowspan="1">RFC 9246</td>
              <td align="left" colspan="1" rowspan="1">No signed JWT verification performed</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">200</td>
              <td align="left" colspan="1" rowspan="1">RFC 9246</td>
              <td align="left" colspan="1" rowspan="1">Signed JWT verification performed and verified</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">400</td>
              <td align="left" colspan="1" rowspan="1">RFC 9246</td>
              <td align="left" colspan="1" rowspan="1">Signed JWT verification performed and rejected because of incorrect signature</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">401</td>
              <td align="left" colspan="1" rowspan="1">RFC 9246</td>
              <td align="left" colspan="1" rowspan="1">Signed JWT verification performed and rejected because of Issuer enforcement</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">402</td>
              <td align="left" colspan="1" rowspan="1">RFC 9246</td>
              <td align="left" colspan="1" rowspan="1">Signed JWT verification performed and rejected because of Subject enforcement</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">403</td>
              <td align="left" colspan="1" rowspan="1">RFC 9246</td>
              <td align="left" colspan="1" rowspan="1">Signed JWT verification performed and rejected because of Audience enforcement</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">404</td>
              <td align="left" colspan="1" rowspan="1">RFC 9246</td>
              <td align="left" colspan="1" rowspan="1">Signed JWT verification performed and rejected because of Expiration Time enforcement</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">405</td>
              <td align="left" colspan="1" rowspan="1">RFC 9246</td>
              <td align="left" colspan="1" rowspan="1">Signed JWT verification performed and rejected because of Not Before enforcement</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">406</td>
              <td align="left" colspan="1" rowspan="1">RFC 9246</td>
              <td align="left" colspan="1" rowspan="1">Signed JWT verification performed and rejected because only one of CDNI Signed Token Transport or CDNI Expiration Time Setting present</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">407</td>
              <td align="left" colspan="1" rowspan="1">RFC 9246</td>
              <td align="left" colspan="1" rowspan="1">Signed JWT verification performed and rejected because of JWT ID enforcement</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">408</td>
              <td align="left" colspan="1" rowspan="1">RFC 9246</td>
              <td align="left" colspan="1" rowspan="1">Signed JWT verification performed and rejected because of Version enforcement</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">409</td>
              <td align="left" colspan="1" rowspan="1">RFC 9246</td>
              <td align="left" colspan="1" rowspan="1">Signed JWT verification performed and rejected because of Critical Extension enforcement</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">410</td>
              <td align="left" colspan="1" rowspan="1">RFC 9246</td>
              <td align="left" colspan="1" rowspan="1">Signed JWT verification performed and rejected because of Client IP enforcement</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">411</td>
              <td align="left" colspan="1" rowspan="1">RFC 9246</td>
              <td align="left" colspan="1" rowspan="1">Signed JWT verification performed and rejected because of URI Container enforcement</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">500</td>
              <td align="left" colspan="1" rowspan="1">RFC 9246</td>
              <td align="left" colspan="1" rowspan="1">Unable to perform signed JWT verification because of malformed URI</td>
            </tr>
          </tbody>
        </table>
      </section>
      <section anchor="sec.IANA.cdnistt" numbered="true" toc="include" removeInRFC="false" pn="section-6.5">
        <name slugifiedName="name-cdni-uri-signing-signed-tok">CDNI URI Signing Signed Token Transport</name>
        <t indent="0" pn="section-6.5-1">IANA has created a new "CDNI URI Signing
        Signed Token Transport" subregistry in the "Content
        Delivery Networks Interconnection (CDNI) Parameters" registry.
        The "CDNI URI Signing Signed Token Transport"
        namespace defines the valid values
        that may be in the Signed Token Transport (cdnistt) JWT claim.
        Additions to the Signed Token Transport namespace conform to the
        "Specification Required" policy as defined in <xref target="RFC8126" format="default" sectionFormat="of" derivedContent="RFC8126"/>.
        Updates to this subregistry are expected to be infrequent.</t>
        <t indent="0" pn="section-6.5-2">The following table defines the initial Enforcement
        Information Elements:</t>
        <table align="center" pn="table-5">
          <thead>
            <tr>
              <th align="left" colspan="1" rowspan="1">Value</th>
              <th align="left" colspan="1" rowspan="1">Description</th>
              <th align="left" colspan="1" rowspan="1">RFC</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left" colspan="1" rowspan="1">0</td>
              <td align="left" colspan="1" rowspan="1">Designates token transport is not enabled</td>
              <td align="left" colspan="1" rowspan="1">RFC 9246</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">1</td>
              <td align="left" colspan="1" rowspan="1">Designates token transport via cookie</td>
              <td align="left" colspan="1" rowspan="1">RFC 9246</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">2</td>
              <td align="left" colspan="1" rowspan="1">Designates token transport via query string</td>
              <td align="left" colspan="1" rowspan="1">RFC 9246</td>
            </tr>
          </tbody>
        </table>
      </section>
      <section anchor="ClaimsReg" numbered="true" toc="include" removeInRFC="false" pn="section-6.6">
        <name slugifiedName="name-json-web-token-claims-regis">JSON Web Token Claims Registration</name>
        <t indent="0" pn="section-6.6-1">
          This specification registers the following claims
          in the IANA "JSON Web Token Claims" registry  <xref target="IANA.JWT.Claims" format="default" sectionFormat="of" derivedContent="IANA.JWT.Claims"/> established by <xref target="RFC7519" format="default" sectionFormat="of" derivedContent="RFC7519"/>.
        </t>
        <section anchor="ClaimsContents" numbered="true" toc="include" removeInRFC="false" pn="section-6.6.1">
          <name slugifiedName="name-registry-contents">Registry Contents</name>
          <dl spacing="compact" indent="3" newline="false" pn="section-6.6.1-1">
            <dt pn="section-6.6.1-1.1">Claim Name:
            </dt>
            <dd pn="section-6.6.1-1.2">
              <tt>cdniv</tt>
            </dd>
            <dt pn="section-6.6.1-1.3">Claim Description:
</dt>
            <dd pn="section-6.6.1-1.4">CDNI Claim Set Version
</dd>
            <dt pn="section-6.6.1-1.5">Change Controller:
</dt>
            <dd pn="section-6.6.1-1.6">IESG
</dd>
            <dt pn="section-6.6.1-1.7">Specification Document(s):
</dt>
            <dd pn="section-6.6.1-1.8">
              <xref target="cdniv_claim" format="default" sectionFormat="of" derivedContent="Section 2.1.8"/> of   
RFC 9246
</dd>
          </dl>
          <dl spacing="compact" indent="3" newline="false" pn="section-6.6.1-2">
            <dt pn="section-6.6.1-2.1">Claim Name:
            </dt>
            <dd pn="section-6.6.1-2.2">
              <tt>cdnicrit</tt>
            </dd>
            <dt pn="section-6.6.1-2.3">Claim Description:
</dt>
            <dd pn="section-6.6.1-2.4">CDNI Critical Claims Set
</dd>
            <dt pn="section-6.6.1-2.5">Change Controller: 
</dt>
            <dd pn="section-6.6.1-2.6">IESG
</dd>
            <dt pn="section-6.6.1-2.7">Specification Document(s):
</dt>
            <dd pn="section-6.6.1-2.8">
              <xref target="cdnicrit_claim" format="default" sectionFormat="of" derivedContent="Section 2.1.9"/>   
of RFC 9246
</dd>
          </dl>
          <dl spacing="compact" indent="3" newline="false" pn="section-6.6.1-3">
            <dt pn="section-6.6.1-3.1">Claim Name:
            </dt>
            <dd pn="section-6.6.1-3.2">
              <tt>cdniip</tt>
            </dd>
            <dt pn="section-6.6.1-3.3">Claim Description:
</dt>
            <dd pn="section-6.6.1-3.4">CDNI IP Address
</dd>
            <dt pn="section-6.6.1-3.5">Change Controller:
</dt>
            <dd pn="section-6.6.1-3.6">IESG
</dd>
            <dt pn="section-6.6.1-3.7">Specification Document(s):
</dt>
            <dd pn="section-6.6.1-3.8">
              <xref target="cdniip_claim" format="default" sectionFormat="of" derivedContent="Section 2.1.10"/> of 
RFC 9246
</dd>
          </dl>
          <dl spacing="compact" indent="3" newline="false" pn="section-6.6.1-4">
            <dt pn="section-6.6.1-4.1">Claim Name: 
            </dt>
            <dd pn="section-6.6.1-4.2">
              <tt>cdniuc</tt>
            </dd>
            <dt pn="section-6.6.1-4.3">Claim Description:
</dt>
            <dd pn="section-6.6.1-4.4">CDNI URI Container
</dd>
            <dt pn="section-6.6.1-4.5">Change Controller:
</dt>
            <dd pn="section-6.6.1-4.6">IESG
</dd>
            <dt pn="section-6.6.1-4.7">Specification Document(s):
</dt>
            <dd pn="section-6.6.1-4.8">
              <xref target="cdniuc_claim" format="default" sectionFormat="of" derivedContent="Section 2.1.11"/> of 
RFC 9246
</dd>
          </dl>
          <dl spacing="compact" indent="3" newline="false" pn="section-6.6.1-5">
            <dt pn="section-6.6.1-5.1">Claim Name:
            </dt>
            <dd pn="section-6.6.1-5.2">
              <tt>cdniets</tt>
            </dd>
            <dt pn="section-6.6.1-5.3">Claim Description:
</dt>
            <dd pn="section-6.6.1-5.4">CDNI Expiration Time Setting for Signed Token Renewal
</dd>
            <dt pn="section-6.6.1-5.5">Change Controller:
</dt>
            <dd pn="section-6.6.1-5.6">IESG
</dd>
            <dt pn="section-6.6.1-5.7">Specification Document(s):
</dt>
            <dd pn="section-6.6.1-5.8">
              <xref target="cdniets_claim" format="default" sectionFormat="of" derivedContent="Section 2.1.12"/>    
of RFC 9246
</dd>
          </dl>
          <dl spacing="compact" indent="3" newline="false" pn="section-6.6.1-6">
            <dt pn="section-6.6.1-6.1">Claim Name:
            </dt>
            <dd pn="section-6.6.1-6.2">
              <tt>cdnistt</tt>
            </dd>
            <dt pn="section-6.6.1-6.3">Claim Description:
</dt>
            <dd pn="section-6.6.1-6.4">CDNI Signed Token Transport Method for Signed Token        
Renewal
</dd>
            <dt pn="section-6.6.1-6.5">Change Controller:
</dt>
            <dd pn="section-6.6.1-6.6">IESG
</dd>
            <dt pn="section-6.6.1-6.7">Specification Document(s):
</dt>
            <dd pn="section-6.6.1-6.8">
              <xref target="cdnistt_claim" format="default" sectionFormat="of" derivedContent="Section 2.1.13"/>    
of RFC 9246
</dd>
          </dl>
          <dl spacing="compact" indent="3" newline="false" pn="section-6.6.1-7">
            <dt pn="section-6.6.1-7.1">Claim Name:
            </dt>
            <dd pn="section-6.6.1-7.2">
              <tt>cdnistd</tt>
            </dd>
            <dt pn="section-6.6.1-7.3">Claim Description:
</dt>
            <dd pn="section-6.6.1-7.4">CDNI Signed Token Depth
</dd>
            <dt pn="section-6.6.1-7.5">Change Controller:
            </dt>
            <dd pn="section-6.6.1-7.6">IESG
 </dd>
            <dt pn="section-6.6.1-7.7">Specification Document(s):
            </dt>
            <dd pn="section-6.6.1-7.8">
              <xref target="cdnistd_claim" format="default" sectionFormat="of" derivedContent="Section 2.1.14"/>    
of RFC 9246
 </dd>
          </dl>
        </section>
      </section>
      <section anchor="expertreview" numbered="true" toc="include" removeInRFC="false" pn="section-6.7">
        <name slugifiedName="name-expert-review-guidance">Expert Review Guidance</name>
        <t indent="0" pn="section-6.7-1">Generally speaking, we should determine the registration has a rational justification
         and does not duplicate a previous registration. Early assignment should be permissible as long
         as there is a reasonable expectation that the specification will become formalized. Expert
         Reviewers should be empowered to make determinations, but generally speaking they should allow
         new claims that do not otherwise introduce conflicts with implementation or things that may lead
         to confusion.  They should also follow the guidelines of <xref target="RFC8126" sectionFormat="of" section="5" format="default" derivedLink="https://rfc-editor.org/rfc/rfc8126#section-5" derivedContent="RFC8126"/> when sensible.</t>
      </section>
    </section>
    <section anchor="security" numbered="true" toc="include" removeInRFC="false" pn="section-7">
      <name slugifiedName="name-security-considerations">Security Considerations</name>
      <t indent="0" pn="section-7-1">This document describes the concept of URI Signing and how it can be
      used to provide access authorization in the case of
      CDNI. The primary goal of URI Signing is to make sure that only
      authorized UAs are able to access the content, with a
      CSP being able to authorize every individual request. It
      should be noted that URI Signing is not a content protection scheme; if
      a CSP wants to protect the content itself, other mechanisms, such as
      DRM, are more appropriate.</t>
      <t indent="0" pn="section-7-2">CDNI URI Signing Signed Tokens leverage JSON Web Tokens and thus, guidelines in <xref target="RFC8725" format="default" sectionFormat="of" derivedContent="RFC8725"/>
      are applicable for all JWT interactions.</t>
      <t indent="0" pn="section-7-3">In general, it holds that the level of protection against
      illegitimate access can be increased by including more claims
      in the signed JWT. The current version of this document
      includes claims for enforcing Issuer, Client IP Address, Not Before time, and Expiration Time;
      however, this list can be extended with other more complex attributes
      that are able to provide some form of protection against some of the
      vulnerabilities highlighted below.</t>
      <t indent="0" pn="section-7-4">That said, there are a number of aspects that limit the level of
      security offered by URI Signing and that anybody implementing URI
      Signing should be aware of.</t>
      <dl indent="3" newline="false" spacing="normal" pn="section-7-5">
        <dt pn="section-7-5.1">Replay attacks:
        </dt>
        <dd pn="section-7-5.2">A (valid) Signed URI may be used to perform replay attacks. The
	  vulnerability to replay attacks can be reduced by picking a
	  relatively short window between the Not Before time and Expiration
	  Time attributes, although this is limited by the fact that any
	  HTTP-based request needs a window of at least a couple of seconds to
	  prevent sudden network issues from denying legitimate UAs access to
	  the content. One may also reduce exposure to replay attacks by
	  including a unique one-time access ID via the JWT ID attribute (jti
	  claim). Whenever the dCDN receives a request with a given unique ID,
	  it adds that ID to the list of 'used' IDs. In the case an
	  illegitimate UA tries to use the same URI through a replay attack,
	  the dCDN can deny the request based on the already used access
	  ID. This list should be kept bounded. A reasonable approach would be
	  to expire the entries based on the exp claim value. If no exp claim
	  is present, then a simple Least Recently Used (LRU) cache could be
	  used; however, this would allow values to eventually be reused.

	  </dd>
        <dt pn="section-7-5.3">Illegitimate clients behind a NAT:
        </dt>
        <dd pn="section-7-5.4">In cases where there are multiple users behind the same NAT, all
	  users will have the same IP address from the point of view of the
	  dCDN. This results in the dCDN not being able to distinguish between
	  different users based on Client IP Address, which can lead to
	  illegitimate users being able to access the content. One way to
	  reduce exposure to this kind of attack is to not only check for
	  Client IP but also for other attributes, e.g., attributes that can
	  be found in HTTP headers.  However, this may be easily circumvented
	  by a sophisticated attacker.
	  </dd>
      </dl>
      <t indent="0" pn="section-7-6">A shared key distributed between CSP and uCDN is more likely to be
      compromised. Since this key can be used
      to legitimately sign a URL for content access authorization, it is
      important to know the implications of a compromised shared key. While
      using a shared key scheme can be convenient, this architecture is <bcp14>NOT RECOMMENDED</bcp14> due to the risks associated. It is included for legacy
      feature parity and is highly discouraged in new implementations.</t>
      <t indent="0" pn="section-7-7">If a shared key usable for signing is compromised, an attacker
      can use it to perform a denial-of-service attack by forcing the CDN to
      evaluate prohibitively expensive regular expressions embedded in a
      URI Container (cdniuc) claim. As a result, compromised keys should be timely revoked
      in order to prevent exploitation.</t>
      <t indent="0" pn="section-7-8">The URI Container (cdniuc) claim can be given a wildcard value. This, combined
      with the fact that it is the only mandatory claim, means you can effectively make
      a skeleton key. Doing this does not sufficiently limit the scope of the JWT and is
      <bcp14>NOT RECOMMENDED</bcp14>. The only way to prevent such a key from being used after it is
      distributed is to revoke the signing key so it no longer validates.</t>
    </section>
    <section numbered="true" toc="include" removeInRFC="false" pn="section-8">
      <name slugifiedName="name-privacy">Privacy</name>
      <t indent="0" pn="section-8-1">The privacy protection concerns described in "<xref target="RFC7937" format="title" sectionFormat="of" derivedContent="Content Distribution Network Interconnection (CDNI) Logging Interface"/>" <xref target="RFC7937" format="default" sectionFormat="of" derivedContent="RFC7937"/> apply when
      the client's IP address (cdniip) or Subject (sub) is embedded in the Signed URI.
      For this reason, the mechanism described in <xref target="jwt_profile" format="default" sectionFormat="of" derivedContent="Section 2"/> encrypts the Client IP or Subject before
      including it in the URI Signing Package (and thus the URL itself).</t>
    </section>
  </middle>
  <back>
    <references pn="section-9">
      <name slugifiedName="name-references">References</name>
      <references pn="section-9.1">
        <name slugifiedName="name-normative-references">Normative References</name>
        <reference anchor="POSIX.1" target="https://pubs.opengroup.org/onlinepubs/9699919799/" quoteTitle="true" derivedAnchor="POSIX.1">
          <front>
            <title>IEEE Standard for Information Technology -- Portable Operating System Interface (POSIX(TM)) Base Specifications, Issue 7</title>
            <author>
              <organization showOnFrontPage="true">The Open Group</organization>
            </author>
            <date month="January" year="2018"/>
          </front>
          <seriesInfo name="IEEE Std" value="1003.1-2017"/>
          <refcontent>(Revision of IEEE Std 1003.1-2008)
          </refcontent>
        </reference>
        <reference anchor="RFC0791" target="https://www.rfc-editor.org/info/rfc791" quoteTitle="true" derivedAnchor="RFC0791">
          <front>
            <title>Internet Protocol</title>
            <author initials="J." surname="Postel" fullname="J. Postel">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="1981" month="September"/>
          </front>
          <seriesInfo name="STD" value="5"/>
          <seriesInfo name="RFC" value="791"/>
          <seriesInfo name="DOI" value="10.17487/RFC0791"/>
        </reference>
        <reference anchor="RFC2119" target="https://www.rfc-editor.org/info/rfc2119" quoteTitle="true" derivedAnchor="RFC2119">
          <front>
            <title>Key words for use in RFCs to Indicate Requirement Levels</title>
            <author initials="S." surname="Bradner" fullname="S. Bradner">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="1997" month="March"/>
            <abstract>
              <t indent="0">In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t>
            </abstract>
          </front>
          <seriesInfo name="BCP" value="14"/>
          <seriesInfo name="RFC" value="2119"/>
          <seriesInfo name="DOI" value="10.17487/RFC2119"/>
        </reference>
        <reference anchor="RFC3986" target="https://www.rfc-editor.org/info/rfc3986" quoteTitle="true" derivedAnchor="RFC3986">
          <front>
            <title>Uniform Resource Identifier (URI): Generic Syntax</title>
            <author initials="T." surname="Berners-Lee" fullname="T. Berners-Lee">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="R." surname="Fielding" fullname="R. Fielding">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="L." surname="Masinter" fullname="L. Masinter">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2005" month="January"/>
            <abstract>
              <t indent="0">A Uniform Resource Identifier (URI) is a compact sequence of characters that identifies an abstract or physical resource.  This specification defines the generic URI syntax and a process for resolving URI references that might be in relative form, along with guidelines and security considerations for the use of URIs on the Internet.  The URI syntax defines a grammar that is a superset of all valid URIs, allowing an implementation to parse the common components of a URI reference without knowing the scheme-specific requirements of every possible identifier.  This specification does not define a generative grammar for URIs; that task is performed by the individual specifications of each URI scheme.  [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="STD" value="66"/>
          <seriesInfo name="RFC" value="3986"/>
          <seriesInfo name="DOI" value="10.17487/RFC3986"/>
        </reference>
        <reference anchor="RFC5905" target="https://www.rfc-editor.org/info/rfc5905" quoteTitle="true" derivedAnchor="RFC5905">
          <front>
            <title>Network Time Protocol Version 4: Protocol and Algorithms Specification</title>
            <author initials="D." surname="Mills" fullname="D. Mills">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="J." surname="Martin" fullname="J. Martin" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="J." surname="Burbank" fullname="J. Burbank">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="W." surname="Kasch" fullname="W. Kasch">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2010" month="June"/>
            <abstract>
              <t indent="0">The Network Time Protocol (NTP) is widely used to synchronize computer clocks in the Internet.  This document describes NTP version 4 (NTPv4), which is backwards compatible with NTP version 3 (NTPv3), described in RFC 1305, as well as previous versions of the protocol. NTPv4 includes a modified protocol header to accommodate the Internet Protocol version 6 address family.  NTPv4 includes fundamental improvements in the mitigation and discipline algorithms that extend the potential accuracy to the tens of microseconds with modern workstations and fast LANs.  It includes a dynamic server discovery scheme, so that in many cases, specific server configuration is not required.  It corrects certain errors in the NTPv3 design and implementation and includes an optional extension mechanism.   [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="5905"/>
          <seriesInfo name="DOI" value="10.17487/RFC5905"/>
        </reference>
        <reference anchor="RFC5952" target="https://www.rfc-editor.org/info/rfc5952" quoteTitle="true" derivedAnchor="RFC5952">
          <front>
            <title>A Recommendation for IPv6 Address Text Representation</title>
            <author initials="S." surname="Kawamura" fullname="S. Kawamura">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="M." surname="Kawashima" fullname="M. Kawashima">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2010" month="August"/>
            <abstract>
              <t indent="0">As IPv6 deployment increases, there will be a dramatic increase in the need to use IPv6 addresses in text.  While the IPv6 address architecture in Section 2.2 of RFC 4291 describes a flexible model for text representation of an IPv6 address, this flexibility has been causing problems for operators, system engineers, and users.  This document defines a canonical textual representation format.  It does not define a format for internal storage, such as within an application or database.  It is expected that the canonical format will be followed by humans and systems when representing IPv6 addresses as text, but all implementations must accept and be able to handle any legitimate RFC 4291 format.  [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="5952"/>
          <seriesInfo name="DOI" value="10.17487/RFC5952"/>
        </reference>
        <reference anchor="RFC6265" target="https://www.rfc-editor.org/info/rfc6265" quoteTitle="true" derivedAnchor="RFC6265">
          <front>
            <title>HTTP State Management Mechanism</title>
            <author initials="A." surname="Barth" fullname="A. Barth">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2011" month="April"/>
            <abstract>
              <t indent="0">This document defines the HTTP Cookie and Set-Cookie header fields. These header fields can be used by HTTP servers to store state (called cookies) at HTTP user agents, letting the servers maintain a stateful session over the mostly stateless HTTP protocol.  Although cookies have many historical infelicities that degrade their security and privacy, the Cookie and Set-Cookie header fields are widely used on the Internet.  This document obsoletes RFC 2965.  [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="6265"/>
          <seriesInfo name="DOI" value="10.17487/RFC6265"/>
        </reference>
        <reference anchor="RFC6570" target="https://www.rfc-editor.org/info/rfc6570" quoteTitle="true" derivedAnchor="RFC6570">
          <front>
            <title>URI Template</title>
            <author initials="J." surname="Gregorio" fullname="J. Gregorio">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="R." surname="Fielding" fullname="R. Fielding">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="M." surname="Hadley" fullname="M. Hadley">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="M." surname="Nottingham" fullname="M. Nottingham">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="D." surname="Orchard" fullname="D. Orchard">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2012" month="March"/>
            <abstract>
              <t indent="0">A URI Template is a compact sequence of characters for describing a range of Uniform Resource Identifiers through variable expansion. This specification defines the URI Template syntax and the process for expanding a URI Template into a URI reference, along with guidelines for the use of URI Templates on the Internet.   [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="6570"/>
          <seriesInfo name="DOI" value="10.17487/RFC6570"/>
        </reference>
        <reference anchor="RFC6707" target="https://www.rfc-editor.org/info/rfc6707" quoteTitle="true" derivedAnchor="RFC6707">
          <front>
            <title>Content Distribution Network Interconnection (CDNI) Problem Statement</title>
            <author initials="B." surname="Niven-Jenkins" fullname="B. Niven-Jenkins">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="F." surname="Le Faucheur" fullname="F. Le Faucheur">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="N." surname="Bitar" fullname="N. Bitar">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2012" month="September"/>
            <abstract>
              <t indent="0">Content Delivery Networks (CDNs) provide numerous benefits for cacheable content: reduced delivery cost, improved quality of experience for End Users, and increased robustness of delivery.  For these reasons, they are frequently used for large-scale content delivery.  As a result, existing CDN Providers are scaling up their infrastructure, and many Network Service Providers (NSPs) are deploying their own CDNs.  It is generally desirable that a given content item can be delivered to an End User regardless of that End User's location or attachment network.  This is the motivation for interconnecting standalone CDNs so they can interoperate as an open content delivery infrastructure for the end-to-end delivery of content from Content Service Providers (CSPs) to End Users.  However, no standards or open specifications currently exist to facilitate such CDN Interconnection.</t>
              <t indent="0">The goal of this document is to outline the problem area of CDN Interconnection for the IETF CDNI (CDN Interconnection) working group.  This document is not an Internet Standards Track specification;  it is published for informational purposes.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="6707"/>
          <seriesInfo name="DOI" value="10.17487/RFC6707"/>
        </reference>
        <reference anchor="RFC6920" target="https://www.rfc-editor.org/info/rfc6920" quoteTitle="true" derivedAnchor="RFC6920">
          <front>
            <title>Naming Things with Hashes</title>
            <author initials="S." surname="Farrell" fullname="S. Farrell">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="D." surname="Kutscher" fullname="D. Kutscher">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="C." surname="Dannewitz" fullname="C. Dannewitz">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="B." surname="Ohlman" fullname="B. Ohlman">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="A." surname="Keranen" fullname="A. Keranen">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="P." surname="Hallam-Baker" fullname="P. Hallam-Baker">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2013" month="April"/>
            <abstract>
              <t indent="0">This document defines a set of ways to identify a thing (a digital object in this case) using the output from a hash function.  It specifies a new URI scheme for this purpose, a way to map these to HTTP URLs, and binary and human-speakable formats for these names. The various formats are designed to support, but not require, a strong link to the referenced object, such that the referenced object may be authenticated to the same degree as the reference to it.  The reason for this work is to standardise current uses of hash outputs in URLs and to support new information-centric applications and other uses of hash outputs in protocols.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="6920"/>
          <seriesInfo name="DOI" value="10.17487/RFC6920"/>
        </reference>
        <reference anchor="RFC7230" target="https://www.rfc-editor.org/info/rfc7230" quoteTitle="true" derivedAnchor="RFC7230">
          <front>
            <title>Hypertext Transfer Protocol (HTTP/1.1): Message Syntax and Routing</title>
            <author initials="R." surname="Fielding" fullname="R. Fielding" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="J." surname="Reschke" fullname="J. Reschke" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2014" month="June"/>
            <abstract>
              <t indent="0">The Hypertext Transfer Protocol (HTTP) is a stateless application-level protocol for distributed, collaborative, hypertext information systems.  This document provides an overview of HTTP architecture and its associated terminology, defines the "http" and "https" Uniform Resource Identifier (URI) schemes, defines the HTTP/1.1 message syntax and parsing requirements, and describes related security concerns for implementations.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="7230"/>
          <seriesInfo name="DOI" value="10.17487/RFC7230"/>
        </reference>
        <reference anchor="RFC7516" target="https://www.rfc-editor.org/info/rfc7516" quoteTitle="true" derivedAnchor="RFC7516">
          <front>
            <title>JSON Web Encryption (JWE)</title>
            <author initials="M." surname="Jones" fullname="M. Jones">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="J." surname="Hildebrand" fullname="J. Hildebrand">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2015" month="May"/>
            <abstract>
              <t indent="0">JSON Web Encryption (JWE) represents encrypted content using JSON-based data structures.  Cryptographic algorithms and identifiers for use with this specification are described in the separate JSON Web Algorithms (JWA) specification and IANA registries defined by that specification.  Related digital signature and Message Authentication Code (MAC) capabilities are described in the separate JSON Web Signature (JWS) specification.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="7516"/>
          <seriesInfo name="DOI" value="10.17487/RFC7516"/>
        </reference>
        <reference anchor="RFC7519" target="https://www.rfc-editor.org/info/rfc7519" quoteTitle="true" derivedAnchor="RFC7519">
          <front>
            <title>JSON Web Token (JWT)</title>
            <author initials="M." surname="Jones" fullname="M. Jones">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="J." surname="Bradley" fullname="J. Bradley">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="N." surname="Sakimura" fullname="N. Sakimura">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2015" month="May"/>
            <abstract>
              <t indent="0">JSON Web Token (JWT) is a compact, URL-safe means of representing claims to be transferred between two parties.  The claims in a JWT are encoded as a JSON object that is used as the payload of a JSON Web Signature (JWS) structure or as the plaintext of a JSON Web Encryption (JWE) structure, enabling the claims to be digitally signed or integrity protected with a Message Authentication Code (MAC) and/or encrypted.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="7519"/>
          <seriesInfo name="DOI" value="10.17487/RFC7519"/>
        </reference>
        <reference anchor="RFC7937" target="https://www.rfc-editor.org/info/rfc7937" quoteTitle="true" derivedAnchor="RFC7937">
          <front>
            <title>Content Distribution Network Interconnection (CDNI) Logging Interface</title>
            <author initials="F." surname="Le Faucheur" fullname="F. Le Faucheur" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="G." surname="Bertrand" fullname="G. Bertrand" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="I." surname="Oprescu" fullname="I. Oprescu" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="R." surname="Peterkofsky" fullname="R. Peterkofsky">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2016" month="August"/>
            <abstract>
              <t indent="0">This memo specifies the Logging interface between a downstream Content Distribution Network (dCDN) and an upstream CDN (uCDN) that are interconnected as per the CDN Interconnection (CDNI) framework. First, it describes a reference model for CDNI logging.  Then, it specifies the CDNI Logging File format and the actual protocol for exchange of CDNI Logging Files.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="7937"/>
          <seriesInfo name="DOI" value="10.17487/RFC7937"/>
        </reference>
        <reference anchor="RFC8006" target="https://www.rfc-editor.org/info/rfc8006" quoteTitle="true" derivedAnchor="RFC8006">
          <front>
            <title>Content Delivery Network Interconnection (CDNI) Metadata</title>
            <author initials="B." surname="Niven-Jenkins" fullname="B. Niven-Jenkins">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="R." surname="Murray" fullname="R. Murray">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="M." surname="Caulfield" fullname="M. Caulfield">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="K." surname="Ma" fullname="K. Ma">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2016" month="December"/>
            <abstract>
              <t indent="0">The Content Delivery Network Interconnection (CDNI) Metadata interface enables interconnected Content Delivery Networks (CDNs) to exchange content distribution metadata in order to enable content acquisition and delivery.  The CDNI Metadata associated with a piece of content provides a downstream CDN with sufficient information for the downstream CDN to service content requests on behalf of an upstream CDN.  This document describes both a base set of CDNI Metadata and the protocol for exchanging that metadata.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8006"/>
          <seriesInfo name="DOI" value="10.17487/RFC8006"/>
        </reference>
        <reference anchor="RFC8126" target="https://www.rfc-editor.org/info/rfc8126" quoteTitle="true" derivedAnchor="RFC8126">
          <front>
            <title>Guidelines for Writing an IANA Considerations Section in RFCs</title>
            <author initials="M." surname="Cotton" fullname="M. Cotton">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="B." surname="Leiba" fullname="B. Leiba">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="T." surname="Narten" fullname="T. Narten">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2017" month="June"/>
            <abstract>
              <t indent="0">Many protocols make use of points of extensibility that use constants to identify various protocol parameters.  To ensure that the values in these fields do not have conflicting uses and to promote interoperability, their allocations are often coordinated by a central record keeper.  For IETF protocols, that role is filled by the Internet Assigned Numbers Authority (IANA).</t>
              <t indent="0">To make assignments in a given registry prudently, guidance describing the conditions under which new values should be assigned, as well as when and how modifications to existing values can be made, is needed.  This document defines a framework for the documentation of these guidelines by specification authors, in order to assure that the provided guidance for the IANA Considerations is clear and addresses the various issues that are likely in the operation of a registry.</t>
              <t indent="0">This is the third edition of this document; it obsoletes RFC 5226.</t>
            </abstract>
          </front>
          <seriesInfo name="BCP" value="26"/>
          <seriesInfo name="RFC" value="8126"/>
          <seriesInfo name="DOI" value="10.17487/RFC8126"/>
        </reference>
        <reference anchor="RFC8174" target="https://www.rfc-editor.org/info/rfc8174" quoteTitle="true" derivedAnchor="RFC8174">
          <front>
            <title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
            <author initials="B." surname="Leiba" fullname="B. Leiba">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2017" month="May"/>
            <abstract>
              <t indent="0">RFC 2119 specifies common key words that may be used in protocol  specifications.  This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the  defined special meanings.</t>
            </abstract>
          </front>
          <seriesInfo name="BCP" value="14"/>
          <seriesInfo name="RFC" value="8174"/>
          <seriesInfo name="DOI" value="10.17487/RFC8174"/>
        </reference>
        <reference anchor="RFC8259" target="https://www.rfc-editor.org/info/rfc8259" quoteTitle="true" derivedAnchor="RFC8259">
          <front>
            <title>The JavaScript Object Notation (JSON) Data Interchange Format</title>
            <author initials="T." surname="Bray" fullname="T. Bray" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2017" month="December"/>
            <abstract>
              <t indent="0">JavaScript Object Notation (JSON) is a lightweight, text-based, language-independent data interchange format.  It was derived from the ECMAScript Programming Language Standard.  JSON defines a small set of formatting rules for the portable representation of structured data.</t>
              <t indent="0">This document removes inconsistencies with other specifications of JSON, repairs specification errors, and offers experience-based interoperability guidance.</t>
            </abstract>
          </front>
          <seriesInfo name="STD" value="90"/>
          <seriesInfo name="RFC" value="8259"/>
          <seriesInfo name="DOI" value="10.17487/RFC8259"/>
        </reference>
      </references>
      <references pn="section-9.2">
        <name slugifiedName="name-informative-references">Informative References</name>
        <reference anchor="IANA.JWT.Claims" target="https://www.iana.org/assignments/jwt" quoteTitle="true" derivedAnchor="IANA.JWT.Claims">
          <front>
            <title>JSON Web Token (JWT)</title>
            <author>
              <organization showOnFrontPage="true">IANA</organization>
            </author>
            <date/>
          </front>
        </reference>
        <reference anchor="MPEG-DASH" target="https://www.iso.org/standard/79329.html" quoteTitle="true" derivedAnchor="MPEG-DASH">
          <front>
            <title>Information technology -- Dynamic adaptive streaming over HTTP (DASH) -- Part 1: Media presentation description and segment formats</title>
            <author>
              <organization showOnFrontPage="true">ISO</organization>
            </author>
            <date month="December" year="2019"/>
          </front>
          <seriesInfo name="ISO/IEC" value="23009-1:2019"/>
          <seriesInfo name="Edition" value="4"/>
        </reference>
        <reference anchor="RFC6983" target="https://www.rfc-editor.org/info/rfc6983" quoteTitle="true" derivedAnchor="RFC6983">
          <front>
            <title>Models for HTTP-Adaptive-Streaming-Aware Content Distribution Network Interconnection (CDNI)</title>
            <author initials="R." surname="van Brandenburg" fullname="R. van Brandenburg">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="O." surname="van Deventer" fullname="O. van Deventer">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="F." surname="Le Faucheur" fullname="F. Le Faucheur">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="K." surname="Leung" fullname="K. Leung">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2013" month="July"/>
            <abstract>
              <t indent="0">This document presents thoughts on the potential impact of supporting HTTP Adaptive Streaming (HAS) technologies in Content Distribution Network Interconnection (CDNI) scenarios.  The intent is to present the authors' analysis of the CDNI-HAS problem space and discuss different options put forward by the authors (and by others during informal discussions) on how to deal with HAS in the context of CDNI. This document has been used as input information during the CDNI working group process for making a decision regarding support for HAS.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="6983"/>
          <seriesInfo name="DOI" value="10.17487/RFC6983"/>
        </reference>
        <reference anchor="RFC7336" target="https://www.rfc-editor.org/info/rfc7336" quoteTitle="true" derivedAnchor="RFC7336">
          <front>
            <title>Framework for Content Distribution Network Interconnection (CDNI)</title>
            <author initials="L." surname="Peterson" fullname="L. Peterson">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="B." surname="Davie" fullname="B. Davie">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="R." surname="van Brandenburg" fullname="R. van Brandenburg" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2014" month="August"/>
            <abstract>
              <t indent="0">This document presents a framework for Content Distribution Network Interconnection (CDNI).  The purpose of the framework is to provide an overall picture of the problem space of CDNI and to describe the relationships among the various components necessary to interconnect CDNs.  CDNI requires the specification of interfaces and mechanisms to address issues such as request routing, distribution metadata exchange, and logging information exchange across CDNs.  The intent of this document is to outline what each interface needs to accomplish and to describe how these interfaces and mechanisms fit together, while leaving their detailed specification to other documents.  This document, in combination with RFC 6707, obsoletes RFC 3466.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="7336"/>
          <seriesInfo name="DOI" value="10.17487/RFC7336"/>
        </reference>
        <reference anchor="RFC7337" target="https://www.rfc-editor.org/info/rfc7337" quoteTitle="true" derivedAnchor="RFC7337">
          <front>
            <title>Content Distribution Network Interconnection (CDNI) Requirements</title>
            <author initials="K." surname="Leung" fullname="K. Leung" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="Y." surname="Lee" fullname="Y. Lee" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2014" month="August"/>
            <abstract>
              <t indent="0">Content delivery is frequently provided by specifically architected and provisioned Content Delivery Networks (CDNs).  As a result of significant growth in content delivered over IP networks, existing CDN providers are scaling up their infrastructure.  Many Network Service Providers (NSPs) and Enterprise Service Providers (ESPs) are also deploying their own CDNs.  To deliver contents from the Content Service Provider (CSP) to end users, the contents may traverse across multiple CDNs.  This creates a need for interconnecting (previously) standalone CDNs so that they can collectively act as a single delivery platform from the CSP to the end users.</t>
              <t indent="0">The goal of the present document is to outline the requirements for the solution and interfaces to be specified by the CDNI working group.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="7337"/>
          <seriesInfo name="DOI" value="10.17487/RFC7337"/>
        </reference>
        <reference anchor="RFC7517" target="https://www.rfc-editor.org/info/rfc7517" quoteTitle="true" derivedAnchor="RFC7517">
          <front>
            <title>JSON Web Key (JWK)</title>
            <author initials="M." surname="Jones" fullname="M. Jones">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2015" month="May"/>
            <abstract>
              <t indent="0">A JSON Web Key (JWK) is a JavaScript Object Notation (JSON) data structure that represents a cryptographic key.  This specification also defines a JWK Set JSON data structure that represents a set of JWKs.  Cryptographic algorithms and identifiers for use with this specification are described in the separate JSON Web Algorithms (JWA) specification and IANA registries established by that specification.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="7517"/>
          <seriesInfo name="DOI" value="10.17487/RFC7517"/>
        </reference>
        <reference anchor="RFC7975" target="https://www.rfc-editor.org/info/rfc7975" quoteTitle="true" derivedAnchor="RFC7975">
          <front>
            <title>Request Routing Redirection Interface for Content Delivery Network (CDN) Interconnection</title>
            <author initials="B." surname="Niven-Jenkins" fullname="B. Niven-Jenkins" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="R." surname="van Brandenburg" fullname="R. van Brandenburg" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2016" month="October"/>
            <abstract>
              <t indent="0">The Request Routing interface comprises (1) the asynchronous advertisement of footprint and capabilities by a downstream Content Delivery Network (CDN) that allows an upstream CDN to decide whether to redirect particular user requests to that downstream CDN; and (2) the synchronous operation of an upstream CDN requesting whether a downstream CDN is prepared to accept a user request and of a downstream CDN responding with how to actually redirect the user request.  This document describes an interface for the latter part, i.e., the CDNI Request Routing Redirection interface.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="7975"/>
          <seriesInfo name="DOI" value="10.17487/RFC7975"/>
        </reference>
        <reference anchor="RFC8008" target="https://www.rfc-editor.org/info/rfc8008" quoteTitle="true" derivedAnchor="RFC8008">
          <front>
            <title>Content Delivery Network Interconnection (CDNI) Request Routing: Footprint and Capabilities Semantics</title>
            <author initials="J." surname="Seedorf" fullname="J. Seedorf">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="J." surname="Peterson" fullname="J. Peterson">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="S." surname="Previdi" fullname="S. Previdi">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="R." surname="van Brandenburg" fullname="R. van Brandenburg">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="K." surname="Ma" fullname="K. Ma">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2016" month="December"/>
            <abstract>
              <t indent="0">This document captures the semantics of the "Footprint and                          Capabilities Advertisement" part of the Content Delivery Network Interconnection (CDNI) Request Routing interface, i.e., the desired meaning of "Footprint" and "Capabilities" in the CDNI context and what the "Footprint &amp; Capabilities Advertisement interface (FCI)" offers within CDNI.  The document also provides guidelines for the CDNI FCI protocol.  It further defines a Base Advertisement Object, the necessary registries for capabilities and footprints, and guidelines on how these registries can be extended in the future.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8008"/>
          <seriesInfo name="DOI" value="10.17487/RFC8008"/>
        </reference>
        <reference anchor="RFC8216" target="https://www.rfc-editor.org/info/rfc8216" quoteTitle="true" derivedAnchor="RFC8216">
          <front>
            <title>HTTP Live Streaming</title>
            <author initials="R." surname="Pantos" fullname="R. Pantos" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="W." surname="May" fullname="W. May">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2017" month="August"/>
            <abstract>
              <t indent="0">This document describes a protocol for transferring unbounded streams of multimedia data.  It specifies the data format of the files and the actions to be taken by the server (sender) and the clients (receivers) of the streams.  It describes version 7 of this protocol.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8216"/>
          <seriesInfo name="DOI" value="10.17487/RFC8216"/>
        </reference>
        <reference anchor="RFC8725" target="https://www.rfc-editor.org/info/rfc8725" quoteTitle="true" derivedAnchor="RFC8725">
          <front>
            <title>JSON Web Token Best Current Practices</title>
            <author initials="Y." surname="Sheffer" fullname="Y. Sheffer">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="D." surname="Hardt" fullname="D. Hardt">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="M." surname="Jones" fullname="M. Jones">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2020" month="February"/>
            <abstract>
              <t indent="0">JSON Web Tokens, also known as JWTs, are URL-safe JSON-based security tokens that contain a set of claims that can be signed and/or encrypted. JWTs are being widely used and deployed as a simple security token format in numerous protocols and applications, both in the area of digital identity and in other application areas.  This Best Current Practices document updates RFC 7519 to provide actionable guidance leading to secure implementation and deployment of JWTs.</t>
            </abstract>
          </front>
          <seriesInfo name="BCP" value="225"/>
          <seriesInfo name="RFC" value="8725"/>
          <seriesInfo name="DOI" value="10.17487/RFC8725"/>
        </reference>
      </references>
    </references>
    <section anchor="sup_example" numbered="true" toc="include" removeInRFC="false" pn="section-appendix.a">
      <name slugifiedName="name-signed-uri-package-example">Signed URI Package Example</name>
      <t indent="0" pn="section-appendix.a-1">This section contains three examples of token usage: a simple example with only the
      required claim present, a complex example that demonstrates the full JWT claims set,
      including an encrypted Client IP Address (cdniip), and one that uses a Signed Token Renewal.</t>
      <t indent="0" pn="section-appendix.a-2">Note: All of the examples have empty space added to improve formatting and readability,
      but are not present in the generated content.</t>
      <t indent="0" pn="section-appendix.a-3">All examples use the following JWK Set <xref target="RFC7517" format="default" sectionFormat="of" derivedContent="RFC7517"/>:</t>
      <sourcecode type="json" markers="false" pn="section-appendix.a-4">
{ "keys": [
  {
    "kty": "EC",
    "kid": "P5UpOv0eMq1wcxLf7WxIg09JdSYGYFDOWkldueaImf0",
    "use": "sig",
    "alg": "ES256",
    "crv": "P-256",
    "x": "be807S4O7dzB6I4hTiCUvmxCI6FuxWba1xYBlLSSsZ8",
    "y": "rOGC4vI69g-WF9AGEVI37sNNwbjIzBxSjLvIL7f3RBA"
  },
  {
    "kty": "EC",
    "kid": "P5UpOv0eMq1wcxLf7WxIg09JdSYGYFDOWkldueaImf0",
    "use": "sig",
    "alg": "ES256",
    "crv": "P-256",
    "x": "be807S4O7dzB6I4hTiCUvmxCI6FuxWba1xYBlLSSsZ8",
    "y": "rOGC4vI69g-WF9AGEVI37sNNwbjIzBxSjLvIL7f3RBA",
    "d": "yaowezrCLTU6yIwUL5RQw67cHgvZeMTLVZXjUGb1A1M"
  },
  {
    "kty": "oct",
    "kid": "f-WbjxBC3dPuI3d24kP2hfvos7Qz688UTi6aB0hN998",
    "use": "enc",
    "alg": "A128GCM",
    "k": "4uFxxV7fhNmrtiah2d1fFg"
  }
]}
</sourcecode>
      <t indent="0" pn="section-appendix.a-5">Note: They are the public signing key, the private signing
     key, and the shared secret encryption key, respectively. The public and private signing
     keys have the same fingerprint and only vary by the 'd' parameter that is missing from the
     public signing key.</t>
      <section anchor="simple_example" numbered="true" toc="include" removeInRFC="false" pn="section-appendix.a.1">
        <name slugifiedName="name-simple-example">Simple Example</name>
        <t indent="0" pn="section-appendix.a.1-1">
          This example is a simple common usage example containing
          a minimal subset of claims that the authors find most useful.
        </t>
        <t indent="0" pn="section-appendix.a.1-2">
          The JWT Claim Set before signing:
        </t>
        <t indent="0" pn="section-appendix.a.1-3">
          Note: "sha-256;2tderfWPa86Ku7YnzW51YUp7dGUjBS_3SW3ELx4hmWY" is the URL Segment form
          (<xref target="RFC6920" sectionFormat="of" section="5" format="default" derivedLink="https://rfc-editor.org/rfc/rfc6920#section-5" derivedContent="RFC6920"/>) of "http://cdni.example/foo/bar".
        </t>
        <sourcecode type="json" markers="false" pn="section-appendix.a.1-4">
{
  "exp": 1646867369,
  "iss": "uCDN Inc",
  "cdniuc":
    "hash:sha-256;2tderfWPa86Ku7YnzW51YUp7dGUjBS_3SW3ELx4hmWY"
}
</sourcecode>
        <t indent="0" pn="section-appendix.a.1-5">
          The signed JWT:
        </t>
        <sourcecode markers="false" pn="section-appendix.a.1-6">
eyJhbGciOiJFUzI1NiIsImtpZCI6IlA1VXBPdjBlTXExd2N4TGY3V3hJZzA5SmRTWU
dZRkRPV2tsZHVlYUltZjAifQ.eyJleHAiOjE2NDY4NjczNjksImlzcyI6InVDRE4gS
W5jIiwiY2RuaXVjIjoiaGFzaDpzaGEtMjU2OzJ0ZGVyZldQYTg2S3U3WW56VzUxWVV
wN2RHVWpCU18zU1czRUx4NGhtV1kifQ.TaNlJM3D96i_9J9XvlICO6FUIDFTqt3E2Y
JkEUOLfcH0b89wYRKTbJ9Yj6h_GRgSoZoQO0cps3yUPcWGK3smCw
</sourcecode>
      </section>
      <section anchor="complex_example" numbered="true" toc="include" removeInRFC="false" pn="section-appendix.a.2">
        <name slugifiedName="name-complex-example">Complex Example</name>
        <t indent="0" pn="section-appendix.a.2-1">
          This example uses all fields except for those dealing
          with Signed Token Renewal, including Client IP Address (cdniip) and Subject (sub), which are
          encrypted. This significantly increases the size of the signed
          JWT token.
        </t>
        <t indent="0" pn="section-appendix.a.2-2">
          JWE for Client IP Address (cdniip) of [2001:db8::1/32]:
        </t>
        <sourcecode markers="false" pn="section-appendix.a.2-3">
eyJlbmMiOiJBMTI4R0NNIiwiYWxnIjoiZGlyIiwia2lkIjoiZi1XYmp4QkMzZFB1ST
NkMjRrUDJoZnZvczdRejY4OFVUaTZhQjBoTjk5OCJ9..aUDDFEQBIc3nWjOb.bGXWT
HPkntmPCKn0pPPNEQ.iyTttnFybO2YBLqwl_YSjA
</sourcecode>
        <t indent="0" pn="section-appendix.a.2-4">
          JWE for Subject (sub) of "UserToken":
        </t>
        <sourcecode markers="false" pn="section-appendix.a.2-5">
eyJlbmMiOiJBMTI4R0NNIiwiYWxnIjoiZGlyIiwia2lkIjoiZi1XYmp4QkMzZFB1ST
NkMjRrUDJoZnZvczdRejY4OFVUaTZhQjBoTjk5OCJ9..CLAu80xclc8Bp-Ui.6P1A3
F6ip2Dv.CohdtLLpgBnTvRJQCFuz-g
</sourcecode>
        <t indent="0" pn="section-appendix.a.2-6">
          The JWT Claim Set before signing:
        </t>
        <sourcecode type="json" markers="false" pn="section-appendix.a.2-7">
{
  "aud": "dCDN LLC",
  "sub": "eyJlbmMiOiJBMTI4R0NNIiwiYWxnIjoiZGlyIiwia2lkIjoiZi1XYmp4
QkMzZFB1STNkMjRrUDJoZnZvczdRejY4OFVUaTZhQjBoTjk5OCJ9..CLAu80xclc8B
p-Ui.6P1A3F6ip2Dv.CohdtLLpgBnTvRJQCFuz-g",
  "cdniip": "eyJlbmMiOiJBMTI4R0NNIiwiYWxnIjoiZGlyIiwia2lkIjoiZi1XY
mp4QkMzZFB1STNkMjRrUDJoZnZvczdRejY4OFVUaTZhQjBoTjk5OCJ9..aUDDFEQBI
c3nWjOb.bGXWTHPkntmPCKn0pPPNEQ.iyTttnFybO2YBLqwl_YSjA",
  "cdniv": 1,
  "exp": 1646867369,
  "iat": 1646694569,
  "iss": "uCDN Inc",
  "jti": "5DAafLhZAfhsbe",
  "nbf": 1646780969,
  "cdniuc": "regex:http://cdni\\.example/foo/bar/[0-9]{3}\\.png"
}
</sourcecode>
        <t indent="0" pn="section-appendix.a.2-8">
          The signed JWT:
        </t>
        <sourcecode markers="false" pn="section-appendix.a.2-9">
eyJhbGciOiJFUzI1NiIsImtpZCI6IlA1VXBPdjBlTXExd2N4TGY3V3hJZzA5SmRTWU
dZRkRPV2tsZHVlYUltZjAifQ.eyJhdWQiOiJkQ0ROIExMQyIsInN1YiI6ImV5Smxib
U1pT2lKQk1USTRSME5OSWl3aVlXeG5Jam9pWkdseUlpd2lhMmxrSWpvaVppMVhZbXA
0UWtNelpGQjFTVE5rTWpSclVESm9ablp2Y3pkUmVqWTRPRlZVYVRaaFFqQm9Uams1T
0NKOS4uQ0xBdTgweGNsYzhCcC1VaS42UDFBM0Y2aXAyRHYuQ29oZHRMTHBnQm5UdlJ
KUUNGdXotZyIsImNkbmlpcCI6ImV5SmxibU1pT2lKQk1USTRSME5OSWl3aVlXeG5Ja
m9pWkdseUlpd2lhMmxrSWpvaVppMVhZbXA0UWtNelpGQjFTVE5rTWpSclVESm9ablp
2Y3pkUmVqWTRPRlZVYVRaaFFqQm9Uams1T0NKOS4uYVVEREZFUUJJYzNuV2pPYi5iR
1hXVEhQa250bVBDS24wcFBQTkVRLml5VHR0bkZ5Yk8yWUJMcXdsX1lTakEiLCJjZG5
pdiI6MSwiZXhwIjoxNjQ2ODY3MzY5LCJpYXQiOjE2NDY2OTQ1NjksImlzcyI6InVDR
E4gSW5jIiwianRpIjoiNURBYWZMaFpBZmhzYmUiLCJuYmYiOjE2NDY3ODA5NjksImN
kbml1YyI6InJlZ2V4Omh0dHA6Ly9jZG5pXFwuZXhhbXBsZS9mb28vYmFyL1swLTlde
zN9XFwucG5nIn0.IjmVX0uD5MYqArc-M08uEsEeoDQn8kuYXZ9HGHDmDDxsHikT0c8
jcX8xYD0z3LzQclMG65i1kT2sRbZ7isUw8w
</sourcecode>
      </section>
      <section anchor="token_renewal_example" numbered="true" toc="include" removeInRFC="false" pn="section-appendix.a.3">
        <name slugifiedName="name-signed-token-renewal-exampl">Signed Token Renewal Example</name>
        <t indent="0" pn="section-appendix.a.3-1">
          This example uses fields for Signed Token Renewal.
        </t>
        <t indent="0" pn="section-appendix.a.3-2">
          The JWT Claim Set before signing:
        </t>
        <sourcecode type="json" markers="false" pn="section-appendix.a.3-3">
{
  "cdniets": 30,
  "cdnistt": 1,
  "cdnistd": 2,
  "exp": 1646867369,
  "cdniuc": "regex:http://cdni\\.example/foo/bar/[0-9]{3}\\.ts"
}
</sourcecode>
        <t indent="0" pn="section-appendix.a.3-4">
          The signed JWT:
        </t>
        <sourcecode markers="false" pn="section-appendix.a.3-5">
eyJhbGciOiJFUzI1NiIsImtpZCI6IlA1VXBPdjBlTXExd2N4TGY3V3hJZzA5SmRTWU
dZRkRPV2tsZHVlYUltZjAifQ.eyJjZG5pZXRzIjozMCwiY2RuaXN0dCI6MSwiY2Rua
XN0ZCI6MiwiZXhwIjoxNjQ2ODY3MzY5LCJjZG5pdWMiOiJyZWdleDpodHRwOi8vY2R
uaVxcLmV4YW1wbGUvZm9vL2Jhci9bMC05XXszfVxcLnRzIn0.tlPvoKw3BCClw4Lx9
PQu7MK6b2IN55ZoCPSaxovGK0zS53Wpb1MbJBow7G8LiGR39h6-2Iq7PWUSr3MdTIz
HYw
</sourcecode>
        <t indent="0" pn="section-appendix.a.3-6">
          Once the server verifies the signed JWT it will return a
          new signed JWT with an updated Expiry Time (exp) as shown
          below. Note the Expiry Time is increased by the expiration
          time setting (cdniets) value.
        </t>
        <t indent="0" pn="section-appendix.a.3-7">
          The JWT Claim Set before signing:
        </t>
        <sourcecode type="json" markers="false" pn="section-appendix.a.3-8">
{
  "cdniets": 30,
  "cdnistt": 1,
  "cdnistd": 2,
  "exp": 1646867399,
  "cdniuc": "regex:http://cdni\\.example/foo/bar/[0-9]{3}\\.ts"
}
</sourcecode>
        <t indent="0" pn="section-appendix.a.3-9">
          The signed JWT:
        </t>
        <sourcecode markers="false" pn="section-appendix.a.3-10">
eyJhbGciOiJFUzI1NiIsImtpZCI6IlA1VXBPdjBlTXExd2N4TGY3V3hJZzA5SmRTWU
dZRkRPV2tsZHVlYUltZjAifQ.eyJjZG5pZXRzIjozMCwiY2RuaXN0dCI6MSwiY2Rua
XN0ZCI6MiwiZXhwIjoxNjQ2ODY3Mzk5LCJjZG5pdWMiOiJyZWdleDpodHRwOi8vY2R
uaVxcLmV4YW1wbGUvZm9vL2Jhci9bMC05XXszfVxcLnRzIn0.ivY5d_fKGd-OHTpUs
8uJUrnHvt-rduzu5H4zM7167pUUAghub53FqDQ5G16jRYX2sY73mA_uLpYDdb-CPts
8FA
</sourcecode>
      </section>
    </section>
    <section numbered="false" toc="include" removeInRFC="false" pn="section-appendix.b">
      <name slugifiedName="name-acknowledgements">Acknowledgements</name>
      <t indent="0" pn="section-appendix.b-1">The authors would like to thank the following people for their
      contributions in reviewing this document and providing feedback: <contact fullname="Scott       Leibrand"/>, <contact fullname="Kevin Ma"/>, <contact fullname="Ben Niven-Jenkins"/>, <contact fullname="Thierry Magnien"/>, <contact fullname="Dan York"/>,
      <contact fullname="Bhaskar Bhupalam"/>, <contact fullname="Matt Caulfield"/>, <contact fullname="Samuel Rajakumar"/>, <contact fullname="Iuniana Oprescu"/>,
      <contact fullname="Leif Hedstrom"/>, <contact fullname="Gancho Tenev"/>, <contact fullname="Brian Campbell"/>, and <contact fullname="Chris Lemmons"/>.</t>
    </section>
    <section numbered="false" toc="include" removeInRFC="false" pn="section-appendix.c">
      <name slugifiedName="name-contributors">Contributors</name>
      <t indent="0" pn="section-appendix.c-1">In addition, the authors would also like to make special mentions for certain
      people who contributed significant sections to this document.</t>
      <ul spacing="normal" bare="false" empty="false" indent="3" pn="section-appendix.c-2">
        <li pn="section-appendix.c-2.1">
          <t indent="0" pn="section-appendix.c-2.1.1"><contact fullname="Matt Caulfield"/> provided content for <xref target="metadata" format="default" sectionFormat="of" derivedContent="Section 4.4"/>, "CDNI Metadata Interface".</t>
        </li>
        <li pn="section-appendix.c-2.2">
          <t indent="0" pn="section-appendix.c-2.2.1"><contact fullname="Emmanuel Thomas"/> provided content for HTTP Adaptive Streaming.</t>
        </li>
        <li pn="section-appendix.c-2.3">
          <t indent="0" pn="section-appendix.c-2.3.1"><contact fullname="Matt Miller"/> provided consultation on JWT usage as well as code to generate working JWT examples.</t>
        </li>
      </ul>
    </section>
    <section anchor="authors-addresses" numbered="false" removeInRFC="false" toc="include" pn="section-appendix.d">
      <name slugifiedName="name-authors-addresses">Authors' Addresses</name>
      <author fullname="Ray van Brandenburg" initials="R" surname="van Brandenburg">
        <organization showOnFrontPage="true">Tiledmedia</organization>
        <address>
          <postal>
            <street>Anna van Buerenplein 1</street>
            <city>Den Haag</city>
            <region/>
            <code>2595DA</code>
            <country>Netherlands</country>
          </postal>
          <phone>+31 88 866 7000</phone>
          <email>ray@tiledmedia.com</email>
        </address>
      </author>
      <author fullname="Kent Leung" initials="K" surname="Leung">
        <address>
          <email>mail4kentl@gmail.com</email>
        </address>
      </author>
      <author fullname="Phil Sorber" initials="P" surname="Sorber">
        <organization showOnFrontPage="true">Apple, Inc.</organization>
        <address>
          <postal>
            <street>1800 Wazee Street</street>
            <extaddr>Suite 410</extaddr>
            <city>Denver</city>
            <region>CO</region>
            <code>80202</code>
            <country>United States</country>
          </postal>
          <email>sorber@apple.com</email>
        </address>
      </author>
    </section>
  </back>
</rfc>
