<?xml version='1.0' encoding='utf-8'?>
<rfc xmlns:xi="http://www.w3.org/2001/XInclude" version="3" category="std" consensus="true" docName="draft-ietf-lamps-cms-shakes-18" indexInclude="true" ipr="trust200902" number="8702" prepTime="2020-01-31T13:47:14" scripts="Common,Latin" sortRefs="true" submissionType="IETF" symRefs="true" tocDepth="3" tocInclude="true" updates="3370" xml:lang="en">
  <link href="https://datatracker.ietf.org/doc/draft-ietf-lamps-cms-shakes-18" rel="prev"/>
  <link href="https://dx.doi.org/10.17487/rfc8702" rel="alternate"/>
  <link href="urn:issn:2070-1721" rel="alternate"/>
  <front>
    <title abbrev="SHAKEs in CMS">Use of the SHAKE One-Way Hash Functions in the Cryptographic Message Syntax (CMS)</title>
    <seriesInfo name="RFC" value="8702" stream="IETF"/>
    <author fullname="Panos Kampanakis" initials="P." surname="Kampanakis">
      <organization showOnFrontPage="true">Cisco Systems</organization>
      <address>
        <email>pkampana@cisco.com</email>
      </address>
    </author>
    <author fullname="Quynh Dang" initials="Q." surname="Dang">
      <organization showOnFrontPage="true">NIST</organization>
      <address>
        <postal>
          <street>100 Bureau Drive</street>
          <city>Gaithersburg</city>
          <region>MD</region>
          <code>20899</code>
          <country>United States of America</country>
        </postal>
        <email>quynh.Dang@nist.gov</email>
      </address>
    </author>
    <date month="01" year="2020"/>
    <area>General</area>
    <workgroup>LAMPS WG</workgroup>
    <keyword>SHAKEs in CMS</keyword>
    <keyword>SHAKE</keyword>
    <keyword>CMS with SHAKEs</keyword>
    <abstract pn="section-abstract">
      <t pn="section-abstract-1">This document updates the "Cryptographic Message Syntax (CMS)
      Algorithms"
   (RFC 3370) and describes the conventions for using the SHAKE family of
   hash functions in the Cryptographic Message Syntax as one-way hash
   functions with the RSA Probabilistic Signature Scheme (RSASSA-PSS)
   and Elliptic Curve Digital Signature Algorithm (ECDSA).  The
   conventions for the associated signer public keys in CMS are also
   described.</t>
    </abstract>
    <boilerplate>
      <section anchor="status-of-memo" numbered="false" removeInRFC="false" toc="exclude" pn="section-boilerplate.1">
        <name slugifiedName="name-status-of-this-memo">Status of This Memo</name>
        <t pn="section-boilerplate.1-1">
            This is an Internet Standards Track document.
        </t>
        <t pn="section-boilerplate.1-2">
            This document is a product of the Internet Engineering Task Force
            (IETF).  It represents the consensus of the IETF community.  It has
            received public review and has been approved for publication by
            the Internet Engineering Steering Group (IESG).  Further
            information on Internet Standards is available in Section 2 of 
            RFC 7841.
        </t>
        <t pn="section-boilerplate.1-3">
            Information about the current status of this document, any
            errata, and how to provide feedback on it may be obtained at
            <eref target="https://www.rfc-editor.org/info/rfc8702" brackets="none"/>.
        </t>
      </section>
      <section anchor="copyright" numbered="false" removeInRFC="false" toc="exclude" pn="section-boilerplate.2">
        <name slugifiedName="name-copyright-notice">Copyright Notice</name>
        <t pn="section-boilerplate.2-1">
            Copyright (c) 2020 IETF Trust and the persons identified as the
            document authors. All rights reserved.
        </t>
        <t pn="section-boilerplate.2-2">
            This document is subject to BCP 78 and the IETF Trust's Legal
            Provisions Relating to IETF Documents
            (<eref target="https://trustee.ietf.org/license-info" brackets="none"/>) in effect on the date of
            publication of this document. Please review these documents
            carefully, as they describe your rights and restrictions with
            respect to this document. Code Components extracted from this
            document must include Simplified BSD License text as described in
            Section 4.e of the Trust Legal Provisions and are provided without
            warranty as described in the Simplified BSD License.
        </t>
      </section>
    </boilerplate>
    <toc>
      <section anchor="toc" numbered="false" removeInRFC="false" toc="exclude" pn="section-toc.1">
        <name slugifiedName="name-table-of-contents">Table of Contents</name>
        <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1">
          <li pn="section-toc.1-1.1">
            <t keepWithNext="true" pn="section-toc.1-1.1.1"><xref derivedContent="1" format="counter" sectionFormat="of" target="section-1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-introduction">Introduction</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.1.2">
              <li pn="section-toc.1-1.1.2.1">
                <t keepWithNext="true" pn="section-toc.1-1.1.2.1.1"><xref derivedContent="1.1" format="counter" sectionFormat="of" target="section-1.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-terminology">Terminology</xref></t>
              </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.2">
            <t keepWithNext="true" pn="section-toc.1-1.2.1"><xref derivedContent="2" format="counter" sectionFormat="of" target="section-2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-identifiers">Identifiers</xref></t>
          </li>
          <li pn="section-toc.1-1.3">
            <t keepWithNext="true" pn="section-toc.1-1.3.1"><xref derivedContent="3" format="counter" sectionFormat="of" target="section-3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-use-in-cms">Use in CMS</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.3.2">
              <li pn="section-toc.1-1.3.2.1">
                <t keepWithNext="true" pn="section-toc.1-1.3.2.1.1"><xref derivedContent="3.1" format="counter" sectionFormat="of" target="section-3.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-message-digests">Message Digests</xref></t>
              </li>
              <li pn="section-toc.1-1.3.2.2">
                <t keepWithNext="true" pn="section-toc.1-1.3.2.2.1"><xref derivedContent="3.2" format="counter" sectionFormat="of" target="section-3.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-signatures">Signatures</xref></t>
                <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.3.2.2.2">
                  <li pn="section-toc.1-1.3.2.2.2.1">
                    <t keepWithNext="true" pn="section-toc.1-1.3.2.2.2.1.1"><xref derivedContent="3.2.1" format="counter" sectionFormat="of" target="section-3.2.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-rsassa-pss-signatures">RSASSA-PSS Signatures</xref></t>
                  </li>
                  <li pn="section-toc.1-1.3.2.2.2.2">
                    <t keepWithNext="true" pn="section-toc.1-1.3.2.2.2.2.1"><xref derivedContent="3.2.2" format="counter" sectionFormat="of" target="section-3.2.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-ecdsa-signatures">ECDSA Signatures</xref></t>
                  </li>
                </ul>
              </li>
              <li pn="section-toc.1-1.3.2.3">
                <t keepWithNext="true" pn="section-toc.1-1.3.2.3.1"><xref derivedContent="3.3" format="counter" sectionFormat="of" target="section-3.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-public-keys">Public Keys</xref></t>
              </li>
              <li pn="section-toc.1-1.3.2.4">
                <t keepWithNext="true" pn="section-toc.1-1.3.2.4.1"><xref derivedContent="3.4" format="counter" sectionFormat="of" target="section-3.4"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-message-authentication-code">Message Authentication Codes</xref></t>
              </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.4">
            <t keepWithNext="true" pn="section-toc.1-1.4.1"><xref derivedContent="4" format="counter" sectionFormat="of" target="section-4"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-iana-considerations">IANA Considerations</xref></t>
          </li>
          <li pn="section-toc.1-1.5">
            <t keepWithNext="true" pn="section-toc.1-1.5.1"><xref derivedContent="5" format="counter" sectionFormat="of" target="section-5"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-security-considerations">Security Considerations</xref></t>
          </li>
          <li pn="section-toc.1-1.6">
            <t keepWithNext="true" pn="section-toc.1-1.6.1"><xref derivedContent="6" format="counter" sectionFormat="of" target="section-6"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-references">References</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.6.2">
              <li pn="section-toc.1-1.6.2.1">
                <t keepWithNext="true" pn="section-toc.1-1.6.2.1.1"><xref derivedContent="6.1" format="counter" sectionFormat="of" target="section-6.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-normative-references">Normative References</xref></t>
              </li>
              <li pn="section-toc.1-1.6.2.2">
                <t keepWithNext="true" pn="section-toc.1-1.6.2.2.1"><xref derivedContent="6.2" format="counter" sectionFormat="of" target="section-6.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-informative-references">Informative References</xref></t>
              </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.7">
            <t keepWithNext="true" pn="section-toc.1-1.7.1"><xref derivedContent="Appendix A" format="default" sectionFormat="of" target="section-appendix.a"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-asn1-module">ASN.1 Module</xref></t>
          </li>
          <li pn="section-toc.1-1.8">
            <t keepWithNext="true" pn="section-toc.1-1.8.1"><xref derivedContent="" format="none" sectionFormat="of" target="section-appendix.b"/><xref derivedContent="" format="title" sectionFormat="of" target="name-acknowledgements">Acknowledgements</xref></t>
          </li>
          <li pn="section-toc.1-1.9">
            <t keepWithNext="true" pn="section-toc.1-1.9.1"><xref derivedContent="" format="none" sectionFormat="of" target="section-appendix.c"/><xref derivedContent="" format="title" sectionFormat="of" target="name-authors-addresses">Authors' Addresses</xref></t>
          </li>
        </ul>
      </section>
    </toc>
  </front>
  <middle>
    <section anchor="intro" numbered="true" toc="include" removeInRFC="false" pn="section-1">
      <name slugifiedName="name-introduction">Introduction</name>
      <t pn="section-1-1">"Cryptographic Message Syntax (CMS)" <xref target="RFC5652" format="default" sectionFormat="of" derivedContent="RFC5652"/> describes syntax used to 
	digitally sign, digest, authenticate, or encrypt arbitrary message contents. 
	"Cryptographic Message Syntax (CMS) Algorithms" <xref target="RFC3370" format="default" sectionFormat="of" derivedContent="RFC3370"/> 
	defines the use of common cryptographic algorithms with CMS. This 
	specification updates RFC 3370 and describes the use of the SHAKE128 and SHAKE256 
    specified in <xref target="SHA3" format="default" sectionFormat="of" derivedContent="SHA3"/> as new hash functions in CMS. In addition, 
    it describes the use of these functions with the RSA Probabilistic
    Signature Scheme (RSASSA-PSS) signature 
	algorithm <xref target="RFC8017" format="default" sectionFormat="of" derivedContent="RFC8017"/> and the Elliptic Curve Digital Signature 
	Algorithm (ECDSA) <xref target="X9.62" format="default" sectionFormat="of" derivedContent="X9.62"/> with the CMS signed-data content type.</t>
      <t pn="section-1-2">In the SHA-3 family, two extendable-output functions (SHAKEs), SHAKE128 and SHAKE256, 
	are defined. Four other hash function instances (SHA3-224, SHA3-256, 
	SHA3-384, and SHA3-512) are also defined but are out of scope for this document. 
	A SHAKE is a variable-length hash function defined as SHAKE(M, d) where the 
	output is a d-bit-long digest of message M. The corresponding collision and second-preimage-resistance strengths for SHAKE128 are min(d/2,128) and min(d,128) bits, 
	respectively (see Appendix A.1 of <xref target="SHA3" format="default" sectionFormat="of" derivedContent="SHA3"/>). And the 
	corresponding collision and second-preimage-resistance 
	strengths for SHAKE256 are min(d/2,256) and min(d,256) bits, respectively. 
	In this specification, we use d=256 (for SHAKE128) and d=512 (for SHAKE256).</t>
      <t pn="section-1-3">A SHAKE can be used in CMS as the message digest function (to hash the 
    message to be signed) in RSASSA-PSS and ECDSA, as the message 
    authentication code, and as the mask generation function (MGF) in RSASSA-PSS. 
	This specification describes the identifiers for SHAKEs to be used in 
	CMS and their meanings. </t>
      <section anchor="terminology" numbered="true" toc="include" removeInRFC="false" pn="section-1.1">
        <name slugifiedName="name-terminology">Terminology</name>
        <t pn="section-1.1-1">
    The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>", "<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>", "<bcp14>SHALL NOT</bcp14>", "<bcp14>SHOULD</bcp14>", "<bcp14>SHOULD NOT</bcp14>", "<bcp14>RECOMMENDED</bcp14>", "<bcp14>NOT RECOMMENDED</bcp14>",
    "<bcp14>MAY</bcp14>", and "<bcp14>OPTIONAL</bcp14>" in this document are to be interpreted as
    described in BCP 14 <xref target="RFC2119" format="default" sectionFormat="of" derivedContent="RFC2119"/> <xref target="RFC8174" format="default" sectionFormat="of" derivedContent="RFC8174"/> 
    when, and only when, they appear in all capitals, as shown here.
        </t>
      </section>
    </section>
    <section anchor="oids" numbered="true" toc="include" removeInRFC="false" pn="section-2">
      <name slugifiedName="name-identifiers">Identifiers</name>
      <t pn="section-2-1">This section identifies eight new object identifiers (OIDs) 
	 for using SHAKE128 and SHAKE256 in CMS.</t>
      <t pn="section-2-2">Two object identifiers for SHAKE128 and SHAKE256 hash functions are defined 
	 in <xref target="shake-nist-oids" format="default" sectionFormat="of" derivedContent="shake-nist-oids"/>, and we include them here for convenience.</t>
      <sourcecode type="asn.1" markers="false" pn="section-2-3">
  id-shake128 OBJECT IDENTIFIER ::= { joint-iso-itu-t(2) 
       country(16) us(840) organization(1) gov(101) csor(3) 
       nistAlgorithm(4) 2 11 }

  id-shake256 OBJECT IDENTIFIER ::= { joint-iso-itu-t(2) 
       country(16) us(840) organization(1) gov(101) csor(3) 
       nistAlgorithm(4) 2 12 }
</sourcecode>
      <t pn="section-2-4">In this specification, when using the id-shake128 or id-shake256 algorithm identifiers, the parameters <bcp14>MUST</bcp14> be absent. That is, the identifier <bcp14>SHALL</bcp14> be a SEQUENCE of one component, the OID. 
      </t>
      <t pn="section-2-5"><xref target="RFC8692" format="default" sectionFormat="of" derivedContent="RFC8692"/> 
	 defines two identifiers for RSASSA-PSS signatures using SHAKEs, which we include here for 
	 convenience.
      </t>
      <sourcecode type="asn.1" markers="false" pn="section-2-6">
  id-RSASSA-PSS-SHAKE128  OBJECT IDENTIFIER  ::=  { iso(1) 
            identified-organization(3) dod(6) internet(1) 
            security(5) mechanisms(5) pkix(7) algorithms(6) 30 }

  id-RSASSA-PSS-SHAKE256  OBJECT IDENTIFIER  ::=  { iso(1) 
            identified-organization(3) dod(6) internet(1) 
            security(5) mechanisms(5) pkix(7) algorithms(6) 31 }
</sourcecode>
      <t pn="section-2-7">The same RSASSA-PSS algorithm identifiers can be used for identifying 
	 public keys and signatures.</t>
      <t pn="section-2-8"><xref target="RFC8692" format="default" sectionFormat="of" derivedContent="RFC8692"/> 
	 also defines two algorithm 
	 identifiers of ECDSA signatures using SHAKEs, which we include here for 
	 convenience.
      </t>
      <sourcecode type="asn.1" markers="false" pn="section-2-9">
  id-ecdsa-with-shake128 OBJECT IDENTIFIER  ::=  { iso(1) 
            identified-organization(3) dod(6) internet(1) 
            security(5) mechanisms(5) pkix(7) algorithms(6) 32 }            

  id-ecdsa-with-shake256 OBJECT IDENTIFIER  ::=  { iso(1) 
            identified-organization(3) dod(6) internet(1) 
            security(5) mechanisms(5) pkix(7) algorithms(6) 33 }
</sourcecode>
      <t pn="section-2-10">The parameters for the four RSASSA-PSS and ECDSA identifiers 
	 <bcp14>MUST</bcp14> be absent. That is, each identifier <bcp14>SHALL</bcp14> be a SEQUENCE of one component, 
	 the OID.</t>
      <t pn="section-2-11">
	 In <xref target="shake-nist-oids" format="default" sectionFormat="of" derivedContent="shake-nist-oids"/>, the National
	 Institute of Standards and Technology (NIST) defines two object
	 identifiers for Keccak message authentication codes (KMACs) using SHAKE128 and SHAKE256, 
	 and we include them here for convenience.</t>
      <sourcecode type="asn.1" markers="false" pn="section-2-12">
   id-KmacWithSHAKE128 OBJECT IDENTIFIER ::= { joint-iso-itu-t(2) 
       country(16) us(840) organization(1) gov(101) csor(3) 
       nistAlgorithm(4) 2 19 }

   id-KmacWithSHAKE256 OBJECT IDENTIFIER ::= { joint-iso-itu-t(2) 
       country(16) us(840) organization(1) gov(101) csor(3) 
       nistAlgorithm(4) 2 20 }
</sourcecode>
      <t pn="section-2-13">The parameters for id-KmacWithSHAKE128 and id-KmacWithSHAKE256 are <bcp14>OPTIONAL</bcp14>.</t>
      <t pn="section-2-14">Sections <xref target="md" format="counter" sectionFormat="of" derivedContent="3.1"/>, <xref target="rsa-sigs" format="counter" sectionFormat="of" derivedContent="3.2.1"/>, <xref target="ecdsa-sigs" format="counter" sectionFormat="of" derivedContent="3.2.2"/>, and <xref target="kmac" format="counter" sectionFormat="of" derivedContent="3.4"/> specify
      the required output length for each use of SHAKE128 or SHAKE256 in
      message digests, RSASSA-PSS, ECDSA, and KMAC.</t>
    </section>
    <section numbered="true" toc="include" removeInRFC="false" pn="section-3">
      <name slugifiedName="name-use-in-cms">Use in CMS</name>
      <section anchor="md" numbered="true" toc="include" removeInRFC="false" pn="section-3.1">
        <name slugifiedName="name-message-digests">Message Digests</name>
        <t pn="section-3.1-1">The id-shake128 and id-shake256 OIDs (see <xref target="oids" format="default" sectionFormat="of" derivedContent="Section 2"/>) can 
		be used as the digest algorithm identifiers located in the SignedData, 
		SignerInfo, DigestedData, and the AuthenticatedData digestAlgorithm fields 
		in CMS <xref target="RFC5652" format="default" sectionFormat="of" derivedContent="RFC5652"/>. The OID encoding <bcp14>MUST</bcp14> omit the parameters field and the output length of SHAKE128 or SHAKE256 as the message digest <bcp14>MUST</bcp14> be 32 or 64 bytes, respectively.</t>
        <t pn="section-3.1-2">The digest values are located in the DigestedData field and the Message 
	    Digest authenticated attribute included in the signedAttributes of the 
	    SignedData signerInfos. In addition, digest values are input to 
	    signature algorithms. The digest algorithm <bcp14>MUST</bcp14> be the same as the 
		message hash algorithms used in signatures.</t>
      </section>
      <section anchor="sigs" numbered="true" toc="include" removeInRFC="false" pn="section-3.2">
        <name slugifiedName="name-signatures">Signatures</name>
        <t pn="section-3.2-1">In CMS, signature algorithm identifiers are located in the SignerInfo 
        signatureAlgorithm field of signed-data content type and countersignature attribute. 
        Signature values are located in the SignerInfo signature field of 
		signed-data content type and countersignature attribute.</t>
        <t pn="section-3.2-2">Conforming implementations that process RSASSA-PSS and 
		ECDSA with SHAKE signatures when processing CMS data <bcp14>MUST</bcp14> recognize the 
		corresponding OIDs specified in <xref target="oids" format="default" sectionFormat="of" derivedContent="Section 2"/>.</t>
        <t pn="section-3.2-3">When using RSASSA-PSS or ECDSA with SHAKEs, the RSA modulus or ECDSA 
		curve order <bcp14>SHOULD</bcp14> be chosen in line with the SHAKE output length. Refer to <xref target="sec_cons" format="default" sectionFormat="of" derivedContent="Section 5"/> for more details.</t>
        <section anchor="rsa-sigs" numbered="true" toc="include" removeInRFC="false" pn="section-3.2.1">
          <name slugifiedName="name-rsassa-pss-signatures">RSASSA-PSS Signatures</name>
          <t pn="section-3.2.1-1">The RSASSA-PSS algorithm is defined in <xref target="RFC8017" format="default" sectionFormat="of" derivedContent="RFC8017"/>.
		  When id-RSASSA-PSS-SHAKE128 or id-RSASSA-PSS-SHAKE256 (specified in <xref target="oids" format="default" sectionFormat="of" derivedContent="Section 2"/>) 
		  is used, the encoding <bcp14>MUST</bcp14> omit the parameters field. That is, 
		  the AlgorithmIdentifier <bcp14>SHALL</bcp14> be a SEQUENCE of one component: 
		  id-RSASSA-PSS-SHAKE128 or id-RSASSA-PSS-SHAKE256. <xref target="RFC4055" format="default" sectionFormat="of" derivedContent="RFC4055"/>
		  defines RSASSA-PSS-params that are used to define the algorithms and inputs 
		  to the algorithm. 
This specification does not use parameters because the 
		  hash, mask generation algorithm, trailer, and salt are embedded in 
		  the OID definition.</t>
          <t pn="section-3.2.1-2">The hash algorithm used to hash a message being signed and the hash 
          algorithm as the mask generation function used in RSASSA-PSS <bcp14>MUST</bcp14> be
          the same: both SHAKE128 or both SHAKE256. The output length of
          the hash algorithm that hashes the message <bcp14>SHALL</bcp14> be 32 (for SHAKE128) 
		  or 64 bytes (for SHAKE256). </t>
          <t pn="section-3.2.1-3">The mask generation function takes an octet string of variable
          length and a desired output length as input, and outputs an octet
          string of the desired length. In RSASSA-PSS with SHAKEs, the SHAKEs
          <bcp14>MUST</bcp14> be used natively as the MGF, instead of the MGF1
          algorithm that uses the hash function in multiple iterations, as
          specified in <xref target="RFC8017" sectionFormat="of" section="B.2.1" format="default" derivedLink="https://rfc-editor.org/rfc/rfc8017#appendix-B.2.1" derivedContent="RFC8017"/>.  In other words, the MGF is defined as the
          SHAKE128 or SHAKE256 with input being the mgfSeed for
	  id-RSASSA-PSS-SHAKE128 and id-RSASSA-PSS-SHAKE256,
	  respectively.


	   The mgfSeed is an octet string used as the seed to generate
	   the mask <xref target="RFC8017" format="default" sectionFormat="of" derivedContent="RFC8017"/>. As explained in Step 9 of
          <xref target="RFC8017" sectionFormat="of" section="9.1.1" format="default" derivedLink="https://rfc-editor.org/rfc/rfc8017#section-9.1.1" derivedContent="RFC8017"/>, the
          output length of the MGF is emLen - hLen - 1 bytes. emLen is the
          maximum message length ceil((n-1)/8), where n is the RSA modulus in
          bits. hLen is 32 and 64 bytes for id-RSASSA-PSS-SHAKE128 and
          id-RSASSA-PSS-SHAKE256, respectively. Thus, when SHAKE is used as
          the MGF, the SHAKE output length maskLen is (8*emLen - 264) or
          (8*emLen - 520) bits, respectively. For example, when RSA modulus n
          is 2048, the output length of SHAKE128 or SHAKE256 as the MGF will
          be 1784 or 1528 bits when id-RSASSA-PSS-SHAKE128 or
          id-RSASSA-PSS-SHAKE256 is used, respectively.</t>
          <t pn="section-3.2.1-4">The RSASSA-PSS saltLength <bcp14>MUST</bcp14> be 32 bytes for id-RSASSA-PSS-SHAKE128 
		  or 64 bytes for id-RSASSA-PSS-SHAKE256. 
          Finally, the trailerField <bcp14>MUST</bcp14> be 1, which represents the trailer
          field with hexadecimal value 0xBC <xref target="RFC8017" format="default" sectionFormat="of" derivedContent="RFC8017"/>.</t>
        </section>
        <section anchor="ecdsa-sigs" numbered="true" toc="include" removeInRFC="false" pn="section-3.2.2">
          <name slugifiedName="name-ecdsa-signatures">ECDSA Signatures</name>
          <t pn="section-3.2.2-1">The Elliptic Curve Digital Signature Algorithm (ECDSA) is defined in 
	      <xref target="X9.62" format="default" sectionFormat="of" derivedContent="X9.62"/>. When the id-ecdsa-with-shake128 or id-ecdsa-with-shake256
		  (specified in <xref target="oids" format="default" sectionFormat="of" derivedContent="Section 2"/>) algorithm identifier appears, the 
		  respective SHAKE function is used as the hash. 
		  The encoding <bcp14>MUST</bcp14> omit the parameters field. That is, the AlgorithmIdentifier 
		  <bcp14>SHALL</bcp14> be a SEQUENCE of one component, the OID id-ecdsa-with-shake128 or 
	  id-ecdsa-with-shake256.</t>
          <t pn="section-3.2.2-2">For simplicity and compliance with the ECDSA standard
	  specification <xref target="X9.62" format="default" sectionFormat="of" derivedContent="X9.62"/>, 
		  the output length of the hash function must be explicitly determined. 
		  The output length for SHAKE128 or SHAKE256 used in ECDSA <bcp14>MUST</bcp14> be 32 
		  or 64 bytes, respectively. </t>
          <t pn="section-3.2.2-3">Conforming Certification Authority (CA) implementations that generate ECDSA with SHAKE signatures 
		  in certificates or Certificate Revocation Lists (CRLs) <bcp14>SHOULD</bcp14> generate such signatures with a 
		  deterministically generated, nonrandom k in accordance with all 
		  the requirements specified in <xref target="RFC6979" format="default" sectionFormat="of" derivedContent="RFC6979"/>.  
		 
		  They <bcp14>MAY</bcp14> also generate such signatures 
		  in accordance with all other recommendations in <xref target="X9.62" format="default" sectionFormat="of" derivedContent="X9.62"/> or 
		  <xref target="SEC1" format="default" sectionFormat="of" derivedContent="SEC1"/> if they have a stated policy that requires 
		  conformance to those standards. Those standards have not specified  
		  SHAKE128 and SHAKE256 as hash algorithm options. However, SHAKE128 and 
		  SHAKE256 with output length being 32 and 64 octets, respectively, can  
		  be used instead of 256 and 512-bit output hash algorithms, such as SHA256 
		  and SHA512.</t>
        </section>
      </section>
      <section numbered="true" toc="include" removeInRFC="false" pn="section-3.3">
        <name slugifiedName="name-public-keys">Public Keys</name>
        <t pn="section-3.3-1">In CMS, the signer's public key algorithm identifiers are located in the 
	    OriginatorPublicKey's algorithm attribute.
		The conventions and encoding for RSASSA-PSS and ECDSA  
		public keys algorithm identifiers are as specified in 
		<xref target="RFC3279" sectionFormat="of" section="2.3" format="default" derivedLink="https://rfc-editor.org/rfc/rfc3279#section-2.3" derivedContent="RFC3279"/>, 
		<xref target="RFC4055" sectionFormat="of" section="3.1" format="default" derivedLink="https://rfc-editor.org/rfc/rfc4055#section-3.1" derivedContent="RFC4055"/>, 
		and <xref target="RFC5480" sectionFormat="of" section="2.1" format="default" derivedLink="https://rfc-editor.org/rfc/rfc5480#section-2.1" derivedContent="RFC5480"/>. 
		
        </t>
        <t pn="section-3.3-2">Traditionally, the rsaEncryption object identifier is used to
		identify RSA public keys. The rsaEncryption object identifier 
		continues to identify the public key when the RSA private 
		key owner does not wish to limit the use of the public key 
		exclusively to RSASSA-PSS with SHAKEs. When the RSA private key 
		owner wishes to limit the use of the public key exclusively 
		to RSASSA-PSS, the AlgorithmIdentifier for RSASSA-PSS defined 
		in <xref target="oids" format="default" sectionFormat="of" derivedContent="Section 2"/> <bcp14>SHOULD</bcp14> be used as the algorithm attribute 
		in the OriginatorPublicKey sequence. Conforming client 
		implementations that process RSASSA-PSS with SHAKE public keys 
		in CMS message <bcp14>MUST</bcp14> recognize the corresponding OIDs in <xref target="oids" format="default" sectionFormat="of" derivedContent="Section 2"/>.</t>
        <t pn="section-3.3-3">Conforming implementations <bcp14>MUST</bcp14> specify and process the 
		algorithms explicitly by using the OIDs specified in 
		<xref target="oids" format="default" sectionFormat="of" derivedContent="Section 2"/> when encoding ECDSA with SHAKE 
		public keys in CMS messages. </t>
        <t pn="section-3.3-4">The identifier parameters, as explained in <xref target="oids" format="default" sectionFormat="of" derivedContent="Section 2"/>, 
		<bcp14>MUST</bcp14> be absent. </t>
      </section>
      <section anchor="kmac" numbered="true" toc="include" removeInRFC="false" pn="section-3.4">
        <name slugifiedName="name-message-authentication-code">Message Authentication Codes</name>
        <t pn="section-3.4-1">Keccak message authentication code (KMAC) is specified in <xref target="SP800-185" format="default" sectionFormat="of" derivedContent="SP800-185"/>. 
	    In CMS, KMAC algorithm identifiers are located in the AuthenticatedData 
	    macAlgorithm field. The KMAC values are located in the AuthenticatedData mac field.</t>
        <t pn="section-3.4-2">When the id-KmacWithSHAKE128 or id-KmacWithSHAKE256 OID  
	    is used as the MAC algorithm identifier, the parameters field is optional 
	    (absent or present). If absent, the SHAKE256 output length used in KMAC is 
	    32 or 64 bytes, respectively, and the customization string is an empty string by default.</t>
        <t pn="section-3.4-3">Conforming implementations that process KMACs with the SHAKEs 
		when processing CMS data <bcp14>MUST</bcp14> recognize these identifiers.</t>
        <t pn="section-3.4-4">When calculating the KMAC output, the variable N is 0xD2B282C2, S 
	    is an empty string, and L (the integer representing the requested output 
	    length in bits) is 256 or 512 for KmacWithSHAKE128 or KmacWithSHAKE256, 
	    respectively, in this specification.</t>
      </section>
    </section>
    <section anchor="IANA" numbered="true" toc="include" removeInRFC="false" pn="section-4">
      <name slugifiedName="name-iana-considerations">IANA Considerations</name>
      <t pn="section-4-1">One object identifier for the ASN.1 module in <xref target="asn-app" format="default" sectionFormat="of" derivedContent="Appendix A"/> 
	  was updated in the "Structure of Management Information (SMI) Security for S/MIME Module Identifier
	  (1.2.840.113549.1.9.16.0)" registry: </t>
      <table align="left" pn="table-1">
        <thead>
          <tr>
            <th align="center" colspan="1" rowspan="1">Decimal</th>
            <th align="center" colspan="1" rowspan="1">Description</th>
            <th align="center" colspan="1" rowspan="1">References</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td align="center" colspan="1" rowspan="1">70</td>
            <td align="center" colspan="1" rowspan="1">CMSAlgsForSHAKE-2019</td>
            <td align="center" colspan="1" rowspan="1">RFC 8702</td>
          </tr>
        </tbody>
      </table>
    </section>
    <section anchor="sec_cons" numbered="true" toc="include" removeInRFC="false" pn="section-5">
      <name slugifiedName="name-security-considerations">Security Considerations</name>
      <t pn="section-5-1">This document updates <xref target="RFC3370" format="default" sectionFormat="of" derivedContent="RFC3370"/>. The security considerations
      section of that document applies to this specification as well.</t>
      <t pn="section-5-2">NIST has defined appropriate use of the hash functions in terms of the algorithm 
      strengths and expected time frames for secure use in Special Publications (SPs) 
      <xref target="SP800-78-4" format="default" sectionFormat="of" derivedContent="SP800-78-4"/> and <xref target="SP800-107" format="default" sectionFormat="of" derivedContent="SP800-107"/>. 
      These documents can be used as guides to choose appropriate key sizes 
      for various security scenarios. </t>
      <t pn="section-5-3">SHAKE128 with an output length of 32 bytes offers 128 bits of collision
      and preimage resistance. Thus, SHAKE128 OIDs in this specification are
      <bcp14>RECOMMENDED</bcp14> with a 2048- (112-bit security) or 3072-bit
      (128-bit security) RSA modulus or curves with a group order of 256 bits
      (128-bit security). SHAKE256 with a 64-byte output length offers 256 bits
      of collision and preimage resistance. Thus, the SHAKE256 OIDs in this
      specification are <bcp14>RECOMMENDED</bcp14> with 4096-bit RSA modulus
      or higher or curves with group order of at least 512 bits, such as NIST
      curve P-521 (256-bit security). Note that we recommended a 4096-bit RSA
      because we would need a 15360-bit modulus for 256 bits of security, which is impractical for today's technology.</t>
      <t pn="section-5-4">When more than two parties share the same message-authentication key,
      data origin authentication is not provided. Any party that knows the
      message-authentication key can compute a valid MAC; therefore, the
      content could originate from any one of the parties.</t>
    </section>
  </middle>
  <back>
    <displayreference target="I-D.housley-lamps-cms-sha3-hash" to="CMS-SHA3"/>
    <references pn="section-6">
      <name slugifiedName="name-references">References</name>
      <references pn="section-6.1">
        <name slugifiedName="name-normative-references">Normative References</name>
        <reference anchor="RFC2119" target="https://www.rfc-editor.org/info/rfc2119" quoteTitle="true" derivedAnchor="RFC2119">
          <front>
            <title>Key words for use in RFCs to Indicate Requirement Levels</title>
            <author initials="S." surname="Bradner" fullname="S. Bradner">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="1997" month="March"/>
            <abstract>
              <t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t>
            </abstract>
          </front>
          <seriesInfo name="BCP" value="14"/>
          <seriesInfo name="RFC" value="2119"/>
          <seriesInfo name="DOI" value="10.17487/RFC2119"/>
        </reference>
        <reference anchor="RFC3370" target="https://www.rfc-editor.org/info/rfc3370" quoteTitle="true" derivedAnchor="RFC3370">
          <front>
            <title>Cryptographic Message Syntax (CMS) Algorithms</title>
            <author initials="R." surname="Housley" fullname="R. Housley">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2002" month="August"/>
          </front>
          <seriesInfo name="RFC" value="3370"/>
          <seriesInfo name="DOI" value="10.17487/RFC3370"/>
        </reference>
        <reference anchor="RFC4055" target="https://www.rfc-editor.org/info/rfc4055" quoteTitle="true" derivedAnchor="RFC4055">
          <front>
            <title>Additional Algorithms and Identifiers for RSA Cryptography for use in the Internet X.509 Public Key Infrastructure Certificate and Certificate Revocation List (CRL) Profile</title>
            <author initials="J." surname="Schaad" fullname="J. Schaad">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="B." surname="Kaliski" fullname="B. Kaliski">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="R." surname="Housley" fullname="R. Housley">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2005" month="June"/>
            <abstract>
              <t>This document supplements RFC 3279.  It describes the conventions for using the RSA Probabilistic Signature Scheme (RSASSA-PSS) signature algorithm, the RSA Encryption Scheme - Optimal Asymmetric Encryption Padding (RSAES-OAEP) key transport algorithm and additional one-way hash functions with the Public-Key Cryptography Standards (PKCS) #1 version 1.5 signature algorithm in the Internet X.509 Public Key Infrastructure (PKI).  Encoding formats, algorithm identifiers, and parameter formats are specified.  [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="4055"/>
          <seriesInfo name="DOI" value="10.17487/RFC4055"/>
        </reference>
        <reference anchor="RFC5480" target="https://www.rfc-editor.org/info/rfc5480" quoteTitle="true" derivedAnchor="RFC5480">
          <front>
            <title>Elliptic Curve Cryptography Subject Public Key Information</title>
            <author initials="S." surname="Turner" fullname="S. Turner">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="D." surname="Brown" fullname="D. Brown">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="K." surname="Yiu" fullname="K. Yiu">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="R." surname="Housley" fullname="R. Housley">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="T." surname="Polk" fullname="T. Polk">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2009" month="March"/>
            <abstract>
              <t>This document specifies the syntax and semantics for the Subject Public Key Information field in certificates that support Elliptic Curve Cryptography.  This document updates Sections 2.3.5 and 5, and the ASN.1 module of "Algorithms and Identifiers for the Internet X.509 Public Key Infrastructure Certificate and Certificate Revocation List (CRL) Profile", RFC 3279.  [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="5480"/>
          <seriesInfo name="DOI" value="10.17487/RFC5480"/>
        </reference>
        <reference anchor="RFC5652" target="https://www.rfc-editor.org/info/rfc5652" quoteTitle="true" derivedAnchor="RFC5652">
          <front>
            <title>Cryptographic Message Syntax (CMS)</title>
            <author initials="R." surname="Housley" fullname="R. Housley">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2009" month="September"/>
            <abstract>
              <t>This document describes the Cryptographic Message Syntax (CMS).  This syntax is used to digitally sign, digest, authenticate, or encrypt arbitrary message content.  [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="STD" value="70"/>
          <seriesInfo name="RFC" value="5652"/>
          <seriesInfo name="DOI" value="10.17487/RFC5652"/>
        </reference>
        <reference anchor="RFC8017" target="https://www.rfc-editor.org/info/rfc8017" quoteTitle="true" derivedAnchor="RFC8017">
          <front>
            <title>PKCS #1: RSA Cryptography Specifications Version 2.2</title>
            <author initials="K." surname="Moriarty" fullname="K. Moriarty" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="B." surname="Kaliski" fullname="B. Kaliski">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="J." surname="Jonsson" fullname="J. Jonsson">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="A." surname="Rusch" fullname="A. Rusch">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2016" month="November"/>
            <abstract>
              <t>This document provides recommendations for the implementation of public-key cryptography based on the RSA algorithm, covering cryptographic primitives, encryption schemes, signature schemes with appendix, and ASN.1 syntax for representing keys and for identifying the schemes.</t>
              <t>This document represents a republication of PKCS #1 v2.2 from RSA Laboratories' Public-Key Cryptography Standards (PKCS) series.  By publishing this RFC, change control is transferred to the IETF.</t>
              <t>This document also obsoletes RFC 3447.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8017"/>
          <seriesInfo name="DOI" value="10.17487/RFC8017"/>
        </reference>
        <reference anchor="RFC8174" target="https://www.rfc-editor.org/info/rfc8174" quoteTitle="true" derivedAnchor="RFC8174">
          <front>
            <title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
            <author initials="B." surname="Leiba" fullname="B. Leiba">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2017" month="May"/>
            <abstract>
              <t>RFC 2119 specifies common key words that may be used in protocol  specifications.  This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the  defined special meanings.</t>
            </abstract>
          </front>
          <seriesInfo name="BCP" value="14"/>
          <seriesInfo name="RFC" value="8174"/>
          <seriesInfo name="DOI" value="10.17487/RFC8174"/>
        </reference>
        <reference anchor="SHA3" target="https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.202.pdf" quoteTitle="true" derivedAnchor="SHA3">
          <front>
            <title>SHA-3 Standard: Permutation-Based Hash and Extendable-Output Functions</title>
            <author>
              <organization showOnFrontPage="true">National Institute of Standards and Technology (NIST)</organization>
            </author>
            <date month="August" year="2015"/>
          </front>
          <seriesInfo name="FIPS" value="PUB 202"/>
          <seriesInfo name="DOI" value="10.6028/NIST.FIPS.202"/>
        </reference>
        <reference anchor="SP800-185" target="http://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-185.pdf" quoteTitle="true" derivedAnchor="SP800-185">
          <front>
            <title>SHA-3 Derived Functions: cSHAKE, KMAC, TupleHash and ParallelHash</title>
            <author>
              <organization showOnFrontPage="true">National Institute of Standards and Technology (NIST)</organization>
            </author>
            <date month="December" year="2016"/>
          </front>
          <seriesInfo name="NIST Special Publication" value="800-185"/>
          <seriesInfo name="DOI" value="10.6028/NIST.SP.800-185"/>
        </reference>
      </references>
      <references pn="section-6.2">
        <name slugifiedName="name-informative-references">Informative References</name>
        <reference anchor="I-D.housley-lamps-cms-sha3-hash" quoteTitle="true" target="https://tools.ietf.org/html/draft-housley-lamps-cms-sha3-hash-00" derivedAnchor="CMS-SHA3">
          <front>
            <title>Use of the SHA3 One-way Hash Functions in the Cryptographic Message Syntax (CMS)</title>
            <author initials="R" surname="Housley" fullname="Russ Housley">
              <organization showOnFrontPage="true"/>
            </author>
            <date month="March" day="27" year="2017"/>
            <abstract>
              <t>This document describes the conventions for using the four one-way hash functions in the SHA3 family with the Cryptographic Message Syntax (CMS).</t>
            </abstract>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-housley-lamps-cms-sha3-hash-00"/>
          <format type="TXT" target="http://www.ietf.org/internet-drafts/draft-housley-lamps-cms-sha3-hash-00.txt"/>
          <refcontent>Work in Progress</refcontent>
        </reference>
        <reference anchor="RFC3279" target="https://www.rfc-editor.org/info/rfc3279" quoteTitle="true" derivedAnchor="RFC3279">
          <front>
            <title>Algorithms and Identifiers for the Internet X.509 Public Key Infrastructure Certificate and Certificate Revocation List (CRL) Profile</title>
            <author initials="L." surname="Bassham" fullname="L. Bassham">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="W." surname="Polk" fullname="W. Polk">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="R." surname="Housley" fullname="R. Housley">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2002" month="April"/>
            <abstract>
              <t>This document specifies algorithm identifiers and ASN.1 encoding formats for digital signatures and subject public keys used in the Internet X.509 Public Key Infrastructure (PKI).  Digital signatures are used to sign certificates and certificate revocation list (CRLs).  Certificates include the public key of the named subject.  [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="3279"/>
          <seriesInfo name="DOI" value="10.17487/RFC3279"/>
        </reference>
        <reference anchor="RFC5753" target="https://www.rfc-editor.org/info/rfc5753" quoteTitle="true" derivedAnchor="RFC5753">
          <front>
            <title>Use of Elliptic Curve Cryptography (ECC) Algorithms in Cryptographic Message Syntax (CMS)</title>
            <author initials="S." surname="Turner" fullname="S. Turner">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="D." surname="Brown" fullname="D. Brown">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2010" month="January"/>
            <abstract>
              <t>This document describes how to use Elliptic Curve Cryptography (ECC) public key algorithms in the Cryptographic Message Syntax (CMS).  The ECC algorithms support the creation of digital signatures and the exchange of keys to encrypt or authenticate content.  The definition of the algorithm processing is based on the NIST FIPS 186-3 for digital signature, NIST SP800-56A and SEC1 for key agreement, RFC 3370 and RFC 3565 for key wrap and content encryption, NIST FIPS 180-3 for message digest, SEC1 for key derivation, and RFC 2104 and RFC 4231 for message authentication code standards.  This document obsoletes RFC 3278.  This document is not an Internet Standards Track  specification; it is published for informational purposes.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="5753"/>
          <seriesInfo name="DOI" value="10.17487/RFC5753"/>
        </reference>
        <reference anchor="RFC5911" target="https://www.rfc-editor.org/info/rfc5911" quoteTitle="true" derivedAnchor="RFC5911">
          <front>
            <title>New ASN.1 Modules for Cryptographic Message Syntax (CMS) and S/MIME</title>
            <author initials="P." surname="Hoffman" fullname="P. Hoffman">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="J." surname="Schaad" fullname="J. Schaad">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2010" month="June"/>
            <abstract>
              <t>The Cryptographic Message Syntax (CMS) format, and many associated formats, are expressed using ASN.1.  The current ASN.1 modules conform to the 1988 version of ASN.1.  This document updates those ASN.1 modules to conform to the 2002 version of ASN.1.  There are no bits-on-the-wire changes to any of the formats; this is simply a change to the syntax.  This document is not an Internet Standards Track  specification; it is published for informational purposes.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="5911"/>
          <seriesInfo name="DOI" value="10.17487/RFC5911"/>
        </reference>
        <reference anchor="RFC6268" target="https://www.rfc-editor.org/info/rfc6268" quoteTitle="true" derivedAnchor="RFC6268">
          <front>
            <title>Additional New ASN.1 Modules for the Cryptographic Message Syntax (CMS) and the Public Key Infrastructure Using X.509 (PKIX)</title>
            <author initials="J." surname="Schaad" fullname="J. Schaad">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="S." surname="Turner" fullname="S. Turner">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2011" month="July"/>
            <abstract>
              <t>The Cryptographic Message Syntax (CMS) format, and many associated formats, are expressed using ASN.1.  The current ASN.1 modules conform to the 1988 version of ASN.1.  This document updates some auxiliary ASN.1 modules to conform to the 2008 version of ASN.1; the 1988 ASN.1 modules remain the normative version.  There are no bits- on-the-wire changes to any of the formats; this is simply a change to the syntax.  This document is not an Internet Standards Track  specification; it is published for informational purposes.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="6268"/>
          <seriesInfo name="DOI" value="10.17487/RFC6268"/>
        </reference>
        <reference anchor="RFC6979" target="https://www.rfc-editor.org/info/rfc6979" quoteTitle="true" derivedAnchor="RFC6979">
          <front>
            <title>Deterministic Usage of the Digital Signature Algorithm (DSA) and Elliptic Curve Digital Signature Algorithm (ECDSA)</title>
            <author initials="T." surname="Pornin" fullname="T. Pornin">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2013" month="August"/>
            <abstract>
              <t>This document defines a deterministic digital signature generation procedure.  Such signatures are compatible with standard Digital Signature Algorithm (DSA) and Elliptic Curve Digital Signature Algorithm (ECDSA) digital signatures and can be processed with unmodified verifiers, which need not be aware of the procedure described therein.  Deterministic signatures retain the cryptographic security features associated with digital signatures but can be more easily implemented in various environments, since they do not need access to a source of high-quality randomness.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="6979"/>
          <seriesInfo name="DOI" value="10.17487/RFC6979"/>
        </reference>
        <reference anchor="RFC8692" target="https://www.rfc-editor.org/info/rfc8692" quoteTitle="true" derivedAnchor="RFC8692">
          <front>
            <title>Internet X.509 Public Key Infrastructure: Additional Algorithm Identifiers for RSASSA-PSS and ECDSA Using SHAKEs</title>
            <author initials="P." surname="Kampanakis" fullname="P. Kampanakis">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="Q." surname="Dang" fullname="Q. Dang">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2019" month="December"/>
            <abstract>
              <t>Digital signatures are used to sign messages, X.509 certificates, and Certificate Revocation Lists (CRLs). This document updates the "Algorithms and Identifiers for the Internet X.509 Public Key Infrastructure Certificate and Certificate Revocation List (CRL) Profile" (RFC 3279) and describes the conventions for using the SHAKE function family in Internet X.509 certificates and revocation lists as one-way hash functions with the RSA Probabilistic signature and Elliptic Curve Digital Signature Algorithm (ECDSA) signature algorithms. The conventions for the associated subject public keys are also described.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8692"/>
          <seriesInfo name="DOI" value="10.17487/RFC8692"/>
        </reference>
        <reference anchor="SEC1" target="http://www.secg.org/sec1-v2.pdf" quoteTitle="true" derivedAnchor="SEC1">
          <front>
            <title>SEC 1: Elliptic Curve Cryptography</title>
            <author>
              <organization showOnFrontPage="true">Standards for Efficient Cryptography Group</organization>
            </author>
            <date month="May" year="2009"/>
          </front>
        </reference>
        <reference anchor="shake-nist-oids" target="https://csrc.nist.gov/Projects/Computer-Security-Objects-Register/Algorithm-Registration" quoteTitle="true" derivedAnchor="shake-nist-oids">
          <front>
            <title>Computer Security Objects Register</title>
            <author>
              <organization showOnFrontPage="true">National Institute of Standards and Technology (NIST)</organization>
            </author>
            <date month="October" year="2019"/>
          </front>
        </reference>
        <reference anchor="SP800-107" target="https://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-107r1.pdf" quoteTitle="true" derivedAnchor="SP800-107">
          <front>
            <title>Recommendation for Applications Using Approved Hash Algorithms</title>
            <author>
              <organization showOnFrontPage="true">National Institute of Standards and Technology (NIST)</organization>
            </author>
            <date month="August" year="2012"/>
          </front>
          <seriesInfo name="Draft NIST Special Publication" value="800-107 Revised"/>
        </reference>
        <reference anchor="SP800-78-4" target="https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-78-4.pdf" quoteTitle="true" derivedAnchor="SP800-78-4">
          <front>
            <title>Cryptographic Algorithms and Key Sizes for Personal Identity Verification</title>
            <author>
              <organization showOnFrontPage="true">National Institute of Standards and Technology (NIST)</organization>
            </author>
            <date month="May" year="2015"/>
          </front>
          <seriesInfo name="NIST Special Publication" value="800-78-4"/>
          <seriesInfo name="DOI" value="10.6028/NIST.SP.800-78-4"/>
        </reference>
        <reference anchor="X9.62" quoteTitle="true" derivedAnchor="X9.62">
          <front>
            <title>Public Key Cryptography for the Financial Services Industry: the Elliptic Curve Digital Signature Algorithm (ECDSA)</title>
            <author>
              <organization showOnFrontPage="true">American National Standard for Financial Services (ANSI)</organization>
            </author>
            <date month="November" year="2005"/>
          </front>
          <seriesInfo name="ANSI" value="X9.62"/>
        </reference>
      </references>
    </references>
    <section anchor="asn-app" numbered="true" toc="include" removeInRFC="false" pn="section-appendix.a">
      <name slugifiedName="name-asn1-module">ASN.1 Module</name>
      <t pn="section-appendix.a-1">This appendix includes the ASN.1 modules for SHAKEs in CMS. 
    This module includes some ASN.1 from other standards for reference.</t>
      <sourcecode type="asn.1" markers="false" pn="section-appendix.a-2">
CMSAlgsForSHAKE-2019 { iso(1) member-body(2) us(840)
     rsadsi(113549) pkcs(1) pkcs-9(9) smime(16) modules(0)
     id-mod-cms-shakes-2019(70) }

DEFINITIONS EXPLICIT TAGS ::=

BEGIN

-- EXPORTS ALL;

IMPORTS

DIGEST-ALGORITHM, MAC-ALGORITHM, SMIME-CAPS
FROM AlgorithmInformation-2009
  { iso(1) identified-organization(3) dod(6) internet(1) security(5)
    mechanisms(5) pkix(7) id-mod(0)
    id-mod-algorithmInformation-02(58) }

RSAPublicKey, rsaEncryption, id-ecPublicKey
FROM PKIXAlgs-2009 { iso(1) identified-organization(3) dod(6)
     internet(1) security(5) mechanisms(5) pkix(7) id-mod(0)
     id-mod-pkix1-algorithms2008-02(56) } 

sa-rsassapssWithSHAKE128, sa-rsassapssWithSHAKE256, 
sa-ecdsaWithSHAKE128, sa-ecdsaWithSHAKE256
FROM PKIXAlgsForSHAKE-2019 { 
   iso(1) identified-organization(3) dod(6)
   internet(1) security(5) mechanisms(5) pkix(7) id-mod(0)
   id-mod-pkix1-shakes-2019(94) } ;

-- Message digest Algorithms (mda-)
-- used in SignedData, SignerInfo, DigestedData,
-- and the AuthenticatedData digestAlgorithm
-- fields in CMS
--
--  This expands MessageAuthAlgs from [RFC5652] and
--  MessageDigestAlgs in [RFC5753]
--
-- MessageDigestAlgs DIGEST-ALGORITHM ::= {
--  mda-shake128   |
--  mda-shake256,
--  ...
-- }

--
-- One-Way Hash Functions
-- SHAKE128
mda-shake128 DIGEST-ALGORITHM ::= {
  IDENTIFIER id-shake128  -- with output length 32 bytes.
}
id-shake128 OBJECT IDENTIFIER ::= { joint-iso-itu-t(2) country(16)
                                    us(840) organization(1) gov(101)
                                    csor(3) nistAlgorithm(4)
                                    hashAlgs(2) 11 }

-- SHAKE256
mda-shake256 DIGEST-ALGORITHM ::= {
  IDENTIFIER id-shake256  -- with output length 64 bytes.
}
id-shake256 OBJECT IDENTIFIER ::= { joint-iso-itu-t(2) country(16)
                                    us(840) organization(1) gov(101)
                                    csor(3) nistAlgorithm(4)
                                    hashAlgs(2) 12 }

--
-- Public key algorithm identifiers located in the
-- OriginatorPublicKey's algorithm attribute in CMS.
-- And Signature identifiers used in SignerInfo
-- signatureAlgorithm field of signed-data content
-- type and countersignature attribute in CMS.
--
-- From RFC 5280, for reference:
-- rsaEncryption OBJECT IDENTIFIER ::=  { pkcs-1 1 }
   -- When the rsaEncryption algorithm identifier is used
   -- for a public key, the AlgorithmIdentifier parameters
   -- field MUST contain NULL.
--
id-RSASSA-PSS-SHAKE128  OBJECT IDENTIFIER  ::=  { iso(1) 
         identified-organization(3) dod(6) internet(1) 
         security(5) mechanisms(5) pkix(7) algorithms(6) 30 }

id-RSASSA-PSS-SHAKE256  OBJECT IDENTIFIER  ::=  { iso(1) 
         identified-organization(3) dod(6) internet(1) 
         security(5) mechanisms(5) pkix(7) algorithms(6) 31 } 

   -- When the id-RSASSA-PSS-* algorithm identifiers are used
   -- for a public key or signature in CMS, the AlgorithmIdentifier
   -- parameters field MUST be absent.  The message digest algorithm
   -- used in RSASSA-PSS MUST be SHAKE128 or SHAKE256 with a 32- or
   -- 64-byte output length, respectively.  The mask generation 
   -- function MUST be SHAKE128 or SHAKE256 with an output length
   -- of (8*ceil((n-1)/8) - 264) or (8*ceil((n-1)/8) - 520) bits, 
   -- respectively, where n is the RSA modulus in bits. 
   -- The RSASSA-PSS saltLength MUST be 32 or 64 bytes, respectively. 
   -- The trailerField MUST be 1, which represents the trailer 
   -- field with hexadecimal value 0xBC.  Regardless of 
   -- id-RSASSA-PSS-* or rsaEncryption being used as the 
   -- AlgorithmIdentifier of the OriginatorPublicKey, the RSA 
   -- public key MUST be encoded using the RSAPublicKey type.

-- From RFC 4055, for reference:
-- RSAPublicKey ::= SEQUENCE {
--   modulus INTEGER, -- -- n
--   publicExponent INTEGER } -- -- e

id-ecdsa-with-shake128 OBJECT IDENTIFIER  ::=  { iso(1) 
         identified-organization(3) dod(6) internet(1) 
         security(5) mechanisms(5) pkix(7) algorithms(6) 32 } 

id-ecdsa-with-shake256 OBJECT IDENTIFIER  ::=  { iso(1) 
         identified-organization(3) dod(6) internet(1) 
         security(5) mechanisms(5) pkix(7) algorithms(6) 33 }

   -- When the id-ecdsa-with-shake* algorithm identifiers are
   -- used in CMS, the AlgorithmIdentifier parameters field
   -- MUST be absent and the signature algorithm should be 
   -- deterministic ECDSA [RFC6979].  The message digest MUST
   -- be SHAKE128 or SHAKE256 with a 32- or 64-byte output
   -- length, respectively.  In both cases, the ECDSA public key,
   -- MUST be encoded using the id-ecPublicKey type.

-- From RFC 5480, for reference:
-- id-ecPublicKey OBJECT IDENTIFIER ::= {
--    iso(1) member-body(2) us(840) ansi-X9-62(10045) keyType(2) 1 }
     -- The id-ecPublicKey parameters must be absent or present
     -- and are defined as:
-- ECParameters ::= CHOICE {
--     namedCurve         OBJECT IDENTIFIER
--     -- -- implicitCurve   NULL
--     -- -- specifiedCurve  SpecifiedECDomain
--  }

-- This expands SignatureAlgs from [RFC5912]
--   
-- SignatureAlgs SIGNATURE-ALGORITHM ::= {
--   sa-rsassapssWithSHAKE128 |
--   sa-rsassapssWithSHAKE256 |
--   sa-ecdsaWithSHAKE128 |
--   sa-ecdsaWithSHAKE256,
--   ...
-- }

-- This expands MessageAuthAlgs from [RFC5652] and [RFC6268]
--
-- Message Authentication (maca-) Algorithms
-- used in AuthenticatedData macAlgorithm in CMS
--
MessageAuthAlgs MAC-ALGORITHM ::= {
    maca-KMACwithSHAKE128   |
    maca-KMACwithSHAKE256,
    ...
}

-- This expands SMimeCaps from [RFC5911]
--
SMimeCaps SMIME-CAPS ::= { 
   -- sa-rsassapssWithSHAKE128.&amp;smimeCaps |
   -- sa-rsassapssWithSHAKE256.&amp;smimeCaps |
   -- sa-ecdsaWithSHAKE128.&amp;smimeCaps |
   -- sa-ecdsaWithSHAKE256.&amp;smimeCaps,
   maca-KMACwithSHAKE128.&amp;smimeCaps   |
   maca-KMACwithSHAKE256.&amp;smimeCaps,
   ...
 }

--
-- KMAC with SHAKE128
maca-KMACwithSHAKE128 MAC-ALGORITHM ::= {
      IDENTIFIER id-KMACWithSHAKE128
      PARAMS TYPE KMACwithSHAKE128-params ARE optional
        -- If KMACwithSHAKE128-params parameters are absent,
        -- the SHAKE128 output length used in KMAC is 256 bits
        -- and the customization string is an empty string.
      IS-KEYED-MAC TRUE
      SMIME-CAPS {IDENTIFIED BY id-KMACWithSHAKE128}
}
id-KMACWithSHAKE128 OBJECT IDENTIFIER ::=  { joint-iso-itu-t(2)
                             country(16) us(840) organization(1)
                             gov(101) csor(3) nistAlgorithm(4)
                             hashAlgs(2) 19 }
KMACwithSHAKE128-params ::= SEQUENCE {
  kMACOutputLength     INTEGER DEFAULT 256, -- Output length in bits
  customizationString  OCTET STRING DEFAULT ''H
}

-- KMAC with SHAKE256
maca-KMACwithSHAKE256 MAC-ALGORITHM ::= {
      IDENTIFIER id-KMACWithSHAKE256
      PARAMS TYPE KMACwithSHAKE256-params ARE optional
         -- If KMACwithSHAKE256-params parameters are absent,
         -- the SHAKE256 output length used in KMAC is 512 bits
         -- and the customization string is an empty string.
      IS-KEYED-MAC TRUE
      SMIME-CAPS {IDENTIFIED BY id-KMACWithSHAKE256}
}
id-KMACWithSHAKE256 OBJECT IDENTIFIER ::=  { joint-iso-itu-t(2)
                            country(16) us(840) organization(1)
                            gov(101) csor(3) nistAlgorithm(4)
                            hashAlgs(2) 20 }
KMACwithSHAKE256-params ::= SEQUENCE {
   kMACOutputLength     INTEGER DEFAULT 512, -- Output length in bits
   customizationString  OCTET STRING DEFAULT ''H
}

END   </sourcecode>
    </section>
    <section anchor="ack" numbered="false" toc="include" removeInRFC="false" pn="section-appendix.b">
      <name slugifiedName="name-acknowledgements">Acknowledgements</name>
      <t pn="section-appendix.b-1">This document is based on <contact fullname="Russ Housley"/>'s document 
	  <xref target="I-D.housley-lamps-cms-sha3-hash" format="default" sectionFormat="of" derivedContent="CMS-SHA3"/>. 
	  It replaces SHA3 hash functions by SHAKE128 and SHAKE256, as the LAMPS 
	  WG agreed.</t>
      <t pn="section-appendix.b-2">The authors would like to thank <contact fullname="Russ Housley"/> for his guidance and 
	  very valuable contributions with the ASN.1 module. Valuable 
	  feedback was also provided by Eric Rescorla. </t>
    </section>
    <section anchor="authors-addresses" numbered="false" removeInRFC="false" toc="include" pn="section-appendix.c">
      <name slugifiedName="name-authors-addresses">Authors' Addresses</name>
      <author fullname="Panos Kampanakis" initials="P." surname="Kampanakis">
        <organization showOnFrontPage="true">Cisco Systems</organization>
        <address>
          <email>pkampana@cisco.com</email>
        </address>
      </author>
      <author fullname="Quynh Dang" initials="Q." surname="Dang">
        <organization showOnFrontPage="true">NIST</organization>
        <address>
          <postal>
            <street>100 Bureau Drive</street>
            <city>Gaithersburg</city>
            <region>MD</region>
            <code>20899</code>
            <country>United States of America</country>
          </postal>
          <email>quynh.Dang@nist.gov</email>
        </address>
      </author>
    </section>
  </back>
</rfc>
