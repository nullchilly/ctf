<?xml version='1.0' encoding='utf-8'?>
<rfc xmlns:xi="http://www.w3.org/2001/XInclude" version="3" category="info" consensus="true" docName="draft-ietf-lwig-cellular-06" indexInclude="true" ipr="trust200902" number="9178" prepTime="2022-05-27T13:39:06" scripts="Common,Latin" sortRefs="false" submissionType="IETF" symRefs="true" tocDepth="3" tocInclude="true" xml:lang="en">
  <link href="https://datatracker.ietf.org/doc/draft-ietf-lwig-cellular-06" rel="prev"/>
  <link href="https://dx.doi.org/10.17487/rfc9178" rel="alternate"/>
  <link href="urn:issn:2070-1721" rel="alternate"/>
  <front>
    <title abbrev="Power-Efficient Cellular CoAP Devices">Building Power-Efficient Constrained Application Protocol (CoAP) Devices for Cellular Networks</title>
    <seriesInfo name="RFC" value="9178" stream="IETF"/>
    <author initials="J" surname="Arkko" fullname="Jari Arkko">
      <organization showOnFrontPage="true">Ericsson</organization>
      <address>
        <postal>
          <street/>
          <city>Jorvas</city>
          <code>02420</code>
          <country>Finland</country>
        </postal>
        <email>jari.arkko@piuha.net</email>
      </address>
    </author>
    <author initials="A" surname="Eriksson" fullname="Anders Eriksson">
      <organization showOnFrontPage="true">Independent</organization>
      <address>
        <postal>
          <street/>
          <city>Stockholm</city>
          <code>164 83</code>
          <country>Sweden</country>
        </postal>
        <email>anders.e.eriksson@posthem.se</email>
      </address>
    </author>
    <author initials="A" surname="Keränen" fullname="Ari Keränen">
      <organization showOnFrontPage="true">Ericsson</organization>
      <address>
        <postal>
          <street/>
          <city>Jorvas</city>
          <code>02420</code>
          <country>Finland</country>
        </postal>
        <email>ari.keranen@ericsson.com</email>
      </address>
    </author>
    <date month="05" year="2022"/>
    <keyword>CoAP</keyword>
    <keyword>cellular networks</keyword>
    <abstract pn="section-abstract">
      <t indent="0" pn="section-abstract-1">This memo discusses the use of the Constrained Application Protocol
(CoAP) in building sensors and other devices that employ
cellular networks as a communications medium. Building communicating
devices that employ these networks is obviously well known, but this
memo focuses specifically on techniques necessary to minimize power
consumption.</t>
    </abstract>
    <boilerplate>
      <section anchor="status-of-memo" numbered="false" removeInRFC="false" toc="exclude" pn="section-boilerplate.1">
        <name slugifiedName="name-status-of-this-memo">Status of This Memo</name>
        <t indent="0" pn="section-boilerplate.1-1">
            This document is not an Internet Standards Track specification; it is
            published for informational purposes.  
        </t>
        <t indent="0" pn="section-boilerplate.1-2">
            This document is a product of the Internet Engineering Task Force
            (IETF).  It represents the consensus of the IETF community.  It has
            received public review and has been approved for publication by the
            Internet Engineering Steering Group (IESG).  Not all documents
            approved by the IESG are candidates for any level of Internet
            Standard; see Section 2 of RFC 7841. 
        </t>
        <t indent="0" pn="section-boilerplate.1-3">
            Information about the current status of this document, any
            errata, and how to provide feedback on it may be obtained at
            <eref target="https://www.rfc-editor.org/info/rfc9178" brackets="none"/>.
        </t>
      </section>
      <section anchor="copyright" numbered="false" removeInRFC="false" toc="exclude" pn="section-boilerplate.2">
        <name slugifiedName="name-copyright-notice">Copyright Notice</name>
        <t indent="0" pn="section-boilerplate.2-1">
            Copyright (c) 2022 IETF Trust and the persons identified as the
            document authors. All rights reserved.
        </t>
        <t indent="0" pn="section-boilerplate.2-2">
            This document is subject to BCP 78 and the IETF Trust's Legal
            Provisions Relating to IETF Documents
            (<eref target="https://trustee.ietf.org/license-info" brackets="none"/>) in effect on the date of
            publication of this document. Please review these documents
            carefully, as they describe your rights and restrictions with
            respect to this document. Code Components extracted from this
            document must include Revised BSD License text as described in
            Section 4.e of the Trust Legal Provisions and are provided without
            warranty as described in the Revised BSD License.
        </t>
      </section>
    </boilerplate>
    <toc>
      <section anchor="toc" numbered="false" removeInRFC="false" toc="exclude" pn="section-toc.1">
        <name slugifiedName="name-table-of-contents">Table of Contents</name>
        <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1">
          <li pn="section-toc.1-1.1">
            <t indent="0" keepWithNext="true" pn="section-toc.1-1.1.1"><xref derivedContent="1" format="counter" sectionFormat="of" target="section-1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-introduction">Introduction</xref></t>
          </li>
          <li pn="section-toc.1-1.2">
            <t indent="0" keepWithNext="true" pn="section-toc.1-1.2.1"><xref derivedContent="2" format="counter" sectionFormat="of" target="section-2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-goals-for-low-power-operati">Goals for Low-Power Operation</xref></t>
          </li>
          <li pn="section-toc.1-1.3">
            <t indent="0" keepWithNext="true" pn="section-toc.1-1.3.1"><xref derivedContent="3" format="counter" sectionFormat="of" target="section-3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-link-layer-assumptions">Link-Layer Assumptions</xref></t>
          </li>
          <li pn="section-toc.1-1.4">
            <t indent="0" pn="section-toc.1-1.4.1"><xref derivedContent="4" format="counter" sectionFormat="of" target="section-4"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-scenarios">Scenarios</xref></t>
          </li>
          <li pn="section-toc.1-1.5">
            <t indent="0" pn="section-toc.1-1.5.1"><xref derivedContent="5" format="counter" sectionFormat="of" target="section-5"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-discovery-and-registration">Discovery and Registration</xref></t>
          </li>
          <li pn="section-toc.1-1.6">
            <t indent="0" pn="section-toc.1-1.6.1"><xref derivedContent="6" format="counter" sectionFormat="of" target="section-6"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-data-formats">Data Formats</xref></t>
          </li>
          <li pn="section-toc.1-1.7">
            <t indent="0" pn="section-toc.1-1.7.1"><xref derivedContent="7" format="counter" sectionFormat="of" target="section-7"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-real-time-reachable-devices">Real-Time Reachable Devices</xref></t>
          </li>
          <li pn="section-toc.1-1.8">
            <t indent="0" pn="section-toc.1-1.8.1"><xref derivedContent="8" format="counter" sectionFormat="of" target="section-8"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-sleepy-devices">Sleepy Devices</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.8.2">
              <li pn="section-toc.1-1.8.2.1">
                <t indent="0" pn="section-toc.1-1.8.2.1.1"><xref derivedContent="8.1" format="counter" sectionFormat="of" target="section-8.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-implementation-consideratio">Implementation Considerations</xref></t>
              </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.9">
            <t indent="0" pn="section-toc.1-1.9.1"><xref derivedContent="9" format="counter" sectionFormat="of" target="section-9"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-security-considerations">Security Considerations</xref></t>
          </li>
          <li pn="section-toc.1-1.10">
            <t indent="0" pn="section-toc.1-1.10.1"><xref derivedContent="10" format="counter" sectionFormat="of" target="section-10"/>. <xref derivedContent="" format="title" sectionFormat="of" target="name-iana-considerations">IANA Considerations</xref></t>
          </li>
          <li pn="section-toc.1-1.11">
            <t indent="0" pn="section-toc.1-1.11.1"><xref derivedContent="11" format="counter" sectionFormat="of" target="section-11"/>. <xref derivedContent="" format="title" sectionFormat="of" target="name-references">References</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.11.2">
              <li pn="section-toc.1-1.11.2.1">
                <t indent="0" pn="section-toc.1-1.11.2.1.1"><xref derivedContent="11.1" format="counter" sectionFormat="of" target="section-11.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-normative-references">Normative References</xref></t>
              </li>
              <li pn="section-toc.1-1.11.2.2">
                <t indent="0" pn="section-toc.1-1.11.2.2.1"><xref derivedContent="11.2" format="counter" sectionFormat="of" target="section-11.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-informative-references">Informative References</xref></t>
              </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.12">
            <t indent="0" pn="section-toc.1-1.12.1"><xref derivedContent="" format="none" sectionFormat="of" target="section-appendix.a"/><xref derivedContent="" format="title" sectionFormat="of" target="name-acknowledgments">Acknowledgments</xref></t>
          </li>
          <li pn="section-toc.1-1.13">
            <t indent="0" pn="section-toc.1-1.13.1"><xref derivedContent="" format="none" sectionFormat="of" target="section-appendix.b"/><xref derivedContent="" format="title" sectionFormat="of" target="name-authors-addresses">Authors' Addresses</xref></t>
          </li>
        </ul>
      </section>
    </toc>
  </front>
  <middle>
    <section anchor="intro" numbered="true" toc="include" removeInRFC="false" pn="section-1">
      <name slugifiedName="name-introduction">Introduction</name>
      <t indent="0" pn="section-1-1">This memo discusses the use of the Constrained Application Protocol
(CoAP) <xref target="RFC7252" format="default" sectionFormat="of" derivedContent="RFC7252"/> in building
sensors and other devices that employ cellular networks as a
communications medium. Building communicating devices that employ
these networks is obviously well known, but this memo focuses
specifically on techniques necessary to minimize power consumption.
CoAP has many advantages, including being simple to implement; a
thousand lines of code for the entire application above the IP layer is plenty for a
CoAP-based sensor, for instance. However, while many of these
advantages are obvious and easily obtained, optimizing power
consumption remains challenging and requires careful design <xref target="I-D.arkko-core-sleepy-sensors" format="default" sectionFormat="of" derivedContent="Tiny-CoAP"/>.</t>
      <t indent="0" pn="section-1-2">This memo primarily targets 3GPP cellular networks in their 2G, 3G,
LTE, and 5G variants and their future enhancements, including possible
power efficiency improvements at the radio and link layers. The exact
standards or details of the link layer or radios are not relevant for
our purposes, however. To be more precise, the material in this memo
is suitable for any large-scale, public network that employs a
point-to-point communications model and radio technology for the
devices in the network.</t>
      <t indent="0" pn="section-1-3">Our focus is on devices that need to be optimized for power usage and
devices that employ CoAP. As a general technology, CoAP is similar
to HTTP. It can be used in various ways, and network entities may take
on different roles. This freedom allows the technology to be used in
efficient and less efficient ways. Some guidance is needed to
understand what types of communication over CoAP are recommended when
low power usage is a critical goal.</t>
      <t indent="0" pn="section-1-4">The recommendations in this memo should be taken as complementary
to device hardware optimization, microelectronics improvements, and
further evolution of the underlying link and radio layers. Further
gains in power efficiency can certainly be gained on several fronts;
the approach that we take in this memo is to do what can be done at
the IP, transport, and application layers to provide the best possible
power efficiency. Application implementors generally have to use the
current-generation microelectronics, currently available radio
networks and standards, and so on. This focus in our memo should by no
means be taken as an indication that further evolution in these other
areas is unnecessary. Such evolution is useful, ongoing, and 
generally complementary to the techniques presented in this memo.
However, the list of techniques described in this document as useful for a
particular application may change with the evolution of these underlying
technologies.</t>
      <t indent="0" pn="section-1-5">The rest of this memo is structured as follows. <xref target="lowpow" format="default" sectionFormat="of" derivedContent="Section 2"/> discusses the need and goals for low-power
devices. <xref target="model" format="default" sectionFormat="of" derivedContent="Section 3"/> outlines our expectations for the low-layer communications model. <xref target="scen" format="default" sectionFormat="of" derivedContent="Section 4"/> describes the two
scenarios that we address. Sections <xref target="disc" format="counter" sectionFormat="of" derivedContent="5"/>, <xref target="data" format="counter" sectionFormat="of" derivedContent="6"/>, <xref target="rt" format="counter" sectionFormat="of" derivedContent="7"/>, and <xref target="sens" format="counter" sectionFormat="of" derivedContent="8"/> give
guidelines for the use of CoAP in these scenarios.</t>
      <t indent="0" pn="section-1-6">This document was originally finalized in 2016 but is published six years later due to waiting for key references to reach RFC status. Therefore, some of the latest advancements in cellular network, CoAP, and other technologies are not discussed here, and some of the references point to documents that were state of the art in 2016.</t>
    </section>
    <section anchor="lowpow" numbered="true" toc="include" removeInRFC="false" pn="section-2">
      <name slugifiedName="name-goals-for-low-power-operati">Goals for Low-Power Operation</name>
      <t indent="0" pn="section-2-1">There are many situations where power usage optimization is
unnecessary. Optimization may not be necessary on devices that can run
on a power feed over wired communications media, such as in
Power-over-Ethernet (PoE) solutions. These devices may require a
rudimentary level of power optimization techniques just to keep
overall energy costs and aggregate power feed sizes at a reasonable
level, but more extreme techniques necessary for battery-powered
devices are not required. The situation is similar with devices that
can easily be connected to mains power. Other types of devices may
get an occasional charge of power from energy-harvesting techniques.
For instance, some environmental sensors can run on solar
cells. Typically, these devices still have to regulate their power
usage in a strict manner -- for instance, to be able to use solar cells that
are as small and inexpensive as possible.</t>
      <t indent="0" pn="section-2-2">In battery-operated devices, power usage is even more
important. For instance, one of the authors employs over a hundred different
sensor devices in their home network. A majority of these devices are
wired and run on PoE, but in most environments this would be
impractical because the necessary wires do not exist. The future is in
wireless solutions that can cover buildings and other environments
without assuming a pre-existing wired infrastructure. In addition, in
many cases it is impractical to provide a mains power source. Often,
there are no power sockets easily available in the locations that the
devices need to be in, and even if there were, setting up the wires
and power adapters would be more complicated than installing a
standalone device without any wires.</t>
      <t indent="0" pn="section-2-3">Yet, with a large number of devices, the battery lifetimes become
critical. Cost and practical limits dictate that devices can be
largely just bought and left on their own. For instance, with a hundred
devices, even a ten-year battery lifetime results in a monthly battery
change for one device within the network. This may be impractical in
many environments. In addition, some devices may be physically
difficult to reach for a battery change. Or, a large group of devices
-- such as utility meters or environmental sensors -- cannot be
economically serviced too often, even if in theory the batteries could
be changed. </t>
      <t indent="0" pn="section-2-4">Many of these situations lead to a requirement for minimizing power
usage and/or maximizing battery lifetimes.  Using the power usage
strategies described in <xref target="RFC7228" format="default" sectionFormat="of" derivedContent="RFC7228"/>, mains-powered
sensor-type devices can use the Always-on strategy, whereas battery-operated or
energy-harvesting devices need to adjust behavior based on the
communication interval. For intervals on the order of seconds, the
Low-power strategy is appropriate. For intervals ranging from minutes
to hours, either the Low-power or Normally-off strategy is
suitable. Finally, for intervals lasting days or longer, Normally-off
is usually the best choice. Unfortunately, much of our current technology has been built with different objectives in mind -- for instance, networked devices that are "always on", gadgets that require humans to recharge them every couple of days, and protocols that have been optimized to maximize throughput rather than conserve
resources.</t>
      <t indent="0" pn="section-2-5">Long battery lifetimes are required for many applications,
however. In some cases, these lifetimes should be on the order of years
or even a decade or longer. Some communication devices already reach
multi-year lifetimes, and continuous improvements in low-power
electronics and advances in radio technology keep pushing these
lifetimes longer. However, it is perhaps fair to say that battery
lifetimes are generally too short at present.</t>
      <t indent="0" pn="section-2-6">Power usage cannot be evaluated based solely on lower-layer
communications. The entire system, including upper-layer protocols and
applications, is responsible for the power consumption as a whole. The
lower communication layers have already adopted many techniques that
can be used to reduce power usage, such as scheduling device wake-up
times. Further reductions will likely need some cooperation from the
upper layers so that unnecessary communications, denial-of-service
attacks on power consumption, and other power drains are
eliminated.</t>
      <t indent="0" pn="section-2-7">Of course, application requirements ultimately determine what kinds
of communications are necessary. For instance, some applications
require more data to be sent than others. The purpose of the
guidelines in this memo is not to prefer one or the other application,
but to provide guidance on how to minimize the amount of
communications overhead that is not directly required by the
application. While such optimization is generally useful, it is,
relatively speaking, most noticeable in applications that transfer only
a small amount of data or operate only infrequently.</t>
    </section>
    <section anchor="model" numbered="true" toc="include" removeInRFC="false" pn="section-3">
      <name slugifiedName="name-link-layer-assumptions">Link-Layer Assumptions</name>
      <t indent="0" pn="section-3-1">We assume that the underlying communications network can be any
large-scale, public network that employs a point-to-point communications
model and radio technology.  2G, 3G, LTE, and 5G networks are examples of such
networks but are not the only possible networks with these characteristics.</t>
      <t indent="0" pn="section-3-2">In the following, we look at some of these characteristics and their
implications.  Note that in most cases these characteristics are not
properties of the specific networks but rather are inherent in the concept
of public networks.
</t>
      <ul spacing="normal" bare="false" empty="false" indent="3" pn="section-3-3">
        <li pn="section-3-3.1">
          <t indent="0" pn="section-3-3.1.1">Public Networks</t>
          <t indent="0" pn="section-3-3.1.2">Using a public network service implies that applications can be
deployed without having to build a network to go with them. For
economic reasons, only the largest users (such as utility companies)
could afford to build their own network, and even they would not be
able to provide worldwide coverage. This means that applications
where coverage is important can be built. For instance, most
transport-sector applications require national or even worldwide coverage to
work.</t>
          <t indent="0" pn="section-3-3.1.3">But there are other implications as well. By definition, the network
is not tailored for this application, and, with some exceptions, the
traffic passes through the Internet. One implication of this is that
there are generally no application-specific network configurations or
discovery support. For instance, the public network helps devices to
get on the Internet, set up default routers, configure DNS servers,
and so on, but does nothing for configuring possible higher-layer
functions, such as servers that a device might need to contact to perform
its application functions.
          </t>
          <t indent="0" pn="section-3-3.1.4">Public networks often provide web proxies and other functionality that
can, in some cases, make significant improvements related to delays and costs
of communication over the wireless link. For instance, resolving
server DNS names in a proxy instead of the user's device may cut down
on the general chattiness of the communications, therefore reducing
overall delay in completing the entire transaction. Likewise, a CoAP
proxy or Publish-Subscribe (pub⁠/sub) Broker <xref target="I-D.ietf-core-coap-pubsub" format="default" sectionFormat="of" derivedContent="CoAP-PubSub"/>
can assist a CoAP device in communication. However, unlike HTTP web
proxies, CoAP proxies and brokers are not yet widely deployed in
public networks.</t>
          <t indent="0" pn="section-3-3.1.5">Similarly, given the lack of available IPv4 addresses, chances are
that many devices are behind a Network Address Translation (NAT)
device. This means that they are not easily reachable as servers.
Alternatively, the devices may be directly on the global Internet
(on either IPv4 or IPv6) and easily reachable as
servers. Unfortunately, this may mean that they also receive unwanted
traffic, which may have implications for both power consumption and
service costs.</t>
        </li>
        <li pn="section-3-3.2">
          <t indent="0" pn="section-3-3.2.1">Point-to-Point Link Model</t>
          <t indent="0" pn="section-3-3.2.2">This is a common link model in cellular networks. One implication of
this model is that there will be no other nodes on the same link,
except maybe for the service provider's router. As a result, multicast
discovery cannot be reasonably used for any local discovery purposes.
While the configuration of the service provider's router for specific
users is theoretically possible, this is difficult to
achieve in practice, at least for any small user that cannot afford a
network-wide contract for a private APN (Access Point Name). The
public network access service has little per-user tailoring.</t>
        </li>
        <li pn="section-3-3.3">
          <t indent="0" pn="section-3-3.3.1">Radio Technology</t>
          <t indent="0" pn="section-3-3.3.2">The use of radio technology means that power is needed to operate the
radios. Transmission generally requires more power
than reception. However, radio protocols have generally been designed
so that a device checks periodically to see whether it has messages. In a
situation where messages arrive seldom or not at all, this checking
consumes energy. Research has shown that these periodic checks (such
as LTE paging message reception) are often a far bigger contributor to
energy consumption than message transmission.</t>
          <t indent="0" pn="section-3-3.3.3">Note that for situations where there are several applications on the
same device wishing to communicate with the Internet in some manner,
bundling those applications together so that they can communicate at
the same time can be very useful. Some guidance for these techniques
in the smartphone context can be found in <xref target="Android-Bundle" format="default" sectionFormat="of" derivedContent="Android-Bundle"/>.</t>
        </li>
      </ul>
      <t indent="0" pn="section-3-4">Naturally, each device has the freedom to decide when it sends
messages. In addition, we assume that there is some way for the
devices to control when or how often they want to receive messages.
Specific methods for doing this depend on the specific network being
used and also tend to change as improvements in the design of these
networks are incorporated. The reception control methods generally
come in two variants: (1) fine-grained mechanisms that deal with how often
the device needs to wake up for paging messages and (2) cruder
mechanisms where the device simply disconnects from the network for a
period of time. There are costs and benefits associated with each
method, but those are not relevant for this memo, as long as some
control method exists. Furthermore, devices could use Delay-Tolerant
Networking (DTN) mechanisms <xref target="RFC4838" format="default" sectionFormat="of" derivedContent="RFC4838"/> to relax the
requirements for timeliness of connectivity and message delivery. </t>
    </section>
    <section anchor="scen" numbered="true" toc="include" removeInRFC="false" pn="section-4">
      <name slugifiedName="name-scenarios">Scenarios</name>
      <t indent="0" pn="section-4-1">Not all applications or situations are equal. They may require
different solutions or communication models. This memo focuses on two
common scenarios in cellular networks:
</t>
      <ul spacing="normal" bare="false" empty="false" indent="3" pn="section-4-2">
        <li pn="section-4-2.1">
          <t indent="0" pn="section-4-2.1.1">Real-Time Reachable Devices</t>
          <t indent="0" pn="section-4-2.1.2">This scenario involves all communication that requires real-time or
near-real-time communications with a device. That is, a network entity
must be able to reach the device with a small time lag at any time,
and no previously agreed-upon wake-up schedule can be arranged. By "real-time", we
mean any reasonable end-to-end communications latency, be it measured
in milliseconds or seconds. However, unpredictable sleep states are
not expected.</t>
          <t indent="0" pn="section-4-2.1.3">Examples of devices in this category include sensors that must be measurable
from a remote source at any instant in time, such as process automation sensors
and actuators that require immediate action, such as light bulbs or door locks.</t>
        </li>
        <li pn="section-4-2.2">
          <t indent="0" pn="section-4-2.2.1">Sleepy Devices</t>
          <t indent="0" pn="section-4-2.2.2">This scenario involves the freedom to choose when a device communicates. The
device is often expected to be able to be in a sleep state for much of
its time. The device itself can choose when it communicates, or it lets
the network assist in this task.</t>
          <t indent="0" pn="section-4-2.2.3">Examples of devices in this category include sensors that track slowly
changing values, such as temperature sensors and actuators that
control a relatively slow process, such as heating systems.</t>
          <t indent="0" pn="section-4-2.2.4">Note that there may be hard real-time requirements, but they are
expressed in terms of how fast the device can communicate -- not in
terms of how fast it can respond to network stimuli. For instance,
a fire detector can be classified as a sleepy device as long as it
can internally quickly wake up on detecting fire and initiate the necessary
communications without delay.</t>
        </li>
      </ul>
    </section>
    <section anchor="disc" numbered="true" toc="include" removeInRFC="false" pn="section-5">
      <name slugifiedName="name-discovery-and-registration">Discovery and Registration</name>
      <t indent="0" pn="section-5-1">In both scenarios, the device will be attached to a public network.
Without special arrangements, the device will also get a dynamically
assigned IP address or an IPv6 prefix. At least one but typically
several router hops separate the device from its communicating peers
such as application servers. As a result, the address or even the
existence of the device is typically not immediately obvious to the
other nodes participating in the application. As discussed earlier,
multicast discovery has limited value in public networks; network
nodes cannot practically discover individual devices in a large public
network. And the devices cannot discover who they need to talk to, as
the public network offers just basic Internet connectivity.</t>
      <t indent="0" pn="section-5-2">Our recommendation is to initiate a discovery and registration
process. This allows each device to inform its peers that it has
connected to the network and that it is reachable at a given IP
address. Registration also facilitates low-power operation, since a
device can delegate part of the discovery signaling and reachability
requirements to another node.</t>
      <t indent="0" pn="section-5-3">The registration part is easy, e.g., with a resource directory. The
device should perform the necessary registration with such a resource directory --
for instance, as specified in <xref target="RFC9176" format="default" sectionFormat="of" derivedContent="RFC9176"/>. In order to do this
registration, the device needs to know its Constrained RESTful Environments (CoRE) Link Format
description, as specified in <xref target="RFC6690" format="default" sectionFormat="of" derivedContent="RFC6690"/>. In essence, the
registration process involves performing a GET on
.well-known/core/?rt=core-rd at the address of the resource directory
and then doing a POST on the path of the discovered resource.</t>
      <t indent="0" pn="section-5-4">Other mechanisms enabling device discovery and delegation of
functionality to a non-sleepy node include those discussed in <xref target="I-D.vial-core-mirror-proxy" format="default" sectionFormat="of" derivedContent="CoRE-Mirror"/> and <xref target="I-D.ietf-core-coap-pubsub" format="default" sectionFormat="of" derivedContent="CoAP-PubSub"/>.</t>
      <t indent="0" pn="section-5-5">However, current CoAP specifications provide only limited support
for discovering the resource directory or other registration
services. Local multicast discovery only works in LAN-type networks; it does
not work in the public cellular networks discussed in this document. We recommend the following alternate methods for discovery:</t>
      <ul spacing="normal" bare="false" empty="false" indent="3" pn="section-5-6">
        <li pn="section-5-6.1">
          <t indent="0" pn="section-5-6.1.1">Manual Configuration</t>
          <t indent="0" pn="section-5-6.1.2">The DNS name of the resource directory is manually configured. This
approach is suitable in situations where the owner of the devices has
the resources and capabilities to do the configuration. For instance,
a utility company can typically program its metering devices to point
to the company servers.</t>
        </li>
        <li pn="section-5-6.2">
          <t indent="0" pn="section-5-6.2.1">Manufacturer Server</t>
          <t indent="0" pn="section-5-6.2.2">The DNS name of the directory or proxy is hardwired to the
	  software by the manufacturer, and the directory or proxy is actually run by the
manufacturer. This approach is suitable in many consumer usage
scenarios, where it would be unreasonable to assume that the consumer
runs any specific network services. The manufacturer's web interface
and the directory/proxy servers can cooperate to provide the desired
functionality to the end user. For instance, the end user can register
a device identity in the manufacturer's web interface and ask that specific
actions be taken when the device does something.</t>
        </li>
        <li pn="section-5-6.3">
          <t indent="0" pn="section-5-6.3.1">Delegating Manufacturer Server</t>
          <t indent="0" pn="section-5-6.3.2">The DNS name of the directory or proxy is hardwired to the software by
the manufacturer, but this directory or proxy merely redirects the
request to a directory or proxy run by whoever bought the
device. This approach is suitable in many enterprise environments, as
it allows the enterprise to be in charge of actual data collection and
device registries; only the initial bootstrap goes through the
manufacturer. In many cases, there are even legal requirements (such as
EU privacy laws) that prevent providing unnecessary information to
third parties.</t>
        </li>
        <li pn="section-5-6.4">
          <t indent="0" pn="section-5-6.4.1">Common Global Resolution Infrastructure</t>
          <t indent="0" pn="section-5-6.4.2">The delegating manufacturer server model could be generalized into
a reverse-DNS-like discovery infrastructure that could, for example, answer the question "This is a device with identity ID 2456; where is my home registration server?" However, at present, no such resolution system exists.
(Note: The EPCGlobal system for Radio Frequency Identification (RFID) resolution is reminiscent
	of this approach.)</t>
        </li>
      </ul>
      <t indent="0" pn="section-5-7">Besides manual configuration, these alternate mechanisms are mostly
suitable for large manufacturers and deployments. Good automated
mechanisms for discovery of devices that are manufactured and deployed
in small quantities are still needed.</t>
    </section>
    <section anchor="data" numbered="true" toc="include" removeInRFC="false" pn="section-6">
      <name slugifiedName="name-data-formats">Data Formats</name>
      <t indent="0" pn="section-6-1">A variety of data formats exist for passing around data. These data
formats include XML, JavaScript Object Notation (JSON) <xref target="RFC8259" format="default" sectionFormat="of" derivedContent="RFC8259"/>, Efficient XML Interchange (EXI) <xref target="W3C.REC-exi-20140211" format="default" sectionFormat="of" derivedContent="W3C.REC-exi-20140211"/>, Concise Binary Object Representation (CBOR) <xref target="RFC8949" format="default" sectionFormat="of" derivedContent="RFC8949"/>, and various text formats. Message lengths can
have a significant effect on the amount of energy required for the
communications, and as such it is highly desirable to keep message
lengths minimal. At the same time, extreme optimization can affect
flexibility and ease of programming. The authors recommend that readers refer
to <xref target="RFC8428" format="default" sectionFormat="of" derivedContent="RFC8428"/> for a compact but easily processed 
and extendable format.</t>
    </section>
    <section anchor="rt" numbered="true" toc="include" removeInRFC="false" pn="section-7">
      <name slugifiedName="name-real-time-reachable-devices">Real-Time Reachable Devices</name>
      <t indent="0" pn="section-7-1">These devices are often best modeled as CoAP servers. The device
will have limited control over when it receives messages, and it will
have to listen actively for messages, up to the limits of the
underlying link layer. If in some phase of its operation the device also acts in the role of a client, it can control how many transmissions it makes
on its own behalf.</t>
      <t indent="0" pn="section-7-2">The packet reception checks should be tailored according to the
requirements of the application. If sub-second response time is not
needed, a more infrequent checking process may save some power.</t>
      <t indent="0" pn="section-7-3">For sensor-type devices, the CoAP Observe extension (Observe option) <xref target="RFC7641" format="default" sectionFormat="of" derivedContent="RFC7641"/> may be supported. This allows the sensor to track
changes to the sensed value and make an immediate observation
response upon a change. This may reduce the amount of polling needed
to be done by the client. Unfortunately, it does not reduce the time
that the device needs to be listening for requests. Subscription
requests from clients other than the currently registered client may come
in at any time, the current client may change its request, and the device
still needs to respond to normal queries as a server. As a result, the
sensor cannot rely on having to communicate only on its own choice of
observation interval.</t>
      <t indent="0" pn="section-7-4">In order to act as a server, the device needs to be placed in a
public IPv4 address, be reachable over IPv6, or be hosted in a private
network.  If the device is hosted on a private network, then all
other nodes that need to access this device also need to reside in the same
private network. There are multiple ways to provide private networks
over public cellular networks. One approach is to dedicate a special
APN for the private network. Corporate access via cellular networks
has often been arranged in this manner, for instance. Another approach
is to use Virtual Private Network (VPN) technology -- for instance,
IPsec-based VPNs.</t>
      <t indent="0" pn="section-7-5">Power consumption from unwanted traffic is problematic in these
devices, unless they are placed in a private network or protected by an
operator-provided firewall service. Devices on an IPv6 network will
be afforded some protection due to the nature of the 2<sup>64</sup> address allocation
for a single terminal in a 3GPP cellular network; the attackers will
be unable to guess the full IP address of the device. However, this
protects only the device from processing a packet, but since the
network will still deliver the packet to any of the addresses within
the assigned 64-bit prefix, packet reception costs are still
incurred.</t>
      <t indent="0" pn="section-7-6">Note that the VPN approach cannot prevent unwanted traffic
received at the tunnel endpoint address and may require keep-alive
traffic. Special APNs can solve this issue but require an explicit
arrangement with the service provider.</t>
    </section>
    <section anchor="sens" numbered="true" toc="include" removeInRFC="false" pn="section-8">
      <name slugifiedName="name-sleepy-devices">Sleepy Devices</name>
      <t indent="0" pn="section-8-1">These devices are best modeled as devices that can delegate queries
to some other node -- for instance, as mirror servers <xref target="I-D.vial-core-mirror-proxy" format="default" sectionFormat="of" derivedContent="CoRE-Mirror"/> or CoAP
pub⁠/sub Clients <xref target="I-D.ietf-core-coap-pubsub" format="default" sectionFormat="of" derivedContent="CoAP-PubSub"/>. When the device initializes
itself, it makes a registration of itself in a server or broker as described
above in <xref target="disc" format="default" sectionFormat="of" derivedContent="Section 5"/> and then continues to send periodic
updates of sensor values.</t>
      <t indent="0" pn="section-8-2">As a result, the device acts only as a client and not as a server, and
can shut down all communication channels during its
sleeping period. The length of the sleeping period depends on power
and application requirements. Some environmental sensors might use a
day or a week as the period, while other devices may use smaller
values ranging from minutes to hours.</t>
      <t indent="0" pn="section-8-3">The ability to shut down communications and act as only a client
has four impacts:</t>
      <ul spacing="normal" bare="false" empty="false" indent="3" pn="section-8-4">
        <li pn="section-8-4.1">Radio transmission and reception can be turned off during the
sleeping period, reducing power consumption significantly.</li>
        <li pn="section-8-4.2">However, some power and time are consumed by having to reattach to
the network after the end of a sleep period.</li>
        <li pn="section-8-4.3">The window of opportunity for unwanted traffic to arrive is much
smaller, as the device is listening for traffic only part of the
time. Note, however, that networks may cache packets for some time. On
the other hand, stateful firewalls can effectively remove much of the
unwanted traffic for client-type devices.</li>
        <li pn="section-8-4.4">The device may exist behind a NAT or a firewall without being
impacted. Note that the "simple security" basic IPv6 firewall capability
<xref target="RFC6092" format="default" sectionFormat="of" derivedContent="RFC6092"/> blocks inbound UDP traffic by default, so just
moving to IPv6 is not a direct solution to this problem.</li>
      </ul>
      <t indent="0" pn="section-8-5">For sleepy devices that represent actuators, it is also possible to
use the mirror server or pub/sub broker model. A device can receive information from the server or broker about variable changes via either polling or notifications.</t>
      <section numbered="true" toc="include" removeInRFC="false" pn="section-8.1">
        <name slugifiedName="name-implementation-consideratio">Implementation Considerations</name>
        <t indent="0" pn="section-8.1-1">There are several challenges related to implementing sleepy devices. They
need hardware that can be placed in an appropriate sleep mode but
awakened when it is time to do something again. This is not always
easy in all hardware platforms. It is important to be able to shut
down as much of the hardware as possible, preferably down to
everything else except a clock circuit. The platform also needs to support
reawakening at suitable timescales, as otherwise the device needs to be 
powered up too frequently.</t>
        <t indent="0" pn="section-8.1-2">Most commercial cellular modem platforms do not allow applications
to suspend the state of the communications stack. Hence, after a
power-off period, they need to re-establish communications, which takes
some amount of time and extra energy.</t>
        <t indent="0" pn="section-8.1-3">Implementations should have a coordinated understanding of the
state and sleeping schedule. For instance, it makes no sense to keep a
CPU powered up, waiting for a message when the lower layer has been
told that the next possible paging opportunity is some time away.</t>
        <t indent="0" pn="section-8.1-4">The cellular networks have a number of adjustable configuration
parameters, such as the maximum used paging interval. Proper settings
of these values have an impact on the power consumption of the device,
but with current business practices, such settings are rarely
negotiated when the user's subscription is provisioned.</t>
      </section>
    </section>
    <section numbered="true" toc="include" removeInRFC="false" pn="section-9">
      <name slugifiedName="name-security-considerations">Security Considerations</name>
      <t indent="0" pn="section-9-1">There are no particular security aspects related to what has been
discussed in this memo, except for the ability to delegate queries for
a resource to another node. Depending on how this is done, there are
obvious security issues that have largely NOT yet been addressed in
the relevant Internet-Drafts <xref target="I-D.vial-core-mirror-proxy" format="default" sectionFormat="of" derivedContent="CoRE-Mirror"/>
        <xref target="I-D.castellani-core-alive" format="default" sectionFormat="of" derivedContent="CoAP-Alive"/>
        <xref target="I-D.fossati-core-publish-monitor-options" format="default" sectionFormat="of" derivedContent="CoAP-Publ-Monitor"/>.  However,
we point out that, in general, security issues in delegation can be
solved through either reliance on your local network support nodes
(which may be quite reasonable in many environments) or explicit
end-to-end security. Explicit end-to-end security through nodes that
are awake at different times means, in practice, end-to-end data object
security. We have implemented one such mechanism for sleepy nodes as
described in <xref target="RFC8387" format="default" sectionFormat="of" derivedContent="RFC8387"/>.</t>
      <t indent="0" pn="section-9-2">The security considerations relating to CoAP <xref target="RFC7252" format="default" sectionFormat="of" derivedContent="RFC7252"/> and the relevant link layers should
apply. Note that cellular networks universally employ per-device
authentication, integrity protection, and, for most of the world,
encryption of all their communications. Additional protection of
transport sessions is possible through mechanisms described in <xref target="RFC7252" format="default" sectionFormat="of" derivedContent="RFC7252"/> or data objects.</t>
    </section>
    <section anchor="iana" numbered="true" toc="include" removeInRFC="false" pn="section-10">
      <name slugifiedName="name-iana-considerations">IANA Considerations</name>
      <t indent="0" pn="section-10-1">This document has no IANA actions.</t>
    </section>
  </middle>
  <back>
    <displayreference target="I-D.arkko-core-sleepy-sensors" to="Tiny-CoAP"/>
    <displayreference target="I-D.castellani-core-alive" to="CoAP-Alive"/>
    <displayreference target="I-D.fossati-core-publish-monitor-options" to="CoAP-Publ-Monitor"/>
    <displayreference target="I-D.vial-core-mirror-proxy" to="CoRE-Mirror"/>
    <displayreference target="I-D.ietf-core-coap-pubsub" to="CoAP-PubSub"/>
    <references pn="section-11">
      <name slugifiedName="name-references">References</name>
      <references pn="section-11.1">
        <name slugifiedName="name-normative-references">Normative References</name>
        <reference anchor="RFC8259" target="https://www.rfc-editor.org/info/rfc8259" quoteTitle="true" derivedAnchor="RFC8259">
          <front>
            <title>The JavaScript Object Notation (JSON) Data Interchange Format</title>
            <author initials="T." surname="Bray" fullname="T. Bray" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2017" month="December"/>
            <abstract>
              <t indent="0">JavaScript Object Notation (JSON) is a lightweight, text-based, language-independent data interchange format.  It was derived from the ECMAScript Programming Language Standard.  JSON defines a small set of formatting rules for the portable representation of structured data.</t>
              <t indent="0">This document removes inconsistencies with other specifications of JSON, repairs specification errors, and offers experience-based interoperability guidance.</t>
            </abstract>
          </front>
          <seriesInfo name="STD" value="90"/>
          <seriesInfo name="RFC" value="8259"/>
          <seriesInfo name="DOI" value="10.17487/RFC8259"/>
        </reference>
        <reference anchor="RFC6690" target="https://www.rfc-editor.org/info/rfc6690" quoteTitle="true" derivedAnchor="RFC6690">
          <front>
            <title>Constrained RESTful Environments (CoRE) Link Format</title>
            <author initials="Z." surname="Shelby" fullname="Z. Shelby">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2012" month="August"/>
            <abstract>
              <t indent="0">This specification defines Web Linking using a link format for use by constrained web servers to describe hosted resources, their attributes, and other relationships between links.  Based on the HTTP Link Header field defined in RFC 5988, the Constrained RESTful Environments (CoRE) Link Format is carried as a payload and is assigned an Internet media type.  "RESTful" refers to the Representational State Transfer (REST) architecture.  A well-known URI is defined as a default entry point for requesting the links hosted by a server.  [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="6690"/>
          <seriesInfo name="DOI" value="10.17487/RFC6690"/>
        </reference>
        <reference anchor="RFC7252" target="https://www.rfc-editor.org/info/rfc7252" quoteTitle="true" derivedAnchor="RFC7252">
          <front>
            <title>The Constrained Application Protocol (CoAP)</title>
            <author initials="Z." surname="Shelby" fullname="Z. Shelby">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="K." surname="Hartke" fullname="K. Hartke">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="C." surname="Bormann" fullname="C. Bormann">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2014" month="June"/>
            <abstract>
              <t indent="0">The Constrained Application Protocol (CoAP) is a specialized web transfer protocol for use with constrained nodes and constrained (e.g., low-power, lossy) networks.  The nodes often have 8-bit microcontrollers with small amounts of ROM and RAM, while constrained networks such as IPv6 over Low-Power Wireless Personal Area Networks (6LoWPANs) often have high packet error rates and a typical throughput of 10s of kbit/s.  The protocol is designed for machine- to-machine (M2M) applications such as smart energy and building automation.</t>
              <t indent="0">CoAP provides a request/response interaction model between application endpoints, supports built-in discovery of services and resources, and includes key concepts of the Web such as URIs and Internet media types.  CoAP is designed to easily interface with HTTP for integration with the Web while meeting specialized requirements such as multicast support, very low overhead, and simplicity for constrained environments.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="7252"/>
          <seriesInfo name="DOI" value="10.17487/RFC7252"/>
        </reference>
        <reference anchor="RFC7641" target="https://www.rfc-editor.org/info/rfc7641" quoteTitle="true" derivedAnchor="RFC7641">
          <front>
            <title>Observing Resources in the Constrained Application Protocol (CoAP)</title>
            <author initials="K." surname="Hartke" fullname="K. Hartke">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2015" month="September"/>
            <abstract>
              <t indent="0">The Constrained Application Protocol (CoAP) is a RESTful application protocol for constrained nodes and networks.  The state of a resource on a CoAP server can change over time.  This document specifies a simple protocol extension for CoAP that enables CoAP clients to "observe" resources, i.e., to retrieve a representation of a resource and keep this representation updated by the server over a period of time.  The protocol follows a best-effort approach for sending new representations to clients and provides eventual consistency between the state observed by each client and the actual resource state at the server.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="7641"/>
          <seriesInfo name="DOI" value="10.17487/RFC7641"/>
        </reference>
        <reference anchor="RFC8949" target="https://www.rfc-editor.org/info/rfc8949" quoteTitle="true" derivedAnchor="RFC8949">
          <front>
            <title>Concise Binary Object Representation (CBOR)</title>
            <author initials="C." surname="Bormann" fullname="C. Bormann">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="P." surname="Hoffman" fullname="P. Hoffman">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2020" month="December"/>
            <abstract>
              <t indent="0">The Concise Binary Object Representation (CBOR) is a data format whose design goals include the possibility of extremely small code size, fairly small message size, and extensibility without the need for version negotiation. These design goals make it different from earlier binary serializations such as ASN.1 and MessagePack.</t>
              <t indent="0">This document obsoletes RFC 7049, providing editorial improvements, new details, and errata fixes while keeping full compatibility with the interchange format of RFC 7049.  It does not create a new version of the format.</t>
            </abstract>
          </front>
          <seriesInfo name="STD" value="94"/>
          <seriesInfo name="RFC" value="8949"/>
          <seriesInfo name="DOI" value="10.17487/RFC8949"/>
        </reference>
        <reference anchor="RFC9176" target="https://www.rfc-editor.org/info/rfc9176" quoteTitle="true" derivedAnchor="RFC9176">
          <front>
            <title>Constrained RESTful Environments (CoRE) Resource Directory</title>
            <author initials="C." surname="Amsüss" fullname="C. Amsüss" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="Z." surname="Shelby" fullname="Z. Shelby">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="M." surname="Koster" fullname="M. Koster">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="C." surname="Bormann" fullname="C. Bormann">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="P." surname="van der Stok" fullname="P. van der Stok">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2022" month="April"/>
            <abstract>
              <t indent="0">In many Internet of Things (IoT) applications, direct discovery of resources is not practical due to sleeping nodes or networks where multicast traffic is inefficient. These problems can be solved by employing an entity called a Resource Directory (RD), which contains information about resources held on other servers, allowing lookups to be performed for those resources. The input to an RD is composed of links, and the output is composed of links constructed from the information stored in the RD. This document specifies the web interfaces that an RD supports for web servers to discover the RD and to register, maintain, look up, and remove information on resources. Furthermore, new target attributes useful in conjunction with an RD are defined.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="9176"/>
          <seriesInfo name="DOI" value="10.17487/RFC9176"/>
        </reference>
        <reference anchor="W3C.REC-exi-20140211" target="https://www.w3.org/TR/exi/" quoteTitle="true" derivedAnchor="W3C.REC-exi-20140211">
          <front>
            <title>Efficient XML Interchange (EXI) Format 1.0 (Second Edition)</title>
            <author initials="J" surname="Schneider">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="T" surname="Kamiya">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="D" surname="Peintner">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="R" surname="Kyusakov">
              <organization showOnFrontPage="true"/>
            </author>
            <date month="February" year="2014"/>
          </front>
          <refcontent>World Wide Web Consortium Recommendation REC-exi-20140211</refcontent>
        </reference>
        <reference anchor="RFC8428" target="https://www.rfc-editor.org/info/rfc8428" quoteTitle="true" derivedAnchor="RFC8428">
          <front>
            <title>Sensor Measurement Lists (SenML)</title>
            <author initials="C." surname="Jennings" fullname="C. Jennings">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="Z." surname="Shelby" fullname="Z. Shelby">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="J." surname="Arkko" fullname="J. Arkko">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="A." surname="Keranen" fullname="A. Keranen">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="C." surname="Bormann" fullname="C. Bormann">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2018" month="August"/>
            <abstract>
              <t indent="0">This specification defines a format for representing simple sensor measurements and device parameters in Sensor Measurement Lists (SenML).  Representations are defined in JavaScript Object Notation (JSON), Concise Binary Object Representation (CBOR), Extensible Markup Language (XML), and Efficient XML Interchange (EXI), which share the common SenML data model.  A simple sensor, such as a temperature sensor, could use one of these media types in protocols such as HTTP or the Constrained Application Protocol (CoAP) to transport the measurements of the sensor or to be configured.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8428"/>
          <seriesInfo name="DOI" value="10.17487/RFC8428"/>
        </reference>
        <reference anchor="RFC7228" target="https://www.rfc-editor.org/info/rfc7228" quoteTitle="true" derivedAnchor="RFC7228">
          <front>
            <title>Terminology for Constrained-Node Networks</title>
            <author initials="C." surname="Bormann" fullname="C. Bormann">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="M." surname="Ersue" fullname="M. Ersue">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="A." surname="Keranen" fullname="A. Keranen">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2014" month="May"/>
            <abstract>
              <t indent="0">The Internet Protocol Suite is increasingly used on small devices with severe constraints on power, memory, and processing resources, creating constrained-node networks.  This document provides a number of basic terms that have been useful in the standardization work for constrained-node networks.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="7228"/>
          <seriesInfo name="DOI" value="10.17487/RFC7228"/>
        </reference>
      </references>
      <references pn="section-11.2">
        <name slugifiedName="name-informative-references">Informative References</name>
        <reference anchor="RFC4838" target="https://www.rfc-editor.org/info/rfc4838" quoteTitle="true" derivedAnchor="RFC4838">
          <front>
            <title>Delay-Tolerant Networking Architecture</title>
            <author initials="V." surname="Cerf" fullname="V. Cerf">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="S." surname="Burleigh" fullname="S. Burleigh">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="A." surname="Hooke" fullname="A. Hooke">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="L." surname="Torgerson" fullname="L. Torgerson">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="R." surname="Durst" fullname="R. Durst">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="K." surname="Scott" fullname="K. Scott">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="K." surname="Fall" fullname="K. Fall">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="H." surname="Weiss" fullname="H. Weiss">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2007" month="April"/>
            <abstract>
              <t indent="0">This document describes an architecture for delay-tolerant and disruption-tolerant networks, and is an evolution of the architecture originally designed for the Interplanetary Internet, a communication system envisioned to provide Internet-like services across interplanetary distances in support of deep space exploration.  This document describes an architecture that addresses a variety of problems with internetworks having operational and performance characteristics that make conventional (Internet-like) networking approaches either unworkable or impractical.  We define a message- oriented overlay that exists above the transport (or other) layers of the networks it interconnects.  The document presents a motivation for the architecture, an architectural overview, review of state management required for its operation, and a discussion of application design issues.  This document represents the consensus of the IRTF DTN research group and has been widely reviewed by that group.  This memo provides information for the Internet community.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="4838"/>
          <seriesInfo name="DOI" value="10.17487/RFC4838"/>
        </reference>
        <reference anchor="RFC6092" target="https://www.rfc-editor.org/info/rfc6092" quoteTitle="true" derivedAnchor="RFC6092">
          <front>
            <title>Recommended Simple Security Capabilities in Customer Premises Equipment (CPE) for Providing Residential IPv6 Internet Service</title>
            <author initials="J." surname="Woodyatt" fullname="J. Woodyatt" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2011" month="January"/>
            <abstract>
              <t indent="0">This document identifies a set of recommendations for the makers of devices and describes how to provide for "simple security" capabilities at the perimeter of local-area IPv6 networks in Internet-enabled homes and small offices.  This document is not  an Internet Standards Track specification; it is published for  informational purposes.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="6092"/>
          <seriesInfo name="DOI" value="10.17487/RFC6092"/>
        </reference>
        <reference anchor="I-D.arkko-core-sleepy-sensors" quoteTitle="true" target="https://datatracker.ietf.org/doc/html/draft-arkko-core-sleepy-sensors-01" derivedAnchor="Tiny-CoAP">
          <front>
            <title>Implementing Tiny COAP Sensors</title>
            <author fullname="Jari Arkko">
	 </author>
            <author fullname="Heidi-Maria Rissanen">
	 </author>
            <author fullname="Salvatore Loreto">
	 </author>
            <author fullname="Zoltan Turanyi">
	 </author>
            <author fullname="Oscar Novo">
	 </author>
            <date month="July" day="5" year="2011"/>
            <abstract>
              <t indent="0">   The authors are developing COAP and IPv6-based sensor networks for
   environments where lightweight implementations, long battery
   lifetimes, and minimal management burden are important.  The memo
   shows how different communication models supported by COAP affect
   implementation complexity and energy consumption, far more so than
   mere changes in message syntax.  Our prototype implements a
   multicast-based IPv6, UDP, COAP, and XML protocol stack in less than
   50 assembler instructions.  While this extremely minimal
   implementation is suitable only for limited applications and makes a
   number of assumptions, the general conclusions point to need for
   further work in developing the COAP multicast and observation
   frameworks.

              </t>
            </abstract>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-arkko-core-sleepy-sensors-01"/>
          <format type="TXT" target="https://www.ietf.org/archive/id/draft-arkko-core-sleepy-sensors-01.txt"/>
          <refcontent>Work in Progress</refcontent>
        </reference>
        <reference anchor="RFC8387" target="https://www.rfc-editor.org/info/rfc8387" quoteTitle="true" derivedAnchor="RFC8387">
          <front>
            <title>Practical Considerations and Implementation Experiences in Securing Smart Object Networks</title>
            <author initials="M." surname="Sethi" fullname="M. Sethi">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="J." surname="Arkko" fullname="J. Arkko">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="A." surname="Keranen" fullname="A. Keranen">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="H." surname="Back" fullname="H. Back">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2018" month="May"/>
            <abstract>
              <t indent="0">This memo describes challenges associated with securing resource- constrained smart object devices.  The memo describes a possible deployment model where resource-constrained devices sign message objects, discusses the availability of cryptographic libraries for resource-constrained devices, and presents some preliminary experiences with those libraries for message signing on resource- constrained devices.  Lastly, the memo discusses trade-offs involving different types of security approaches.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8387"/>
          <seriesInfo name="DOI" value="10.17487/RFC8387"/>
        </reference>
        <reference anchor="I-D.castellani-core-alive" quoteTitle="true" target="https://datatracker.ietf.org/doc/html/draft-castellani-core-alive-00" derivedAnchor="CoAP-Alive">
          <front>
            <title>CoAP Alive Message</title>
            <author fullname="Angelo P. Castellani" surname="Castellani" initials="A">
	 </author>
            <author fullname="Salvatore Loreto" surname="Loreto" initials="S">
	 </author>
            <date month="March" day="29" year="2012"/>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-castellani-core-alive-00"/>
          <refcontent>Work in Progress</refcontent>
        </reference>
        <reference anchor="I-D.fossati-core-publish-monitor-options" quoteTitle="true" target="https://datatracker.ietf.org/doc/html/draft-fossati-core-publish-monitor-options-01" derivedAnchor="CoAP-Publ-Monitor">
          <front>
            <title>Publish and Monitor Options for CoAP</title>
            <author fullname="Thomas Fossati">
	 </author>
            <author fullname="Pierpaolo Giacomin">
	 </author>
            <author fullname="Salvatore Loreto">
	 </author>
            <date month="March" day="10" year="2012"/>
            <abstract>
              <t indent="0">   This memo defines two additional Options for the Constrained
   Application Protocol (CoAP) especially targeted at sleepy sensors:
   Publish and Monitor.

   The Publish Option enables opportunistic updates of a given resource
   state, by temporarily delegating the authority of the Publish'ed
   resource to a Proxy node.  The whole process is driven by the
   (sleepy) origin -- which may actually never need to listen.

   The Monitor Option complements the typical Observe pattern, enabling
   the tracking of a resource hosted by a node sleeping most of the
   time, by taking care of establishing and maintaining an Observe
   relationship with the (sleepy) origin on behalf of the (sleepy)
   client.

              </t>
            </abstract>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-fossati-core-publish-monitor-options-01"/>
          <format type="TXT" target="https://www.ietf.org/archive/id/draft-fossati-core-publish-monitor-options-01.txt"/>
          <refcontent>Work in Progress</refcontent>
        </reference>
        <reference anchor="I-D.vial-core-mirror-proxy" quoteTitle="true" target="https://datatracker.ietf.org/doc/html/draft-vial-core-mirror-proxy-01" derivedAnchor="CoRE-Mirror">
          <front>
            <title>CoRE Mirror Server</title>
            <author fullname="Matthieu Vial">
	 </author>
            <date month="July" day="13" year="2012"/>
            <abstract>
              <t indent="0">   The Constrained RESTful Environments (CoRE) working group aims at
   realizing the REpresentational State Transfer (REST) architecture in
   a suitable form for the most constrained nodes.  Thanks to the
   Constrained Application Protocol (CoAP), REST is now applicable to
   constrained networks.  However the most energy-constrained devices
   may enter sleep mode and disconnect their network link during several
   minutes to save energy, hence preventing them from acting as
   traditional web servers.  This document describes how a sleeping
   device can store resource representations in an entity called Mirror
   Server and participate in a constrained RESTful environment.

              </t>
            </abstract>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-vial-core-mirror-proxy-01"/>
          <format type="TXT" target="https://www.ietf.org/archive/id/draft-vial-core-mirror-proxy-01.txt"/>
          <refcontent>Work in Progress</refcontent>
        </reference>
        <reference anchor="I-D.ietf-core-coap-pubsub" quoteTitle="true" target="https://datatracker.ietf.org/doc/html/draft-ietf-core-coap-pubsub-10" derivedAnchor="CoAP-PubSub">
          <front>
            <title>Publish-Subscribe Broker for the Constrained Application Protocol (CoAP)</title>
            <author fullname="Michael Koster">
              <organization showOnFrontPage="true">SmartThings</organization>
            </author>
            <author fullname="Ari Keranen">
              <organization showOnFrontPage="true">Ericsson</organization>
            </author>
            <author fullname="Jaime Jimenez">
              <organization showOnFrontPage="true">Ericsson</organization>
            </author>
            <date month="May" day="4" year="2022"/>
            <abstract>
              <t indent="0">   The Constrained Application Protocol (CoAP), and related extensions
   are intended to support machine-to-machine communication in systems
   where one or more nodes are resource constrained, in particular for
   low power wireless sensor networks.  This document defines a publish-
   subscribe Broker for CoAP that extends the capabilities of CoAP for
   supporting nodes with long breaks in connectivity and/or up-time.

              </t>
            </abstract>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-ietf-core-coap-pubsub-10"/>
          <format type="TXT" target="https://www.ietf.org/archive/id/draft-ietf-core-coap-pubsub-10.txt"/>
          <refcontent>Work in Progress</refcontent>
        </reference>
        <reference anchor="Android-Bundle" target="https://developer.android.com/training/efficient-downloads/efficient-network-access.html" quoteTitle="true" derivedAnchor="Android-Bundle">
          <front>
            <title>Optimize network access</title>
            <author/>
            <date month="May" year="2022"/>
          </front>
          <refcontent>Android developer note</refcontent>
        </reference>
      </references>
    </references>
    <section numbered="false" toc="include" removeInRFC="false" pn="section-appendix.a">
      <name slugifiedName="name-acknowledgments">Acknowledgments</name>
      <t indent="0" pn="section-appendix.a-1">The authors would like to thank <contact fullname="Zach Shelby"/>,
      <contact fullname="Jan Holler"/>, <contact fullname="Salvatore       Loreto"/>, <contact fullname="Matthew Vial"/>, <contact fullname="Thomas       Fossati"/>, <contact fullname="Mohit Sethi"/>, <contact fullname="Jan       Melen"/>, <contact fullname="Joachim Sachs"/>, <contact fullname="Heidi-Maria Rissanen"/>, <contact fullname="Sebastien       Pierrel"/>, <contact fullname="Kumar Balachandran"/>, <contact fullname="Muhammad Waqas Mir"/>, <contact fullname="Cullen Jennings"/>,
      <contact fullname="Markus Isomaki"/>, <contact fullname="Hannes Tschofenig"/>, and <contact fullname="Anna Larmo"/> for interesting discussions in this problem
space.</t>
    </section>
    <section anchor="authors-addresses" numbered="false" removeInRFC="false" toc="include" pn="section-appendix.b">
      <name slugifiedName="name-authors-addresses">Authors' Addresses</name>
      <author initials="J" surname="Arkko" fullname="Jari Arkko">
        <organization showOnFrontPage="true">Ericsson</organization>
        <address>
          <postal>
            <street/>
            <city>Jorvas</city>
            <code>02420</code>
            <country>Finland</country>
          </postal>
          <email>jari.arkko@piuha.net</email>
        </address>
      </author>
      <author initials="A" surname="Eriksson" fullname="Anders Eriksson">
        <organization showOnFrontPage="true">Independent</organization>
        <address>
          <postal>
            <street/>
            <city>Stockholm</city>
            <code>164 83</code>
            <country>Sweden</country>
          </postal>
          <email>anders.e.eriksson@posthem.se</email>
        </address>
      </author>
      <author initials="A" surname="Keränen" fullname="Ari Keränen">
        <organization showOnFrontPage="true">Ericsson</organization>
        <address>
          <postal>
            <street/>
            <city>Jorvas</city>
            <code>02420</code>
            <country>Finland</country>
          </postal>
          <email>ari.keranen@ericsson.com</email>
        </address>
      </author>
    </section>
  </back>
</rfc>
