<?xml version='1.0' encoding='utf-8'?>
<rfc xmlns:xi="http://www.w3.org/2001/XInclude" version="3" category="std" consensus="true" docName="draft-ietf-6man-icmp-limits-08" indexInclude="true" ipr="trust200902" number="8883" prepTime="2020-09-24T15:47:58" scripts="Common,Latin" sortRefs="true" submissionType="IETF" symRefs="true" tocDepth="3" tocInclude="true" xml:lang="en">
  <link href="https://datatracker.ietf.org/doc/draft-ietf-6man-icmp-limits-08" rel="prev"/>
  <link href="https://dx.doi.org/10.17487/rfc8883" rel="alternate"/>
  <link href="urn:issn:2070-1721" rel="alternate"/>
  <front>
    <title abbrev="ICMPv6 Limits">ICMPv6 Errors for Discarding Packets Due to Processing Limits</title>
    <seriesInfo name="RFC" value="8883" stream="IETF"/>
    <author initials="T." surname="Herbert" fullname="Tom Herbert">
      <organization showOnFrontPage="true">Intel</organization>
      <address>
        <postal>
          <street/>
          <city>Santa Clara</city>
          <region>CA</region>
          <code/>
          <country>United States of America</country>
        </postal>
        <email>tom@quantonium.net</email>
      </address>
    </author>
    <date month="09" year="2020"/>
    <keyword>extension Headers</keyword>
    <keyword>destination Options</keyword>
    <keyword>Hop-by-Hop Options</keyword>
    <abstract pn="section-abstract">
      <t indent="0" pn="section-abstract-1">
    Network nodes may discard packets if they are unable to process
    protocol headers of packets due to processing constraints or limits.
    When such packets are dropped, the sender receives no indication, so
    it cannot take action to address the cause of discarded packets. This
    specification defines several new ICMPv6 errors that can be sent by a
    node that discards packets because it is unable to process the
    protocol headers. A node that receives such an ICMPv6 error may use
    the information to diagnose packet loss and may modify what it sends
    in future packets to avoid subsequent packet discards.
      </t>
    </abstract>
    <boilerplate>
      <section anchor="status-of-memo" numbered="false" removeInRFC="false" toc="exclude" pn="section-boilerplate.1">
        <name slugifiedName="name-status-of-this-memo">Status of This Memo</name>
        <t indent="0" pn="section-boilerplate.1-1">
            This is an Internet Standards Track document.
        </t>
        <t indent="0" pn="section-boilerplate.1-2">
            This document is a product of the Internet Engineering Task Force
            (IETF).  It represents the consensus of the IETF community.  It has
            received public review and has been approved for publication by
            the Internet Engineering Steering Group (IESG).  Further
            information on Internet Standards is available in Section 2 of 
            RFC 7841.
        </t>
        <t indent="0" pn="section-boilerplate.1-3">
            Information about the current status of this document, any
            errata, and how to provide feedback on it may be obtained at
            <eref target="https://www.rfc-editor.org/info/rfc8883" brackets="none"/>.
        </t>
      </section>
      <section anchor="copyright" numbered="false" removeInRFC="false" toc="exclude" pn="section-boilerplate.2">
        <name slugifiedName="name-copyright-notice">Copyright Notice</name>
        <t indent="0" pn="section-boilerplate.2-1">
            Copyright (c) 2020 IETF Trust and the persons identified as the
            document authors. All rights reserved.
        </t>
        <t indent="0" pn="section-boilerplate.2-2">
            This document is subject to BCP 78 and the IETF Trust's Legal
            Provisions Relating to IETF Documents
            (<eref target="https://trustee.ietf.org/license-info" brackets="none"/>) in effect on the date of
            publication of this document. Please review these documents
            carefully, as they describe your rights and restrictions with
            respect to this document. Code Components extracted from this
            document must include Simplified BSD License text as described in
            Section 4.e of the Trust Legal Provisions and are provided without
            warranty as described in the Simplified BSD License.
        </t>
      </section>
    </boilerplate>
    <toc>
      <section anchor="toc" numbered="false" removeInRFC="false" toc="exclude" pn="section-toc.1">
        <name slugifiedName="name-table-of-contents">Table of Contents</name>
        <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1">
          <li pn="section-toc.1-1.1">
            <t indent="0" pn="section-toc.1-1.1.1"><xref derivedContent="1" format="counter" sectionFormat="of" target="section-1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-introduction">Introduction</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.1.2">
              <li pn="section-toc.1-1.1.2.1">
                <t indent="0" keepWithNext="true" pn="section-toc.1-1.1.2.1.1"><xref derivedContent="1.1" format="counter" sectionFormat="of" target="section-1.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-extension-header-limits">Extension Header Limits</xref></t>
              </li>
              <li pn="section-toc.1-1.1.2.2">
                <t indent="0" keepWithNext="true" pn="section-toc.1-1.1.2.2.1"><xref derivedContent="1.2" format="counter" sectionFormat="of" target="section-1.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-aggregate-header-limits">Aggregate Header Limits</xref></t>
              </li>
              <li pn="section-toc.1-1.1.2.3">
                <t indent="0" keepWithNext="true" pn="section-toc.1-1.1.2.3.1"><xref derivedContent="1.3" format="counter" sectionFormat="of" target="section-1.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-nonconformant-packet-discar">Nonconformant Packet Discard</xref></t>
              </li>
              <li pn="section-toc.1-1.1.2.4">
                <t indent="0" pn="section-toc.1-1.1.2.4.1"><xref derivedContent="1.4" format="counter" sectionFormat="of" target="section-1.4"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-terminology">Terminology</xref></t>
              </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.2">
            <t indent="0" pn="section-toc.1-1.2.1"><xref derivedContent="2" format="counter" sectionFormat="of" target="section-2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-icmpv6-errors-for-extension">ICMPv6 Errors for Extension Header Limits</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.2.2">
              <li pn="section-toc.1-1.2.2.1">
                <t indent="0" pn="section-toc.1-1.2.2.1.1"><xref derivedContent="2.1" format="counter" sectionFormat="of" target="section-2.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-format">Format</xref></t>
              </li>
              <li pn="section-toc.1-1.2.2.2">
                <t indent="0" pn="section-toc.1-1.2.2.2.1"><xref derivedContent="2.2" format="counter" sectionFormat="of" target="section-2.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-unrecognized-next-header-ty">Unrecognized Next Header Type Encountered by Intermediate Node (Code 5)</xref></t>
              </li>
              <li pn="section-toc.1-1.2.2.3">
                <t indent="0" pn="section-toc.1-1.2.2.3.1"><xref derivedContent="2.3" format="counter" sectionFormat="of" target="section-2.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-extension-header-too-big-co">Extension Header Too Big (Code 6)</xref></t>
              </li>
              <li pn="section-toc.1-1.2.2.4">
                <t indent="0" pn="section-toc.1-1.2.2.4.1"><xref derivedContent="2.4" format="counter" sectionFormat="of" target="section-2.4"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-extension-header-chain-too-">Extension Header Chain Too Long (Code 7)</xref></t>
              </li>
              <li pn="section-toc.1-1.2.2.5">
                <t indent="0" pn="section-toc.1-1.2.2.5.1"><xref derivedContent="2.5" format="counter" sectionFormat="of" target="section-2.5"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-too-many-extension-headers-">Too Many Extension Headers (Code 8)</xref></t>
              </li>
              <li pn="section-toc.1-1.2.2.6">
                <t indent="0" pn="section-toc.1-1.2.2.6.1"><xref derivedContent="2.6" format="counter" sectionFormat="of" target="section-2.6"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-too-many-options-in-extensi">Too Many Options in Extension Header (Code 9)</xref></t>
              </li>
              <li pn="section-toc.1-1.2.2.7">
                <t indent="0" pn="section-toc.1-1.2.2.7.1"><xref derivedContent="2.7" format="counter" sectionFormat="of" target="section-2.7"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-option-too-big-code-10">Option Too Big (Code 10)</xref></t>
              </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.3">
            <t indent="0" pn="section-toc.1-1.3.1"><xref derivedContent="3" format="counter" sectionFormat="of" target="section-3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-icmpv6-error-for-aggregate-">ICMPv6 Error for Aggregate Header Limits</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.3.2">
              <li pn="section-toc.1-1.3.2.1">
                <t indent="0" pn="section-toc.1-1.3.2.1.1"><xref derivedContent="3.1" format="counter" sectionFormat="of" target="section-3.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-format-2">Format</xref></t>
              </li>
              <li pn="section-toc.1-1.3.2.2">
                <t indent="0" pn="section-toc.1-1.3.2.2.1"><xref derivedContent="3.2" format="counter" sectionFormat="of" target="section-3.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-usage">Usage</xref></t>
              </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.4">
            <t indent="0" pn="section-toc.1-1.4.1"><xref derivedContent="4" format="counter" sectionFormat="of" target="section-4"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-operation">Operation</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.4.2">
              <li pn="section-toc.1-1.4.2.1">
                <t indent="0" pn="section-toc.1-1.4.2.1.1"><xref derivedContent="4.1" format="counter" sectionFormat="of" target="section-4.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-priority-of-reporting">Priority of Reporting</xref></t>
              </li>
              <li pn="section-toc.1-1.4.2.2">
                <t indent="0" pn="section-toc.1-1.4.2.2.1"><xref derivedContent="4.2" format="counter" sectionFormat="of" target="section-4.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-host-response">Host Response</xref></t>
              </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.5">
            <t indent="0" pn="section-toc.1-1.5.1"><xref derivedContent="5" format="counter" sectionFormat="of" target="section-5"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-applicability-and-use-cases">Applicability and Use Cases</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.5.2">
              <li pn="section-toc.1-1.5.2.1">
                <t indent="0" pn="section-toc.1-1.5.2.1.1"><xref derivedContent="5.1" format="counter" sectionFormat="of" target="section-5.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-reliability-of-icmp">Reliability of ICMP</xref></t>
              </li>
              <li pn="section-toc.1-1.5.2.2">
                <t indent="0" pn="section-toc.1-1.5.2.2.1"><xref derivedContent="5.2" format="counter" sectionFormat="of" target="section-5.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-processing-limits">Processing Limits</xref></t>
                <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.5.2.2.2">
                  <li pn="section-toc.1-1.5.2.2.2.1">
                    <t indent="0" pn="section-toc.1-1.5.2.2.2.1.1"><xref derivedContent="5.2.1" format="counter" sectionFormat="of" target="section-5.2.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-long-headers-and-header-cha">Long Headers and Header Chains</xref></t>
                  </li>
                  <li pn="section-toc.1-1.5.2.2.2.2">
                    <t indent="0" pn="section-toc.1-1.5.2.2.2.2.1"><xref derivedContent="5.2.2" format="counter" sectionFormat="of" target="section-5.2.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-at-end-hosts">At End Hosts</xref></t>
                  </li>
                  <li pn="section-toc.1-1.5.2.2.2.3">
                    <t indent="0" pn="section-toc.1-1.5.2.2.2.3.1"><xref derivedContent="5.2.3" format="counter" sectionFormat="of" target="section-5.2.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-at-intermediate-nodes">At Intermediate Nodes</xref></t>
                  </li>
                </ul>
              </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.6">
            <t indent="0" pn="section-toc.1-1.6.1"><xref derivedContent="6" format="counter" sectionFormat="of" target="section-6"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-security-considerations">Security Considerations</xref></t>
          </li>
          <li pn="section-toc.1-1.7">
            <t indent="0" pn="section-toc.1-1.7.1"><xref derivedContent="7" format="counter" sectionFormat="of" target="section-7"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-iana-considerations">IANA Considerations</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.7.2">
              <li pn="section-toc.1-1.7.2.1">
                <t indent="0" pn="section-toc.1-1.7.2.1.1"><xref derivedContent="7.1" format="counter" sectionFormat="of" target="section-7.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-parameter-problem-codes">Parameter Problem Codes</xref></t>
              </li>
              <li pn="section-toc.1-1.7.2.2">
                <t indent="0" pn="section-toc.1-1.7.2.2.1"><xref derivedContent="7.2" format="counter" sectionFormat="of" target="section-7.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-destination-unreachable-cod">Destination Unreachable Codes</xref></t>
              </li>
              <li pn="section-toc.1-1.7.2.3">
                <t indent="0" pn="section-toc.1-1.7.2.3.1"><xref derivedContent="7.3" format="counter" sectionFormat="of" target="section-7.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-icmp-extension-object-class">ICMP Extension Object Classes and Class Sub-types</xref></t>
              </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.8">
            <t indent="0" pn="section-toc.1-1.8.1"><xref derivedContent="8" format="counter" sectionFormat="of" target="section-8"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-references">References</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.8.2">
              <li pn="section-toc.1-1.8.2.1">
                <t indent="0" pn="section-toc.1-1.8.2.1.1"><xref derivedContent="8.1" format="counter" sectionFormat="of" target="section-8.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-normative-references">Normative References</xref></t>
              </li>
              <li pn="section-toc.1-1.8.2.2">
                <t indent="0" pn="section-toc.1-1.8.2.2.1"><xref derivedContent="8.2" format="counter" sectionFormat="of" target="section-8.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-informative-references">Informative References</xref></t>
              </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.9">
            <t indent="0" pn="section-toc.1-1.9.1"><xref derivedContent="" format="none" sectionFormat="of" target="section-appendix.a"/><xref derivedContent="" format="title" sectionFormat="of" target="name-acknowledgments">Acknowledgments</xref></t>
          </li>
          <li pn="section-toc.1-1.10">
            <t indent="0" pn="section-toc.1-1.10.1"><xref derivedContent="" format="none" sectionFormat="of" target="section-appendix.b"/><xref derivedContent="" format="title" sectionFormat="of" target="name-authors-address">Author's Address</xref></t>
          </li>
        </ul>
      </section>
    </toc>
  </front>
  <middle>
    <section numbered="true" toc="include" removeInRFC="false" pn="section-1">
      <name slugifiedName="name-introduction">Introduction</name>
      <t indent="0" pn="section-1-1">
    This document specifies several new ICMPv6 errors that can be sent
    when a node discards a packet due to it being unable to process the
    necessary protocol headers because of processing constraints or
    limits. New ICMPv6 code points are defined to supplement those defined
    in <xref target="RFC4443" format="default" sectionFormat="of" derivedContent="RFC4443"/>.
    Six of the errors are specific to the processing of extension headers;
    another error is used when the aggregate protocol headers in a packet
    exceed the processing limits of a node.
      </t>
      <section numbered="true" toc="include" removeInRFC="false" pn="section-1.1">
        <name slugifiedName="name-extension-header-limits">Extension Header Limits</name>
        <t indent="0" pn="section-1.1-1">
    In IPv6, optional internet-layer information is carried in one or
    more IPv6 extension headers <xref target="RFC8200" format="default" sectionFormat="of" derivedContent="RFC8200"/>.
    Extension headers are placed
    between the IPv6 header and the upper-layer header in a packet. The
    term "header chain" refers collectively to the IPv6 header, extension
    headers, and upper-layer headers occurring in a packet. Individual
    extension headers may have a maximum length of 2048 octets and must
    fit into a single packet. Destination Options and Hop-by-Hop Options
    contain a list of options in type-length-value (TLV) format. Each
    option includes a length of the data field in octets: the minimum
    size of an option (non-pad type) is two octets, and the maximum size
    is 257 octets. The number of options in an extension header is only
    limited by the length of the extension header and the Path MTU from
    the source to the destination. Options may be skipped over by a
    receiver if they are unknown and the Option Type indicates to skip
    (first two high order bits are 00).
        </t>
        <t indent="0" pn="section-1.1-2">
    Per <xref target="RFC8200" format="default" sectionFormat="of" derivedContent="RFC8200"/>, except for Hop-by-Hop Options, extension
    headers are not examined or processed by intermediate nodes. However, in
    deployed networks, many intermediate nodes do examine extension headers for various
    purposes. For instance, a node may examine all extension headers to
    locate the transport header of a packet in order to implement transport-layer filtering or to track connections to implement a stateful firewall.
        </t>
        <t indent="0" pn="section-1.1-3">
    Destination hosts are expected to process all extension headers and
    options in Hop-by-Hop and Destination Options.
        </t>
        <t indent="0" pn="section-1.1-4">
    Due to the variable lengths, high maximum lengths, or potential for a denial-of-service attack of extension headers, many devices impose
    operational limits on extension headers in packets they process.
    <xref target="RFC7045" format="default" sectionFormat="of" derivedContent="RFC7045"/> discusses the requirements of intermediate
    nodes that discard packets because of unrecognized extension headers.
    <xref target="RFC8504" format="default" sectionFormat="of" derivedContent="RFC8504"/> discusses limits that may be applied to the
    number of options in Hop-by-Hop Options or Destination Options extension
    headers. Both intermediate nodes and end hosts may apply limits to
    extension header processing. When a limit is exceeded, the typical
    behavior is to silently discard the packet.
        </t>
        <t indent="0" pn="section-1.1-5">
    This specification defines six Parameter Problem codes that may be sent
    by a node that discards a packet due to the processing limits of extension
    headers being exceeded. The information in these ICMPv6 errors may be
    used for diagnostics to determine why packets are being dropped.
    Additionally, a source node that receives these ICMPv6 errors may be
    able to modify its use of extension headers in subsequent packets sent
    to the destination in order to avoid further occurrences of packets being
    discarded.
        </t>
      </section>
      <section numbered="true" toc="include" removeInRFC="false" pn="section-1.2">
        <name slugifiedName="name-aggregate-header-limits">Aggregate Header Limits</name>
        <t indent="0" pn="section-1.2-1">
    Some hardware devices implement a parsing buffer of a fixed size to
    process packets. The parsing buffer is expected to contain all the
    headers (often up to a transport-layer header for filtering) that a
    device needs to examine. If the aggregate length of headers in a
    packet exceeds the size of the parsing buffer, a device will either
    discard the packet or defer processing to a software slow path. In
    any case, no indication of a problem is sent back to the sender.
        </t>
        <t indent="0" pn="section-1.2-2">
    This document defines one code for ICMPv6 Destination Unreachable
    that is sent by a node that is unable to process the headers of a
    packet due to the aggregate size of the packet headers exceeding a
    processing limit. The information in this ICMPv6 error may be used for
    diagnostics to determine why packets are being dropped. Additionally, a
    source node that receives this ICMPv6 error may be able to modify
    the headers used in subsequent packets to try to avoid further
    occurrences of packets being discarded.
        </t>
      </section>
      <section numbered="true" toc="include" removeInRFC="false" pn="section-1.3">
        <name slugifiedName="name-nonconformant-packet-discar">Nonconformant Packet Discard</name>
        <t indent="0" pn="section-1.3-1">
    The ICMP errors defined in this specification may be applicable to
    scenarios in which a node is dropping packets outside the auspices
    of any standard specification. For instance, an intermediate node
    might send a "Headers too long" code in a case where it drops a
    packet because it is unable to parse deeply enough to extract the transport-layer information needed for packet filtering. Such behavior might be
    considered nonconformant (with respect to
    <xref target="RFC8200" format="default" sectionFormat="of" derivedContent="RFC8200"/>, for instance).
        </t>
        <t indent="0" pn="section-1.3-2">
    This specification does not advocate behaviors that might be
    considered nonconformant. However, packet discard does occur in real
    deployments, and the intent of this specification is to provide
    visibility as to why packets are being discarded. In the spirit that
    providing some reason is better than a silent drop, the sending of ICMP
    errors is <bcp14>RECOMMENDED</bcp14> even in cases where a node
    might be discarding packets per a nonconformant behavior.
        </t>
      </section>
      <section anchor="sec-definitions" numbered="true" toc="include" removeInRFC="false" pn="section-1.4">
        <name slugifiedName="name-terminology">Terminology</name>
        <t indent="0" pn="section-1.4-1">
    The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>", "<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>", "<bcp14>SHALL NOT</bcp14>", "<bcp14>SHOULD</bcp14>", "<bcp14>SHOULD NOT</bcp14>", "<bcp14>RECOMMENDED</bcp14>", "<bcp14>NOT RECOMMENDED</bcp14>",
    "<bcp14>MAY</bcp14>", and "<bcp14>OPTIONAL</bcp14>" in this document are to be interpreted as
    described in BCP 14 <xref target="RFC2119" format="default" sectionFormat="of" derivedContent="RFC2119"/> <xref target="RFC8174" format="default" sectionFormat="of" derivedContent="RFC8174"/> 
    when, and only when, they appear in all capitals, as shown here.
        </t>
      </section>
    </section>
    <section numbered="true" toc="include" removeInRFC="false" pn="section-2">
      <name slugifiedName="name-icmpv6-errors-for-extension">ICMPv6 Errors for Extension Header Limits</name>
      <t indent="0" pn="section-2-1">
    Six new codes are defined for the Parameter Problem type.
      </t>
      <section numbered="true" toc="include" removeInRFC="false" pn="section-2.1">
        <name slugifiedName="name-format">Format</name>
        <t indent="0" pn="section-2.1-1">
    The format of the ICMPv6 Parameter Problem message <xref target="RFC4443" format="default" sectionFormat="of" derivedContent="RFC4443"/>
    for an extension header limit exceeded error is:

        </t>
        <artwork name="" type="" align="left" alt="" pn="section-2.1-2">
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|     Type      |     Code      |          Checksum             |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                            Pointer                            |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                                                               |
|                    As much of the invoking packet             |
+               as possible without the ICMPv6 packet           +
|              exceeding the minimum IPv6 MTU [RFC8200]         |
</artwork>
        <dl newline="true" spacing="normal" indent="3" pn="section-2.1-3">
          <dt pn="section-2.1-3.1">IPv6 Header Fields:</dt>
          <dd pn="section-2.1-3.2">
            <dl newline="true" spacing="normal" indent="3" pn="section-2.1-3.2.1">
              <dt pn="section-2.1-3.2.1.1">Destination Address:</dt>
              <dd pn="section-2.1-3.2.1.2">
            Copied from the Source Address field of the invoking packet.
          </dd>
            </dl>
          </dd>
          <dt pn="section-2.1-3.3">ICMPv6 Fields:</dt>
          <dd pn="section-2.1-3.4">
            <dl newline="true" spacing="normal" indent="3" pn="section-2.1-3.4.1">
              <dt pn="section-2.1-3.4.1.1">Type:</dt>
              <dd pn="section-2.1-3.4.1.2">
                <dl indent="3" newline="false" spacing="normal" pn="section-2.1-3.4.1.2.1">
                  <dt pn="section-2.1-3.4.1.2.1.1">4</dt>
                  <dd pn="section-2.1-3.4.1.2.1.2">(Parameter Problem type)</dd>
                </dl>
              </dd>
            </dl>
            <dl newline="true" spacing="normal" indent="3" pn="section-2.1-3.4.2">
              <dt pn="section-2.1-3.4.2.1">Code:</dt>
              <dd pn="section-2.1-3.4.2.2">(pertinent to this specification)</dd>
            </dl>
            <table align="center" pn="table-1">
              <tbody>
                <tr>
                  <td align="left" colspan="1" rowspan="1">5</td>
                  <td align="left" colspan="1" rowspan="1">Unrecognized Next Header type encountered
	    by intermediate node</td>
                </tr>
                <tr>
                  <td align="left" colspan="1" rowspan="1">6</td>
                  <td align="left" colspan="1" rowspan="1">Extension header too big</td>
                </tr>
                <tr>
                  <td align="left" colspan="1" rowspan="1">7</td>
                  <td align="left" colspan="1" rowspan="1">Extension header chain too long</td>
                </tr>
                <tr>
                  <td align="left" colspan="1" rowspan="1">8</td>
                  <td align="left" colspan="1" rowspan="1">Too many extension headers</td>
                </tr>
                <tr>
                  <td align="left" colspan="1" rowspan="1">9</td>
                  <td align="left" colspan="1" rowspan="1">Too many options in extension header</td>
                </tr>
                <tr>
                  <td align="left" colspan="1" rowspan="1">10</td>
                  <td align="left" colspan="1" rowspan="1">Option too big</td>
                </tr>
              </tbody>
            </table>
            <dl newline="true" spacing="normal" indent="3" pn="section-2.1-3.4.4">
              <dt pn="section-2.1-3.4.4.1">Pointer:</dt>
              <dd pn="section-2.1-3.4.4.2">
                <t indent="0" pn="section-2.1-3.4.4.2.1">
            Identifies the octet offset within the invoking packet where
            the problem occurred.
                </t>
                <t indent="0" pn="section-2.1-3.4.4.2.2">
            The pointer will point beyond the end of the IPv6 packet if
            the field exceeding the limit is beyond what can fit in the
            maximum size of an ICMPv6 error message. If the
            pointer is used as an offset to read the data in the invoking
            packet, then a node <bcp14>MUST</bcp14> first validate that the pointer value
            is less than the length of the invoking packet data.
                </t>
              </dd>
            </dl>
          </dd>
        </dl>
      </section>
      <section numbered="true" toc="include" removeInRFC="false" pn="section-2.2">
        <name slugifiedName="name-unrecognized-next-header-ty">Unrecognized Next Header Type Encountered by Intermediate Node (Code 5)</name>
        <t indent="0" pn="section-2.2-1">
    This code <bcp14>SHOULD</bcp14> be sent by an intermediate node that discards a
    packet because it encounters a Next Header type that is unknown in
    its examination. The ICMPv6 Pointer field is set to the offset of the
    unrecognized Next Header value within the original packet.
        </t>
        <t indent="0" pn="section-2.2-2">
    Note that this code is sent by intermediate nodes and
    <bcp14>SHOULD NOT</bcp14> be sent by a final destination. If a final destination
    node observes an unrecognized header, then it <bcp14>SHOULD</bcp14> send an ICMP Parameter
    Problem message with an ICMP Code value of 1 ("unrecognized Next Header
    type encountered") as specified in <xref target="RFC8200" format="default" sectionFormat="of" derivedContent="RFC8200"/>.
        </t>
      </section>
      <section numbered="true" toc="include" removeInRFC="false" pn="section-2.3">
        <name slugifiedName="name-extension-header-too-big-co">Extension Header Too Big (Code 6)</name>
        <t indent="0" pn="section-2.3-1">
    An ICMPv6 Parameter Problem with code for "Extension header too big"
    <bcp14>SHOULD</bcp14> be sent when a node discards a packet because the size of an
    extension header exceeds its processing limit. The ICMPv6 Pointer
    field is set to the offset of the first octet in the extension header
    that exceeds the limit.
        </t>
      </section>
      <section numbered="true" toc="include" removeInRFC="false" pn="section-2.4">
        <name slugifiedName="name-extension-header-chain-too-">Extension Header Chain Too Long (Code 7)</name>
        <t indent="0" pn="section-2.4-1">
    An ICMPv6 Parameter Problem with code for "Extension header chain too
    long" <bcp14>SHOULD</bcp14> be sent when a node discards a packet with an extension
    header chain that exceeds a limit on the total size in octets of the
    header chain. The ICMPv6 Pointer is set to the first octet beyond the
    limit.
        </t>
      </section>
      <section numbered="true" toc="include" removeInRFC="false" pn="section-2.5">
        <name slugifiedName="name-too-many-extension-headers-">Too Many Extension Headers (Code 8)</name>
        <t indent="0" pn="section-2.5-1">
    An ICMPv6 Parameter Problem with code for "Too many extension headers"
    <bcp14>SHOULD</bcp14> be sent when a node discards a packet with an extension
    header chain that exceeds a limit on the number of extension headers
    in the chain. The ICMPv6 Pointer is set to the offset of the first octet of
    the first extension header that is beyond the limit.
        </t>
      </section>
      <section numbered="true" toc="include" removeInRFC="false" pn="section-2.6">
        <name slugifiedName="name-too-many-options-in-extensi">Too Many Options in Extension Header (Code 9)</name>
        <t indent="0" pn="section-2.6-1">
    An ICMPv6 Parameter Problem with code for "Too many options in
    extension header" <bcp14>SHOULD</bcp14> be sent when a node discards a packet with
    an extension header that has a number of options that exceeds the
    processing limits of the node. This code is applicable for
    Destination Options and Hop-by-Hop Options. The ICMPv6 Pointer field
    is set to the first octet of the first option that exceeds the limit.
        </t>
      </section>
      <section numbered="true" toc="include" removeInRFC="false" pn="section-2.7">
        <name slugifiedName="name-option-too-big-code-10">Option Too Big (Code 10)</name>
        <t indent="0" pn="section-2.7-1">
    An ICMPv6 Parameter Problem with code for "Option too big" is sent in
    two different cases: when the length of an individual Hop-by-Hop or
    Destination Option exceeds a limit, or when the length or number of
    consecutive Hop-by-Hop or Destination padding options exceeds a
    limit. In a case where the length of an option exceeds a processing
    limit, the ICMPv6 Pointer field is set to the offset of the first
    octet of the option that exceeds the limit. In cases where the
    length or number of padding options exceeds a limit, the ICMPv6
    Pointer field is set to the offset of the first octet of the padding
    option that exceeds the limit.

        </t>
        <t indent="0" pn="section-2.7-2">Possible limits related to padding include:</t>
        <ul spacing="normal" empty="false" bare="false" indent="3" pn="section-2.7-3">
          <li pn="section-2.7-3.1">
            The number of consecutive PAD1 options in Destination
            Options or Hop-by-Hop Options is limited to seven octets
            <xref target="RFC8504" format="default" sectionFormat="of" derivedContent="RFC8504"/>.
          </li>
          <li pn="section-2.7-3.2">
            The length of PADN options in Destination Options or
            Hop-by-Hop Options is limited seven octets
            <xref target="RFC8504" format="default" sectionFormat="of" derivedContent="RFC8504"/>.
          </li>
          <li pn="section-2.7-3.3">
            The aggregate length of a set of consecutive PAD1 or PADN
            options in Destination Options or Hop-by-Hop Options is
            limited to seven octets.
          </li>
        </ul>
      </section>
    </section>
    <section numbered="true" toc="include" removeInRFC="false" pn="section-3">
      <name slugifiedName="name-icmpv6-error-for-aggregate-">ICMPv6 Error for Aggregate Header Limits</name>
      <t indent="0" pn="section-3-1">
    One code is defined for the Destination Unreachable type for aggregate
    header limits.
      </t>
      <t indent="0" pn="section-3-2">
    This ICMP error may be applied to other headers in a packet
    than just the IPv6 header or IPv6 extension headers. Therefore,
    a Destination Unreachable type with a multi-part ICMPv6 message
    format is used in lieu of the Parameter Problem type, which only
    indicates errors concerning IPv6 headers.
      </t>
      <section numbered="true" toc="include" removeInRFC="false" pn="section-3.1">
        <name slugifiedName="name-format-2">Format</name>
        <t indent="0" pn="section-3.1-1">
     The error for aggregate header limits employs a multi-part ICMPv6
     message format as defined in <xref target="RFC4884" format="default" sectionFormat="of" derivedContent="RFC4884"/>.
     The extension object class "Extended Information" is defined to
     contain objects for ancillary information pertaining to an ICMP
     Destination Unreachable error. Within this object class, the sub-type
     "Pointer" is defined, which contains a Pointer field with similar
     semantics to the Pointer field in ICMP Parameter Problem errors.
        </t>
        <t indent="0" pn="section-3.1-2">
     The format of the ICMPv6 message for an aggregate header limit
     exceeded is:

        </t>
        <artwork name="" type="" align="left" alt="" pn="section-3.1-3">
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\
|     Type      |     Code      |          Checksum             | |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ I
|    Length     |                  Unused                       | C
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ M
|                                                               | P
~                As much of the invoking packet                 ~
|              as possible without the ICMPv6 packet            | 
|             exceeding the minimum IPv6 MTU [RFC8200]          |/
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+/
|Version|       Reserved        |           Checksum            |\
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ E
|             Length            |   Class-Num   |   C-Type      | X
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ T
|                            Pointer                            | |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+/
  </artwork>
        <dl newline="true" spacing="normal" indent="3" pn="section-3.1-4">
          <dt pn="section-3.1-4.1">IPv6 Header Fields:</dt>
          <dd pn="section-3.1-4.2">
            <dl newline="true" spacing="normal" indent="3" pn="section-3.1-4.2.1">
              <dt pn="section-3.1-4.2.1.1">Destination Address:</dt>
              <dd pn="section-3.1-4.2.1.2">
          Copied from the Source Address field of the invoking packet.
        </dd>
            </dl>
          </dd>
          <dt pn="section-3.1-4.3">ICMPv6 Fields:</dt>
          <dd pn="section-3.1-4.4">
            <dl newline="true" spacing="normal" indent="3" pn="section-3.1-4.4.1">
              <dt pn="section-3.1-4.4.1.1">Type:</dt>
              <dd pn="section-3.1-4.4.1.2">
                <dl indent="3" newline="false" spacing="normal" pn="section-3.1-4.4.1.2.1">
                  <dt pn="section-3.1-4.4.1.2.1.1">1 -</dt>
                  <dd pn="section-3.1-4.4.1.2.1.2">Destination Unreachable</dd>
                </dl>
              </dd>
              <dt pn="section-3.1-4.4.1.3">Code: (pertinent to this specification)</dt>
              <dd pn="section-3.1-4.4.1.4">
                <dl indent="3" newline="false" spacing="normal" pn="section-3.1-4.4.1.4.1">
                  <dt pn="section-3.1-4.4.1.4.1.1">8 -</dt>
                  <dd pn="section-3.1-4.4.1.4.1.2">Headers too long</dd>
                </dl>
              </dd>
              <dt pn="section-3.1-4.4.1.5">Length:</dt>
              <dd pn="section-3.1-4.4.1.6">Length of the padded invoking packet data measured in 64-bit words.
          The ICMP extension structure immediately follows the padded
          invoking packet data.</dd>
              <dt pn="section-3.1-4.4.1.7">Invoking Packet:</dt>
              <dd pn="section-3.1-4.4.1.8">Contains as much of the invoking packet as possible without the
          ICMPv6 packet exceeding the minimum IPv6 MTU. The invoking
          packet data <bcp14>MUST</bcp14> be zero padded to the nearest 64-bit boundary
          <xref target="RFC4884" format="default" sectionFormat="of" derivedContent="RFC4884"/>.
          If the original invoking packet did not contain 128
          octets, the invoking packet data <bcp14>MUST</bcp14> be zero padded to 128 octets.</dd>
            </dl>
          </dd>
          <dt pn="section-3.1-4.5">ICMP Extension Fields:</dt>
          <dd pn="section-3.1-4.6">
            <dl newline="true" spacing="normal" indent="3" pn="section-3.1-4.6.1">
              <dt pn="section-3.1-4.6.1.1">Version:</dt>
              <dd pn="section-3.1-4.6.1.2">
                <dl indent="3" newline="false" spacing="normal" pn="section-3.1-4.6.1.2.1">
                  <dt pn="section-3.1-4.6.1.2.1.1">2 -</dt>
                  <dd pn="section-3.1-4.6.1.2.1.2">per <xref target="RFC4884" format="default" sectionFormat="of" derivedContent="RFC4884"/></dd>
                </dl>
              </dd>
              <dt pn="section-3.1-4.6.1.3">Reserved:</dt>
              <dd pn="section-3.1-4.6.1.4">0</dd>
              <dt pn="section-3.1-4.6.1.5">Checksum:</dt>
              <dd pn="section-3.1-4.6.1.6">The one's complement checksum of the ICMP extension
          <xref target="RFC4884" format="default" sectionFormat="of" derivedContent="RFC4884"/></dd>
              <dt pn="section-3.1-4.6.1.7">Length:</dt>
              <dd pn="section-3.1-4.6.1.8">
                <dl indent="3" newline="false" spacing="normal" pn="section-3.1-4.6.1.8.1">
                  <dt pn="section-3.1-4.6.1.8.1.1">8 -</dt>
                  <dd pn="section-3.1-4.6.1.8.1.2">length of the object header and Pointer
		  field</dd>
                </dl>
              </dd>
              <dt pn="section-3.1-4.6.1.9">Class-Num:</dt>
              <dd pn="section-3.1-4.6.1.10">
                <dl indent="3" newline="false" spacing="normal" pn="section-3.1-4.6.1.10.1">
                  <dt pn="section-3.1-4.6.1.10.1.1">4 -</dt>
                  <dd pn="section-3.1-4.6.1.10.1.2">Extended Information</dd>
                </dl>
              </dd>
              <dt pn="section-3.1-4.6.1.11">C-Type:</dt>
              <dd pn="section-3.1-4.6.1.12">
                <dl indent="3" newline="false" spacing="normal" pn="section-3.1-4.6.1.12.1">
                  <dt pn="section-3.1-4.6.1.12.1.1">1 -</dt>
                  <dd pn="section-3.1-4.6.1.12.1.2">Pointer</dd>
                </dl>
              </dd>
              <dt pn="section-3.1-4.6.1.13">Pointer:</dt>
              <dd pn="section-3.1-4.6.1.14">
                <t indent="0" pn="section-3.1-4.6.1.14.1">Identifies the octet offset within the invoking packet
          where a limit was exceeded.</t>
                <t indent="0" pn="section-3.1-4.6.1.14.2">The pointer will point beyond the end of the invoking packet data if
          the field exceeding the limit is beyond what can fit in the
          maximum size of an ICMPv6 error message with the ICMP
          extension. If the pointer is used as an offset to read the data
          in the invoking packet, then a node <bcp14>MUST</bcp14> first validate
          that the pointer value is less than the length of the invoking
          packet data.</t>
              </dd>
            </dl>
          </dd>
        </dl>
      </section>
      <section numbered="true" toc="include" removeInRFC="false" pn="section-3.2">
        <name slugifiedName="name-usage">Usage</name>
        <t indent="0" pn="section-3.2-1">
    An ICMPv6 Destination Unreachable error with code for "Headers
    too long" <bcp14>SHOULD</bcp14> be sent when a node discards a packet because
    the aggregate length of the headers in the packet exceeds the
    processing limits of the node. The Pointer in the extended
    ICMPv6 structure is set to the offset of the first octet that
    exceeds the limit.
        </t>
        <t indent="0" pn="section-3.2-2">
    This error is sent in response to a node dropping a packet
    because the aggregate header chain exceeds the processing
    limits of a node. The aggregate header chain may be composed of
    protocol headers other than an IPv6 header and IPv6 extension
    headers. For instance, in the case of a node parsing a UDP
    encapsulation protocol, the encapsulating UDP header would be
    considered to be in the aggregate header chain.
        </t>
        <t indent="0" pn="section-3.2-3">
    As noted in <xref target="priority" format="default" sectionFormat="of" derivedContent="Section 4.1"/>, the ICMPv6 Destination Unreachable
    error with code for "Headers too long" has the lowest
    precedence of the ICMP errors discussed in this specification.
    If a packet contains an error corresponding to a Parameter
    Problem code, then a node <bcp14>SHOULD</bcp14> send the Parameter Problem
    error instead of sending the ICMPv6 Destination Unreachable
    error with code for "Headers too long".
</t>
      </section>
    </section>
    <section numbered="true" toc="include" removeInRFC="false" pn="section-4">
      <name slugifiedName="name-operation">Operation</name>
      <t indent="0" pn="section-4-1">
    Nodes that send or receive ICMPv6 errors due to header
    processing limits <bcp14>MUST</bcp14> comply with ICMPv6 processing as
    specified in <xref target="RFC4443" format="default" sectionFormat="of" derivedContent="RFC4443"/>.
      </t>
      <section anchor="priority" numbered="true" toc="include" removeInRFC="false" pn="section-4.1">
        <name slugifiedName="name-priority-of-reporting">Priority of Reporting</name>
        <t indent="0" pn="section-4.1-1">
    More than one ICMPv6 error may be applicable to report for a
    packet. For instance, the number of extension headers in a
    packet might exceed a limit, and the aggregate length of
    protocol headers might also exceed a limit. Only one ICMPv6
    error <bcp14>SHOULD</bcp14> be sent for a packet, so a priority is defined to
    determine which error to report.

        </t>
        <t indent="0" pn="section-4.1-2">The <bcp14>RECOMMENDED</bcp14> reporting priority of ICMPv6 errors for
processing limits is listed from highest to lowest priority:</t>
        <ol spacing="normal" indent="adaptive" start="1" type="1" pn="section-4.1-3">
<li pn="section-4.1-3.1" derivedCounter="1.">
            Existing ICMP errors defined in <xref target="RFC4443" format="default" sectionFormat="of" derivedContent="RFC4443"/>.
              </li>
          <li pn="section-4.1-3.2" derivedCounter="2.">
            "Unrecognized Next Header type encountered by intermediate node"
          </li>
          <li pn="section-4.1-3.3" derivedCounter="3.">
            "Extension header too big"
          </li>
          <li pn="section-4.1-3.4" derivedCounter="4.">
            "Option too big" for length or number of consecutive padding
            options exceeding a limit.
          </li>
          <li pn="section-4.1-3.5" derivedCounter="5.">
            "Option too big" for the length of an option exceeding a limit.
          </li>
          <li pn="section-4.1-3.6" derivedCounter="6.">
            "Too many options in an extension header"
          </li>
          <li pn="section-4.1-3.7" derivedCounter="7.">
            "Extension header chain too long"
            headers exceeding a limit.
          </li>
          <li pn="section-4.1-3.8" derivedCounter="8.">
            "Too many extension headers"
          </li>
          <li pn="section-4.1-3.9" derivedCounter="9.">
            "Headers too long"
          </li>
        </ol>
      </section>
      <section numbered="true" toc="include" removeInRFC="false" pn="section-4.2">
        <name slugifiedName="name-host-response">Host Response</name>
        <t indent="0" pn="section-4.2-1">
    When a source host receives an ICMPv6 error for a processing limit
    being exceeded, it <bcp14>SHOULD</bcp14> verify the ICMPv6 error is valid and take
    appropriate action as suggested below.
        </t>
        <t indent="0" pn="section-4.2-2">
    The general validations for ICMP as described in
    <xref target="RFC4443" format="default" sectionFormat="of" derivedContent="RFC4443"/> are applicable. The packet in the ICMP data
    <bcp14>SHOULD</bcp14> be validated to match the upper-layer process or connection that
    generated the original packet. Other validation checks that are specific
    to the upper layers may be performed and are out of the scope of this
    specification.
        </t>
        <t indent="0" pn="section-4.2-3">
    The ICMPv6 error <bcp14>SHOULD</bcp14> be logged with sufficient detail for
    debugging packet loss. The details of the error, including the
    addresses and the offending extension header or data, should be
    retained. This, for instance, would be useful for debugging when a
    node is misconfigured and unexpectedly discarding packets or when a
    new extension header is being deployed.
        </t>
        <t indent="0" pn="section-4.2-4">
    A host <bcp14>MAY</bcp14> modify its usage of protocol headers in subsequent packets
    to avoid repeated occurrences of the same error.

        </t>
        <t indent="0" pn="section-4.2-5">For ICMPv6 errors caused by extension header limits being exceeded:</t>
        <ul empty="false" spacing="normal" bare="false" indent="3" pn="section-4.2-6">
          <li pn="section-4.2-6.1">
            An error <bcp14>SHOULD</bcp14> be reported to an application if
	    the application enabled extension headers for its traffic. In
	    response, the application may terminate communications if extension headers
            are required, stop using extension headers in packets to the
            destination indicated by the ICMPv6 error, or attempt to modify
            its use of headers or extension headers to avoid further packet
            discards.
          </li>
          <li pn="section-4.2-6.2">
            A host system <bcp14>SHOULD</bcp14> take appropriate action if it is creating
            packets with extension headers on behalf of the application. If
            the offending extension header is not required for
            communication, the host may either stop sending it or otherwise
            modify its use in subsequent packets sent to the destination
            indicated in the ICMPv6 error.
          </li>
        </ul>
      </section>
    </section>
    <section numbered="true" toc="include" removeInRFC="false" pn="section-5">
      <name slugifiedName="name-applicability-and-use-cases">Applicability and Use Cases</name>
      <section numbered="true" toc="include" removeInRFC="false" pn="section-5.1">
        <name slugifiedName="name-reliability-of-icmp">Reliability of ICMP</name>
        <t indent="0" pn="section-5.1-1">
    ICMP is fundamentally an unreliable protocol and, in real deployment,
    it may consistently fail over some paths. As with any other use of
    ICMP, it is assumed that the errors defined in this document are only
    the best effort to be delivered. No protocol should be implemented that
    relies on reliable delivery of ICMP messages. If necessary,
    alternative or additional mechanisms may be employed to augment the
    processes used to deduce the reason that packets are being
    discarded. For instance, ICMP error messages may be correlated with
    information attained through Packetization Layer Path MTU Discovery
    (PLPMTUD) <xref target="RFC4821" format="default" sectionFormat="of" derivedContent="RFC4821"/> or Happy Eyeballs for IPv6
    <xref target="RFC8305" format="default" sectionFormat="of" derivedContent="RFC8305"/>. Details of the
    interaction with alternative mechanisms are out of scope of this
    specification.
        </t>
      </section>
      <section numbered="true" toc="include" removeInRFC="false" pn="section-5.2">
        <name slugifiedName="name-processing-limits">Processing Limits</name>
        <t indent="0" pn="section-5.2-1">
    This section discusses the trends and motivations of processing
    limits that warrant ICMP errors.
        </t>
        <section numbered="true" toc="include" removeInRFC="false" pn="section-5.2.1">
          <name slugifiedName="name-long-headers-and-header-cha">Long Headers and Header Chains</name>
          <t indent="0" pn="section-5.2.1-1">The trend towards longer and more complex headers and header chains needing to be processed by end nodes, as well as intermediate nodes, is driven by:</t>
          <ul empty="false" spacing="normal" bare="false" indent="3" pn="section-5.2.1-2">
            <li pn="section-5.2.1-2.1">
            Increasing prevalence of deep packet inspection in middleboxes.
            In particular, many intermediate nodes now parse network-layer
            encapsulation protocols or transport-layer protocols.
          </li>
            <li pn="section-5.2.1-2.2">
            Deployment of routing headers. For instance,
            <xref target="RFC8754" format="default" sectionFormat="of" derivedContent="RFC8754"/> defines an
            extension header format that includes a list of IPv6 addresses
            which may consume a considerable number of bytes.
          </li>
            <li pn="section-5.2.1-2.3">
            Development of in situ OAM headers that allow a rich set of
            measurements to be gathered in the data path at the cost of
            additional header overhead, which may be significant <xref target="I-D.ietf-ippm-ioam-ipv6-options" format="default" sectionFormat="of" derivedContent="OAM-IPV6"/>.
          </li>
            <li pn="section-5.2.1-2.4">
            Other emerging use cases of Hop-by-Hop and Destination Options.
          </li>
          </ul>
        </section>
        <section numbered="true" toc="include" removeInRFC="false" pn="section-5.2.2">
          <name slugifiedName="name-at-end-hosts">At End Hosts</name>
          <t indent="0" pn="section-5.2.2-1">
    End hosts may implement limits on processing extension headers as
    described in <xref target="RFC8504" format="default" sectionFormat="of" derivedContent="RFC8504"/>. Host implementations are usually
    software stacks that typically don't have inherent processing limitations.
    Limits imposed by a software stack are more likely to be for denial-of-service mitigation or performance.
          </t>
        </section>
        <section numbered="true" toc="include" removeInRFC="false" pn="section-5.2.3">
          <name slugifiedName="name-at-intermediate-nodes">At Intermediate Nodes</name>
          <t indent="0" pn="section-5.2.3-1">
    Hardware devices that process packet headers may have limits as to
    how many headers or bytes of headers they can process. For instance,
    a middlebox hardware implementation might have a parsing buffer that
    contains some number of bytes of packet headers to process. Parsing
    buffers typically have a fixed size such as 64, 128, or 256
    bytes. In addition, hardware implementations (and some software
    implementations) often don't have loop constructs. Processing of a
    TLV list might be implemented as an unrolled loop so that the number
    of TLVs that can be processed is limited.
          </t>
        </section>
      </section>
    </section>
    <section numbered="true" toc="include" removeInRFC="false" pn="section-6">
      <name slugifiedName="name-security-considerations">Security Considerations</name>
      <t indent="0" pn="section-6-1">
    The security considerations for ICMPv6 described in
    <xref target="RFC4443" format="default" sectionFormat="of" derivedContent="RFC4443"/> are applicable. The ICMP errors described
    in this document <bcp14>MAY</bcp14> be filtered by firewalls in accordance with
    <xref target="RFC4890" format="default" sectionFormat="of" derivedContent="RFC4890"/>.
      </t>
      <t indent="0" pn="section-6-2">
    In some circumstances, the sending of ICMP errors might conceptually
    be exploited as a means to covertly deduce the processing capabilities of
    nodes. Accordingly, an implementation <bcp14>SHOULD</bcp14> allow a configurable policy to
    withhold sending of the ICMP errors described in this specification in
    environments where the security of ICMP errors is a concern.
      </t>
    </section>
    <section numbered="true" toc="include" removeInRFC="false" pn="section-7">
      <name slugifiedName="name-iana-considerations">IANA Considerations</name>
      <section numbered="true" toc="include" removeInRFC="false" pn="section-7.1">
        <name slugifiedName="name-parameter-problem-codes">Parameter Problem Codes</name>
        <t indent="0" pn="section-7.1-1">IANA has assigned the following codes in the "Type 4 - Parameter
	  Problem" registry within the ICMPv6 Parameters registry <xref target="IANA-ICMP" format="default" sectionFormat="of" derivedContent="IANA-ICMP"/>:</t>
        <table anchor="param-prob" align="center" pn="table-2">
          <thead>
            <tr>
              <th align="left" colspan="1" rowspan="1">Code</th>
              <th align="left" colspan="1" rowspan="1">Name</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left" colspan="1" rowspan="1">5</td>
              <td align="left" colspan="1" rowspan="1">Unrecognized Next Header type encountered by intermediate node</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">6</td>
              <td align="left" colspan="1" rowspan="1">Extension header too big</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">7</td>
              <td align="left" colspan="1" rowspan="1">Extension header chain too long</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">8</td>
              <td align="left" colspan="1" rowspan="1">Too many extension headers</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">9</td>
              <td align="left" colspan="1" rowspan="1">Too many options in extension header</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">10</td>
              <td align="left" colspan="1" rowspan="1">Option too big</td>
            </tr>
          </tbody>
        </table>
      </section>
      <section numbered="true" toc="include" removeInRFC="false" pn="section-7.2">
        <name slugifiedName="name-destination-unreachable-cod">Destination Unreachable Codes</name>
        <t indent="0" pn="section-7.2-1">IANA has assigned the following code in the "Type 1 - Destination
	  Unreachable" registry within the ICMPv6 Parameters registry <xref target="IANA-ICMP" format="default" sectionFormat="of" derivedContent="IANA-ICMP"/>:</t>
        <table anchor="dest-unreach" align="center" pn="table-3">
          <thead>
            <tr>
              <th align="left" colspan="1" rowspan="1">Code</th>
              <th align="left" colspan="1" rowspan="1">Name</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left" colspan="1" rowspan="1">8</td>
              <td align="left" colspan="1" rowspan="1">Headers too long</td>
            </tr>
          </tbody>
        </table>
      </section>
      <section numbered="true" toc="include" removeInRFC="false" pn="section-7.3">
        <name slugifiedName="name-icmp-extension-object-class">ICMP Extension Object Classes and Class Sub-types</name>
        <t indent="0" pn="section-7.3-1">IANA has assigned the following Class value in
	  the "ICMP Extension Object Classes and Class Sub-types"
	  registry within the ICMP Parameters registry <xref target="IANA-ICMPEXT" format="default" sectionFormat="of" derivedContent="IANA-ICMPEXT"/>:</t>
        <table anchor="class-sub-types" align="center" pn="table-4">
          <thead>
            <tr>
              <th align="left" colspan="1" rowspan="1">Class Value</th>
              <th align="left" colspan="1" rowspan="1">Class Name</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left" colspan="1" rowspan="1">4</td>
              <td align="left" colspan="1" rowspan="1">Extended Information</td>
            </tr>
          </tbody>
        </table>
        <t indent="0" pn="section-7.3-3">
    IANA has created a sub-type registry for the "Extended
    Information" ICMP extension object class. The registration procedure for
    this registry is "Standards Action". The sub-type value of 0
    is reserved; values greater than zero may be assigned.
        </t>
        <t indent="0" pn="section-7.3-4">IANA has assigned the following sub-type within the "Sub-types -
	  Class 4 - Extended Information" registry within the ICMP Parameters registry:</t>
        <table anchor="extended-info" align="center" pn="table-5">
          <thead>
            <tr>
              <th align="left" colspan="1" rowspan="1">Value</th>
              <th align="left" colspan="1" rowspan="1">Description</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left" colspan="1" rowspan="1">1</td>
              <td align="left" colspan="1" rowspan="1">Pointer</td>
            </tr>
          </tbody>
        </table>
      </section>
    </section>
  </middle>
  <back>
    <displayreference target="I-D.ietf-ippm-ioam-ipv6-options" to="OAM-IPV6"/>
    <references pn="section-8">
      <name slugifiedName="name-references">References</name>
      <references pn="section-8.1">
        <name slugifiedName="name-normative-references">Normative References</name>
        <reference anchor="IANA-ICMP" target="https://www.iana.org/assignments/icmpv6-parameters/" quoteTitle="true" derivedAnchor="IANA-ICMP">
          <front>
            <title>Internet Control Message Protocol version 6 (ICMPv6) Parameters</title>
            <author>
              <organization showOnFrontPage="true">IANA</organization>
            </author>
          </front>
        </reference>
        <reference anchor="IANA-ICMPEXT" target="https://www.iana.org/assignments/icmp-parameters/" quoteTitle="true" derivedAnchor="IANA-ICMPEXT">
          <front>
            <title>Internet Control Message Protocol (ICMP) Parameters</title>
            <author>
              <organization showOnFrontPage="true">IANA</organization>
            </author>
          </front>
        </reference>
        <reference anchor="RFC2119" target="https://www.rfc-editor.org/info/rfc2119" quoteTitle="true" derivedAnchor="RFC2119">
          <front>
            <title>Key words for use in RFCs to Indicate Requirement Levels</title>
            <author initials="S." surname="Bradner" fullname="S. Bradner">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="1997" month="March"/>
            <abstract>
              <t indent="0">In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t>
            </abstract>
          </front>
          <seriesInfo name="BCP" value="14"/>
          <seriesInfo name="RFC" value="2119"/>
          <seriesInfo name="DOI" value="10.17487/RFC2119"/>
        </reference>
        <reference anchor="RFC4443" target="https://www.rfc-editor.org/info/rfc4443" quoteTitle="true" derivedAnchor="RFC4443">
          <front>
            <title>Internet Control Message Protocol (ICMPv6) for the Internet Protocol Version 6 (IPv6) Specification</title>
            <author initials="A." surname="Conta" fullname="A. Conta">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="S." surname="Deering" fullname="S. Deering">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="M." surname="Gupta" fullname="M. Gupta" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2006" month="March"/>
            <abstract>
              <t indent="0">This document describes the format of a set of control messages used in ICMPv6 (Internet Control Message Protocol).  ICMPv6 is the Internet Control Message Protocol for Internet Protocol version 6 (IPv6).  [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="STD" value="89"/>
          <seriesInfo name="RFC" value="4443"/>
          <seriesInfo name="DOI" value="10.17487/RFC4443"/>
        </reference>
        <reference anchor="RFC4884" target="https://www.rfc-editor.org/info/rfc4884" quoteTitle="true" derivedAnchor="RFC4884">
          <front>
            <title>Extended ICMP to Support Multi-Part Messages</title>
            <author initials="R." surname="Bonica" fullname="R. Bonica">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="D." surname="Gan" fullname="D. Gan">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="D." surname="Tappan" fullname="D. Tappan">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="C." surname="Pignataro" fullname="C. Pignataro">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2007" month="April"/>
            <abstract>
              <t indent="0">This document redefines selected ICMP messages to support multi-part operation.  A multi-part ICMP message carries all of the information that ICMP messages carried previously, as well as additional information that applications may require.</t>
              <t indent="0">Multi-part messages are supported by an ICMP extension structure. The extension structure is situated at the end of the ICMP message. It includes an extension header followed by one or more extension objects.  Each extension object contains an object header and object payload.  All object headers share a common format.</t>
              <t indent="0">This document further redefines the above mentioned ICMP messages by specifying a length attribute.  All of the currently defined ICMP messages to which an extension structure can be appended include an "original datagram" field.  The "original datagram" field contains the initial octets of the datagram that elicited the ICMP error message.  Although the original datagram field is of variable length, the ICMP message does not include a field that specifies its length. Therefore, in order to facilitate message parsing, this document allocates eight previously reserved bits to reflect the length of the "original datagram" field.</t>
              <t indent="0">The proposed modifications change the requirements for ICMP compliance.  The impact of these changes on compliant implementations is discussed, and new requirements for future implementations are presented.</t>
              <t indent="0">This memo updates RFC 792 and RFC 4443.  [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="4884"/>
          <seriesInfo name="DOI" value="10.17487/RFC4884"/>
        </reference>
        <reference anchor="RFC7045" target="https://www.rfc-editor.org/info/rfc7045" quoteTitle="true" derivedAnchor="RFC7045">
          <front>
            <title>Transmission and Processing of IPv6 Extension Headers</title>
            <author initials="B." surname="Carpenter" fullname="B. Carpenter">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="S." surname="Jiang" fullname="S. Jiang">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2013" month="December"/>
            <abstract>
              <t indent="0">Various IPv6 extension headers have been standardised since the IPv6 standard was first published.  This document updates RFC 2460 to clarify how intermediate nodes should deal with such extension headers and with any that are defined in the future.  It also specifies how extension headers should be registered by IANA, with a corresponding minor update to RFC 2780.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="7045"/>
          <seriesInfo name="DOI" value="10.17487/RFC7045"/>
        </reference>
        <reference anchor="RFC8174" target="https://www.rfc-editor.org/info/rfc8174" quoteTitle="true" derivedAnchor="RFC8174">
          <front>
            <title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
            <author initials="B." surname="Leiba" fullname="B. Leiba">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2017" month="May"/>
            <abstract>
              <t indent="0">RFC 2119 specifies common key words that may be used in protocol  specifications.  This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the  defined special meanings.</t>
            </abstract>
          </front>
          <seriesInfo name="BCP" value="14"/>
          <seriesInfo name="RFC" value="8174"/>
          <seriesInfo name="DOI" value="10.17487/RFC8174"/>
        </reference>
        <reference anchor="RFC8200" target="https://www.rfc-editor.org/info/rfc8200" quoteTitle="true" derivedAnchor="RFC8200">
          <front>
            <title>Internet Protocol, Version 6 (IPv6) Specification</title>
            <author initials="S." surname="Deering" fullname="S. Deering">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="R." surname="Hinden" fullname="R. Hinden">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2017" month="July"/>
            <abstract>
              <t indent="0">This document specifies version 6 of the Internet Protocol (IPv6). It obsoletes RFC 2460.</t>
            </abstract>
          </front>
          <seriesInfo name="STD" value="86"/>
          <seriesInfo name="RFC" value="8200"/>
          <seriesInfo name="DOI" value="10.17487/RFC8200"/>
        </reference>
      </references>
      <references pn="section-8.2">
        <name slugifiedName="name-informative-references">Informative References</name>
        <reference anchor="I-D.ietf-ippm-ioam-ipv6-options" quoteTitle="true" target="https://tools.ietf.org/html/draft-ietf-ippm-ioam-ipv6-options-03" derivedAnchor="OAM-IPV6">
          <front>
            <title>In-situ OAM IPv6 Options</title>
            <author initials="S" surname="Bhandari" fullname="Shwetha Bhandari">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="F" surname="Brockners" fullname="Frank Brockners">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="C" surname="Pignataro" fullname="Carlos Pignataro">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="H" surname="Gredler" fullname="Hannes Gredler">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="J" surname="Leddy" fullname="John Leddy">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="S" surname="Youell" fullname="Stephen Youell">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="T" surname="Mizrahi" fullname="Tal Mizrahi">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="A" surname="Kfir" fullname="Aviv Kfir">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="B" surname="Gafni" fullname="Barak Gafni">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="P" surname="Lapukhov" fullname="Petr Lapukhov">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="M" surname="Spiegel" fullname="Mickey Spiegel">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="S" surname="Krishnan" fullname="Suresh Krishnan">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="R" surname="Asati" fullname="Rajiv Asati">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="M" surname="Smith" fullname="Mark Smith">
              <organization showOnFrontPage="true"/>
            </author>
            <date month="September" day="18" year="2020"/>
            <abstract>
              <t indent="0">In-situ Operations, Administration, and Maintenance (IOAM) records operational and telemetry information in the packet while the packet traverses a path between two points in the network.  This document outlines how IOAM data fields are encapsulated in IPv6.</t>
            </abstract>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-ietf-ippm-ioam-ipv6-options-03"/>
          <format type="TXT" target="http://www.ietf.org/internet-drafts/draft-ietf-ippm-ioam-ipv6-options-03.txt"/>
          <refcontent>Work in Progress</refcontent>
        </reference>
        <reference anchor="RFC4821" target="https://www.rfc-editor.org/info/rfc4821" quoteTitle="true" derivedAnchor="RFC4821">
          <front>
            <title>Packetization Layer Path MTU Discovery</title>
            <author initials="M." surname="Mathis" fullname="M. Mathis">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="J." surname="Heffner" fullname="J. Heffner">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2007" month="March"/>
            <abstract>
              <t indent="0">This document describes a robust method for Path MTU Discovery (PMTUD) that relies on TCP or some other Packetization Layer to probe an Internet path with progressively larger packets.  This method is described as an extension to RFC 1191 and RFC 1981, which specify ICMP-based Path MTU Discovery for IP versions 4 and 6, respectively.  [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="4821"/>
          <seriesInfo name="DOI" value="10.17487/RFC4821"/>
        </reference>
        <reference anchor="RFC4890" target="https://www.rfc-editor.org/info/rfc4890" quoteTitle="true" derivedAnchor="RFC4890">
          <front>
            <title>Recommendations for Filtering ICMPv6 Messages in Firewalls</title>
            <author initials="E." surname="Davies" fullname="E. Davies">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="J." surname="Mohacsi" fullname="J. Mohacsi">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2007" month="May"/>
            <abstract>
              <t indent="0">In networks supporting IPv6, the Internet Control Message Protocol version 6 (ICMPv6) plays a fundamental role with a large number of functions, and a correspondingly large number of message types and options.  ICMPv6 is essential to the functioning of IPv6, but there are a number of security risks associated with uncontrolled forwarding of ICMPv6 messages.  Filtering strategies designed for the corresponding protocol, ICMP, in IPv4 networks are not directly applicable, because these strategies are intended to accommodate a useful auxiliary protocol that may not be required for correct functioning.</t>
              <t indent="0">This document provides some recommendations for ICMPv6 firewall filter configuration that will allow propagation of ICMPv6 messages that are needed to maintain the functioning of the network but drop messages that are potential security risks.  This memo provides information for the Internet community.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="4890"/>
          <seriesInfo name="DOI" value="10.17487/RFC4890"/>
        </reference>
        <reference anchor="RFC8305" target="https://www.rfc-editor.org/info/rfc8305" quoteTitle="true" derivedAnchor="RFC8305">
          <front>
            <title>Happy Eyeballs Version 2: Better Connectivity Using Concurrency</title>
            <author initials="D." surname="Schinazi" fullname="D. Schinazi">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="T." surname="Pauly" fullname="T. Pauly">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2017" month="December"/>
            <abstract>
              <t indent="0">Many communication protocols operating over the modern Internet use hostnames.  These often resolve to multiple IP addresses, each of which may have different performance and connectivity characteristics.  Since specific addresses or address families (IPv4 or IPv6) may be blocked, broken, or sub-optimal on a network, clients that attempt multiple connections in parallel have a chance of establishing a connection more quickly.  This document specifies requirements for algorithms that reduce this user-visible delay and provides an example algorithm, referred to as "Happy Eyeballs".  This document obsoletes the original algorithm description in RFC 6555.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8305"/>
          <seriesInfo name="DOI" value="10.17487/RFC8305"/>
        </reference>
        <reference anchor="RFC8504" target="https://www.rfc-editor.org/info/rfc8504" quoteTitle="true" derivedAnchor="RFC8504">
          <front>
            <title>IPv6 Node Requirements</title>
            <author initials="T." surname="Chown" fullname="T. Chown">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="J." surname="Loughney" fullname="J. Loughney">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="T." surname="Winters" fullname="T. Winters">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2019" month="January"/>
            <abstract>
              <t indent="0">This document defines requirements for IPv6 nodes.  It is expected that IPv6 will be deployed in a wide range of devices and situations. Specifying the requirements for IPv6 nodes allows IPv6 to function well and interoperate in a large number of situations and deployments.</t>
              <t indent="0">This document obsoletes RFC 6434, and in turn RFC 4294.</t>
            </abstract>
          </front>
          <seriesInfo name="BCP" value="220"/>
          <seriesInfo name="RFC" value="8504"/>
          <seriesInfo name="DOI" value="10.17487/RFC8504"/>
        </reference>
        <reference anchor="RFC8754" target="https://www.rfc-editor.org/info/rfc8754" quoteTitle="true" derivedAnchor="RFC8754">
          <front>
            <title>IPv6 Segment Routing Header (SRH)</title>
            <author initials="C." surname="Filsfils" fullname="C. Filsfils" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="D." surname="Dukes" fullname="D. Dukes" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="S." surname="Previdi" fullname="S. Previdi">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="J." surname="Leddy" fullname="J. Leddy">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="S." surname="Matsushima" fullname="S. Matsushima">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="D." surname="Voyer" fullname="D. Voyer">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2020" month="March"/>
            <abstract>
              <t indent="0">Segment Routing can be applied to the IPv6 data plane using a new type of Routing Extension Header called the Segment Routing Header (SRH). This document describes the SRH and how it is used by nodes that are Segment Routing (SR) capable.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8754"/>
          <seriesInfo name="DOI" value="10.17487/RFC8754"/>
        </reference>
      </references>
    </references>
    <section numbered="false" toc="include" removeInRFC="false" pn="section-appendix.a">
      <name slugifiedName="name-acknowledgments">Acknowledgments</name>
      <t indent="0" pn="section-appendix.a-1">
The author would like to thank <contact fullname="Ron Bonica"/>,
<contact fullname="Bob Hinden"/>, <contact fullname="Nick Hilliard"/>,
<contact fullname="Michael Richardson"/>, <contact fullname="Mark Smith"/>,
  <contact fullname="Suresh Krishnan"/>, and <contact fullname="Ole Tran"/> for
their comments and suggestions that improved this document.
</t>
    </section>
    <section anchor="authors-addresses" numbered="false" removeInRFC="false" toc="include" pn="section-appendix.b">
      <name slugifiedName="name-authors-address">Author's Address</name>
      <author initials="T." surname="Herbert" fullname="Tom Herbert">
        <organization showOnFrontPage="true">Intel</organization>
        <address>
          <postal>
            <street/>
            <city>Santa Clara</city>
            <region>CA</region>
            <code/>
            <country>United States of America</country>
          </postal>
          <email>tom@quantonium.net</email>
        </address>
      </author>
    </section>
  </back>
</rfc>
