<?xml version='1.0' encoding='utf-8'?>
<rfc xmlns:xi="http://www.w3.org/2001/XInclude" version="3" category="std" consensus="true" docName="draft-ietf-perc-double-12" indexInclude="true" ipr="trust200902" number="8723" prepTime="2020-04-30T12:09:05" scripts="Common,Latin" sortRefs="true" submissionType="IETF" symRefs="true" tocDepth="3" tocInclude="true" xml:lang="en">
  <link href="https://datatracker.ietf.org/doc/draft-ietf-perc-double-12" rel="prev"/>
  <link href="https://dx.doi.org/10.17487/rfc8723" rel="alternate"/>
  <link href="urn:issn:2070-1721" rel="alternate"/>
  <front>
    <title abbrev="Double SRTP">Double Encryption Procedures for the Secure Real-Time Transport Protocol (SRTP)</title>
    <seriesInfo name="RFC" value="8723" stream="IETF"/>
    <author initials="C." surname="Jennings" fullname="Cullen Jennings">
      <organization showOnFrontPage="true">Cisco Systems</organization>
      <address>
        <email>fluffy@iii.ca</email>
      </address>
    </author>
    <author initials="P." surname="Jones" fullname="Paul E. Jones">
      <organization showOnFrontPage="true">Cisco Systems</organization>
      <address>
        <email>paulej@packetizer.com</email>
      </address>
    </author>
    <author initials="R." surname="Barnes" fullname="Richard Barnes">
      <organization showOnFrontPage="true">Cisco Systems</organization>
      <address>
        <email>rlb@ipv.sx</email>
      </address>
    </author>
    <author initials="A.B." surname="Roach" fullname="Adam Roach">
      <organization showOnFrontPage="true">Mozilla</organization>
      <address>
        <email>adam@nostrum.com</email>
      </address>
    </author>
    <date month="04" year="2020"/>
    <area>Internet</area>
    <workgroup/>
    <keyword>PERC</keyword>
    <keyword>SRTP</keyword>
    <keyword>RTP</keyword>
    <keyword>conferencing</keyword>
    <keyword>encryption</keyword>
    <abstract pn="section-abstract">
      <t pn="section-abstract-1">In some conferencing scenarios, it is desirable for an intermediary
to be able to manipulate some parameters in Real-time Transport Protocol (RTP)
packets, while still providing strong end-to-end security
guarantees. This document defines a cryptographic transform for the
Secure Real-time Transport Protocol (SRTP) that uses two separate but related
cryptographic operations to provide hop-by-hop and end-to-end
security guarantees.  Both the end-to-end and hop-by-hop
cryptographic algorithms can utilize an authenticated encryption
with associated data (AEAD) algorithm or take advantage of future SRTP
transforms with different properties.
</t>
    </abstract>
    <boilerplate>
      <section anchor="status-of-memo" numbered="false" removeInRFC="false" toc="exclude" pn="section-boilerplate.1">
        <name slugifiedName="name-status-of-this-memo">Status of This Memo</name>
        <t pn="section-boilerplate.1-1">
            This is an Internet Standards Track document.
        </t>
        <t pn="section-boilerplate.1-2">
            This document is a product of the Internet Engineering Task Force
            (IETF).  It represents the consensus of the IETF community.  It has
            received public review and has been approved for publication by
            the Internet Engineering Steering Group (IESG).  Further
            information on Internet Standards is available in Section 2 of 
            RFC 7841.
        </t>
        <t pn="section-boilerplate.1-3">
            Information about the current status of this document, any
            errata, and how to provide feedback on it may be obtained at
            <eref target="https://www.rfc-editor.org/info/rfc8723" brackets="none"/>.
        </t>
      </section>
      <section anchor="copyright" numbered="false" removeInRFC="false" toc="exclude" pn="section-boilerplate.2">
        <name slugifiedName="name-copyright-notice">Copyright Notice</name>
        <t pn="section-boilerplate.2-1">
            Copyright (c) 2020 IETF Trust and the persons identified as the
            document authors. All rights reserved.
        </t>
        <t pn="section-boilerplate.2-2">
            This document is subject to BCP 78 and the IETF Trust's Legal
            Provisions Relating to IETF Documents
            (<eref target="https://trustee.ietf.org/license-info" brackets="none"/>) in effect on the date of
            publication of this document. Please review these documents
            carefully, as they describe your rights and restrictions with
            respect to this document. Code Components extracted from this
            document must include Simplified BSD License text as described in
            Section 4.e of the Trust Legal Provisions and are provided without
            warranty as described in the Simplified BSD License.
        </t>
      </section>
    </boilerplate>
    <toc>
      <section anchor="toc" numbered="false" removeInRFC="false" toc="exclude" pn="section-toc.1">
        <name slugifiedName="name-table-of-contents">Table of Contents</name>
        <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1">
          <li pn="section-toc.1-1.1">
            <t keepWithNext="true" pn="section-toc.1-1.1.1"><xref derivedContent="1" format="counter" sectionFormat="of" target="section-1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-introduction">Introduction</xref></t>
          </li>
          <li pn="section-toc.1-1.2">
            <t keepWithNext="true" pn="section-toc.1-1.2.1"><xref derivedContent="2" format="counter" sectionFormat="of" target="section-2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-terminology">Terminology</xref></t>
          </li>
          <li pn="section-toc.1-1.3">
            <t pn="section-toc.1-1.3.1"><xref derivedContent="3" format="counter" sectionFormat="of" target="section-3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-cryptographic-context">Cryptographic Context</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.3.2">
              <li pn="section-toc.1-1.3.2.1">
                <t keepWithNext="true" pn="section-toc.1-1.3.2.1.1"><xref derivedContent="3.1" format="counter" sectionFormat="of" target="section-3.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-key-derivation">Key Derivation</xref></t>
              </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.4">
            <t pn="section-toc.1-1.4.1"><xref derivedContent="4" format="counter" sectionFormat="of" target="section-4"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-original-header-block">Original Header Block</xref></t>
          </li>
          <li pn="section-toc.1-1.5">
            <t pn="section-toc.1-1.5.1"><xref derivedContent="5" format="counter" sectionFormat="of" target="section-5"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-rtp-operations">RTP Operations</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.5.2">
              <li pn="section-toc.1-1.5.2.1">
                <t pn="section-toc.1-1.5.2.1.1"><xref derivedContent="5.1" format="counter" sectionFormat="of" target="section-5.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-encrypting-a-packet">Encrypting a Packet</xref></t>
              </li>
              <li pn="section-toc.1-1.5.2.2">
                <t pn="section-toc.1-1.5.2.2.1"><xref derivedContent="5.2" format="counter" sectionFormat="of" target="section-5.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-relaying-a-packet">Relaying a Packet</xref></t>
              </li>
              <li pn="section-toc.1-1.5.2.3">
                <t pn="section-toc.1-1.5.2.3.1"><xref derivedContent="5.3" format="counter" sectionFormat="of" target="section-5.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-decrypting-a-packet">Decrypting a Packet</xref></t>
              </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.6">
            <t pn="section-toc.1-1.6.1"><xref derivedContent="6" format="counter" sectionFormat="of" target="section-6"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-rtcp-operations">RTCP Operations</xref></t>
          </li>
          <li pn="section-toc.1-1.7">
            <t pn="section-toc.1-1.7.1"><xref derivedContent="7" format="counter" sectionFormat="of" target="section-7"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-use-with-other-rtp-mechanis">Use with Other RTP Mechanisms</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.7.2">
              <li pn="section-toc.1-1.7.2.1">
                <t pn="section-toc.1-1.7.2.1.1"><xref derivedContent="7.1" format="counter" sectionFormat="of" target="section-7.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-rtp-retransmission-rtx">RTP Retransmission (RTX)</xref></t>
              </li>
              <li pn="section-toc.1-1.7.2.2">
                <t pn="section-toc.1-1.7.2.2.1"><xref derivedContent="7.2" format="counter" sectionFormat="of" target="section-7.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-redundant-audio-data-red">Redundant Audio Data (RED)</xref></t>
              </li>
              <li pn="section-toc.1-1.7.2.3">
                <t pn="section-toc.1-1.7.2.3.1"><xref derivedContent="7.3" format="counter" sectionFormat="of" target="section-7.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-forward-error-correction-fe">Forward Error Correction (FEC)</xref></t>
              </li>
              <li pn="section-toc.1-1.7.2.4">
                <t pn="section-toc.1-1.7.2.4.1"><xref derivedContent="7.4" format="counter" sectionFormat="of" target="section-7.4"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-dtmf">DTMF</xref></t>
              </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.8">
            <t pn="section-toc.1-1.8.1"><xref derivedContent="8" format="counter" sectionFormat="of" target="section-8"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-recommended-inner-and-outer">Recommended Inner and Outer Cryptographic Algorithms</xref></t>
          </li>
          <li pn="section-toc.1-1.9">
            <t pn="section-toc.1-1.9.1"><xref derivedContent="9" format="counter" sectionFormat="of" target="section-9"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-security-considerations">Security Considerations</xref></t>
          </li>
          <li pn="section-toc.1-1.10">
            <t pn="section-toc.1-1.10.1"><xref derivedContent="10" format="counter" sectionFormat="of" target="section-10"/>. <xref derivedContent="" format="title" sectionFormat="of" target="name-iana-considerations">IANA Considerations</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.10.2">
              <li pn="section-toc.1-1.10.2.1">
                <t pn="section-toc.1-1.10.2.1.1"><xref derivedContent="10.1" format="counter" sectionFormat="of" target="section-10.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-dtls-srtp">DTLS-SRTP</xref></t>
              </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.11">
            <t pn="section-toc.1-1.11.1"><xref derivedContent="11" format="counter" sectionFormat="of" target="section-11"/>. <xref derivedContent="" format="title" sectionFormat="of" target="name-references">References</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.11.2">
              <li pn="section-toc.1-1.11.2.1">
                <t pn="section-toc.1-1.11.2.1.1"><xref derivedContent="11.1" format="counter" sectionFormat="of" target="section-11.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-normative-references">Normative References</xref></t>
              </li>
              <li pn="section-toc.1-1.11.2.2">
                <t pn="section-toc.1-1.11.2.2.1"><xref derivedContent="11.2" format="counter" sectionFormat="of" target="section-11.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-informative-references">Informative References</xref></t>
              </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.12">
            <t pn="section-toc.1-1.12.1"><xref derivedContent="Appendix A" format="default" sectionFormat="of" target="section-appendix.a"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-encryption-overview">Encryption Overview</xref></t>
          </li>
          <li pn="section-toc.1-1.13">
            <t pn="section-toc.1-1.13.1"><xref derivedContent="" format="none" sectionFormat="of" target="section-appendix.b"/><xref derivedContent="" format="title" sectionFormat="of" target="name-acknowledgments">Acknowledgments</xref></t>
          </li>
          <li pn="section-toc.1-1.14">
            <t pn="section-toc.1-1.14.1"><xref derivedContent="" format="none" sectionFormat="of" target="section-appendix.c"/><xref derivedContent="" format="title" sectionFormat="of" target="name-authors-addresses">Authors' Addresses</xref></t>
          </li>
        </ul>
      </section>
    </toc>
  </front>
  <middle>
    <section anchor="introduction" numbered="true" toc="include" removeInRFC="false" pn="section-1">
      <name slugifiedName="name-introduction">Introduction</name>
      <t pn="section-1-1">Cloud conferencing systems that are based on switched conferencing
have a central Media Distributor (MD) device that receives media from
endpoints and distributes it to other endpoints, but does not need
to interpret or change the media content.  For these systems, it is
desirable to have one cryptographic key that enables encryption and
authentication of the media
end-to-end while still allowing certain information in the header of
an RTP packet to be changed by the MD.  
At the same time, a separate cryptographic key
provides integrity and optional confidentiality for the media
flowing between the MD and the endpoints.  The
framework document <xref target="I-D.ietf-perc-private-media-framework" format="default" sectionFormat="of" derivedContent="PRIVATE-MEDIA-FRAMEWORK"/>
describes this concept in more detail.
</t>
      <t pn="section-1-2">This specification defines a transform for 
SRTP that uses 1) the AES Galois/Counter Mode (AES-GCM) algorithm <xref target="RFC7714" format="default" sectionFormat="of" derivedContent="RFC7714"/> to
provide encryption and integrity for an RTP packet for the
end-to-end cryptographic key and 2) a hop-by-hop cryptographic
encryption and integrity between the endpoint and the MD. 
The MD decrypts and checks integrity of
the hop-by-hop security. The MD <bcp14>MAY</bcp14> change some of
the RTP header information that would impact the end-to-end
integrity. In that case, the original value of any RTP header field
that is changed is included in an "Original Header Block" that is
added to the packet. The new RTP packet is encrypted with the
hop-by-hop cryptographic algorithm before it is sent. The receiving
endpoint decrypts and checks integrity using the hop-by-hop
cryptographic algorithm and then replaces any parameters the MD 
changed using the information in the Original Header
Block before decrypting and checking the end-to-end integrity.
</t>
      <t pn="section-1-3">One can think of the double transform as a normal SRTP transform for encrypting
the RTP in a way such that things that only know half of the key, can
decrypt and modify part of the RTP packet but not other parts,
including the media payload.
</t>
    </section>
    <section anchor="terminology" numbered="true" toc="include" removeInRFC="false" pn="section-2">
      <name slugifiedName="name-terminology">Terminology</name>
      <t pn="section-2-1">The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>", "<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>", "<bcp14>SHALL NOT</bcp14>", "<bcp14>SHOULD</bcp14>", "<bcp14>SHOULD NOT</bcp14>", "<bcp14>RECOMMENDED</bcp14>", "<bcp14>NOT RECOMMENDED</bcp14>",
    "<bcp14>MAY</bcp14>", and "<bcp14>OPTIONAL</bcp14>" in this document are to be interpreted as
    described in BCP 14 <xref target="RFC2119" format="default" sectionFormat="of" derivedContent="RFC2119"/> <xref target="RFC8174" format="default" sectionFormat="of" derivedContent="RFC8174"/> 
    when, and only when, they appear in all capitals, as shown here.
</t>
      <t pn="section-2-2">Terms used throughout this document include:
</t>
      <dl spacing="normal" newline="false" pn="section-2-3">
        <dt pn="section-2-3.1">Media Distributor (MD):</dt>
        <dd pn="section-2-3.2">A device that receives media from endpoints and
distributes it to other endpoints, but does not need to interpret
or change the media content (see also
<xref target="I-D.ietf-perc-private-media-framework" format="default" sectionFormat="of" derivedContent="PRIVATE-MEDIA-FRAMEWORK"/>).</dd>
        <dt pn="section-2-3.3">end-to-end:</dt>
        <dd pn="section-2-3.4">The path from one endpoint through one or
more MDs to the endpoint at the other end.</dd>
        <dt pn="section-2-3.5">hop-by-hop:</dt>
        <dd pn="section-2-3.6">The path from the endpoint to or from the MD.</dd>
        <dt pn="section-2-3.7">Original Header Block (OHB):</dt>
        <dd pn="section-2-3.8">An octet string that contains the
original values from the RTP header that might have been changed
by an MD.</dd>
      </dl>
    </section>
    <section anchor="cryptographic-context" numbered="true" toc="include" removeInRFC="false" pn="section-3">
      <name slugifiedName="name-cryptographic-context">Cryptographic Context</name>
      <t pn="section-3-1">This specification uses a cryptographic context with two parts:
</t>
      <ul spacing="normal" bare="false" empty="false" pn="section-3-2">
        <li pn="section-3-2.1">An inner (end-to-end) part that is used by endpoints that originate and
consume media to ensure the integrity of media end-to-end, and</li>
        <li pn="section-3-2.2">An outer (hop-by-hop) part that is used between endpoints and MDs 
to ensure the integrity of media over a single hop and to
enable an MD to modify certain RTP header fields. RTCP
is also handled using the hop-by-hop cryptographic part.</li>
      </ul>
      <t pn="section-3-3">The <bcp14>RECOMMENDED</bcp14> cipher for the hop-by-hop and end-to-end algorithms is
AES-GCM.  Other combinations of SRTP ciphers that support the
procedures in this document can be added to the IANA registry.
</t>
      <t pn="section-3-4">The keys and salt for these algorithms are generated with the following
steps:
</t>
      <ul spacing="normal" bare="false" empty="false" pn="section-3-5">
        <li pn="section-3-5.1">Generate key and salt values of the length required for the combined
inner (end-to-end) and outer (hop-by-hop) algorithms.</li>
        <li pn="section-3-5.2">Assign the key and salt values generated for the inner (end-to-end)
algorithm to the first half of the key and the first half of the
salt for the double algorithm.</li>
        <li pn="section-3-5.3">Assign the key and salt values for the outer (hop-by-hop) algorithm
to the second half of the key and second half of the salt for the
double algorithm. The first half of the key is referred to as the
inner key while the second half is referred to as the outer key.
When a key is used by a cryptographic algorithm, the salt that is used is
the part of the salt generated with that key.</li>
        <li pn="section-3-5.4">the synchronization source (SSRC) is the same for both the inner and outer algorithms as
it cannot be changed.</li>
        <li pn="section-3-5.5">The sequence number (SEQ) and rollover counter (ROC) are tracked independently for the inner and outer
algorithms.</li>
      </ul>
      <t pn="section-3-6">If the MD is to be able to modify header fields but
not decrypt the payload, then it must have a cryptographic key for the
outer algorithm but not the inner (end-to-end) algorithm.  This
document does not define how the MD should be
provisioned with this information.  One possible way to provide
keying material for the outer (hop-by-hop) algorithm is to use
<xref target="I-D.ietf-perc-dtls-tunnel" format="default" sectionFormat="of" derivedContent="DTLS-TUNNEL"/>.
</t>
      <section anchor="key-derivation" numbered="true" toc="include" removeInRFC="false" pn="section-3.1">
        <name slugifiedName="name-key-derivation">Key Derivation</name>
        <t pn="section-3.1-1">Although SRTP uses a single master key to derive keys for an SRTP
session, this transform requires separate inner and outer keys.
In order to allow the inner and outer keys to be managed
independently via the master key, the transforms defined in this
document <bcp14>MUST</bcp14> be used with the following pseudorandom function
(PRF), which preserves the separation between the two halves of the
key.  Given a positive integer <tt>n</tt> representing the desired output
length, a master key <tt>k_master</tt>, and an input <tt>x</tt>:
</t>
        <artwork align="center" name="" type="" alt="" pn="section-3.1-2">
PRF_double_n(k_master,x) = PRF_(n/2)(inner(k_master),x) || 
                           PRF_(n/2)(outer(k_master),x)  
</artwork>
        <t pn="section-3.1-3">Here <tt>PRF_double_n(k_master, x)</tt> represents the AES_CM PRF Key Derivation Function (KDF) (see 
<xref target="RFC3711" section="4.3.3" sectionFormat="of" format="default" derivedLink="https://rfc-editor.org/rfc/rfc3711#section-4.3.3" derivedContent="RFC3711"/>) for
DOUBLE_AEAD_AES_128_GCM_AEAD_AES_128_GCM algorithm and
AES_256_CM_PRF KDF <xref target="RFC6188" format="default" sectionFormat="of" derivedContent="RFC6188"/> for DOUBLE_AEAD_AES_256_GCM_AEAD_AES_256_GCM
algorithm. The term <tt>inner(k_master)</tt> represents the first half of
the key; <tt>outer(k_master)</tt>
represents the second half of the key.
</t>
      </section>
    </section>
    <section anchor="ohb" numbered="true" toc="include" removeInRFC="false" pn="section-4">
      <name slugifiedName="name-original-header-block">Original Header Block</name>
      <t pn="section-4-1">The OHB contains the original values of any
modified RTP header fields. In the encryption process, the OHB is
included in an SRTP packet as described in <xref target="rtp-operations" format="default" sectionFormat="of" derivedContent="Section 5"/>.  In the
decryption process, the receiving endpoint uses it to reconstruct
the original RTP header so that it can pass the proper additional authenticated data (AAD) value to
the inner transform.
</t>
      <t pn="section-4-2">The OHB can reflect modifications to the following fields in an RTP header: the
payload type (PT), the SEQ, and the marker bit.  All other fields in the
RTP header <bcp14>MUST</bcp14> remain unmodified; since the OHB cannot reflect their original
values, the receiver will be unable to verify the end-to-end integrity of the packet.
</t>
      <t pn="section-4-3">The OHB has the following syntax (in ABNF <xref target="RFC5234" format="default" sectionFormat="of" derivedContent="RFC5234"/>):
</t>
      <sourcecode name="" src="" type="abnf" markers="false" pn="section-4-4">
OCTET = %x00-FF

PT = OCTET
SEQ = 2OCTET
Config = OCTET
OHB = [ PT ] [ SEQ ] Config
</sourcecode>
      <t pn="section-4-5">If present, the PT and SEQ parts of the OHB contain the original payload type
and sequence number fields, respectively. The final "Config" octet of the OHB
specifies whether these fields are present, and the original value of the
marker bit (if necessary):
</t>
      <artwork align="left" name="" type="" alt="" pn="section-4-6">
+-+-+-+-+-+-+-+-+
|R R R R B M P Q|
+-+-+-+-+-+-+-+-+
</artwork>
      <ul spacing="normal" bare="false" empty="false" pn="section-4-7">
        <li pn="section-4-7.1">P: PT is present</li>
        <li pn="section-4-7.2">Q: SEQ is present</li>
        <li pn="section-4-7.3">M: Marker bit is present</li>
        <li pn="section-4-7.4">B: Value of marker bit</li>
        <li pn="section-4-7.5">R: Reserved, <bcp14>MUST</bcp14> be set to 0</li>
      </ul>
      <t pn="section-4-8">In particular, an all-zero OHB Config octet (<tt>0x00</tt>) indicates that
there have been no modifications from the original header.
</t>
      <t pn="section-4-9">If the marker bit is not present (M=0), then <tt>B</tt> <bcp14>MUST</bcp14> be set to zero.
That is, if <tt>C</tt> represents the value of the Config octet, then the
masked value <tt>C &amp; 0x0C</tt> <bcp14>MUST NOT</bcp14> have the value <tt>0x80</tt>.
</t>
    </section>
    <section anchor="rtp-operations" numbered="true" toc="include" removeInRFC="false" pn="section-5">
      <name slugifiedName="name-rtp-operations">RTP Operations</name>
      <t pn="section-5-1">As implied by the use of the word "double" above, this transform
applies AES-GCM to the SRTP packet twice.  This allows media
distributors to be able to modify some header fields while allowing
endpoints to verify the end-to-end integrity of a packet.
</t>
      <t pn="section-5-2">The first, "inner" application of AES-GCM encrypts the SRTP payload
and protects the integrity of a version of the SRTP header with extensions
truncated.  Omitting extensions from the inner integrity check means
that they can be modified by an MD holding only the outer key.
</t>
      <t pn="section-5-3">The second, "outer" application of AES-GCM encrypts the ciphertext
produced by the inner encryption (i.e., the encrypted payload and
authentication tag), plus an OHB that expresses any changes made
between the inner and outer transforms.
</t>
      <t pn="section-5-4">An MD that has the outer key but not the inner key may
modify the header fields that can be included in the OHB by
decrypting, modifying, and re-encrypting the packet.
</t>
      <section anchor="encrypt" numbered="true" toc="include" removeInRFC="false" pn="section-5.1">
        <name slugifiedName="name-encrypting-a-packet">Encrypting a Packet</name>
        <t pn="section-5.1-1">An endpoint encrypts a packet by using the inner (end-to-end)
cryptographic key and then the outer (hop-by-hop) cryptographic key.
The encryption also supports a mode
for repair packets that only does the outer (hop-by-hop) encryption.
The processes is as follows:
</t>
        <ol spacing="normal" type="1" start="1" pn="section-5.1-2">
          <li pn="section-5.1-2.1" derivedCounter="1.">Form an RTP packet.  If there are any header extensions, 
they <bcp14>MUST</bcp14> use <xref target="RFC8285" format="default" sectionFormat="of" derivedContent="RFC8285"/>.</li>
          <li pn="section-5.1-2.2" derivedCounter="2.">If the packet is for repair mode data, skip to <xref target="step6" format="none" sectionFormat="of" derivedContent="">step 6</xref>.</li>
          <li pn="section-5.1-2.3" derivedCounter="3.">
            <t pn="section-5.1-2.3.1">Form a synthetic RTP packet with the following contents:</t>
            <ul spacing="normal" bare="false" empty="false" pn="section-5.1-2.3.2">
              <li pn="section-5.1-2.3.2.1">
                <t pn="section-5.1-2.3.2.1.1">Header: The RTP header of the original packet with 
the following modifications:</t>
                <ul spacing="normal" bare="false" empty="false" pn="section-5.1-2.3.2.1.2">
                  <li pn="section-5.1-2.3.2.1.2.1">The X bit is set to zero.</li>
                  <li pn="section-5.1-2.3.2.1.2.2">The header is truncated to remove any extensions 
(i.e., keep only the first 12 + 4 * CSRC count (CC) bytes of the header).</li>
                </ul>
              </li>
              <li pn="section-5.1-2.3.2.2">Payload: The RTP payload of the original packet (including 
padding when present).</li>
            </ul>
          </li>
          <li anchor="step4a" pn="section-5.1-2.4" derivedCounter="4.">Apply the inner cryptographic algorithm to the synthetic RTP packet from the previous step.</li>
          <li pn="section-5.1-2.5" derivedCounter="5.">Replace the header of the protected RTP packet with the header of
the original packet (to restore any header extensions and reset
the X bit), and append an empty OHB (<tt>0x00</tt>) to the encrypted
payload (with the authentication tag) obtained from <xref target="step4a" format="none" sectionFormat="of" derivedContent="">step 4</xref>.</li>
          <li anchor="step6" pn="section-5.1-2.6" derivedCounter="6.">Apply the outer cryptographic algorithm to the RTP packet.  If
encrypting RTP header extensions hop-by-hop, then <xref target="RFC6904" format="default" sectionFormat="of" derivedContent="RFC6904"/> <bcp14>MUST</bcp14>
be used when encrypting the RTP packet using the outer
cryptographic key.</li>
        </ol>
        <t pn="section-5.1-3">When using Encrypted Key Transport (EKT) <xref target="I-D.ietf-perc-srtp-ekt-diet" format="default" sectionFormat="of" derivedContent="EKT-SRTP"/>, the EKTField comes
after the SRTP packet, exactly like using EKT with any other SRTP
transform.
</t>
      </section>
      <section anchor="relay" numbered="true" toc="include" removeInRFC="false" pn="section-5.2">
        <name slugifiedName="name-relaying-a-packet">Relaying a Packet</name>
        <t pn="section-5.2-1">The MD has the part of the key for the outer
(hop-by-hop) cryptographic algorithm, but it does not have the part
of the key for the inner (end-to-end) cryptographic algorithm.  The
cryptographic algorithm and key used to decrypt a packet and
any encrypted RTP header extensions would be the same as those
used in the endpoint's outer algorithm and key.
</t>
        <t pn="section-5.2-2">In order to modify a packet, the MD decrypts the
received packet, modifies the packet, updates the OHB with
any modifications not already present in the OHB, and re-encrypts
the packet using the outer (hop-by-hop) cryptographic key
before transmitting using the following steps:
        </t>
        <ol spacing="normal" type="1" start="1" pn="section-5.2-3">
          <li anchor="step1" pn="section-5.2-3.1" derivedCounter="1.">Apply the outer (hop-by-hop) cryptographic algorithm to decrypt the
packet.  If decrypting RTP header extensions hop-by-hop, then
<xref target="RFC6904" format="default" sectionFormat="of" derivedContent="RFC6904"/> <bcp14>MUST</bcp14> be used.  Note that the RTP payload produced by
this decryption operation contains the original encrypted payload
with the tag from the inner transform and the OHB appended.</li>
          <li pn="section-5.2-3.2" derivedCounter="2.">Make any desired changes to the fields that are allowed to be changed,
i.e., PT, SEQ, and M.  The MD <bcp14>MAY</bcp14> also make
modifications to header extensions, without the need to reflect
these changes in the OHB.</li>
          <li pn="section-5.2-3.3" derivedCounter="3.">
            <t pn="section-5.2-3.3.1">Reflect any changes to header fields in the OHB:
</t>
            <ul spacing="normal" bare="false" empty="false" pn="section-5.2-3.3.2">
              <li pn="section-5.2-3.3.2.1">If the MD changed a field that is not already in the
OHB, then it <bcp14>MUST</bcp14> add the original value of the field to the
OHB.  Note that this might result in an increase in the size of
the OHB.</li>
              <li pn="section-5.2-3.3.2.2">If the MD took a field that had previously been
modified and reset to its original value, then it <bcp14>SHOULD</bcp14> drop
the corresponding information from the OHB.  Note that this
might result in a decrease in the size of the OHB.</li>
              <li pn="section-5.2-3.3.2.3">Otherwise, the MD <bcp14>MUST NOT</bcp14> modify the OHB.</li>
            </ul>
          </li>
          <li anchor="step4" pn="section-5.2-3.4" derivedCounter="4.">Apply the outer (hop-by-hop) cryptographic algorithm to the
packet. If the RTP sequence number has been modified, SRTP
processing happens as defined in SRTP and will end up using the new
sequence number. If encrypting RTP header extensions hop-by-hop,
then <xref target="RFC6904" format="default" sectionFormat="of" derivedContent="RFC6904"/> <bcp14>MUST</bcp14> be used.</li>
        </ol>
        <t pn="section-5.2-4">In order to avoid nonce reuse, the cryptographic contexts
	used in steps
<xref target="step1" format="counter" sectionFormat="of" derivedContent="1">1</xref> and <xref target="step4" format="counter" sectionFormat="of" derivedContent="4">4</xref> <bcp14>MUST</bcp14> use different, independent master keys.  Note
that this means that the key used for decryption by the MD <bcp14>MUST</bcp14> be
different from the key used for re-encryption to the end recipient.
</t>
        <t pn="section-5.2-5">Note that if multiple MDs modify the same packet, then the first MD
to alter a given header field is the one that adds it to the OHB.
If a subsequent MD changes the value of a header field that has
already been changed, then the original value will already be in the
OHB, so no update to the OHB is required.
</t>
        <t pn="section-5.2-6">An MD that decrypts, modifies, and re-encrypts
packets in this way <bcp14>MUST</bcp14> use an independent key for each recipient,
and <bcp14>MUST NOT</bcp14> re-encrypt the packet using the sender's keys.  If the
MD decrypts and re-encrypts with the same key and
salt, it will result in the reuse of a (key, nonce) pair,
undermining the security of AES-GCM.
</t>
      </section>
      <section anchor="decrypt" numbered="true" toc="include" removeInRFC="false" pn="section-5.3">
        <name slugifiedName="name-decrypting-a-packet">Decrypting a Packet</name>
        <t pn="section-5.3-1">To decrypt a packet, the endpoint first decrypts and verifies using
the outer (hop-by-hop) cryptographic key, then uses the OHB to
reconstruct the original packet, which it decrypts and verifies with
the inner (end-to-end) cryptographic key using the following steps:
</t>
        <ol spacing="normal" type="1" start="1" pn="section-5.3-2">
          <li pn="section-5.3-2.1" derivedCounter="1.">Apply the outer cryptographic algorithm to the packet.  If the
integrity check does not pass, discard the packet.  The result of
this is referred to as the outer SRTP packet.  If decrypting RTP
header extensions hop-by-hop, then <xref target="RFC6904" format="default" sectionFormat="of" derivedContent="RFC6904"/> <bcp14>MUST</bcp14> be used when
decrypting the RTP packet using the outer cryptographic key.</li>
          <li pn="section-5.3-2.2" derivedCounter="2.">If the packet is for repair mode data, skip the rest of the
steps. Note that the packet that results from the repair algorithm
will still have encrypted data that needs to be decrypted as
specified by the repair algorithm sections.</li>
          <li pn="section-5.3-2.3" derivedCounter="3.">Remove the inner authentication tag and the OHB from the end of the
payload of the outer SRTP packet.</li>
          <li pn="section-5.3-2.4" derivedCounter="4.">
            <t pn="section-5.3-2.4.1">Form a new synthetic SRTP packet with: </t>
            <ul spacing="normal" bare="false" empty="false" pn="section-5.3-2.4.2">
              <li pn="section-5.3-2.4.2.1">
                <t pn="section-5.3-2.4.2.1.1">Header = Received header, with the following modifications:</t>
                <ul spacing="normal" bare="false" empty="false" pn="section-5.3-2.4.2.1.2">
                  <li pn="section-5.3-2.4.2.1.2.1">Header fields replaced with values from OHB (if any).</li>
                  <li pn="section-5.3-2.4.2.1.2.2">The X bit is set to zero.</li>
                  <li pn="section-5.3-2.4.2.1.2.3">The header is truncated to remove any extensions (i.e., keep
only the first 12 + 4 * CC bytes of the header).</li>
                </ul>
              </li>
              <li pn="section-5.3-2.4.2.2">Payload is the encrypted payload from the outer SRTP packet (after
the inner tag and OHB have been stripped).</li>
              <li pn="section-5.3-2.4.2.3">Authentication tag is the inner authentication tag from the outer
SRTP packet.</li>
            </ul>
          </li>
          <li pn="section-5.3-2.5" derivedCounter="5.">Apply the inner cryptographic algorithm to this synthetic SRTP
packet.  Note if the RTP sequence number was changed by the MD, the synthetic packet has the original sequence
number. If the integrity check does not pass, discard the packet.</li>
        </ol>
        <t pn="section-5.3-3">Once the packet has been successfully decrypted, the application needs
to be careful about which information it uses to get the correct
behavior.  The application <bcp14>MUST</bcp14> use only the information found in the
synthetic SRTP packet and <bcp14>MUST NOT</bcp14> use the other data that was in the
outer SRTP packet with the following exceptions:
</t>
        <ul spacing="normal" bare="false" empty="false" pn="section-5.3-4">
          <li pn="section-5.3-4.1">The PT from the outer SRTP packet is used for normal matching to 
Session Description Protocol (SDP) and codec selection.</li>
          <li pn="section-5.3-4.2">The sequence number from the outer SRTP packet is used for normal
RTP ordering.</li>
        </ul>
        <t pn="section-5.3-5">The PT and sequence number from the inner SRTP packet can be used for
collection of various statistics.
</t>
        <t pn="section-5.3-6">If the RTP header of the outer packet contains extensions, they <bcp14>MAY</bcp14>
be used.  However, because extensions are not protected end-to-end,
implementations <bcp14>SHOULD</bcp14> reject an RTP packet containing headers that
would require end-to-end protection.
</t>
      </section>
    </section>
    <section anchor="rtcp-operations" numbered="true" toc="include" removeInRFC="false" pn="section-6">
      <name slugifiedName="name-rtcp-operations">RTCP Operations</name>
      <t pn="section-6-1">Unlike RTP, which is encrypted both hop-by-hop and end-to-end using
two separate cryptographic keys, RTCP is encrypted using only the outer
(hop-by-hop) cryptographic key. The procedures for RTCP encryption
are specified in <xref target="RFC3711" format="default" sectionFormat="of" derivedContent="RFC3711"/>, and this document introduces no
additional steps.
</t>
    </section>
    <section anchor="use-with-other-rtp-mechanisms" numbered="true" toc="include" removeInRFC="false" pn="section-7">
      <name slugifiedName="name-use-with-other-rtp-mechanis">Use with Other RTP Mechanisms</name>
      <t pn="section-7-1">MDs sometimes interact with RTP media packets sent
by endpoints, e.g., to provide recovery or receive commands via
dual-tone multi-frequency (DTMF) signaling.  When media packets are encrypted end-to-end, these procedures
require modification.  (End-to-end interactions, including
end-to-end recovery, are not affected by end-to-end encryption.)
</t>
      <t pn="section-7-2">Repair mechanisms, in general, will need to perform recovery on
encrypted packets (double-encrypted when using this transform),
since the MD does not have access to the plaintext of
the packet, only an intermediate, E2E-encrypted form.
</t>
      <t pn="section-7-3">When the recovery mechanism calls for the recovery packet itself to
be encrypted, it is encrypted with only the outer, hop-by-hop key.  This
allows an MD to generate recovery packets without
having access to the inner, end-to-end keys.  However, it also results in
recovery packets being triple-encrypted, twice for the base
transform, and once for the recovery protection.
</t>
      <section anchor="rtx" numbered="true" toc="include" removeInRFC="false" pn="section-7.1">
        <name slugifiedName="name-rtp-retransmission-rtx">RTP Retransmission (RTX)</name>
        <t pn="section-7.1-1">When using RTX <xref target="RFC4588" format="default" sectionFormat="of" derivedContent="RFC4588"/> with the double transform, the cached payloads <bcp14>MUST</bcp14> be the
double-encrypted packets, i.e., the bits that are sent over the wire to the
other side. When encrypting a retransmission packet, it <bcp14>MUST</bcp14> be
encrypted like a packet in repair mode (i.e., with only the hop-by-hop key).
</t>
        <t pn="section-7.1-2">If the MD were to cache the inner, E2E-encrypted
payload and retransmit it with an RTX original sequence number field prepended, then
the modifications to the payload would cause the inner integrity
check to fail at the receiver.
</t>
        <t pn="section-7.1-3">A typical RTX receiver would decrypt the packet, undo the RTX
transformation, then process the resulting packet normally by
using the steps in <xref target="decrypt" format="default" sectionFormat="of" derivedContent="Section 5.3"/>.
</t>
      </section>
      <section anchor="red" numbered="true" toc="include" removeInRFC="false" pn="section-7.2">
        <name slugifiedName="name-redundant-audio-data-red">Redundant Audio Data (RED)</name>
        <t pn="section-7.2-1">When using RED <xref target="RFC2198" format="default" sectionFormat="of" derivedContent="RFC2198"/> with the double transform, the processing at the sender
and receiver is the same as when using RED with any other SRTP
transform.
</t>
        <t pn="section-7.2-2">The main difference between the double transform and any other transform is that
in an intermediated environment, usage of RED must be end-to-end.  
An MD cannot synthesize RED packets, because it lacks
access to the plaintext media payloads that are combined to form a
RED payload.
</t>
        <t pn="section-7.2-3">Note that Flexible Forward Error Correction (Flex FEC) may often provide similar or better repair
capabilities compared to RED.  For most applications, Flex FEC is a
better choice than RED; in particular, Flex FEC has modes in which
the MD can synthesize recovery packets.
</t>
      </section>
      <section anchor="fec" numbered="true" toc="include" removeInRFC="false" pn="section-7.3">
        <name slugifiedName="name-forward-error-correction-fe">Forward Error Correction (FEC)</name>
        <t pn="section-7.3-1">When using Flex FEC <xref target="RFC8627" format="default" sectionFormat="of" derivedContent="RFC8627"/> with
the double transform, repair packets <bcp14>MUST</bcp14> be constructed by first
double-encrypting the packet, then performing FEC.  Processing of
repair packets proceeds in the opposite order, performing FEC
recovery and then decrypting.  This ensures that the original media
is not revealed to the MD but, at the same time, allows
the MD to repair media.  When encrypting a packet
that contains the Flex FEC data, which is already encrypted, it <bcp14>MUST</bcp14>
be encrypted with only the outer, hop-by-hop transform.
</t>
        <t pn="section-7.3-2">The algorithm recommended in <xref target="I-D.ietf-rtcweb-fec" format="default" sectionFormat="of" derivedContent="WEBRTC-FEC"/> for repair of video
is Flex FEC <xref target="RFC8627" format="default" sectionFormat="of" derivedContent="RFC8627"/>.  Note that for
interoperability with WebRTC, <xref target="I-D.ietf-rtcweb-fec" format="default" sectionFormat="of" derivedContent="WEBRTC-FEC"/> recommends not
using additional FEC-only "m=" lines in SDP for the repair packets.
</t>
      </section>
      <section anchor="dtmf" numbered="true" toc="include" removeInRFC="false" pn="section-7.4">
        <name slugifiedName="name-dtmf">DTMF</name>
        <t pn="section-7.4-1">When DTMF is sent using the mechanism in <xref target="RFC4733" format="default" sectionFormat="of" derivedContent="RFC4733"/>, it is
end-to-end encrypted; the relay cannot read it, so it cannot be
used to control the relay. Other out-of-band methods to control the
relay need to be used instead.
</t>
      </section>
    </section>
    <section anchor="recommended-inner-and-outer-cryptographic-algorithms" numbered="true" toc="include" removeInRFC="false" pn="section-8">
      <name slugifiedName="name-recommended-inner-and-outer">Recommended Inner and Outer Cryptographic Algorithms</name>
      <t pn="section-8-1">This specification recommends and defines AES-GCM as both the inner
and outer cryptographic algorithms, identified as
DOUBLE_AEAD_AES_128_GCM_AEAD_AES_128_GCM and
DOUBLE_AEAD_AES_256_GCM_AEAD_AES_256_GCM.  These algorithms provide for
authenticated encryption and will consume additional processing time
double-encrypting for hop-by-hop and end-to-end.  However, the
approach is secure and simple; thus, it is  viewed as an acceptable
trade-off in processing efficiency.
</t>
      <t pn="section-8-2">Note that names for the cryptographic transforms are of the form
DOUBLE_(inner algorithm)_(outer algorithm).
</t>
      <t pn="section-8-3">While this document only defines a profile based on AES-GCM, it is
possible for future documents to define further profiles with
different inner and outer algorithms in this same framework.  For example,
if a new SRTP transform were defined that encrypts some or all of the
RTP header, it would be reasonable for systems to have the option of
using that for the outer algorithm.  Similarly, if a new transform were
defined that provided only integrity, that would also be reasonable to
use for the outer transform as the payload data is already encrypted by the
inner transform.
</t>
      <t pn="section-8-4">The AES-GCM cryptographic algorithm introduces an additional 16
octets to the length of the packet.  When using AES-GCM for both the
inner and outer cryptographic algorithms, the total additional
length is 32 octets.  The OHB will consume an additional 1-4 octets.
Packets in repair mode will carry additional repair data, further
increasing their size.
</t>
    </section>
    <section anchor="sec" numbered="true" toc="include" removeInRFC="false" pn="section-9">
      <name slugifiedName="name-security-considerations">Security Considerations</name>
      <t pn="section-9-1">This SRTP transform provides protection against two classes of
attacker:  a network attacker that knows neither the inner nor outer
keys and a malicious MD that knows the outer key.  Obviously, it
provides no protections against an attacker that holds both the
inner and outer keys.
</t>
      <t pn="section-9-2">The protections with regard to the network are the same as with the
normal SRTP AES-GCM transforms.  The major difference is that the
double transforms are designed to work better in a group context.
In such contexts, it is important to note that because these
transforms are symmetric, they do not protect against attacks within
the group.  Any member of the group can generate valid SRTP packets
for any SSRC in use by the group.
</t>
      <t pn="section-9-3">With regard to a malicious MD, the recipient can verify the
integrity of the base header fields and confidentiality and
integrity of the payload.  The recipient has no assurance, however,
of the integrity of the header extensions in the packet.
</t>
      <t pn="section-9-4">The main innovation of this transform relative to other SRTP
transforms is that it allows a partly trusted MD to decrypt, modify,
and re-encrypt a packet.  When this is done, the cryptographic
contexts used for decryption and re-encryption <bcp14>MUST</bcp14> use different,
independent master keys.  If the same context is
used, the nonce formation rules for SRTP will cause the same key and
nonce to be used with two different plaintexts, which substantially
degrades the security of AES-GCM.
</t>
      <t pn="section-9-5">In other words, from the perspective of the MD, re-encrypting
packets using this protocol will involve the same cryptographic
operations as if it had established independent AES-GCM crypto
contexts with the sender and the receiver. This property allows
the use of an MD that supports AES-GCM but does not modify any
header fields, without requiring any modification to the MD.
</t>
    </section>
    <section anchor="iana" numbered="true" toc="include" removeInRFC="false" pn="section-10">
      <name slugifiedName="name-iana-considerations">IANA Considerations</name>
      <section anchor="dtlssrtp" numbered="true" toc="include" removeInRFC="false" pn="section-10.1">
        <name slugifiedName="name-dtls-srtp">DTLS-SRTP</name>
        <t pn="section-10.1-1">IANA has added the following protection profiles to the
"DTLS-SRTP Protection Profiles" registry defined in <xref target="RFC5764" format="default" sectionFormat="of" derivedContent="RFC5764"/>.
</t>
        <table align="center" pn="table-1">
          <name slugifiedName="name-updates-to-the-dtls-srtp-pr">Updates to the DTLS-SRTP Protection Profiles Registry</name>
          <thead>
            <tr>
              <th align="left" colspan="1" rowspan="1">Value</th>
              <th align="left" colspan="1" rowspan="1">Profile</th>
              <th align="left" colspan="1" rowspan="1">Reference</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left" colspan="1" rowspan="1">{0x00, 0x09}</td>
              <td align="left" colspan="1" rowspan="1">DOUBLE_AEAD_AES_128_GCM_AEAD_AES_128_GCM</td>
              <td align="left" colspan="1" rowspan="1">RFC 8723</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">{0x00, 0x0A}</td>
              <td align="left" colspan="1" rowspan="1">DOUBLE_AEAD_AES_256_GCM_AEAD_AES_256_GCM</td>
              <td align="left" colspan="1" rowspan="1">RFC 8723</td>
            </tr>
          </tbody>
        </table>
        <t pn="section-10.1-3">The SRTP transform parameters for each of these protection profiles are:
</t>
        <table align="center" pn="table-2">
          <name slugifiedName="name-srtp-transform-parameters-f">SRTP Transform Parameters for DOUBLE_AEAD_AES_128_GCM_AEAD_AES_128_GCM</name>
          <tbody>
            <tr>
              <th colspan="2" align="left" rowspan="1">DOUBLE_AEAD_AES_128_GCM_AEAD_AES_128_GCM</th>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">cipher:</td>
              <td align="left" colspan="1" rowspan="1">AES_128_GCM then AES_128_GCM</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">cipher_key_length:</td>
              <td align="left" colspan="1" rowspan="1">256 bits</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">cipher_salt_length:</td>
              <td align="left" colspan="1" rowspan="1">192 bits</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">aead_auth_tag_length:</td>
              <td align="left" colspan="1" rowspan="1">256 bits</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">auth_function:</td>
              <td align="left" colspan="1" rowspan="1">NULL</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">auth_key_length:</td>
              <td align="left" colspan="1" rowspan="1">N/A</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">auth_tag_length:</td>
              <td align="left" colspan="1" rowspan="1">N/A</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">maximum lifetime:</td>
              <td align="left" colspan="1" rowspan="1">at most 2<sup>31</sup> SRTCP packets and at most 2<sup>48</sup> SRTP packets</td>
            </tr>
          </tbody>
        </table>
        <table align="center" pn="table-3">
          <name slugifiedName="name-srtp-transform-parameters-fo">SRTP Transform Parameters for DOUBLE_AEAD_AES_256_GCM_AEAD_AES_256_GCM</name>
          <tbody>
            <tr>
              <th colspan="2" align="left" rowspan="1">DOUBLE_AEAD_AES_256_GCM_AEAD_AES_256_GCM</th>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">cipher:</td>
              <td align="left" colspan="1" rowspan="1">AES_256_GCM then AES_256_GCM</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">cipher_key_length:</td>
              <td align="left" colspan="1" rowspan="1">512 bits</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">cipher_salt_length:</td>
              <td align="left" colspan="1" rowspan="1">192 bits</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">aead_auth_tag_length:</td>
              <td align="left" colspan="1" rowspan="1">256 bits</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">auth_function:</td>
              <td align="left" colspan="1" rowspan="1">NULL</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">auth_key_length:</td>
              <td align="left" colspan="1" rowspan="1">N/A</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">auth_tag_length:</td>
              <td align="left" colspan="1" rowspan="1">N/A</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">maximum lifetime:</td>
              <td align="left" colspan="1" rowspan="1">at most 2<sup>31</sup> SRTCP packets and at most 2<sup>48</sup> SRTP packets</td>
            </tr>
          </tbody>
        </table>
        <t pn="section-10.1-6">The first half of the key and salt is used for the inner (end-to-end)
algorithm and the second half is used for the outer (hop-by-hop)
algorithm.
</t>
      </section>
    </section>
  </middle>
  <back>
    <displayreference target="I-D.ietf-perc-dtls-tunnel" to="DTLS-TUNNEL"/>
    <displayreference target="I-D.ietf-perc-private-media-framework" to="PRIVATE-MEDIA-FRAMEWORK"/>
    <displayreference target="I-D.ietf-perc-srtp-ekt-diet" to="EKT-SRTP"/>
    <displayreference target="I-D.ietf-rtcweb-fec" to="WEBRTC-FEC"/>
    <references pn="section-11">
      <name slugifiedName="name-references">References</name>
      <references pn="section-11.1">
        <name slugifiedName="name-normative-references">Normative References</name>
        <reference anchor="RFC2119" target="https://www.rfc-editor.org/info/rfc2119" quoteTitle="true" derivedAnchor="RFC2119">
          <front>
            <title>Key words for use in RFCs to Indicate Requirement Levels</title>
            <author initials="S." surname="Bradner" fullname="S. Bradner">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="1997" month="March"/>
            <abstract>
              <t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t>
            </abstract>
          </front>
          <seriesInfo name="BCP" value="14"/>
          <seriesInfo name="RFC" value="2119"/>
          <seriesInfo name="DOI" value="10.17487/RFC2119"/>
        </reference>
        <reference anchor="RFC3711" target="https://www.rfc-editor.org/info/rfc3711" quoteTitle="true" derivedAnchor="RFC3711">
          <front>
            <title>The Secure Real-time Transport Protocol (SRTP)</title>
            <author initials="M." surname="Baugher" fullname="M. Baugher">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="D." surname="McGrew" fullname="D. McGrew">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="M." surname="Naslund" fullname="M. Naslund">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="E." surname="Carrara" fullname="E. Carrara">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="K." surname="Norrman" fullname="K. Norrman">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2004" month="March"/>
            <abstract>
              <t>This document describes the Secure Real-time Transport Protocol (SRTP), a profile of the Real-time Transport Protocol (RTP), which can provide confidentiality, message authentication, and replay protection to the RTP traffic and to the control traffic for RTP, the Real-time Transport Control Protocol (RTCP).   [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="3711"/>
          <seriesInfo name="DOI" value="10.17487/RFC3711"/>
        </reference>
        <reference anchor="RFC5764" target="https://www.rfc-editor.org/info/rfc5764" quoteTitle="true" derivedAnchor="RFC5764">
          <front>
            <title>Datagram Transport Layer Security (DTLS) Extension to Establish Keys for the Secure Real-time Transport Protocol (SRTP)</title>
            <author initials="D." surname="McGrew" fullname="D. McGrew">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="E." surname="Rescorla" fullname="E. Rescorla">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2010" month="May"/>
            <abstract>
              <t>This document describes a Datagram Transport Layer Security (DTLS) extension to establish keys for Secure RTP (SRTP) and Secure RTP Control Protocol (SRTCP) flows.  DTLS keying happens on the media path, independent of any out-of-band signalling channel present. [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="5764"/>
          <seriesInfo name="DOI" value="10.17487/RFC5764"/>
        </reference>
        <reference anchor="RFC6188" target="https://www.rfc-editor.org/info/rfc6188" quoteTitle="true" derivedAnchor="RFC6188">
          <front>
            <title>The Use of AES-192 and AES-256 in Secure RTP</title>
            <author initials="D." surname="McGrew" fullname="D. McGrew">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2011" month="March"/>
            <abstract>
              <t>This memo describes the use of the Advanced Encryption Standard (AES) with 192- and 256-bit keys within the Secure RTP (SRTP) protocol.  It details counter mode encryption for SRTP and Secure Realtime Transport Control Protocol (SRTCP) and a new SRTP Key Derivation Function (KDF) for AES-192 and AES-256.  [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="6188"/>
          <seriesInfo name="DOI" value="10.17487/RFC6188"/>
        </reference>
        <reference anchor="RFC6904" target="https://www.rfc-editor.org/info/rfc6904" quoteTitle="true" derivedAnchor="RFC6904">
          <front>
            <title>Encryption of Header Extensions in the Secure Real-time Transport Protocol (SRTP)</title>
            <author initials="J." surname="Lennox" fullname="J. Lennox">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2013" month="April"/>
            <abstract>
              <t>The Secure Real-time Transport Protocol (SRTP) provides authentication, but not encryption, of the headers of Real-time Transport Protocol (RTP) packets.  However, RTP header extensions may carry sensitive information for which participants in multimedia sessions want confidentiality.  This document provides a mechanism, extending the mechanisms of SRTP, to selectively encrypt RTP header extensions in SRTP.</t>
              <t>This document updates RFC 3711, the Secure Real-time Transport Protocol specification, to require that all future SRTP encryption transforms specify how RTP header extensions are to be encrypted.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="6904"/>
          <seriesInfo name="DOI" value="10.17487/RFC6904"/>
        </reference>
        <reference anchor="RFC7714" target="https://www.rfc-editor.org/info/rfc7714" quoteTitle="true" derivedAnchor="RFC7714">
          <front>
            <title>AES-GCM Authenticated Encryption in the Secure Real-time Transport Protocol (SRTP)</title>
            <author initials="D." surname="McGrew" fullname="D. McGrew">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="K." surname="Igoe" fullname="K. Igoe">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2015" month="December"/>
            <abstract>
              <t>This document defines how the AES-GCM Authenticated Encryption with Associated Data family of algorithms can be used to provide confidentiality and data authentication in the Secure Real-time Transport Protocol (SRTP).</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="7714"/>
          <seriesInfo name="DOI" value="10.17487/RFC7714"/>
        </reference>
        <reference anchor="RFC8174" target="https://www.rfc-editor.org/info/rfc8174" quoteTitle="true" derivedAnchor="RFC8174">
          <front>
            <title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
            <author initials="B." surname="Leiba" fullname="B. Leiba">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2017" month="May"/>
            <abstract>
              <t>RFC 2119 specifies common key words that may be used in protocol  specifications.  This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the  defined special meanings.</t>
            </abstract>
          </front>
          <seriesInfo name="BCP" value="14"/>
          <seriesInfo name="RFC" value="8174"/>
          <seriesInfo name="DOI" value="10.17487/RFC8174"/>
        </reference>
        <reference anchor="RFC8285" target="https://www.rfc-editor.org/info/rfc8285" quoteTitle="true" derivedAnchor="RFC8285">
          <front>
            <title>A General Mechanism for RTP Header Extensions</title>
            <author initials="D." surname="Singer" fullname="D. Singer">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="H." surname="Desineni" fullname="H. Desineni">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="R." surname="Even" fullname="R. Even" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2017" month="October"/>
            <abstract>
              <t>This document provides a general mechanism to use the header extension feature of RTP (the Real-time Transport Protocol).  It provides the option to use a small number of small extensions in each RTP packet, where the universe of possible extensions is large and registration is decentralized.  The actual extensions in use in a session are signaled in the setup information for that session.  This document obsoletes RFC 5285.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8285"/>
          <seriesInfo name="DOI" value="10.17487/RFC8285"/>
        </reference>
      </references>
      <references pn="section-11.2">
        <name slugifiedName="name-informative-references">Informative References</name>
        <reference anchor="I-D.ietf-perc-dtls-tunnel" quoteTitle="true" target="https://tools.ietf.org/html/draft-ietf-perc-dtls-tunnel-06" derivedAnchor="DTLS-TUNNEL">
          <front>
            <title>DTLS Tunnel between a Media Distributor and Key Distributor to Facilitate Key Exchange</title>
            <author initials="P" surname="Jones" fullname="Paul Jones">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="P" surname="Ellenbogen" fullname="Paul Ellenbogen">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="N" surname="Ohlmeier" fullname="Nils Ohlmeier">
              <organization showOnFrontPage="true"/>
            </author>
            <date month="October" day="16" year="2019"/>
            <abstract>
              <t>This document defines a DTLS tunneling protocol for use in multimedia conferences that enables a Media Distributor to facilitate key exchange between an endpoint in a conference and the Key Distributor. The protocol is designed to ensure that the keying material used for hop-by-hop encryption and authentication is accessible to the media distributor, while the keying material used for end-to-end encryption and authentication is inaccessible to the media distributor.</t>
            </abstract>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-ietf-perc-dtls-tunnel-06"/>
          <format type="TXT" target="http://www.ietf.org/internet-drafts/draft-ietf-perc-dtls-tunnel-06.txt"/>
          <refcontent>Work in Progress</refcontent>
        </reference>
        <reference anchor="I-D.ietf-perc-srtp-ekt-diet" quoteTitle="true" target="https://tools.ietf.org/html/draft-ietf-perc-srtp-ekt-diet-10" derivedAnchor="EKT-SRTP">
          <front>
            <title>Encrypted Key Transport for DTLS and Secure RTP</title>
            <author initials="C" surname="Jennings" fullname="Cullen Jennings">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="J" surname="Mattsson" fullname="John Mattsson">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="D" surname="McGrew" fullname="David McGrew">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="D" surname="Wing" fullname="Dan Wing">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="F" surname="Andreasen" fullname="Flemming Andreasen">
              <organization showOnFrontPage="true"/>
            </author>
            <date month="July" day="8" year="2019"/>
            <abstract>
              <t>Encrypted Key Transport (EKT) is an extension to DTLS (Datagram Transport Layer Security) and Secure Real-time Transport Protocol (SRTP) that provides for the secure transport of SRTP master keys, rollover counters, and other information within SRTP.  This facility enables SRTP for decentralized conferences by distributing a common key to all of the conference endpoints.</t>
            </abstract>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-ietf-perc-srtp-ekt-diet-10"/>
          <format type="TXT" target="http://www.ietf.org/internet-drafts/draft-ietf-perc-srtp-ekt-diet-10.txt"/>
          <refcontent>Work in Progress</refcontent>
        </reference>
        <reference anchor="I-D.ietf-perc-private-media-framework" quoteTitle="true" target="https://tools.ietf.org/html/draft-ietf-perc-private-media-framework-12" derivedAnchor="PRIVATE-MEDIA-FRAMEWORK">
          <front>
            <title>A Solution Framework for Private Media in Privacy Enhanced RTP Conferencing (PERC)</title>
            <author initials="P" surname="Jones" fullname="Paul Jones">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="D" surname="Benham" fullname="David Benham">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="C" surname="Groves" fullname="Christian Groves">
              <organization showOnFrontPage="true"/>
            </author>
            <date month="June" day="5" year="2019"/>
            <abstract>
              <t>This document describes a solution framework for ensuring that media confidentiality and integrity are maintained end-to-end within the context of a switched conferencing environment where media distributors are not trusted with the end-to-end media encryption keys.  The solution builds upon existing security mechanisms defined for the real-time transport protocol (RTP).</t>
            </abstract>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-ietf-perc-private-media-framework-12"/>
          <format type="TXT" target="http://www.ietf.org/internet-drafts/draft-ietf-perc-private-media-framework-12.txt"/>
          <refcontent>Work in Progress</refcontent>
        </reference>
        <reference anchor="RFC2198" target="https://www.rfc-editor.org/info/rfc2198" quoteTitle="true" derivedAnchor="RFC2198">
          <front>
            <title>RTP Payload for Redundant Audio Data</title>
            <author initials="C." surname="Perkins" fullname="C. Perkins">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="I." surname="Kouvelas" fullname="I. Kouvelas">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="O." surname="Hodson" fullname="O. Hodson">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="V." surname="Hardman" fullname="V. Hardman">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="M." surname="Handley" fullname="M. Handley">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="J.C." surname="Bolot" fullname="J.C. Bolot">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="A." surname="Vega-Garcia" fullname="A. Vega-Garcia">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="S." surname="Fosse-Parisis" fullname="S. Fosse-Parisis">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="1997" month="September"/>
            <abstract>
              <t>This document describes a payload format for use with the real-time transport protocol (RTP), version 2, for encoding redundant audio data. [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="2198"/>
          <seriesInfo name="DOI" value="10.17487/RFC2198"/>
        </reference>
        <reference anchor="RFC4588" target="https://www.rfc-editor.org/info/rfc4588" quoteTitle="true" derivedAnchor="RFC4588">
          <front>
            <title>RTP Retransmission Payload Format</title>
            <author initials="J." surname="Rey" fullname="J. Rey">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="D." surname="Leon" fullname="D. Leon">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="A." surname="Miyazaki" fullname="A. Miyazaki">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="V." surname="Varsa" fullname="V. Varsa">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="R." surname="Hakenberg" fullname="R. Hakenberg">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2006" month="July"/>
            <abstract>
              <t>RTP retransmission is an effective packet loss recovery technique for real-time applications with relaxed delay bounds.  This document describes an RTP payload format for performing retransmissions. Retransmitted RTP packets are sent in a separate stream from the original RTP stream.  It is assumed that feedback from receivers to senders is available.  In particular, it is assumed that Real-time Transport Control Protocol (RTCP) feedback as defined in the extended RTP profile for RTCP-based feedback (denoted RTP/AVPF) is available in this memo.  [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="4588"/>
          <seriesInfo name="DOI" value="10.17487/RFC4588"/>
        </reference>
        <reference anchor="RFC4733" target="https://www.rfc-editor.org/info/rfc4733" quoteTitle="true" derivedAnchor="RFC4733">
          <front>
            <title>RTP Payload for DTMF Digits, Telephony Tones, and Telephony Signals</title>
            <author initials="H." surname="Schulzrinne" fullname="H. Schulzrinne">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="T." surname="Taylor" fullname="T. Taylor">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2006" month="December"/>
            <abstract>
              <t>This memo describes how to carry dual-tone multifrequency (DTMF) signalling, other tone signals, and telephony events in RTP packets. It obsoletes RFC 2833.</t>
              <t>This memo captures and expands upon the basic framework defined in RFC 2833, but retains only the most basic event codes.  It sets up an IANA registry to which other event code assignments may be added. Companion documents add event codes to this registry relating to modem, fax, text telephony, and channel-associated signalling events. The remainder of the event codes defined in RFC 2833 are conditionally reserved in case other documents revive their use.</t>
              <t>This document provides a number of clarifications to the original document.  However, it specifically differs from RFC 2833 by removing the requirement that all compliant implementations support the DTMF events.  Instead, compliant implementations taking part in out-of-band negotiations of media stream content indicate what events they support.  This memo adds three new procedures to the RFC 2833 framework: subdivision of long events into segments, reporting of multiple events in a single packet, and the concept and reporting of state events.  [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="4733"/>
          <seriesInfo name="DOI" value="10.17487/RFC4733"/>
        </reference>
        <reference anchor="RFC5234" target="https://www.rfc-editor.org/info/rfc5234" quoteTitle="true" derivedAnchor="RFC5234">
          <front>
            <title>Augmented BNF for Syntax Specifications: ABNF</title>
            <author initials="D." surname="Crocker" fullname="D. Crocker" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="P." surname="Overell" fullname="P. Overell">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2008" month="January"/>
            <abstract>
              <t>Internet technical specifications often need to define a formal syntax.  Over the years, a modified version of Backus-Naur Form (BNF), called Augmented BNF (ABNF), has been popular among many Internet specifications.  The current specification documents ABNF. It balances compactness and simplicity with reasonable representational power.  The differences between standard BNF and ABNF involve naming rules, repetition, alternatives, order-independence, and value ranges.  This specification also supplies additional rule definitions and encoding for a core lexical analyzer of the type common to several Internet specifications.  [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="STD" value="68"/>
          <seriesInfo name="RFC" value="5234"/>
          <seriesInfo name="DOI" value="10.17487/RFC5234"/>
        </reference>
        <reference anchor="RFC8627" target="https://www.rfc-editor.org/info/rfc8627" quoteTitle="true" derivedAnchor="RFC8627">
          <front>
            <title>RTP Payload Format for Flexible Forward Error Correction (FEC)</title>
            <author initials="M." surname="Zanaty" fullname="M. Zanaty">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="V." surname="Singh" fullname="V. Singh">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="A." surname="Begen" fullname="A. Begen">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="G." surname="Mandyam" fullname="G. Mandyam">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2019" month="July"/>
            <abstract>
              <t>This document defines new RTP payload formats for the Forward Error Correction (FEC) packets that are generated by the non-interleaved and interleaved parity codes from source media encapsulated in RTP. These parity codes are systematic codes (Flexible FEC, or "FLEX                         FEC"), where a number of FEC repair packets are generated from a set of source packets from one or more source RTP streams.  These FEC repair packets are sent in a redundancy RTP stream separate from the source RTP stream(s) that carries the source packets.  RTP source packets that were lost in transmission can be reconstructed using the source and repair packets that were received.  The non-interleaved and interleaved parity codes that are defined in this specification offer a good protection against random and bursty packet losses, respectively, at a cost of complexity.  The RTP payload formats that are defined in this document address scalability issues experienced with the earlier specifications and offer several improvements.  Due to these changes, the new payload formats are not backward compatible with earlier specifications; however, endpoints that do not implement this specification can still work by simply ignoring the FEC repair packets.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8627"/>
          <seriesInfo name="DOI" value="10.17487/RFC8627"/>
        </reference>
        <reference anchor="I-D.ietf-rtcweb-fec" quoteTitle="true" target="https://tools.ietf.org/html/draft-ietf-rtcweb-fec-10" derivedAnchor="WEBRTC-FEC">
          <front>
            <title>WebRTC Forward Error Correction Requirements</title>
            <author initials="J" surname="Uberti" fullname="Justin Uberti">
              <organization showOnFrontPage="true"/>
            </author>
            <date month="July" day="16" year="2019"/>
            <abstract>
              <t>This document provides information and requirements for how Forward Error Correction (FEC) should be used by WebRTC implementations.</t>
            </abstract>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-ietf-rtcweb-fec-10"/>
          <format type="TXT" target="http://www.ietf.org/internet-drafts/draft-ietf-rtcweb-fec-10.txt"/>
          <refcontent>Work in Progress</refcontent>
        </reference>
      </references>
    </references>
    <section anchor="encryption-overview" numbered="true" toc="include" removeInRFC="false" pn="section-appendix.a">
      <name slugifiedName="name-encryption-overview">Encryption Overview</name>
      <t pn="section-appendix.a-1">The following figures show a double-encrypted SRTP packet. The sides
indicate the parts of the packet that are encrypted and authenticated
by the hop-by-hop and end-to-end operations.
</t>
      <artwork alt="" type="ascii-art" align="left" pn="section-appendix.a-2">
     0                   1                   2                   3
     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |V=2|P|X|  CC   |M|     PT      |       sequence number         |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |                           timestamp                           |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |           synchronization source (SSRC) identifier            |
    +=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+
    |            contributing source (CSRC) identifiers             |
    |                               ....                            |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |                    RTP extension (OPTIONAL) ...               |
+&gt;+&gt;+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
O I |                          payload ...                          |
O I |                               +-------------------------------+
O I |                               | RTP padding   | RTP pad count |
O +&gt;+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
O | |                    E2E authentication tag                     |
O | +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
O | |                            OHB ...                            |
+&gt;| +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
| | |                    HBH authentication tag                     |
| | +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
| |
| +- E2E Encrypted Portion
|
+--- HBH Encrypted Portion
</artwork>
      <artwork alt="" type="ascii-art" align="left" pn="section-appendix.a-3">
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+&lt;+&lt;+
|V=2|P|X|  CC   |M|     PT      |       sequence number         | I O
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ I O
|                           timestamp                           | I O
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ I O
|           synchronization source (SSRC) identifier            | I O
+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+ I O
|            contributing source (CSRC) identifiers             | I O
|                               ....                            | I O
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+&lt;+ O
|                    RTP extension (OPTIONAL) ...               | | O
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+&lt;+ O
|                           payload ...                         | I O
|                               +-------------------------------+ I O
|                               | RTP padding   | RTP pad count | I O
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+&lt;+ O
|                    E2E authentication tag                     | | O
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ | O
|                            OHB ...                            | | O
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ |&lt;+
|                    HBH authentication tag                     | | |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ | |
                                                                  | |
                                     E2E Authenticated Portion ---+ |
                                                                    |
                                     HBH Authenticated Portion -----+
</artwork>
    </section>
    <section anchor="acknowledgments" numbered="false" toc="include" removeInRFC="false" pn="section-appendix.b">
      <name slugifiedName="name-acknowledgments">Acknowledgments</name>
      <t pn="section-appendix.b-1">Thank you to <contact fullname="Alex Gouaillard"/>, 
<contact fullname="David Benham"/>, <contact fullname="Magnus Westerlund"/>, 
<contact fullname="Nils Ohlmeier"/>, <contact fullname="Roni Even"/>, and <contact fullname="Suhas Nandakumar"/> 
for reviews and improvements to this specification. In addition, thank you to
<contact fullname="Sergio Garcia Murillo"/>, who proposed the change of transporting the OHB
information in the RTP payload instead of the RTP header.
</t>
    </section>
    <section anchor="authors-addresses" numbered="false" removeInRFC="false" toc="include" pn="section-appendix.c">
      <name slugifiedName="name-authors-addresses">Authors' Addresses</name>
      <author initials="C." surname="Jennings" fullname="Cullen Jennings">
        <organization showOnFrontPage="true">Cisco Systems</organization>
        <address>
          <email>fluffy@iii.ca</email>
        </address>
      </author>
      <author initials="P." surname="Jones" fullname="Paul E. Jones">
        <organization showOnFrontPage="true">Cisco Systems</organization>
        <address>
          <email>paulej@packetizer.com</email>
        </address>
      </author>
      <author initials="R." surname="Barnes" fullname="Richard Barnes">
        <organization showOnFrontPage="true">Cisco Systems</organization>
        <address>
          <email>rlb@ipv.sx</email>
        </address>
      </author>
      <author initials="A.B." surname="Roach" fullname="Adam Roach">
        <organization showOnFrontPage="true">Mozilla</organization>
        <address>
          <email>adam@nostrum.com</email>
        </address>
      </author>
    </section>
  </back>
</rfc>
