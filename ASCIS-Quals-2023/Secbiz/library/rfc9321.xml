<?xml version='1.0' encoding='utf-8'?>
<rfc xmlns:xi="http://www.w3.org/2001/XInclude" version="3" category="info" docName="draft-santesson-svt-08" indexInclude="true" ipr="trust200902" number="9321" prepTime="2022-10-15T06:18:11" scripts="Common,Latin" sortRefs="true" submissionType="independent" symRefs="true" tocDepth="3" tocInclude="true" xml:lang="en">
  <link href="https://datatracker.ietf.org/doc/draft-santesson-svt-08" rel="prev"/>
  <link href="https://dx.doi.org/10.17487/rfc9321" rel="alternate"/>
  <link href="urn:issn:2070-1721" rel="alternate"/>
  <front>
    <title>Signature Validation Token</title>
    <seriesInfo name="RFC" value="9321" stream="independent"/>
    <author initials="S." surname="Santesson" fullname="Stefan Santesson">
      <organization abbrev="IDsec Solutions" showOnFrontPage="true">IDsec Solutions AB</organization>
      <address>
        <postal>
          <street>Forskningsbyn Ideon</street>
          <city>Lund</city>
          <code>223 70</code>
          <country>Sweden</country>
        </postal>
        <email>sts@aaa-sec.com</email>
      </address>
    </author>
    <author initials="R." surname="Housley" fullname="Russ Housley">
      <organization abbrev="Vigil Security" showOnFrontPage="true">Vigil Security, LLC</organization>
      <address>
        <postal>
          <street>516 Dranesville Road</street>
          <city>Herndon</city>
          <region>VA</region>
          <code>20170</code>
          <country>United States of America</country>
        </postal>
        <email>housley@vigilsec.com</email>
      </address>
    </author>
    <date month="10" year="2022"/>
    <keyword>digital signature</keyword>
    <keyword>electronic signature</keyword>
    <keyword>long-term archive</keyword>
    <abstract pn="section-abstract">
      <t indent="0" pn="section-abstract-1">Electronic signatures have a limited lifespan with respect to the time period that they
can be validated and determined to be authentic. The Signature Validation Token (SVT)
defined in this specification provides evidence that asserts the validity of an
electronic signature. The SVT is provided by a trusted authority, which asserts that
a particular signature was successfully validated according to defined procedures at
a certain time. Any future validation of that electronic signature can be satisfied by
validating the SVT without any need to also validate the original electronic signature or
the associated digital certificates. The SVT supports electronic signatures in Cryptographic Message Syntax (CMS), XML,
PDF, and JSON documents.</t>
    </abstract>
    <boilerplate>
      <section anchor="status-of-memo" numbered="false" removeInRFC="false" toc="exclude" pn="section-boilerplate.1">
        <name slugifiedName="name-status-of-this-memo">Status of This Memo</name>
        <t indent="0" pn="section-boilerplate.1-1">
            This document is not an Internet Standards Track specification; it is
            published for informational purposes.
        </t>
        <t indent="0" pn="section-boilerplate.1-2">
            This is a contribution to the RFC Series, independently of any
            other RFC stream.  The RFC Editor has chosen to publish this
            document at its discretion and makes no statement about its value
            for implementation or deployment.  Documents approved for
            publication by the RFC Editor are not candidates for any level of
            Internet Standard; see Section 2 of RFC 7841.
        </t>
        <t indent="0" pn="section-boilerplate.1-3">
            Information about the current status of this document, any
            errata, and how to provide feedback on it may be obtained at
            <eref target="https://www.rfc-editor.org/info/rfc9321" brackets="none"/>.
        </t>
      </section>
      <section anchor="copyright" numbered="false" removeInRFC="false" toc="exclude" pn="section-boilerplate.2">
        <name slugifiedName="name-copyright-notice">Copyright Notice</name>
        <t indent="0" pn="section-boilerplate.2-1">
            Copyright (c) 2022 IETF Trust and the persons identified as the
            document authors. All rights reserved.
        </t>
        <t indent="0" pn="section-boilerplate.2-2">
            This document is subject to BCP 78 and the IETF Trust's Legal
            Provisions Relating to IETF Documents
            (<eref target="https://trustee.ietf.org/license-info" brackets="none"/>) in effect on the date of
            publication of this document. Please review these documents
            carefully, as they describe your rights and restrictions with
            respect to this document.
        </t>
      </section>
    </boilerplate>
    <toc>
      <section anchor="toc" numbered="false" removeInRFC="false" toc="exclude" pn="section-toc.1">
        <name slugifiedName="name-table-of-contents">Table of Contents</name>
        <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1">
          <li pn="section-toc.1-1.1">
            <t indent="0" keepWithNext="true" pn="section-toc.1-1.1.1"><xref derivedContent="1" format="counter" sectionFormat="of" target="section-1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-introduction">Introduction</xref></t>
          </li>
          <li pn="section-toc.1-1.2">
            <t indent="0" keepWithNext="true" pn="section-toc.1-1.2.1"><xref derivedContent="2" format="counter" sectionFormat="of" target="section-2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-definitions">Definitions</xref></t>
          </li>
          <li pn="section-toc.1-1.3">
            <t indent="0" pn="section-toc.1-1.3.1"><xref derivedContent="3" format="counter" sectionFormat="of" target="section-3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-signature-validation-token">Signature Validation Token</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.3.2">
              <li pn="section-toc.1-1.3.2.1">
                <t indent="0" keepWithNext="true" pn="section-toc.1-1.3.2.1.1"><xref derivedContent="3.1" format="counter" sectionFormat="of" target="section-3.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-signature-validation-token-">Signature Validation Token Function</xref></t>
              </li>
              <li pn="section-toc.1-1.3.2.2">
                <t indent="0" pn="section-toc.1-1.3.2.2.1"><xref derivedContent="3.2" format="counter" sectionFormat="of" target="section-3.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-signature-validation-token-s">Signature Validation Token Syntax</xref></t>
                <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.3.2.2.2">
                  <li pn="section-toc.1-1.3.2.2.2.1">
                    <t indent="0" pn="section-toc.1-1.3.2.2.2.1.1"><xref derivedContent="3.2.1" format="counter" sectionFormat="of" target="section-3.2.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-data-types">Data Types</xref></t>
                  </li>
                  <li pn="section-toc.1-1.3.2.2.2.2">
                    <t indent="0" pn="section-toc.1-1.3.2.2.2.2.1"><xref derivedContent="3.2.2" format="counter" sectionFormat="of" target="section-3.2.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-signature-validation-token-j">Signature Validation Token JWT Claims</xref></t>
                  </li>
                  <li pn="section-toc.1-1.3.2.2.2.3">
                    <t indent="0" pn="section-toc.1-1.3.2.2.2.3.1"><xref derivedContent="3.2.3" format="counter" sectionFormat="of" target="section-3.2.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-sigvalidation-object-class">SigValidation Object Class</xref></t>
                  </li>
                  <li pn="section-toc.1-1.3.2.2.2.4">
                    <t indent="0" pn="section-toc.1-1.3.2.2.2.4.1"><xref derivedContent="3.2.4" format="counter" sectionFormat="of" target="section-3.2.4"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-signature-claims-object-cla">Signature Claims Object Class</xref></t>
                  </li>
                  <li pn="section-toc.1-1.3.2.2.2.5">
                    <t indent="0" pn="section-toc.1-1.3.2.2.2.5.1"><xref derivedContent="3.2.5" format="counter" sectionFormat="of" target="section-3.2.5"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-sigreference-claims-object-">SigReference Claims Object Class</xref></t>
                  </li>
                  <li pn="section-toc.1-1.3.2.2.2.6">
                    <t indent="0" pn="section-toc.1-1.3.2.2.2.6.1"><xref derivedContent="3.2.6" format="counter" sectionFormat="of" target="section-3.2.6"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-signeddatareference-claims-">SignedDataReference Claims Object Class</xref></t>
                  </li>
                  <li pn="section-toc.1-1.3.2.2.2.7">
                    <t indent="0" pn="section-toc.1-1.3.2.2.2.7.1"><xref derivedContent="3.2.7" format="counter" sectionFormat="of" target="section-3.2.7"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-policyvalidation-claims-obj">PolicyValidation Claims Object Class</xref></t>
                  </li>
                  <li pn="section-toc.1-1.3.2.2.2.8">
                    <t indent="0" pn="section-toc.1-1.3.2.2.2.8.1"><xref derivedContent="3.2.8" format="counter" sectionFormat="of" target="section-3.2.8"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-timevalidation-claims-objec">TimeValidation Claims Object Class</xref></t>
                  </li>
                  <li pn="section-toc.1-1.3.2.2.2.9">
                    <t indent="0" pn="section-toc.1-1.3.2.2.2.9.1"><xref derivedContent="3.2.9" format="counter" sectionFormat="of" target="section-3.2.9"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-certreference-claims-object">CertReference Claims Object Class</xref></t>
                  </li>
                  <li pn="section-toc.1-1.3.2.2.2.10">
                    <t indent="0" pn="section-toc.1-1.3.2.2.2.10.1"><xref derivedContent="3.2.10" format="counter" sectionFormat="of" target="section-3.2.10"/>. <xref derivedContent="" format="title" sectionFormat="of" target="name-svt-jose-header">SVT JOSE Header</xref></t>
                  </li>
                </ul>
              </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.4">
            <t indent="0" pn="section-toc.1-1.4.1"><xref derivedContent="4" format="counter" sectionFormat="of" target="section-4"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-profiles">Profiles</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.4.2">
              <li pn="section-toc.1-1.4.2.1">
                <t indent="0" pn="section-toc.1-1.4.2.1.1"><xref derivedContent="4.1" format="counter" sectionFormat="of" target="section-4.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-defined-profiles">Defined Profiles</xref></t>
              </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.5">
            <t indent="0" pn="section-toc.1-1.5.1"><xref derivedContent="5" format="counter" sectionFormat="of" target="section-5"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-signature-verification-with">Signature Verification with an SVT</xref></t>
          </li>
          <li pn="section-toc.1-1.6">
            <t indent="0" pn="section-toc.1-1.6.1"><xref derivedContent="6" format="counter" sectionFormat="of" target="section-6"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-iana-considerations">IANA Considerations</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.6.2">
              <li pn="section-toc.1-1.6.2.1">
                <t indent="0" pn="section-toc.1-1.6.2.1.1"><xref derivedContent="6.1" format="counter" sectionFormat="of" target="section-6.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-claim-names-registration">Claim Names Registration</xref></t>
                <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.6.2.1.2">
                  <li pn="section-toc.1-1.6.2.1.2.1">
                    <t indent="0" pn="section-toc.1-1.6.2.1.2.1.1"><xref derivedContent="6.1.1" format="counter" sectionFormat="of" target="section-6.1.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-registry-contents">Registry Contents</xref></t>
                  </li>
                </ul>
              </li>
              <li pn="section-toc.1-1.6.2.2">
                <t indent="0" pn="section-toc.1-1.6.2.2.1"><xref derivedContent="6.2" format="counter" sectionFormat="of" target="section-6.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-header-parameter-names-regi">Header Parameter Names Registration</xref></t>
                <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.6.2.2.2">
                  <li pn="section-toc.1-1.6.2.2.2.1">
                    <t indent="0" pn="section-toc.1-1.6.2.2.2.1.1"><xref derivedContent="6.2.1" format="counter" sectionFormat="of" target="section-6.2.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-registry-contents-2">Registry Contents</xref></t>
                  </li>
                </ul>
              </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.7">
            <t indent="0" pn="section-toc.1-1.7.1"><xref derivedContent="7" format="counter" sectionFormat="of" target="section-7"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-security-considerations">Security Considerations</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.7.2">
              <li pn="section-toc.1-1.7.2.1">
                <t indent="0" pn="section-toc.1-1.7.2.1.1"><xref derivedContent="7.1" format="counter" sectionFormat="of" target="section-7.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-level-of-reliance">Level of Reliance</xref></t>
              </li>
              <li pn="section-toc.1-1.7.2.2">
                <t indent="0" pn="section-toc.1-1.7.2.2.1"><xref derivedContent="7.2" format="counter" sectionFormat="of" target="section-7.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-aging-algorithms">Aging Algorithms</xref></t>
              </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.8">
            <t indent="0" pn="section-toc.1-1.8.1"><xref derivedContent="8" format="counter" sectionFormat="of" target="section-8"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-references">References</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.8.2">
              <li pn="section-toc.1-1.8.2.1">
                <t indent="0" pn="section-toc.1-1.8.2.1.1"><xref derivedContent="8.1" format="counter" sectionFormat="of" target="section-8.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-normative-references">Normative References</xref></t>
              </li>
              <li pn="section-toc.1-1.8.2.2">
                <t indent="0" pn="section-toc.1-1.8.2.2.1"><xref derivedContent="8.2" format="counter" sectionFormat="of" target="section-8.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-informative-references">Informative References</xref></t>
              </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.9">
            <t indent="0" pn="section-toc.1-1.9.1"><xref derivedContent="Appendix A" format="default" sectionFormat="of" target="section-appendix.a"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-xml-signature-profile">XML Signature Profile</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.9.2">
              <li pn="section-toc.1-1.9.2.1">
                <t indent="0" pn="section-toc.1-1.9.2.1.1"><xref derivedContent="A.1" format="counter" sectionFormat="of" target="section-appendix.a.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-notation">Notation</xref></t>
                <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.9.2.1.2">
                  <li pn="section-toc.1-1.9.2.1.2.1">
                    <t indent="0" pn="section-toc.1-1.9.2.1.2.1.1"><xref derivedContent="A.1.1" format="counter" sectionFormat="of" target="section-appendix.a.1.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-references-to-xml-elements-">References to XML Elements from XML Schemas</xref></t>
                  </li>
                </ul>
              </li>
              <li pn="section-toc.1-1.9.2.2">
                <t indent="0" pn="section-toc.1-1.9.2.2.1"><xref derivedContent="A.2" format="counter" sectionFormat="of" target="section-appendix.a.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-svt-in-xml-documents">SVT in XML Documents</xref></t>
                <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.9.2.2.2">
                  <li pn="section-toc.1-1.9.2.2.2.1">
                    <t indent="0" pn="section-toc.1-1.9.2.2.2.1.1"><xref derivedContent="A.2.1" format="counter" sectionFormat="of" target="section-appendix.a.2.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-signaturevalidationtoken-si">SignatureValidationToken Signature Property</xref></t>
                  </li>
                  <li pn="section-toc.1-1.9.2.2.2.2">
                    <t indent="0" pn="section-toc.1-1.9.2.2.2.2.1"><xref derivedContent="A.2.2" format="counter" sectionFormat="of" target="section-appendix.a.2.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-multiple-svts-in-an-xml-sig">Multiple SVTs in an XML Signature</xref></t>
                  </li>
                </ul>
              </li>
              <li pn="section-toc.1-1.9.2.3">
                <t indent="0" pn="section-toc.1-1.9.2.3.1"><xref derivedContent="A.3" format="counter" sectionFormat="of" target="section-appendix.a.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-xml-signature-svt-claims">XML Signature SVT Claims</xref></t>
                <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.9.2.3.2">
                  <li pn="section-toc.1-1.9.2.3.2.1">
                    <t indent="0" pn="section-toc.1-1.9.2.3.2.1.1"><xref derivedContent="A.3.1" format="counter" sectionFormat="of" target="section-appendix.a.3.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-xml-profile-identifier">XML Profile Identifier</xref></t>
                  </li>
                  <li pn="section-toc.1-1.9.2.3.2.2">
                    <t indent="0" pn="section-toc.1-1.9.2.3.2.2.1"><xref derivedContent="A.3.2" format="counter" sectionFormat="of" target="section-appendix.a.3.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-xml-signature-reference-dat">XML Signature Reference Data</xref></t>
                  </li>
                  <li pn="section-toc.1-1.9.2.3.2.3">
                    <t indent="0" pn="section-toc.1-1.9.2.3.2.3.1"><xref derivedContent="A.3.3" format="counter" sectionFormat="of" target="section-appendix.a.3.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-xml-signed-data-reference-d">XML Signed Data Reference Data</xref></t>
                  </li>
                  <li pn="section-toc.1-1.9.2.3.2.4">
                    <t indent="0" pn="section-toc.1-1.9.2.3.2.4.1"><xref derivedContent="A.3.4" format="counter" sectionFormat="of" target="section-appendix.a.3.4"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-xml-signer-certificate-refe">XML Signer Certificate References</xref></t>
                  </li>
                </ul>
              </li>
              <li pn="section-toc.1-1.9.2.4">
                <t indent="0" pn="section-toc.1-1.9.2.4.1"><xref derivedContent="A.4" format="counter" sectionFormat="of" target="section-appendix.a.4"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-jose-header">JOSE Header</xref></t>
                <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.9.2.4.2">
                  <li pn="section-toc.1-1.9.2.4.2.1">
                    <t indent="0" pn="section-toc.1-1.9.2.4.2.1.1"><xref derivedContent="A.4.1" format="counter" sectionFormat="of" target="section-appendix.a.4.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-svt-signing-key-reference">SVT Signing Key Reference</xref></t>
                  </li>
                </ul>
              </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.10">
            <t indent="0" pn="section-toc.1-1.10.1"><xref derivedContent="Appendix B" format="default" sectionFormat="of" target="section-appendix.b"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-pdf-signature-profile">PDF Signature Profile</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.10.2">
              <li pn="section-toc.1-1.10.2.1">
                <t indent="0" pn="section-toc.1-1.10.2.1.1"><xref derivedContent="B.1" format="counter" sectionFormat="of" target="section-appendix.b.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-svts-in-pdf-documents">SVTs in PDF Documents</xref></t>
                <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.10.2.1.2">
                  <li pn="section-toc.1-1.10.2.1.2.1">
                    <t indent="0" pn="section-toc.1-1.10.2.1.2.1.1"><xref derivedContent="B.1.1" format="counter" sectionFormat="of" target="section-appendix.b.1.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-svt-extension-to-timestamp-">SVT Extension to Timestamp Tokens</xref></t>
                  </li>
                </ul>
              </li>
              <li pn="section-toc.1-1.10.2.2">
                <t indent="0" pn="section-toc.1-1.10.2.2.1"><xref derivedContent="B.2" format="counter" sectionFormat="of" target="section-appendix.b.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-pdf-signature-svt-claims">PDF Signature SVT Claims</xref></t>
                <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.10.2.2.2">
                  <li pn="section-toc.1-1.10.2.2.2.1">
                    <t indent="0" pn="section-toc.1-1.10.2.2.2.1.1"><xref derivedContent="B.2.1" format="counter" sectionFormat="of" target="section-appendix.b.2.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-pdf-profile-identifier">PDF Profile Identifier</xref></t>
                  </li>
                  <li pn="section-toc.1-1.10.2.2.2.2">
                    <t indent="0" pn="section-toc.1-1.10.2.2.2.2.1"><xref derivedContent="B.2.2" format="counter" sectionFormat="of" target="section-appendix.b.2.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-pdf-signature-reference-dat">PDF Signature Reference Data</xref></t>
                  </li>
                  <li pn="section-toc.1-1.10.2.2.2.3">
                    <t indent="0" pn="section-toc.1-1.10.2.2.2.3.1"><xref derivedContent="B.2.3" format="counter" sectionFormat="of" target="section-appendix.b.2.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-pdf-signed-data-reference-d">PDF Signed Data Reference Data</xref></t>
                  </li>
                  <li pn="section-toc.1-1.10.2.2.2.4">
                    <t indent="0" pn="section-toc.1-1.10.2.2.2.4.1"><xref derivedContent="B.2.4" format="counter" sectionFormat="of" target="section-appendix.b.2.4"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-pdf-signer-certificate-refe">PDF Signer Certificate References</xref></t>
                  </li>
                </ul>
              </li>
              <li pn="section-toc.1-1.10.2.3">
                <t indent="0" pn="section-toc.1-1.10.2.3.1"><xref derivedContent="B.3" format="counter" sectionFormat="of" target="section-appendix.b.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-jose-header-2">JOSE Header</xref></t>
                <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.10.2.3.2">
                  <li pn="section-toc.1-1.10.2.3.2.1">
                    <t indent="0" pn="section-toc.1-1.10.2.3.2.1.1"><xref derivedContent="B.3.1" format="counter" sectionFormat="of" target="section-appendix.b.3.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-svt-signing-key-reference-2">SVT Signing Key Reference</xref></t>
                  </li>
                </ul>
              </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.11">
            <t indent="0" pn="section-toc.1-1.11.1"><xref derivedContent="Appendix C" format="default" sectionFormat="of" target="section-appendix.c"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-jws-profile">JWS Profile</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.11.2">
              <li pn="section-toc.1-1.11.2.1">
                <t indent="0" pn="section-toc.1-1.11.2.1.1"><xref derivedContent="C.1" format="counter" sectionFormat="of" target="section-appendix.c.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-svt-in-jws">SVT in JWS</xref></t>
                <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.11.2.1.2">
                  <li pn="section-toc.1-1.11.2.1.2.1">
                    <t indent="0" pn="section-toc.1-1.11.2.1.2.1.1"><xref derivedContent="C.1.1" format="counter" sectionFormat="of" target="section-appendix.c.1.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-svt-header-parameter">"svt" Header Parameter</xref></t>
                  </li>
                  <li pn="section-toc.1-1.11.2.1.2.2">
                    <t indent="0" pn="section-toc.1-1.11.2.1.2.2.1"><xref derivedContent="C.1.2" format="counter" sectionFormat="of" target="section-appendix.c.1.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-multiple-svts-in-a-jws-sign">Multiple SVTs in a JWS Signature</xref></t>
                  </li>
                </ul>
              </li>
              <li pn="section-toc.1-1.11.2.2">
                <t indent="0" pn="section-toc.1-1.11.2.2.1"><xref derivedContent="C.2" format="counter" sectionFormat="of" target="section-appendix.c.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-jws-signature-svt-claims">JWS Signature SVT Claims</xref></t>
                <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.11.2.2.2">
                  <li pn="section-toc.1-1.11.2.2.2.1">
                    <t indent="0" pn="section-toc.1-1.11.2.2.2.1.1"><xref derivedContent="C.2.1" format="counter" sectionFormat="of" target="section-appendix.c.2.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-jws-profile-identifier">JWS Profile Identifier</xref></t>
                  </li>
                  <li pn="section-toc.1-1.11.2.2.2.2">
                    <t indent="0" pn="section-toc.1-1.11.2.2.2.2.1"><xref derivedContent="C.2.2" format="counter" sectionFormat="of" target="section-appendix.c.2.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-jws-signature-reference-dat">JWS Signature Reference Data</xref></t>
                  </li>
                  <li pn="section-toc.1-1.11.2.2.2.3">
                    <t indent="0" pn="section-toc.1-1.11.2.2.2.3.1"><xref derivedContent="C.2.3" format="counter" sectionFormat="of" target="section-appendix.c.2.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-jws-signed-data-reference-d">JWS Signed Data Reference Data</xref></t>
                  </li>
                  <li pn="section-toc.1-1.11.2.2.2.4">
                    <t indent="0" pn="section-toc.1-1.11.2.2.2.4.1"><xref derivedContent="C.2.4" format="counter" sectionFormat="of" target="section-appendix.c.2.4"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-jws-signer-certificate-refe">JWS Signer Certificate References</xref></t>
                  </li>
                </ul>
              </li>
              <li pn="section-toc.1-1.11.2.3">
                <t indent="0" pn="section-toc.1-1.11.2.3.1"><xref derivedContent="C.3" format="counter" sectionFormat="of" target="section-appendix.c.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-svt-jose-header-2">SVT JOSE Header</xref></t>
                <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.11.2.3.2">
                  <li pn="section-toc.1-1.11.2.3.2.1">
                    <t indent="0" pn="section-toc.1-1.11.2.3.2.1.1"><xref derivedContent="C.3.1" format="counter" sectionFormat="of" target="section-appendix.c.3.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-svt-signing-key-reference-3">SVT Signing Key Reference</xref></t>
                  </li>
                </ul>
              </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.12">
            <t indent="0" pn="section-toc.1-1.12.1"><xref derivedContent="Appendix D" format="default" sectionFormat="of" target="section-appendix.d"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-schemas">Schemas</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.12.2">
              <li pn="section-toc.1-1.12.2.1">
                <t indent="0" pn="section-toc.1-1.12.2.1.1"><xref derivedContent="D.1" format="counter" sectionFormat="of" target="section-appendix.d.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-concise-data-definition-lan">Concise Data Definition Language (CDDL)</xref></t>
              </li>
              <li pn="section-toc.1-1.12.2.2">
                <t indent="0" pn="section-toc.1-1.12.2.2.1"><xref derivedContent="D.2" format="counter" sectionFormat="of" target="section-appendix.d.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-json-schema">JSON Schema</xref></t>
              </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.13">
            <t indent="0" pn="section-toc.1-1.13.1"><xref derivedContent="Appendix E" format="default" sectionFormat="of" target="section-appendix.e"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-examples">Examples</xref></t>
          </li>
          <li pn="section-toc.1-1.14">
            <t indent="0" pn="section-toc.1-1.14.1"><xref derivedContent="" format="none" sectionFormat="of" target="section-appendix.f"/><xref derivedContent="" format="title" sectionFormat="of" target="name-authors-addresses">Authors' Addresses</xref></t>
          </li>
        </ul>
      </section>
    </toc>
  </front>
  <middle>
    <section anchor="intro" numbered="true" removeInRFC="false" toc="include" pn="section-1">
      <name slugifiedName="name-introduction">Introduction</name>
      <t indent="0" pn="section-1-1">Electronic signatures have a limited lifespan regarding when they can be validated
and determined to be authentic. Many factors make it more difficult to validate
electronic signatures over time. For example:</t>
      <ul spacing="normal" bare="false" empty="false" indent="3" pn="section-1-2">
        <li pn="section-1-2.1">Trusted information about the validity of the certificate containing the signer's public key is not available.</li>
        <li pn="section-1-2.2">Trusted information about the time when the signature was actually created is not available.</li>
        <li pn="section-1-2.3">Algorithms used to create the electronic signature may no longer be considered secure at the time of validation and may therefore no longer be available in software libraries.</li>
        <li pn="section-1-2.4">Services necessary to validate the signature are no longer available at the time of validation.</li>
        <li pn="section-1-2.5">Supporting evidence such as certification authority (CA) certificates, Online Certificate Status Protocol (OCSP) responses, Certificate Revocation Lists (CRLs), or timestamps is not available or can't be validated.</li>
      </ul>
      <t indent="0" pn="section-1-3">The challenges to validation of an electronic signature increase
over time, and eventually it may simply be impossible to verify the
signature with a sufficient level of assurance.</t>
      <t indent="0" pn="section-1-4">Existing standards, such as the ETSI XAdES <xref target="XADES" format="default" sectionFormat="of" derivedContent="XADES"/> profile for XML
signatures <xref target="XMLDSIG11" format="default" sectionFormat="of" derivedContent="XMLDSIG11"/>, ETSI PAdES <xref target="PADES" format="default" sectionFormat="of" derivedContent="PADES"/> profile for PDF signatures
<xref target="ISOPDF2" format="default" sectionFormat="of" derivedContent="ISOPDF2"/>, and ETSI CAdES <xref target="CADES" format="default" sectionFormat="of" derivedContent="CADES"/> profile for CMS signatures
<xref target="RFC5652" format="default" sectionFormat="of" derivedContent="RFC5652"/>, can be used to extend the time within which a signature can be
validated at the cost of significant complexity, which involves storing and
validating significant amounts of external evidence data such as revocation data,
signature time stamps, and archival time stamps.</t>
      <t indent="0" pn="section-1-5">The Signature Validation Token (SVT) defined in this specification takes a
trusted signature validation process as an input and preserves the validation result
for the associated signature and signed document. The SVT asserts that a particular
electronic signature was successfully validated by a trusted authority according to
defined procedures at a certain time. Those procedures <bcp14>MUST</bcp14> include checks
that the signature match the signed document, checks that the signature can be validated by
the signing certificate, and checks that the signing certificate pass certificate
path validation <xref target="RFC5280" format="default" sectionFormat="of" derivedContent="RFC5280"/>.
Those procedures <bcp14>MAY</bcp14> also include checks associated with a particular trust policy such as
that an acceptable certificate policy <xref target="RFC5280" format="default" sectionFormat="of" derivedContent="RFC5280"/> <xref target="RFC3647" format="default" sectionFormat="of" derivedContent="RFC3647"/> was used to issue the
signer's certificate and checks that an acceptable signature policy was used by
the signer <xref target="RFC3125" format="default" sectionFormat="of" derivedContent="RFC3125"/>.</t>
      <t indent="0" pn="section-1-6">Once the SVT is issued by a trusted
authority, any future validation of that electronic signature can be satisfied by validating
the SVT without any need to also revalidate the original electronic signature.</t>
      <t indent="0" pn="section-1-7">As the SVT is used to preserve validation results obtained through applying existing
standards for signature validation, it is complementary to and not a replacement for such standards,
including the ETSI standards for long-term validation listed above.
The SVT does, however, have the potentially positive effect that it may significantly reduce the need to
apply complex long-term validation and preservation techniques for signature validation
if an SVT is issued and applied to the signed document at an early stage where the signature
can be validated without support of large amounts of external evidence.
The use of SVTs may therefore drastically reduce the complexity of revalidation of old
archived electronic signatures.</t>
      <t indent="0" pn="section-1-8">The SVT can be signed with private keys and algorithms that
provide confidence for a considerable time period. In fact, multiple SVTs can be used
to offer greater assurance. For example, one SVT could be produced with a large RSA
private key, a second one with a strong elliptic curve, and a third one with a quantum
safe digital signature algorithm to protect against advances in computing power and
cryptanalytic capabilities. Further, the trusted authority can add additional SVTs
in the future using fresh private keys and signatures to extend the lifetime of the SVTs if necessary.</t>
    </section>
    <section anchor="defs" numbered="true" removeInRFC="false" toc="include" pn="section-2">
      <name slugifiedName="name-definitions">Definitions</name>
      <t indent="0" pn="section-2-1">
    The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>", "<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>", "<bcp14>SHALL NOT</bcp14>", "<bcp14>SHOULD</bcp14>", "<bcp14>SHOULD NOT</bcp14>", "<bcp14>RECOMMENDED</bcp14>", "<bcp14>NOT RECOMMENDED</bcp14>",
    "<bcp14>MAY</bcp14>", and "<bcp14>OPTIONAL</bcp14>" in this document are to be interpreted as
    described in BCP 14 <xref target="RFC2119" format="default" sectionFormat="of" derivedContent="RFC2119"/> <xref target="RFC8174" format="default" sectionFormat="of" derivedContent="RFC8174"/> 
    when, and only when, they appear in all capitals, as shown here.
      </t>
      <t indent="0" pn="section-2-2">This document use the following terms:</t>
      <dl indent="3" newline="false" spacing="normal" pn="section-2-3">
        <dt pn="section-2-3.1">Signed Data:
        </dt>
        <dd pn="section-2-3.2">The data covered by a particular electronic signature. This is
	typically equivalent to the signed content of a document, and it
	represents the data that the signer intended to sign. In some cases,
	such as in some XML signatures, the Signed Data can be the collection
	of several data fragments each referenced by the signature. In the
	case of PDF, this is the data covered by the "ByteRange" parameter in
	the signature dictionary. In JSON Web Signature (JWS), this is the
	unencoded payload data (before base64url encoding).
	</dd>
        <dt pn="section-2-3.3">Signed Bytes:
        </dt>
        <dd pn="section-2-3.4">These are the actual bytes of data that were hashed and signed by
	the digital signature algorithm. In most cases, this is not the actual
	Signed Data but a collection of signature metadata that includes
	references (hash) of the Signed Data as well as information about
	algorithms and other data bound to a signature. In XML, this is the
	canonicalized SignedInfo element. In CMS and PDF signatures, this is
	the DER-encoded SignedAttributes structure. In JWS, this is the
	protected header and payload data formatted according to <xref target="RFC7515" format="default" sectionFormat="of" derivedContent="RFC7515"/>.
	</dd>
      </dl>
      <t indent="0" pn="section-2-4">When these terms are used as defined in this section, they appear with a
capitalized first letter.</t>
    </section>
    <section anchor="svt" numbered="true" removeInRFC="false" toc="include" pn="section-3">
      <name slugifiedName="name-signature-validation-token">Signature Validation Token</name>
      <section anchor="svt-function" numbered="true" removeInRFC="false" toc="include" pn="section-3.1">
        <name slugifiedName="name-signature-validation-token-">Signature Validation Token Function</name>
        <t indent="0" pn="section-3.1-1">The Signature Validation Token (SVT) is created by a trusted service to assert
evidence of successful electronic signature validation using a well-defined and
trustworthy signature validation process. The SVT binds the validation result to
the validated signature, the document signed by the signature, and the certificate of the signer.
This allows a relying party to verify the validity of a signed document
without having to revalidate the original signature or to reuse any of its associated
cryptographic algorithms for as long as the SVT itself can be validated.
The SVT achieves this by binding the following information to
a specific electronic signature:</t>
        <ul spacing="normal" bare="false" empty="false" indent="3" pn="section-3.1-2">
          <li pn="section-3.1-2.1">A unique identification of the electronic signature.</li>
          <li pn="section-3.1-2.2">The data and metadata signed by the electronic signature.</li>
          <li pn="section-3.1-2.3">The signer's certificate that was validated as part of electronic signature verification.</li>
          <li pn="section-3.1-2.4">The certification path that was used to validate the signer's certificate.</li>
          <li pn="section-3.1-2.5">An assertion providing evidence of signature verification, the time the verification was performed, the procedures used to verify the electronic signature, and the outcome of the verification.</li>
          <li pn="section-3.1-2.6">An assertion providing evidence of the time at which the signature is known to have existed, the procedures used to validate the time of existence, and the outcome of the validation.</li>
        </ul>
        <t indent="0" pn="section-3.1-3">The SVT aims to support long-term validation that can be further extended into the future by applying the following strategies:</t>
        <ul spacing="normal" bare="false" empty="false" indent="3" pn="section-3.1-4">
          <li pn="section-3.1-4.1">by using secure algorithms with long life expectancy when signing the SVT</li>
          <li pn="section-3.1-4.2">by reissuing the SVT before it becomes insecure or is considered expired</li>
          <li pn="section-3.1-4.3">optionally, by issuing multiple SVTs with different algorithms to provide redundancy in case one algorithm is broken</li>
        </ul>
      </section>
      <section anchor="svt-syntax" numbered="true" removeInRFC="false" toc="include" pn="section-3.2">
        <name slugifiedName="name-signature-validation-token-s">Signature Validation Token Syntax</name>
        <t indent="0" pn="section-3.2-1">The SVT is carried in a JSON Web Token (JWT) as defined in <xref target="RFC7519" format="default" sectionFormat="of" derivedContent="RFC7519"/>.</t>
        <section anchor="svt-syntax-dt" numbered="true" removeInRFC="false" toc="include" pn="section-3.2.1">
          <name slugifiedName="name-data-types">Data Types</name>
          <t indent="0" pn="section-3.2.1-1">The contents of claims in an SVT are specified using the following data types:</t>
          <dl indent="3" newline="false" spacing="normal" pn="section-3.2.1-2">
            <dt pn="section-3.2.1-2.1">String:
            </dt>
            <dd pn="section-3.2.1-2.2">JSON Data Type of string that contains an arbitrary
	    case-sensitive string value.
	    </dd>
            <dt pn="section-3.2.1-2.3">Base64Binary: 
            </dt>
            <dd pn="section-3.2.1-2.4">JSON Data Type of string that contains a Base64-encoded byte
	    array of binary data.
	    </dd>
            <dt pn="section-3.2.1-2.5">StringOrURI:
            </dt>
            <dd pn="section-3.2.1-2.6">JSON Data Type of string that contains an arbitrary string or
	    a URI as defined in <xref target="RFC7519" format="default" sectionFormat="of" derivedContent="RFC7519"/>. It is <bcp14>REQUIRED</bcp14> to contain the colon character (":") to be a URI.
	    </dd>
            <dt pn="section-3.2.1-2.7">URI:
            </dt>
            <dd pn="section-3.2.1-2.8">JSON Data Type of string that contains a URI as defined in
	    <xref target="RFC7519" format="default" sectionFormat="of" derivedContent="RFC7519"/>.
	    </dd>
            <dt pn="section-3.2.1-2.9">Integer:
</dt>
            <dd pn="section-3.2.1-2.10">JSON Data Type of number that contains a 32-bit signed integer value (from
-2<sup>31</sup> to 2<sup>31</sup>-1).
</dd>
            <dt pn="section-3.2.1-2.11">Long:
</dt>
            <dd pn="section-3.2.1-2.12">JSON Data Type of number that contains a 64-bit signed integer value (from      
-2<sup>63</sup> to 2<sup>63</sup>-1).
</dd>
            <dt pn="section-3.2.1-2.13">NumericDate:
</dt>
            <dd pn="section-3.2.1-2.14">JSON Data Type of number that contains data as defined in <xref target="RFC7519" format="default" sectionFormat="of" derivedContent="RFC7519"/>, which is the number of seconds from 1970-01-01T00:00:00Z UTC until the specified    
UTC date/time, ignoring leap seconds.
</dd>
            <dt pn="section-3.2.1-2.15">Boolean:
</dt>
            <dd pn="section-3.2.1-2.16"> JSON Data Type of boolean that contains the explicit value of true or
false.
</dd>
            <dt pn="section-3.2.1-2.17">Object&lt;Class&gt;:
</dt>
            <dd pn="section-3.2.1-2.18">A JSON object holding a claims object of a class defined in this
specification (see <xref target="svt-syntax-claim" format="default" sectionFormat="of" derivedContent="Section 3.2.2"/>).
</dd>
            <dt pn="section-3.2.1-2.19">Map&lt;Type&gt;: 
</dt>
            <dd pn="section-3.2.1-2.20">A JSON object with name-value pairs where the value is an object of the
specified Type in the notation. For example, Map&lt;String&gt; is a JSON
object with name-value pairs where all values are of type String.
</dd>
            <dt pn="section-3.2.1-2.21">Array:
</dt>
            <dd pn="section-3.2.1-2.22">A JSON array of a specific data type as defined in this section. An array
is expressed in this specification by square brackets. For example, [String]
indicates an array of String values, and [Object&lt;DocHash&gt;] indicates an
array of DocHash objects.
</dd>
            <dt pn="section-3.2.1-2.23">Null:
</dt>
            <dd pn="section-3.2.1-2.24">A JSON null that represents an absent value. A claim with a null value is
equivalent with an absent claim.
</dd>
          </dl>
        </section>
        <section anchor="svt-syntax-claim" numbered="true" removeInRFC="false" toc="include" pn="section-3.2.2">
          <name slugifiedName="name-signature-validation-token-j">Signature Validation Token JWT Claims</name>
          <t indent="0" pn="section-3.2.2-1">The SVT <bcp14>MUST</bcp14> contain only JWT claims in the following list:</t>
          <dl indent="3" newline="false" spacing="normal" pn="section-3.2.2-2">
            <dt pn="section-3.2.2-2.1">"jti":
            </dt>
            <dd pn="section-3.2.2-2.2"> A String data type that is a "JWT ID" registered claim according to
  <xref target="RFC7519" format="default" sectionFormat="of" derivedContent="RFC7519"/>. It is <bcp14>RECOMMENDED</bcp14> that the
  identifier holds a hexadecimal string representation of a 128-bit unsigned
  integer. An SVT <bcp14>MUST</bcp14> contain one "JWT ID" claim.
  </dd>
            <dt pn="section-3.2.2-2.3">"iss":
            </dt>
            <dd pn="section-3.2.2-2.4">A StringOrURI data type that is an "Issuer" registered claim according
  to <xref target="RFC7519" format="default" sectionFormat="of" derivedContent="RFC7519"/>, which is an arbitrary unique identifier of the
  SVT issuer. This value <bcp14>SHOULD</bcp14> have the value of a URI based
  on a domain owned by the issuer. An SVT <bcp14>MUST</bcp14> contain one
  "Issuer" claim.
  </dd>
            <dt pn="section-3.2.2-2.5">"iat":
            </dt>
            <dd pn="section-3.2.2-2.6">A NumericDate data type that is an "Issued At" registered claim
  according to <xref target="RFC7519" format="default" sectionFormat="of" derivedContent="RFC7519"/>, which expresses the time
  when this SVT was issued. An SVT <bcp14>MUST</bcp14> contain one "Issued At"
  claim.
  </dd>
            <dt pn="section-3.2.2-2.7">"aud":
            </dt>
            <dd pn="section-3.2.2-2.8">A [StringOrURI] data type or a StringOrURI data type that is an
  "Audience" registered claim according to <xref target="RFC7519" format="default" sectionFormat="of" derivedContent="RFC7519"/>. The
  audience claim is an array of one or more identifiers, identifying intended
  recipients of the SVT. Each identifier <bcp14>MAY</bcp14> identify a single
  entity, a group of entities, or a common policy adopted by a group of
  entities. If only one value is provided, it <bcp14>MAY</bcp14> be provided
  as a single StringOrURI data type value instead of as an array of
  values. Inclusion of the "Audience" claim in an SVT is
  <bcp14>OPTIONAL</bcp14>.
  </dd>
            <dt pn="section-3.2.2-2.9">"exp":
            </dt>
            <dd pn="section-3.2.2-2.10">A NumericDate data type that is an "Expiration Time" registered claim
  according to <xref target="RFC7519" format="default" sectionFormat="of" derivedContent="RFC7519"/>, which expresses the time
  when services and responsibilities related to this SVT are no longer
  provided by the SVT issuer. The precise meaning of the expiration time claim
  is defined by local policies. See implementation note below. Inclusion of
  the "Expiration Time" claim in an SVT is <bcp14>OPTIONAL</bcp14>.
  </dd>
            <dt pn="section-3.2.2-2.11">"sig_val_claims":
            </dt>
            <dd pn="section-3.2.2-2.12">An Object&lt;SigValidation&gt; data type that contains signature
  validation claims for this SVT extending the standard registered JWT claims
  above. An SVT <bcp14>MUST</bcp14> contain one sig_val_claims claim.
  </dd>
          </dl>
          <t indent="0" pn="section-3.2.2-3">Note: An SVT asserts that a particular validation process was undertaken at a stated
time. This fact never changes and never expires. However, some other aspects
of the SVT such as liability for false claims or service provision related to a specific
SVT may expire after a certain period of time, such as a service where an old SVT can be
upgraded to a new SVT signed with fresh keys and algorithms.</t>
        </section>
        <section anchor="sigvalidation-obj-class" numbered="true" removeInRFC="false" toc="include" pn="section-3.2.3">
          <name slugifiedName="name-sigvalidation-object-class">SigValidation Object Class</name>
          <t indent="0" pn="section-3.2.3-1">The sig_val_claims JWT claim uses the SigValidation object class. A SigValidation object
holds all custom claims, and a SigValidation object contains the following parameters:</t>
          <dl indent="3" newline="false" spacing="normal" pn="section-3.2.3-2">
            <dt pn="section-3.2.3-2.1">"ver":
            </dt>
            <dd pn="section-3.2.3-2.2">A String data type representing the version. This parameter
  <bcp14>MUST</bcp14> be present and the version in this specification
  indicated by the value "1.0".
  </dd>
            <dt pn="section-3.2.3-2.3">"profile":
            </dt>
            <dd pn="section-3.2.3-2.4">A StringOrURI data type representing the name of a profile that defines
  conventions followed for specific claims and any extension points used by
  the SVT issuer. This parameter <bcp14>MUST</bcp14> be present.
  </dd>
            <dt pn="section-3.2.3-2.5">"hash_algo":
            </dt>
            <dd pn="section-3.2.3-2.6">A URI data type that identifies the hash algorithm used to compute the
  hash values within the SVT. The URI identifier <bcp14>MUST</bcp14> be one
  defined in <xref target="RFC9231" format="default" sectionFormat="of" derivedContent="RFC9231"/> or in the IANA registry defined by this
  specification. This parameter <bcp14>MUST</bcp14> be present.
  </dd>
            <dt pn="section-3.2.3-2.7">"sig":
</dt>
            <dd pn="section-3.2.3-2.8">An [Object&lt;Signature&gt;] data type that gives information about
validated electronic signatures as an array of Signature objects. If the SVT
contains signature validation evidence for more than one signature, then each
signature is represented by a separate Signature object. At least one
Signature object <bcp14>MUST</bcp14> be present.
</dd>
            <dt pn="section-3.2.3-2.9">"ext":
</dt>
            <dd pn="section-3.2.3-2.10">A Map&lt;String&gt; data type that provides additional claims related to
the SVT. Extension claims are added at the discretion of the SVT issuer;
however, extension claims <bcp14>MUST</bcp14> follow any conventions defined
in a profile of this specification (see <xref target="profiles" format="default" sectionFormat="of" derivedContent="Section 4"/>). Inclusion
of this parameter is <bcp14>OPTIONAL</bcp14>.
</dd>
          </dl>
        </section>
        <section anchor="signature-obj-class" numbered="true" removeInRFC="false" toc="include" pn="section-3.2.4">
          <name slugifiedName="name-signature-claims-object-cla">Signature Claims Object Class</name>
          <t indent="0" pn="section-3.2.4-1">The sig parameter in the SigValidation object class uses the Signature object
class. The Signature object contains claims related to signature validation
evidence for one signature, and it contains the following parameters:</t>
          <dl indent="3" newline="false" spacing="normal" pn="section-3.2.4-2">
            <dt pn="section-3.2.4-2.1">"sig_ref": 
</dt>
            <dd pn="section-3.2.4-2.2">An Object&lt;SigReference&gt; data type that contains reference
information identifying the target signature. This parameter
<bcp14>MUST</bcp14> be present.
</dd>
            <dt pn="section-3.2.4-2.3">"sig_data_ref":
</dt>
            <dd pn="section-3.2.4-2.4">An [Object&lt;SignedDataReference&gt;] data type that contains an array of
references to Signed Data that was signed by the target electronic
signature. At least one SignedDataReference object <bcp14>MUST</bcp14> be
present.
</dd>
            <dt pn="section-3.2.4-2.5">"signer_cert_ref":
</dt>
            <dd pn="section-3.2.4-2.6">An Object&lt;CertReference&gt; data type that references the signer's
certificate and optionally references a supporting certification path that
was used to verify the target electronic signature. This parameter
<bcp14>MUST</bcp14> be present.
</dd>
            <dt pn="section-3.2.4-2.7">"sig_val":
</dt>
            <dd pn="section-3.2.4-2.8">An [Object&lt;PolicyValidation&gt;] data type that contains an array of
results of signature verification according to defined procedures. At least
one PolicyValidation object <bcp14>MUST</bcp14> be present.
</dd>
            <dt pn="section-3.2.4-2.9">"time_val":
</dt>
            <dd pn="section-3.2.4-2.10">An [Object&lt;TimeValidation&gt;] data type that contains an array of time
verification results showing that the target signature has existed at a specific
time in the past.  Inclusion of this parameter is <bcp14>OPTIONAL</bcp14>.
</dd>
            <dt pn="section-3.2.4-2.11">"ext":
</dt>
            <dd pn="section-3.2.4-2.12">A MAP&lt;String&gt; data type that provides additional claims related to
the target signature. Extension claims are added at the discretion of the SVT
issuer; however, extension claims <bcp14>MUST</bcp14> follow any conventions
defined in a profile of this specification (see <xref target="profiles" format="default" sectionFormat="of" derivedContent="Section 4"/>). Inclusion of this parameter is <bcp14>OPTIONAL</bcp14>.
</dd>
          </dl>
        </section>
        <section anchor="sigreference-obj-class" numbered="true" removeInRFC="false" toc="include" pn="section-3.2.5">
          <name slugifiedName="name-sigreference-claims-object-">SigReference Claims Object Class</name>
          <t indent="0" pn="section-3.2.5-1">The sig_ref parameter in the Signature object class uses the SigReference object
class. The SigReference object provides information used to match the Signature
claims object to a specific target electronic signature and to verify the integrity
of the target signature value and Signed Bytes, and it contains the following parameters:</t>
          <dl indent="3" newline="false" spacing="normal" pn="section-3.2.5-2">
            <dt pn="section-3.2.5-2.1">"id":
</dt>
            <dd pn="section-3.2.5-2.2">A String data type that contains an identifier assigned to the target
signature.  Inclusion of this parameter is <bcp14>OPTIONAL</bcp14>.
</dd>
            <dt pn="section-3.2.5-2.3">"sig_hash":
</dt>
            <dd pn="section-3.2.5-2.4">A Base64Binary data type that contains a hash value of the target
electronic signature value. This parameter <bcp14>MUST</bcp14> be present.
</dd>
            <dt pn="section-3.2.5-2.5">"sb_hash":
</dt>
            <dd pn="section-3.2.5-2.6">A Base64Binary data type that contains a hash value of the Signed Bytes of
the target electronic signature. This parameter <bcp14>MUST</bcp14> be
present.
</dd>
          </dl>
        </section>
        <section anchor="signeddatareference-obj-class" numbered="true" removeInRFC="false" toc="include" pn="section-3.2.6">
          <name slugifiedName="name-signeddatareference-claims-">SignedDataReference Claims Object Class</name>
          <t indent="0" pn="section-3.2.6-1">The sig_data_ref parameter in the Signature object class uses the SignedDataReference object
class. The SignedDataReference object provides information used to verify the target electronic
signature references to Signed Data as well as to verify the integrity of all data that
is signed by the target signature, and it contains the following parameters:</t>
          <dl indent="3" newline="false" spacing="normal" pn="section-3.2.6-2">
            <dt pn="section-3.2.6-2.1">"ref":
</dt>
            <dd pn="section-3.2.6-2.2">A String data type that contains a reference identifier for the data or
data fragment covered by the target electronic signature. This parameter
<bcp14>MUST</bcp14> be present.
</dd>
            <dt pn="section-3.2.6-2.3">"hash":
</dt>
            <dd pn="section-3.2.6-2.4">A Base64Binary data type that contains the hash value for the data covered
by the target electronic signature. This parameter <bcp14>MUST</bcp14> be
present.
</dd>
          </dl>
        </section>
        <section anchor="policyval-obj-class" numbered="true" removeInRFC="false" toc="include" pn="section-3.2.7">
          <name slugifiedName="name-policyvalidation-claims-obj">PolicyValidation Claims Object Class</name>
          <t indent="0" pn="section-3.2.7-1">The sig_val parameter in the Signature object class uses the PolicyValidation object
class. The PolicyValidation object provides information about the result of a validation
process according to a specific policy, and it contains the following parameters:</t>
          <dl indent="3" newline="false" spacing="normal" pn="section-3.2.7-2">
            <dt pn="section-3.2.7-2.1">"pol":
            </dt>
            <dd pn="section-3.2.7-2.2">A StringOrURI data type that contains the identifier of the policy
  governing the electronic signature verification process. This parameter
  <bcp14>MUST</bcp14> be present.
  </dd>
            <dt pn="section-3.2.7-2.3">"res":
            </dt>
            <dd pn="section-3.2.7-2.4">A String data type that contains the result of the electronic signature
  verification process. The value <bcp14>MUST</bcp14> be one of "PASSED",
  "FAILED", or "INDETERMINATE" as defined by <xref target="ETSI319102-1" format="default" sectionFormat="of" derivedContent="ETSI319102-1"/>. This parameter <bcp14>MUST</bcp14> be present.
  </dd>
            <dt pn="section-3.2.7-2.5">"msg":
            </dt>
            <dd pn="section-3.2.7-2.6">A String data type that contains a message describing the
  result. Inclusion of this parameter is <bcp14>OPTIONAL</bcp14>.
  </dd>
            <dt pn="section-3.2.7-2.7">"ext":
            </dt>
            <dd pn="section-3.2.7-2.8">A MAP&lt;String&gt; data type that provides additional claims related to
  the target signature. Extension claims are added at the discretion of the
  SVT issuer; however, extension claims <bcp14>MUST</bcp14> follow any
  conventions defined in a profile of this specification (see <xref target="profiles" format="default" sectionFormat="of" derivedContent="Section 4"/>). Inclusion of this parameter is
  <bcp14>OPTIONAL</bcp14>.
  </dd>
          </dl>
        </section>
        <section anchor="timever-obj-class" numbered="true" removeInRFC="false" toc="include" pn="section-3.2.8">
          <name slugifiedName="name-timevalidation-claims-objec">TimeValidation Claims Object Class</name>
          <t indent="0" pn="section-3.2.8-1">The time_val parameter in the Signature object class uses the TimeValidation object
class. The TimeValidation claims object provides information about the result of
validating evidence of time asserting that the target signature existed at a particular
time in the past. Evidence of time is typically a timestamp according to <xref target="RFC3161" format="default" sectionFormat="of" derivedContent="RFC3161"/>, but other types of evidence may be used such as a previously issued SVT for this signature. The TimeValidation claims object contains the following parameters:</t>
          <dl indent="3" newline="false" spacing="normal" pn="section-3.2.8-2">
            <dt pn="section-3.2.8-2.1">"time":
            </dt>
            <dd pn="section-3.2.8-2.2">A NumericDate data type that contains the verified time. This parameter
  <bcp14>MUST</bcp14> be present.
  </dd>
            <dt pn="section-3.2.8-2.3">"type":
            </dt>
            <dd pn="section-3.2.8-2.4">A StringOrURI data type that contains an identifier of the type of
  evidence of time. This parameter <bcp14>MUST</bcp14> be present.
  </dd>
            <dt pn="section-3.2.8-2.5">"iss":
            </dt>
            <dd pn="section-3.2.8-2.6">A StringOrURI data type that contains an identifier of the entity that
  issued the evidence of time. This parameter <bcp14>MUST</bcp14> be present.
  </dd>
            <dt pn="section-3.2.8-2.7">"id":
            </dt>
            <dd pn="section-3.2.8-2.8">A String data type that contains an unique identifier assigned to the
  evidence of time.  Inclusion of this parameter is <bcp14>OPTIONAL</bcp14>.
  </dd>
            <dt pn="section-3.2.8-2.9">"hash":
            </dt>
            <dd pn="section-3.2.8-2.10">A Base64Binary data type that contains the hash value of the validated
  evidence of time. Inclusion of this parameter is <bcp14>OPTIONAL</bcp14>.
  </dd>
            <dt pn="section-3.2.8-2.11">"val":
            </dt>
            <dd pn="section-3.2.8-2.12">An [Object&lt;PolicyValidation&gt;] data type that contains an array of
  results of the time evidence validation according to defined validation
  procedures. Inclusion of this parameter is <bcp14>OPTIONAL</bcp14>.
  </dd>
            <dt pn="section-3.2.8-2.13">"ext":
            </dt>
            <dd pn="section-3.2.8-2.14">A MAP&lt;String&gt; data type that provides additional claims related to
  the target signature. Extension claims are added at the discretion of the
  SVT issuer; however, extension claims <bcp14>MUST</bcp14> follow any
  conventions defined in a profile of this specification (see <xref target="profiles" format="default" sectionFormat="of" derivedContent="Section 4"/>). Inclusion of this parameter is
  <bcp14>OPTIONAL</bcp14>.
  </dd>
          </dl>
        </section>
        <section anchor="certref-obj-class" numbered="true" removeInRFC="false" toc="include" pn="section-3.2.9">
          <name slugifiedName="name-certreference-claims-object">CertReference Claims Object Class</name>
          <t indent="0" pn="section-3.2.9-1">The signer_cert_ref parameter in the Signature object class uses the CertReference object
class. The CertReference object references a single X.509 certificate or a X.509
certification path either by providing the certificate data or by providing hash
references for certificates that can be located in the target electronic signature, and
it contains the following parameters:</t>
          <dl indent="3" newline="false" spacing="normal" pn="section-3.2.9-2">
            <dt pn="section-3.2.9-2.1">"type":
            </dt>
            <dd pn="section-3.2.9-2.2">A StringOrURI data type that contains an identifier of the type of
  reference.  The type identifier <bcp14>MUST</bcp14> be one of the
  identifiers defined below, an identifier specified by the selected profile,
  or a URI identifier. This parameter <bcp14>MUST</bcp14> be present.
  </dd>
            <dt pn="section-3.2.9-2.3">"ref":
            </dt>
            <dd pn="section-3.2.9-2.4">A [String] data type that contains an array of string parameters
  according to conventions defined by the type identifier. At least one
  parameter <bcp14>MUST</bcp14> be present.
  </dd>
          </dl>
          <t indent="0" pn="section-3.2.9-3">The following type identifiers are defined:</t>
          <dl indent="3" newline="false" spacing="normal" pn="section-3.2.9-4">
            <dt pn="section-3.2.9-4.1">"chain":
            </dt>
            <dd pn="section-3.2.9-4.2">The ref contains an array of Base64-encoded X.509 certificates <xref target="RFC5280" format="default" sectionFormat="of" derivedContent="RFC5280"/>. The certificates <bcp14>MUST</bcp14> be provided in the
  order starting with the end entity certificate. Any following certificate
  must be able to validate the signature on the previous certificate in the
  array.
  </dd>
            <dt pn="section-3.2.9-4.3">"chain_hash":
            </dt>
            <dd pn="section-3.2.9-4.4">The ref contains an array of one or more Base64-encoded hash values
  where each hash value is a hash over a X.509 certificate <xref target="RFC5280" format="default" sectionFormat="of" derivedContent="RFC5280"/> used to validate the signature.  The certificates
  <bcp14>MUST</bcp14> be provided in the order starting with the end entity
  certificate.  Any following certificate must be able to validate the
  signature on the previous certificate in the array. This option <bcp14>MUST NOT</bcp14> be used unless all hashed certificates are present in the target
  electronic signature.
  </dd>
          </dl>
          <t indent="0" pn="section-3.2.9-5">Note: All certificates referenced using the identifiers above are X.509 certificates.
Profiles of this specification <bcp14>MAY</bcp14> define alternative types of public key containers;
however, a major function of these referenced certificates is not just to reference
the public key but also to provide the subject name of the signer. It is therefore
important for the full function of an SVT that the referenced public key container also
provides the means to identify the signer.</t>
        </section>
        <section anchor="svt-jose-header" numbered="true" removeInRFC="false" toc="include" pn="section-3.2.10">
          <name slugifiedName="name-svt-jose-header">SVT JOSE Header</name>
          <t indent="0" pn="section-3.2.10-1">The SVT JWT <bcp14>MUST</bcp14> contain the following JSON Object Signing and Encryption (JOSE) header parameters in accordance with
<xref target="RFC7519" sectionFormat="of" section="5" format="default" derivedLink="https://rfc-editor.org/rfc/rfc7519#section-5" derivedContent="RFC7519"/>:</t>
          <dl indent="3" newline="false" spacing="normal" pn="section-3.2.10-2">
            <dt pn="section-3.2.10-2.1">"typ":
</dt>
            <dd pn="section-3.2.10-2.2">This parameter <bcp14>MUST</bcp14> have the string value "JWT" (upper
case).
</dd>
            <dt pn="section-3.2.10-2.3">"alg":
</dt>
            <dd pn="section-3.2.10-2.4">This parameter identifies the algorithm used to sign the SVT JWT. The
algorithm identifier <bcp14>MUST</bcp14> be specified in <xref target="RFC7518" format="default" sectionFormat="of" derivedContent="RFC7518"/> or the IANA "JSON Web Signature and Encryption Algorithms"
registry <xref target="IANA-JOSE-REG" format="default" sectionFormat="of" derivedContent="IANA-JOSE-REG"/>. The specified signature hash
algorithm <bcp14>MUST</bcp14> be identical to the hash algorithm specified in
the hash_algo parameter of the SigValidation object within the sig_val_claims
claim.
</dd>
          </dl>
          <t indent="0" pn="section-3.2.10-3">The SVT header <bcp14>MUST</bcp14> contain a public key or a reference to a public key used to verify the signature on the SVT in accordance with <xref target="RFC7515" format="default" sectionFormat="of" derivedContent="RFC7515"/>. Each profile, as discussed in <xref target="profiles" format="default" sectionFormat="of" derivedContent="Section 4"/>, <bcp14>MUST</bcp14> define the requirements for how the key or key reference is included in the header.</t>
        </section>
      </section>
    </section>
    <section anchor="profiles" numbered="true" removeInRFC="false" toc="include" pn="section-4">
      <name slugifiedName="name-profiles">Profiles</name>
      <t indent="0" pn="section-4-1">Each signed document and signature type will have to define the precise content and
use of several claims in the SVT.</t>
      <t indent="0" pn="section-4-2">At a minimum, each profile <bcp14>MUST</bcp14> define:</t>
      <ul spacing="normal" bare="false" empty="false" indent="3" pn="section-4-3">
        <li pn="section-4-3.1">The identifier of the profile</li>
        <li pn="section-4-3.2">How to reference the Signed Data content of the signed document</li>
        <li pn="section-4-3.3">How to reference the target electronic signature and the Signed Bytes of the signature</li>
        <li pn="section-4-3.4">How to reference certificates supporting each electronic signature</li>
        <li pn="section-4-3.5">How to include public keys or references to public keys in the SVT</li>
        <li pn="section-4-3.6">Whether each electronic signature is supported by a single SVT, or one SVT may support multiple electronic signatures of the same document</li>
      </ul>
      <t indent="0" pn="section-4-4">A profile <bcp14>MAY</bcp14> also define:</t>
      <ul spacing="normal" bare="false" empty="false" indent="3" pn="section-4-5">
        <li pn="section-4-5.1">Explicit information on how to perform signature validation based on an SVT</li>
        <li pn="section-4-5.2">How to attach an SVT to an electronic signature or signed document</li>
      </ul>
      <section anchor="defined-profiles" numbered="true" removeInRFC="false" toc="include" pn="section-4.1">
        <name slugifiedName="name-defined-profiles">Defined Profiles</name>
        <t indent="0" pn="section-4.1-1">The following profiles are defined in appendixes of this document:</t>
        <dl indent="3" newline="false" spacing="normal" pn="section-4.1-2">
          <dt pn="section-4.1-2.1"> <xref target="appendix-xml-profile" format="default" sectionFormat="of" derivedContent="Appendix A"/>:
          </dt>
          <dd pn="section-4.1-2.2">XML Signature Profile
	  </dd>
          <dt pn="section-4.1-2.3"><xref target="appendix-pdf-profile" format="default" sectionFormat="of" derivedContent="Appendix B"/>:
          </dt>
          <dd pn="section-4.1-2.4">PDF Signature Profile
	  </dd>
          <dt pn="section-4.1-2.5"><xref target="appendix-jws-profile" format="default" sectionFormat="of" derivedContent="Appendix C"/>:
          </dt>
          <dd pn="section-4.1-2.6">JWS Profile
	  </dd>
        </dl>
        <t indent="0" pn="section-4.1-3">Other documents <bcp14>MAY</bcp14> define other profiles that <bcp14>MAY</bcp14> complement, amend, or supersede these profiles.</t>
      </section>
    </section>
    <section anchor="signature-verification-with-a-svt" numbered="true" removeInRFC="false" toc="include" pn="section-5">
      <name slugifiedName="name-signature-verification-with">Signature Verification with an SVT</name>
      <t indent="0" pn="section-5-1">Signature verification based on an SVT <bcp14>MUST</bcp14> follow these steps:</t>
      <ol spacing="normal" type="1" indent="adaptive" start="1" pn="section-5-2"><li pn="section-5-2.1" derivedCounter="1.">Locate all available SVTs available for the signed document that are relevant for the target electronic signature.</li>
        <li pn="section-5-2.2" derivedCounter="2.">Select the most recent SVT that can be successfully validated and meets the requirement of the relying party.</li>
        <li pn="section-5-2.3" derivedCounter="3.">Verify the integrity of the signature and the Signed Bytes of the target electronic signature using the sig_ref claim.</li>
        <li pn="section-5-2.4" derivedCounter="4.">Verify that the Signed Data reference in the original electronic signature matches the reference values in the sig_data_ref claim.</li>
        <li pn="section-5-2.5" derivedCounter="5.">Verify the integrity of referenced Signed Data using provided hash values in the sig_data_ref claim.</li>
        <li pn="section-5-2.6" derivedCounter="6.">Obtain the verified certificates supporting the asserted electronic signature verification through the signer_cert_ref claim.</li>
        <li pn="section-5-2.7" derivedCounter="7.">Verify that signature validation policy results satisfy the requirements of the relying party.</li>
        <li pn="section-5-2.8" derivedCounter="8.">Verify that verified time results satisfy the context for the use of the signed document.</li>
      </ol>
      <t indent="0" pn="section-5-3">After successfully performing these steps, signature validity is established as well as
the trusted signer certificate binding the identity of the signer to the electronic
signature.</t>
    </section>
    <section anchor="iana" numbered="true" removeInRFC="false" toc="include" pn="section-6">
      <name slugifiedName="name-iana-considerations">IANA Considerations</name>
      <section anchor="claim-names-reg" numbered="true" removeInRFC="false" toc="include" pn="section-6.1">
        <name slugifiedName="name-claim-names-registration">Claim Names Registration</name>
        <t indent="0" pn="section-6.1-1">IANA has registered the "sig_val_claims" claim name in the "JSON Web Token Claims" registry established by <xref target="RFC7519" sectionFormat="of" section="10.1" format="default" derivedLink="https://rfc-editor.org/rfc/rfc7519#section-10.1" derivedContent="RFC7519"/>.</t>
        <section anchor="clname-reg-contents" numbered="true" removeInRFC="false" toc="include" pn="section-6.1.1">
          <name slugifiedName="name-registry-contents">Registry Contents</name>
          <dl indent="3" newline="false" spacing="normal" pn="section-6.1.1-1">
            <dt pn="section-6.1.1-1.1">Claim Name:
            </dt>
            <dd pn="section-6.1.1-1.2">sig_val_claims
            </dd>
            <dt pn="section-6.1.1-1.3">Claim Description:
            </dt>
            <dd pn="section-6.1.1-1.4">Signature Validation Token
            </dd>
            <dt pn="section-6.1.1-1.5">Change Controller:
            </dt>
            <dd pn="section-6.1.1-1.6">IESG
            </dd>
            <dt pn="section-6.1.1-1.7">Specification Document(s):
            </dt>
            <dd pn="section-6.1.1-1.8">
              <xref target="sigvalidation-obj-class" format="default" sectionFormat="of" derivedContent="Section 3.2.3"/> of RFC 9321
            </dd>
          </dl>
        </section>
      </section>
      <section anchor="iana-header-params" numbered="true" removeInRFC="false" toc="include" pn="section-6.2">
        <name slugifiedName="name-header-parameter-names-regi">Header Parameter Names Registration</name>
        <t indent="0" pn="section-6.2-1">IANA has registered the "svt" Header Parameter in the "JSON Web Signature and Encryption Header Parameters" registry established by <xref target="RFC7515" format="default" sectionFormat="of" derivedContent="RFC7515"/>.</t>
        <section anchor="iana-header-params-reg" numbered="true" removeInRFC="false" toc="include" pn="section-6.2.1">
          <name slugifiedName="name-registry-contents-2">Registry Contents</name>
          <dl indent="3" newline="false" spacing="normal" pn="section-6.2.1-1">
            <dt pn="section-6.2.1-1.1">Header Parameter Name:
</dt>
            <dd pn="section-6.2.1-1.2">svt
</dd>
            <dt pn="section-6.2.1-1.3">Header Parameter Description:
</dt>
            <dd pn="section-6.2.1-1.4"> Signature Validation Token
</dd>
            <dt pn="section-6.2.1-1.5">Header Parameter Usage Location(s):
</dt>
            <dd pn="section-6.2.1-1.6">JWS
</dd>
            <dt pn="section-6.2.1-1.7">Change Controller:
</dt>
            <dd pn="section-6.2.1-1.8">IESG
</dd>
            <dt pn="section-6.2.1-1.9">Specification Document(s):
</dt>
            <dd pn="section-6.2.1-1.10">
              <xref target="svt-header" format="default" sectionFormat="of" derivedContent="Appendix C.1.1"/> of RFC 9321
</dd>
          </dl>
        </section>
      </section>
    </section>
    <section anchor="seccons" numbered="true" removeInRFC="false" toc="include" pn="section-7">
      <name slugifiedName="name-security-considerations">Security Considerations</name>
      <section anchor="seccon-lvl-of-reliance" numbered="true" removeInRFC="false" toc="include" pn="section-7.1">
        <name slugifiedName="name-level-of-reliance">Level of Reliance</name>
        <t indent="0" pn="section-7.1-1">An SVT allows a signature verifier to still validate the original signature using
the original signature data and to use the information in the SVT selectively to
confirm the validity and integrity of the original data, such as confirming the integrity of Signed Data or the validity of the signer's certificate, etc.</t>
        <t indent="0" pn="section-7.1-2">Another way to use an SVT is to completely rely on the validation conclusion provided
by the SVT and to omit revalidation of the original signature value and original
certificate status checking data.</t>
        <t indent="0" pn="section-7.1-3">This choice is a decision made by the verifier according to its own policy and risk assessment.</t>
        <t indent="0" pn="section-7.1-4">However, even when relying on the SVT validation conclusion of an SVT, it is vital to still verify that
the present SVT is correctly associated with the document and signature that is being validated by
validating the hashed reference data in the SVT of the signature, signing certificate chain,
Signed Data, and the Signed Bytes.</t>
      </section>
      <section anchor="seccon-aging-algos" numbered="true" removeInRFC="false" toc="include" pn="section-7.2">
        <name slugifiedName="name-aging-algorithms">Aging Algorithms</name>
        <t indent="0" pn="section-7.2-1">Even if the SVT provides protection against algorithms becoming weakened or broken over time, this protection is only valid for as long as the algorithms used to sign the SVT are still considered secure. It is advisable to reissue SVTs in cases where an algorithm protecting the SVT is getting close to its end of life.</t>
        <t indent="0" pn="section-7.2-2">One way to increase the resistance of algorithms becoming insecure, is to issue multiple SVTs for the same signature with different algorithms and key lengths where one algorithm could still be secure even if the corresponding algorithm used in the alternative SVT is broken.</t>
      </section>
    </section>
  </middle>
  <back>
    <references pn="section-8">
      <name slugifiedName="name-references">References</name>
      <references pn="section-8.1">
        <name slugifiedName="name-normative-references">Normative References</name>
        <reference anchor="CADES" quoteTitle="true" derivedAnchor="CADES">
          <front>
            <title>Electronic Signatures and Infrastructures (ESI); CAdES digital signatures; Part 1: Building blocks and CAdES baseline signatures</title>
            <author>
              <organization showOnFrontPage="true">ETSI</organization>
            </author>
            <date year="2016" month="April"/>
          </front>
          <seriesInfo name="ETSI EN" value="319 122-1"/>
          <refcontent>v1.1.1</refcontent>
        </reference>
        <reference anchor="ETSI319102-1" quoteTitle="true" derivedAnchor="ETSI319102-1">
          <front>
            <title>Electronic Signatures and Infrastructures (ESI); Procedures for Creation and Validation of AdES Digital Signatures; Part 1: Creation and Validation</title>
            <author>
              <organization showOnFrontPage="true">ETSI</organization>
            </author>
            <date year="2016" month="May"/>
          </front>
          <seriesInfo name="ETSI EN" value="319 102-1"/>
          <refcontent>v1.1.1</refcontent>
        </reference>
        <reference anchor="IANA-JOSE-REG" target="https://www.iana.org/assignments/jose/" quoteTitle="true" derivedAnchor="IANA-JOSE-REG">
          <front>
            <title>JSON Object Signing and Encryption (JOSE)</title>
            <author>
              <organization showOnFrontPage="true">IANA</organization>
            </author>
          </front>
        </reference>
        <reference anchor="ISOPDF2" quoteTitle="true" derivedAnchor="ISOPDF2">
          <front>
            <title>Document management -- Portable document format -- Part 2: PDF 2.0</title>
            <author>
              <organization showOnFrontPage="true">ISO</organization>
            </author>
            <date year="2020" month="December"/>
          </front>
          <seriesInfo name="ISO" value="32000-2:2020"/>
        </reference>
        <reference anchor="PADES" quoteTitle="true" derivedAnchor="PADES">
          <front>
            <title>Electronic Signatures and Infrastructures (ESI); PAdES digital signatures; Part 1: Building blocks and PAdES baseline signatures</title>
            <author>
              <organization showOnFrontPage="true">ETSI</organization>
            </author>
            <date year="2016" month="April"/>
          </front>
          <seriesInfo name="ETSI EN" value="319 142-1"/>
          <refcontent>v1.1.1</refcontent>
        </reference>
        <reference anchor="RFC2119" target="https://www.rfc-editor.org/info/rfc2119" quoteTitle="true" derivedAnchor="RFC2119">
          <front>
            <title>Key words for use in RFCs to Indicate Requirement Levels</title>
            <author fullname="S. Bradner" initials="S." surname="Bradner"/>
            <date month="March" year="1997"/>
            <abstract>
              <t indent="0">In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized.  This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t>
            </abstract>
          </front>
          <seriesInfo name="BCP" value="14"/>
          <seriesInfo name="RFC" value="2119"/>
          <seriesInfo name="DOI" value="10.17487/RFC2119"/>
        </reference>
        <reference anchor="RFC3125" target="https://www.rfc-editor.org/info/rfc3125" quoteTitle="true" derivedAnchor="RFC3125">
          <front>
            <title>Electronic Signature Policies</title>
            <author fullname="J. Ross" initials="J." surname="Ross"/>
            <author fullname="D. Pinkas" initials="D." surname="Pinkas"/>
            <author fullname="N. Pope" initials="N." surname="Pope"/>
            <date month="September" year="2001"/>
            <abstract>
              <t indent="0">This document defines signature policies for electronic signatures.  A signature policy is a set of rules for the creation and validation of an electronic signature, under which the validity of signature can be determined.  A given legal/contractual context may recognize a particular signature policy as meeting its requirements.  This memo defines an Experimental Protocol for the Internet community.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="3125"/>
          <seriesInfo name="DOI" value="10.17487/RFC3125"/>
        </reference>
        <reference anchor="RFC3161" target="https://www.rfc-editor.org/info/rfc3161" quoteTitle="true" derivedAnchor="RFC3161">
          <front>
            <title>Internet X.509 Public Key Infrastructure Time-Stamp Protocol (TSP)</title>
            <author fullname="C. Adams" initials="C." surname="Adams"/>
            <author fullname="P. Cain" initials="P." surname="Cain"/>
            <author fullname="D. Pinkas" initials="D." surname="Pinkas"/>
            <author fullname="R. Zuccherato" initials="R." surname="Zuccherato"/>
            <date month="August" year="2001"/>
            <abstract>
              <t indent="0">This document describes the format of a request sent to a Time Stamping Authority (TSA) and of the response that is returned.  It also establishes several security-relevant requirements for TSA operation, with regards to processing requests to generate responses. [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="3161"/>
          <seriesInfo name="DOI" value="10.17487/RFC3161"/>
        </reference>
        <reference anchor="RFC3647" target="https://www.rfc-editor.org/info/rfc3647" quoteTitle="true" derivedAnchor="RFC3647">
          <front>
            <title>Internet X.509 Public Key Infrastructure Certificate Policy and Certification Practices Framework</title>
            <author fullname="S. Chokhani" initials="S." surname="Chokhani"/>
            <author fullname="W. Ford" initials="W." surname="Ford"/>
            <author fullname="R. Sabett" initials="R." surname="Sabett"/>
            <author fullname="C. Merrill" initials="C." surname="Merrill"/>
            <author fullname="S. Wu" initials="S." surname="Wu"/>
            <date month="November" year="2003"/>
            <abstract>
              <t indent="0">This document presents a framework to assist the writers of certificate policies or certification practice statements for participants within public key infrastructures, such as certification authorities, policy authorities, and communities of interest that wish to rely on certificates.  In particular, the framework provides a comprehensive list of topics that potentially (at the writer's discretion) need to be covered in a certificate policy or a certification practice statement.  This document supersedes RFC 2527.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="3647"/>
          <seriesInfo name="DOI" value="10.17487/RFC3647"/>
        </reference>
        <reference anchor="RFC5035" target="https://www.rfc-editor.org/info/rfc5035" quoteTitle="true" derivedAnchor="RFC5035">
          <front>
            <title>Enhanced Security Services (ESS) Update: Adding CertID Algorithm Agility</title>
            <author fullname="J. Schaad" initials="J." surname="Schaad"/>
            <date month="August" year="2007"/>
            <abstract>
              <t indent="0">In the original Enhanced Security Services for S/MIME document (RFC 2634), a structure for cryptographically linking the certificate to be used in validation with the signature was introduced; this structure was hardwired to use SHA-1.  This document allows for the structure to have algorithm agility and defines a new attribute for this purpose. [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="5035"/>
          <seriesInfo name="DOI" value="10.17487/RFC5035"/>
        </reference>
        <reference anchor="RFC5280" target="https://www.rfc-editor.org/info/rfc5280" quoteTitle="true" derivedAnchor="RFC5280">
          <front>
            <title>Internet X.509 Public Key Infrastructure Certificate and Certificate Revocation List (CRL) Profile</title>
            <author fullname="D. Cooper" initials="D." surname="Cooper"/>
            <author fullname="S. Santesson" initials="S." surname="Santesson"/>
            <author fullname="S. Farrell" initials="S." surname="Farrell"/>
            <author fullname="S. Boeyen" initials="S." surname="Boeyen"/>
            <author fullname="R. Housley" initials="R." surname="Housley"/>
            <author fullname="W. Polk" initials="W." surname="Polk"/>
            <date month="May" year="2008"/>
            <abstract>
              <t indent="0">This memo profiles the X.509 v3 certificate and X.509 v2 certificate revocation list (CRL) for use in the Internet.  An overview of this approach and model is provided as an introduction.  The X.509 v3 certificate format is described in detail, with additional information regarding the format and semantics of Internet name forms.  Standard certificate extensions are described and two Internet-specific extensions are defined.  A set of required certificate extensions is specified.  The X.509 v2 CRL format is described in detail along with standard and Internet-specific extensions.  An algorithm for X.509 certification path validation is described.  An ASN.1 module and examples are provided in the appendices. [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="5280"/>
          <seriesInfo name="DOI" value="10.17487/RFC5280"/>
        </reference>
        <reference anchor="RFC5652" target="https://www.rfc-editor.org/info/rfc5652" quoteTitle="true" derivedAnchor="RFC5652">
          <front>
            <title>Cryptographic Message Syntax (CMS)</title>
            <author fullname="R. Housley" initials="R." surname="Housley"/>
            <date month="September" year="2009"/>
            <abstract>
              <t indent="0">This document describes the Cryptographic Message Syntax (CMS).  This syntax is used to digitally sign, digest, authenticate, or encrypt arbitrary message content. [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="STD" value="70"/>
          <seriesInfo name="RFC" value="5652"/>
          <seriesInfo name="DOI" value="10.17487/RFC5652"/>
        </reference>
        <reference anchor="RFC7515" target="https://www.rfc-editor.org/info/rfc7515" quoteTitle="true" derivedAnchor="RFC7515">
          <front>
            <title>JSON Web Signature (JWS)</title>
            <author fullname="M. Jones" initials="M." surname="Jones"/>
            <author fullname="J. Bradley" initials="J." surname="Bradley"/>
            <author fullname="N. Sakimura" initials="N." surname="Sakimura"/>
            <date month="May" year="2015"/>
            <abstract>
              <t indent="0">JSON Web Signature (JWS) represents content secured with digital signatures or Message Authentication Codes (MACs) using JSON-based data structures.  Cryptographic algorithms and identifiers for use with this specification are described in the separate JSON Web Algorithms (JWA) specification and an IANA registry defined by that specification.  Related encryption capabilities are described in the separate JSON Web Encryption (JWE) specification.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="7515"/>
          <seriesInfo name="DOI" value="10.17487/RFC7515"/>
        </reference>
        <reference anchor="RFC7518" target="https://www.rfc-editor.org/info/rfc7518" quoteTitle="true" derivedAnchor="RFC7518">
          <front>
            <title>JSON Web Algorithms (JWA)</title>
            <author fullname="M. Jones" initials="M." surname="Jones"/>
            <date month="May" year="2015"/>
            <abstract>
              <t indent="0">This specification registers cryptographic algorithms and identifiers to be used with the JSON Web Signature (JWS), JSON Web Encryption (JWE), and JSON Web Key (JWK) specifications.  It defines several IANA registries for these identifiers.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="7518"/>
          <seriesInfo name="DOI" value="10.17487/RFC7518"/>
        </reference>
        <reference anchor="RFC7519" target="https://www.rfc-editor.org/info/rfc7519" quoteTitle="true" derivedAnchor="RFC7519">
          <front>
            <title>JSON Web Token (JWT)</title>
            <author fullname="M. Jones" initials="M." surname="Jones"/>
            <author fullname="J. Bradley" initials="J." surname="Bradley"/>
            <author fullname="N. Sakimura" initials="N." surname="Sakimura"/>
            <date month="May" year="2015"/>
            <abstract>
              <t indent="0">JSON Web Token (JWT) is a compact, URL-safe means of representing claims to be transferred between two parties.  The claims in a JWT are encoded as a JSON object that is used as the payload of a JSON Web Signature (JWS) structure or as the plaintext of a JSON Web Encryption (JWE) structure, enabling the claims to be digitally signed or integrity protected with a Message Authentication Code (MAC) and/or encrypted.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="7519"/>
          <seriesInfo name="DOI" value="10.17487/RFC7519"/>
        </reference>
        <reference anchor="RFC8174" target="https://www.rfc-editor.org/info/rfc8174" quoteTitle="true" derivedAnchor="RFC8174">
          <front>
            <title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
            <author fullname="B. Leiba" initials="B." surname="Leiba"/>
            <date month="May" year="2017"/>
            <abstract>
              <t indent="0">RFC 2119 specifies common key words that may be used in protocol specifications.  This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the defined special meanings.</t>
            </abstract>
          </front>
          <seriesInfo name="BCP" value="14"/>
          <seriesInfo name="RFC" value="8174"/>
          <seriesInfo name="DOI" value="10.17487/RFC8174"/>
        </reference>
        <reference anchor="RFC9231" target="https://www.rfc-editor.org/info/rfc9231" quoteTitle="true" derivedAnchor="RFC9231">
          <front>
            <title>Additional XML Security Uniform Resource Identifiers (URIs)</title>
            <author fullname="D. Eastlake 3rd" initials="D." surname="Eastlake 3rd"/>
            <date month="July" year="2022"/>
            <abstract>
              <t indent="0">This document updates and corrects the IANA "XML Security URIs" registry that lists URIs intended for use with XML digital signatures, encryption, canonicalization, and key management.  These URIs identify algorithms and types of information.  This document also obsoletes and corrects three errata against RFC 6931.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="9231"/>
          <seriesInfo name="DOI" value="10.17487/RFC9231"/>
        </reference>
        <reference anchor="XADES" quoteTitle="true" derivedAnchor="XADES">
          <front>
            <title>Electronic Signatures and Infrastructures (ESI); XAdES digital signatures; Part 1: Building blocks and XAdES baseline signatures</title>
            <author>
              <organization showOnFrontPage="true">ETSI</organization>
            </author>
            <date year="2016" month="April"/>
          </front>
          <seriesInfo name="ETSI EN" value="319 132-1"/>
          <refcontent>v1.1.1</refcontent>
        </reference>
        <reference anchor="XMLDSIG11" quoteTitle="true" derivedAnchor="XMLDSIG11">
          <front>
            <title>XML Signature Syntax and Processing Version 1.1</title>
            <author initials="D." surname="Eastlake 3rd" fullname="Donald Eastlake 3rd">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="J." surname="Reagle" fullname="Joseph Reagle">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="D." surname="Solo" fullname="David Solo">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="F." surname="Hirsch" fullname="Frederick Hirsch">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="M." surname="Nystrom" fullname="Magnus Nystrom">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="T." surname="Roessler" fullname="Thomas Roessler">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="K." surname="Yiu" fullname="Kelvin Yiu">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2013" month="April"/>
          </front>
          <seriesInfo name="W3C" value="Proposed Recommendation"/>
          <annotation>Latest version available at <eref target="https://www.w3.org/TR/xmldsig-core1/"/>.</annotation>
        </reference>
      </references>
      <references pn="section-8.2">
        <name slugifiedName="name-informative-references">Informative References</name>
        <reference anchor="RFC8610" target="https://www.rfc-editor.org/info/rfc8610" quoteTitle="true" derivedAnchor="RFC8610">
          <front>
            <title>Concise Data Definition Language (CDDL): A Notational Convention to Express Concise Binary Object Representation (CBOR) and JSON Data Structures</title>
            <author fullname="H. Birkholz" initials="H." surname="Birkholz"/>
            <author fullname="C. Vigano" initials="C." surname="Vigano"/>
            <author fullname="C. Bormann" initials="C." surname="Bormann"/>
            <date month="June" year="2019"/>
            <abstract>
              <t indent="0">This document proposes a notational convention to express Concise Binary Object Representation (CBOR) data structures (RFC 7049).  Its main goal is to provide an easy and unambiguous way to express structures for protocol messages and data formats that use CBOR or JSON.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8610"/>
          <seriesInfo name="DOI" value="10.17487/RFC8610"/>
        </reference>
      </references>
    </references>
    <section anchor="appendix-xml-profile" numbered="true" removeInRFC="false" toc="include" pn="section-appendix.a">
      <name slugifiedName="name-xml-signature-profile">XML Signature Profile</name>
      <t indent="0" pn="section-appendix.a-1">This appendix defines a profile for implementing SVTs with a signed XML document and defines the following aspects of SVT usage:</t>
      <ul spacing="normal" bare="false" empty="false" indent="3" pn="section-appendix.a-2">
        <li pn="section-appendix.a-2.1">How to include reference data related to XML signatures and XML documents in an SVT</li>
        <li pn="section-appendix.a-2.2">How to add an SVT token to an XML signature</li>
      </ul>
      <t indent="0" pn="section-appendix.a-3">XML documents can have any number of signature elements, signing an arbitrary number of fragments of XML documents. The actual signature element may be included in the signed XML document (enveloped), include the Signed Data (enveloping), or may be separate from the signed content (detached).</t>
      <t indent="0" pn="section-appendix.a-4">To provide a generic solution for any type of XML signature, an SVT is added to each XML signature element within the XML signature &lt;ds:Object&gt; element.</t>
      <section anchor="notation" numbered="true" removeInRFC="false" toc="include" pn="section-appendix.a.1">
        <name slugifiedName="name-notation">Notation</name>
        <section anchor="ref-to-xml-elements" numbered="true" removeInRFC="false" toc="include" pn="section-appendix.a.1.1">
          <name slugifiedName="name-references-to-xml-elements-">References to XML Elements from XML Schemas</name>
          <t indent="0" pn="section-appendix.a.1.1-1">When referring to elements from the W3C XML Signature namespace
(<eref target="https://www.w3.org/2000/09/xmldsig#" brackets="none"/>), the following syntax is used:</t>
          <ul spacing="normal" bare="false" empty="false" indent="3" pn="section-appendix.a.1.1-2">
            <li pn="section-appendix.a.1.1-2.1">&lt;ds:Signature&gt;</li>
          </ul>
          <t indent="0" pn="section-appendix.a.1.1-3">When referring to elements from the ETSI XAdES XML Signature namespace
(<eref target="https://uri.etsi.org/01903/v1.3.2#" brackets="none"/>), the following syntax is used:</t>
          <ul spacing="normal" bare="false" empty="false" indent="3" pn="section-appendix.a.1.1-4">
            <li pn="section-appendix.a.1.1-4.1">&lt;xades:CertDigest&gt;</li>
          </ul>
          <t indent="0" pn="section-appendix.a.1.1-5">When referring to elements defined in this specification
	  (<eref target="http://id.swedenconnect.se/svt/1.0/sig-prop/ns" brackets="none"/>), the following syntax is used:</t>
          <ul spacing="normal" bare="false" empty="false" indent="3" pn="section-appendix.a.1.1-6">
            <li pn="section-appendix.a.1.1-6.1">&lt;svt:Element&gt;</li>
          </ul>
        </section>
      </section>
      <section anchor="svt-in-xml" numbered="true" removeInRFC="false" toc="include" pn="section-appendix.a.2">
        <name slugifiedName="name-svt-in-xml-documents">SVT in XML Documents</name>
        <t indent="0" pn="section-appendix.a.2-1">When SVTs are provided for XML signatures, then one SVT <bcp14>MUST</bcp14> be provided for each XML signature.</t>
        <t indent="0" pn="section-appendix.a.2-2">An SVT embedded within the XML signature element <bcp14>MUST</bcp14> be placed in a  &lt;svt:SignatureValidationToken&gt; element as defined in <xref target="signaturevalidationtoken-signature-property" format="default" sectionFormat="of" derivedContent="Appendix A.2.1"/>.</t>
        <section anchor="signaturevalidationtoken-signature-property" numbered="true" removeInRFC="false" toc="include" pn="section-appendix.a.2.1">
          <name slugifiedName="name-signaturevalidationtoken-si">SignatureValidationToken Signature Property</name>
          <t indent="0" pn="section-appendix.a.2.1-1">The &lt;svt:SignatureValidationToken&gt; element <bcp14>MUST</bcp14> be placed in a &lt;ds:SignatureProperty&gt; element in accordance with <xref target="XMLDSIG11" format="default" sectionFormat="of" derivedContent="XMLDSIG11"/>. The &lt;ds:SignatureProperty&gt; element <bcp14>MUST</bcp14> be placed inside a &lt;ds:SignatureProperties&gt; element inside a &lt;ds:Object&gt; element inside a &lt;ds:Signature&gt; element.</t>
          <t indent="0" pn="section-appendix.a.2.1-2">Note: <xref target="XMLDSIG11" format="default" sectionFormat="of" derivedContent="XMLDSIG11"/> requires the Target attribute to be present in &lt;ds:SignatureProperty&gt;, referencing the signature targeted by this signature property. If an SVT is added to a signature that does not have an Id attribute, implementations <bcp14>SHOULD</bcp14> add an Id attribute to the &lt;ds:Signature&gt; element and reference that Id in the Target attribute. This Id attribute and Target attribute value matching is required by the <xref target="XMLDSIG11" format="default" sectionFormat="of" derivedContent="XMLDSIG11"/> standard, but it is redundant in the context of SVT validation as the SVT already contains information that uniquely identifies the target signature. Validation applications <bcp14>SHOULD NOT</bcp14> reject an SVT token because of Id and Target attribute mismatch and <bcp14>MUST</bcp14> rely on matching against a signature using signed information in the SVT itself.</t>
          <t indent="0" pn="section-appendix.a.2.1-3">The &lt;svt:SignatureValidationToken&gt; element is defined by the following XML Schema:</t>
          <sourcecode type="xml" markers="false" pn="section-appendix.a.2.1-4">
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
    elementFormDefault="qualified"
    targetNamespace="http://id.swedenconnect.se/svt/1.0/sig-prop/ns"
    xmlns:svt="http://id.swedenconnect.se/svt/1.0/sig-prop/ns"&gt;

  &lt;xs:element name="SignatureValidationToken"
      type="svt:SignatureValidationTokenType" /&gt;

  &lt;xs:complexType name="SignatureValidationTokenType"&gt;
    &lt;xs:simpleContent&gt;
      &lt;xs:extension base="xs:string"&gt;
      &lt;/xs:extension&gt;
    &lt;/xs:simpleContent&gt;
  &lt;/xs:complexType&gt;

&lt;/xs:schema&gt;
</sourcecode>
          <t indent="0" pn="section-appendix.a.2.1-5">The SVT token <bcp14>MUST</bcp14> be included as a string representation of the SVT JWT. Note that this is the string representation of the JWT without further encoding. The SVT <bcp14>MUST NOT</bcp14> be represented by the Base64-encoded bytes of the JWT string.</t>
          <t indent="0" pn="section-appendix.a.2.1-6">Example:</t>
          <sourcecode type="xml" markers="false" pn="section-appendix.a.2.1-7">
&lt;ds:Signature Id="MySignatureId"&gt;
  ...
  &lt;ds:Object&gt;
    &lt;ds:SignatureProperties&gt;
      &lt;ds:SignatureProperty Target="#MySignatureId"&gt;
        &lt;svt:SignatureValidationToken&gt;
              eyJ0eXAiOiJKV1QiLCJhb...2aNZ
        &lt;/svt:SignatureValidationToken&gt;
      &lt;/ds:SignatureProperty&gt;
    &lt;/ds:SignatureProperties&gt;
  &lt;/ds:Object&gt;
&lt;/ds:Signature&gt;
</sourcecode>
        </section>
        <section anchor="xml-multiple-svt-tokens" numbered="true" removeInRFC="false" toc="include" pn="section-appendix.a.2.2">
          <name slugifiedName="name-multiple-svts-in-an-xml-sig">Multiple SVTs in an XML Signature</name>
          <t indent="0" pn="section-appendix.a.2.2-1">If a new SVT is stored in a signature that already contains a previously issued SVT, implementations can choose either to replace the existing SVT or to store the new SVT in addition to the existing SVT.</t>
          <t indent="0" pn="section-appendix.a.2.2-2">If the new SVT is stored in addition to the old SVT, it <bcp14>SHOULD</bcp14> be stored in a new &lt;ds:SignatureProperty&gt; element inside the existing &lt;ds:SignatureProperties&gt; element where the old SVT is located.</t>
          <t indent="0" pn="section-appendix.a.2.2-3">For interoperability robustness, signature validation applications <bcp14>MUST</bcp14> be able to handle signatures where the new SVT is located in a new &lt;ds:Object&gt; element.</t>
        </section>
      </section>
      <section anchor="xml-svt-claims" numbered="true" removeInRFC="false" toc="include" pn="section-appendix.a.3">
        <name slugifiedName="name-xml-signature-svt-claims">XML Signature SVT Claims</name>
        <section anchor="xml-profile-identifier" numbered="true" removeInRFC="false" toc="include" pn="section-appendix.a.3.1">
          <name slugifiedName="name-xml-profile-identifier">XML Profile Identifier</name>
          <t indent="0" pn="section-appendix.a.3.1-1">When this profile is used, the SigValidation object <bcp14>MUST</bcp14> contain a "profile" claim with the value "XML".</t>
        </section>
        <section anchor="xml-signature-reference-data" numbered="true" removeInRFC="false" toc="include" pn="section-appendix.a.3.2">
          <name slugifiedName="name-xml-signature-reference-dat">XML Signature Reference Data</name>
          <t indent="0" pn="section-appendix.a.3.2-1">The SVT Signature object <bcp14>MUST</bcp14> contain a "sig_ref" claim (SigReference object) with the following elements:</t>
          <dl indent="3" newline="false" spacing="normal" pn="section-appendix.a.3.2-2">
            <dt pn="section-appendix.a.3.2-2.1">"id":
            </dt>
            <dd pn="section-appendix.a.3.2-2.2">The Id-attribute of the XML signature, if present.
	    </dd>
            <dt pn="section-appendix.a.3.2-2.3">"sig_hash":
            </dt>
            <dd pn="section-appendix.a.3.2-2.4">The hash over the signature value bytes.
	    </dd>
            <dt pn="section-appendix.a.3.2-2.5">"sb_hash":
            </dt>
            <dd pn="section-appendix.a.3.2-2.6">The hash over the canonicalized &lt;ds:SignedInfo&gt; element
	    (the bytes the XML signature algorithm has signed to generate the
	    signature value).
	    </dd>
          </dl>
        </section>
        <section anchor="xml-signed-data-reference" numbered="true" removeInRFC="false" toc="include" pn="section-appendix.a.3.3">
          <name slugifiedName="name-xml-signed-data-reference-d">XML Signed Data Reference Data</name>
          <t indent="0" pn="section-appendix.a.3.3-1">The SVT Signature object <bcp14>MUST</bcp14> contain one instance of the "sig_data" claim (SignedData object) for each &lt;ds:Reference&gt; element in the &lt;ds:SignedInfo&gt; element. The "sig_data" claim <bcp14>MUST</bcp14> contain the following elements:</t>
          <dl indent="3" newline="false" spacing="normal" pn="section-appendix.a.3.3-2">
            <dt pn="section-appendix.a.3.3-2.1">"ref":
</dt>
            <dd pn="section-appendix.a.3.3-2.2">The value of the URI attribute of the corresponding &lt;ds:Reference&gt;
element.
</dd>
            <dt pn="section-appendix.a.3.3-2.3">"hash":
</dt>
            <dd pn="section-appendix.a.3.3-2.4">The hash of all bytes that were identified by the corresponding &lt;ds:Reference&gt;
element after applying all identified canonicalization and transformation
algorithms. These are the same bytes that are hashed by the hash value in the
&lt;ds:DigestValue&gt; element inside the &lt;ds:Reference&gt; element.
</dd>
          </dl>
        </section>
        <section anchor="xml-signer-certificate-references" numbered="true" removeInRFC="false" toc="include" pn="section-appendix.a.3.4">
          <name slugifiedName="name-xml-signer-certificate-refe">XML Signer Certificate References</name>
          <t indent="0" pn="section-appendix.a.3.4-1">The SVT Signature object <bcp14>MUST</bcp14> contain a "signer_cert_ref" claim (CertReference object). The "type" parameter of the "signer_cert_ref" claim <bcp14>MUST</bcp14> be either "chain" or "chain_hash".</t>
          <ul spacing="normal" bare="false" empty="false" indent="3" pn="section-appendix.a.3.4-2">
            <li pn="section-appendix.a.3.4-2.1">The "chain" type <bcp14>MUST</bcp14> be used when signature validation was performed using one or more certificates where some or all of the certificates in the chain are not present in the target signature.</li>
            <li pn="section-appendix.a.3.4-2.2">The "chain_hash" type <bcp14>MUST</bcp14> be used when signature validation was performed using one or more certificates where all of the certificates are present in the target signature.</li>
          </ul>
        </section>
      </section>
      <section anchor="xml-jose-header" numbered="true" removeInRFC="false" toc="include" pn="section-appendix.a.4">
        <name slugifiedName="name-jose-header">JOSE Header</name>
        <section anchor="xml-svt-signing-key-reference" numbered="true" removeInRFC="false" toc="include" pn="section-appendix.a.4.1">
          <name slugifiedName="name-svt-signing-key-reference">SVT Signing Key Reference</name>
          <t indent="0" pn="section-appendix.a.4.1-1">The SVT JOSE header for XML signatures must contain one of the following header parameters in accordance with <xref target="RFC7515" format="default" sectionFormat="of" derivedContent="RFC7515"/> for storing a reference to the public key used to verify the signature on the SVT:</t>
          <dl indent="3" newline="false" spacing="normal" pn="section-appendix.a.4.1-2">
            <dt pn="section-appendix.a.4.1-2.1">"x5c":
            </dt>
            <dd pn="section-appendix.a.4.1-2.2">Holds an X.509 certificate <xref target="RFC5280" format="default" sectionFormat="of" derivedContent="RFC5280"/> or a chain
	   of certificates. The certificate holding the public key that
	   verifies the signature on the SVT <bcp14>MUST</bcp14> be the first
	   certificate in the chain.
	   </dd>
            <dt pn="section-appendix.a.4.1-2.3">"kid":
            </dt>
            <dd pn="section-appendix.a.4.1-2.4"> A key identifier holding the Base64-encoded hash value of the
	   certificate that can verify the signature on the SVT. The hash
	   algorithm <bcp14>MUST</bcp14> be the same hash algorithm used when
	   signing the SVT as specified by the "<tt>alg</tt>" Header Parameter.
	   </dd>
          </dl>
        </section>
      </section>
    </section>
    <section anchor="appendix-pdf-profile" numbered="true" removeInRFC="false" toc="include" pn="section-appendix.b">
      <name slugifiedName="name-pdf-signature-profile">PDF Signature Profile</name>
      <t indent="0" pn="section-appendix.b-1">This appendix defines a profile for implementing SVTs with a signed PDF document, and it defines the following aspects of SVT usage:</t>
      <ul spacing="normal" bare="false" empty="false" indent="3" pn="section-appendix.b-2">
        <li pn="section-appendix.b-2.1">How to include reference data related to PDF signatures and PDF documents in an SVT.</li>
        <li pn="section-appendix.b-2.2">How to add an SVT token to a PDF document.</li>
      </ul>
      <t indent="0" pn="section-appendix.b-3">PDF document signatures are added as incremental updates to the signed PDF document and signs all data of the PDF document up until the current signature. When more than one signature is added to a PDF document the previous signature is signed by the next signature and can not be updated with additional data after this event.</t>
      <t indent="0" pn="section-appendix.b-4">To minimize the impact on PDF documents with multiple signatures and to stay backwards compatible with PDF software that does not understand SVTs, PDF documents add one SVT token for all signatures of the PDF as an extension to a document timestamp added to the signed PDF as an incremental update. This SVT covers all signatures of the signed PDF.</t>
      <section anchor="svt-in-pdf" numbered="true" removeInRFC="false" toc="include" pn="section-appendix.b.1">
        <name slugifiedName="name-svts-in-pdf-documents">SVTs in PDF Documents</name>
        <t indent="0" pn="section-appendix.b.1-1">The SVT for a signed PDF document <bcp14>MAY</bcp14> provide signature validation information about any of the present signatures in the PDF. The SVT <bcp14>MUST</bcp14> contain a separate "sig" claim (Signature object) for each signature on the PDF that is covered by the SVT.</t>
        <t indent="0" pn="section-appendix.b.1-2">An SVT added to a signed PDF document <bcp14>MUST</bcp14> be added to a document timestamp in accordance with ISO 32000-2:2020 <xref target="ISOPDF2" format="default" sectionFormat="of" derivedContent="ISOPDF2"/>.</t>
        <t indent="0" pn="section-appendix.b.1-3">The document timestamp contains an <xref target="RFC3161" format="default" sectionFormat="of" derivedContent="RFC3161"/> timestamp token (TSTInfo) in EncapsulatedContentInfo of the CMS signature. The SVT <bcp14>MUST</bcp14> be added to the timestamp token (TSTInfo) as an Extension object as defined in  <xref target="svt-extension-to-timestamps" format="default" sectionFormat="of" derivedContent="Appendix B.1.1"/>.</t>
        <section anchor="svt-extension-to-timestamps" numbered="true" removeInRFC="false" toc="include" pn="section-appendix.b.1.1">
          <name slugifiedName="name-svt-extension-to-timestamp-">SVT Extension to Timestamp Tokens</name>
          <t indent="0" pn="section-appendix.b.1.1-1">The SVT extension is an Extension suitable to be included in TSTInfo as defined by <xref target="RFC3161" format="default" sectionFormat="of" derivedContent="RFC3161"/>.</t>
          <t indent="0" pn="section-appendix.b.1.1-2">The SVT extension is identified by the Object Identifier (OID) 1.2.752.201.5.2.</t>
          <t indent="0" pn="section-appendix.b.1.1-3">This extension data (OCTET STRING) holds the bytes of SVT JWT, represented as a UTF-8-encoded string.</t>
          <t indent="0" pn="section-appendix.b.1.1-4">This extension <bcp14>MUST NOT</bcp14> be marked critical.</t>
          <t indent="0" pn="section-appendix.b.1.1-5">Note: Extensions in timestamp tokens according to <xref target="RFC3161" format="default" sectionFormat="of" derivedContent="RFC3161"/> are imported from the definition of the X.509 certificate extensions defined in <xref target="RFC5280" format="default" sectionFormat="of" derivedContent="RFC5280"/>.</t>
        </section>
      </section>
      <section anchor="pdf-svt-claims" numbered="true" removeInRFC="false" toc="include" pn="section-appendix.b.2">
        <name slugifiedName="name-pdf-signature-svt-claims">PDF Signature SVT Claims</name>
        <section anchor="pdf-profile-identifier" numbered="true" removeInRFC="false" toc="include" pn="section-appendix.b.2.1">
          <name slugifiedName="name-pdf-profile-identifier">PDF Profile Identifier</name>
          <t indent="0" pn="section-appendix.b.2.1-1">When this profile is used, the SigValidation object <bcp14>MUST</bcp14> contain a "profile" claim with the value "PDF".</t>
        </section>
        <section anchor="pdf-signature-reference-data" numbered="true" removeInRFC="false" toc="include" pn="section-appendix.b.2.2">
          <name slugifiedName="name-pdf-signature-reference-dat">PDF Signature Reference Data</name>
          <t indent="0" pn="section-appendix.b.2.2-1">The SVT Signature object <bcp14>MUST</bcp14> contain a "sig_ref" claim (SigReference object) with the following elements:</t>
          <dl indent="3" newline="false" spacing="normal" pn="section-appendix.b.2.2-2">
            <dt pn="section-appendix.b.2.2-2.1">"id":
            </dt>
            <dd pn="section-appendix.b.2.2-2.2">Absent or a Null value.
	    </dd>
            <dt pn="section-appendix.b.2.2-2.3">"sig_hash":
            </dt>
            <dd pn="section-appendix.b.2.2-2.4">The hash over the signature value bytes.
	    </dd>
            <dt pn="section-appendix.b.2.2-2.5">"sb_hash":
            </dt>
            <dd pn="section-appendix.b.2.2-2.6">The hash over the DER-encoded SignedAttributes in SignerInfo.
	    </dd>
          </dl>
        </section>
        <section anchor="pdf-signed-data-reference" numbered="true" removeInRFC="false" toc="include" pn="section-appendix.b.2.3">
          <name slugifiedName="name-pdf-signed-data-reference-d">PDF Signed Data Reference Data</name>
          <t indent="0" pn="section-appendix.b.2.3-1">The SVT Signature object <bcp14>MUST</bcp14> contain one instance of the "sig_data" claim (SignedData object) with the following elements:</t>
          <dl indent="3" newline="false" spacing="normal" pn="section-appendix.b.2.3-2">
            <dt pn="section-appendix.b.2.3-2.1">"ref":
            </dt>
            <dd pn="section-appendix.b.2.3-2.2">The string representation of the ByteRange value of the PDF
	    signature dictionary of the target signature. This is a sequence
	    of integers separated by space where each integer pair specifies
	    the start index and length of a byte range.
	    </dd>
            <dt pn="section-appendix.b.2.3-2.3">"hash":
            </dt>
            <dd pn="section-appendix.b.2.3-2.4"> The hash of all bytes identified by the ByteRange value. This
	    is the concatenation of all byte ranges identified by the
	    ByteRange value.
	    </dd>
          </dl>
        </section>
        <section anchor="pdf-signer-certificate-references" numbered="true" removeInRFC="false" toc="include" pn="section-appendix.b.2.4">
          <name slugifiedName="name-pdf-signer-certificate-refe">PDF Signer Certificate References</name>
          <t indent="0" pn="section-appendix.b.2.4-1">The SVT Signature object <bcp14>MUST</bcp14> contain a "signer_cert_ref" claim (CertReference object). The "type" parameter of the "signer_cert_ref" claim <bcp14>MUST</bcp14> be either "chain" or "chain_hash".</t>
          <ul spacing="normal" bare="false" empty="false" indent="3" pn="section-appendix.b.2.4-2">
            <li pn="section-appendix.b.2.4-2.1">The "chain" type <bcp14>MUST</bcp14> be used when signature validation was performed using one or more certificates where some or all of the certificates in the chain are not present in the target signature.</li>
            <li pn="section-appendix.b.2.4-2.2">The "chain_hash" type <bcp14>MUST</bcp14> be used when signature validation was performed using one or more certificates where all of the certificates are present in the target signature.</li>
          </ul>
          <t indent="0" pn="section-appendix.b.2.4-3">Note: The referenced signer certificate <bcp14>MUST</bcp14> match any certificates referenced using ESSCertID or ESSCertIDv2 from <xref target="RFC5035" format="default" sectionFormat="of" derivedContent="RFC5035"/>.</t>
        </section>
      </section>
      <section anchor="pdf-jose-header" numbered="true" removeInRFC="false" toc="include" pn="section-appendix.b.3">
        <name slugifiedName="name-jose-header-2">JOSE Header</name>
        <section anchor="pdf-svt-signing-key-reference" numbered="true" removeInRFC="false" toc="include" pn="section-appendix.b.3.1">
          <name slugifiedName="name-svt-signing-key-reference-2">SVT Signing Key Reference</name>
          <t indent="0" pn="section-appendix.b.3.1-1">The SVT JOSE header must contain one of the following header parameters in accordance with <xref target="RFC7515" format="default" sectionFormat="of" derivedContent="RFC7515"/> for storing a reference to the public key used to verify the signature on the SVT:</t>
          <dl indent="3" newline="false" spacing="normal" pn="section-appendix.b.3.1-2">
            <dt pn="section-appendix.b.3.1-2.1">"x5c":
            </dt>
            <dd pn="section-appendix.b.3.1-2.2">Holds an X.509 certificate <xref target="RFC5280" format="default" sectionFormat="of" derivedContent="RFC5280"/> or a chain
	    of certificates. The certificate holding the public key that
	    verifies the signature on the SVT <bcp14>MUST</bcp14> be the first
	    certificate in the chain.
	    </dd>
            <dt pn="section-appendix.b.3.1-2.3">"kid":
            </dt>
            <dd pn="section-appendix.b.3.1-2.4">A key identifier holding the Base64-encoded hash value of the
	    certificate that can verify the signature on the SVT. The hash
	    algorithm <bcp14>MUST</bcp14> be the same hash algorithm used when
	    signing the SVT as specified by the "<tt>alg</tt>" Header
	    Parameter. The referenced certificate <bcp14>SHOULD</bcp14> be the
	    same certificate that was used to sign the document timestamp that
	    contains the SVT.
	    </dd>
          </dl>
        </section>
      </section>
    </section>
    <section anchor="appendix-jws-profile" numbered="true" removeInRFC="false" toc="include" pn="section-appendix.c">
      <name slugifiedName="name-jws-profile">JWS Profile</name>
      <t indent="0" pn="section-appendix.c-1">This appendix defines a profile for implementing SVTs with a JWS signed payload according to <xref target="RFC7515" format="default" sectionFormat="of" derivedContent="RFC7515"/>, and it defines the following aspects of SVT usage:</t>
      <ul spacing="normal" bare="false" empty="false" indent="3" pn="section-appendix.c-2">
        <li pn="section-appendix.c-2.1">How to include reference data related to JWS signatures in an SVT.</li>
        <li pn="section-appendix.c-2.2">How to add an SVT token to JWS signatures.</li>
      </ul>
      <t indent="0" pn="section-appendix.c-3">A JWS may have one or more signatures, depending on its serialization format, signing the same payload data. A JWS either contains the data to be signed (enveloping) or may sign any externally associated payload data (detached).</t>
      <t indent="0" pn="section-appendix.c-4">To provide a generic solution for JWS, an SVT is added to each present signature as a JWS Unprotected Header. If a JWS includes multiple signatures, then each signature includes its own SVT.</t>
      <section anchor="svt-in-jws" numbered="true" removeInRFC="false" toc="include" pn="section-appendix.c.1">
        <name slugifiedName="name-svt-in-jws">SVT in JWS</name>
        <t indent="0" pn="section-appendix.c.1-1">An SVT token <bcp14>MAY</bcp14> be added to any signature of a JWS to support validation of that signature. If more than one signature is present, then each present SVT <bcp14>MUST</bcp14> provide information exclusively related to one associated signature and <bcp14>MUST NOT</bcp14> include information about any other signature in the JWS.</t>
        <t indent="0" pn="section-appendix.c.1-2">Each SVT is stored in its associated signature's "svt" header as defined in <xref target="svt-header" format="default" sectionFormat="of" derivedContent="Appendix C.1.1"/>.</t>
        <section anchor="svt-header" numbered="true" removeInRFC="false" toc="include" pn="section-appendix.c.1.1">
          <name slugifiedName="name-svt-header-parameter">"svt" Header Parameter</name>
          <t indent="0" pn="section-appendix.c.1.1-1">The "svt" (Signature Validation Token) Header Parameter is used to contain an array of SVT tokens to support validation of the associated signature. Each SVT token in the array has the format of a JWT as defined in <xref target="RFC7519" format="default" sectionFormat="of" derivedContent="RFC7519"/> and is stored using its natural string representation without further wrapping or encoding.</t>
          <t indent="0" pn="section-appendix.c.1.1-2">The "svt" Header Parameter, when used, <bcp14>MUST</bcp14> be included as a JWS Unprotected Header.</t>
          <t indent="0" pn="section-appendix.c.1.1-3">Note: A JWS Unprotected Header is not supported with JWS Compact Serialization. A consequence of adding an SVT token to a JWS is therefore that JWS JSON Serialization <bcp14>MUST</bcp14> be used either in the form of general JWS JSON Serialization (for one or more signatures) or in the form of flattened JWS JSON Serialization (optionally used when only one signature is present in the JWS).</t>
        </section>
        <section anchor="jws-multiple-svt-tokens" numbered="true" removeInRFC="false" toc="include" pn="section-appendix.c.1.2">
          <name slugifiedName="name-multiple-svts-in-a-jws-sign">Multiple SVTs in a JWS Signature</name>
          <t indent="0" pn="section-appendix.c.1.2-1">If a new SVT is stored in a signature that already contains a previously issued SVT, implementations can choose either to replace the existing SVT or to store the new SVT in addition to the existing SVT.</t>
          <t indent="0" pn="section-appendix.c.1.2-2">If a JWS signature already contains an array of SVTs and a new SVT is to be added, then the new SVT <bcp14>MUST</bcp14> be added to the array of SVT tokens in the existing "svt" Header Parameter.</t>
        </section>
      </section>
      <section anchor="jws-svt-claims" numbered="true" removeInRFC="false" toc="include" pn="section-appendix.c.2">
        <name slugifiedName="name-jws-signature-svt-claims">JWS Signature SVT Claims</name>
        <section anchor="jws-profile-identifier" numbered="true" removeInRFC="false" toc="include" pn="section-appendix.c.2.1">
          <name slugifiedName="name-jws-profile-identifier">JWS Profile Identifier</name>
          <t indent="0" pn="section-appendix.c.2.1-1">When this profile is used, the SigValidation object <bcp14>MUST</bcp14> contain a "profile" claim with the value "JWS".</t>
        </section>
        <section anchor="jws-signature-reference-data" numbered="true" removeInRFC="false" toc="include" pn="section-appendix.c.2.2">
          <name slugifiedName="name-jws-signature-reference-dat">JWS Signature Reference Data</name>
          <t indent="0" pn="section-appendix.c.2.2-1">The SVT Signature object <bcp14>MUST</bcp14> contain a "sig_ref" claim (SigReference object) with the following elements:</t>
          <dl indent="3" newline="false" spacing="normal" pn="section-appendix.c.2.2-2">
            <dt pn="section-appendix.c.2.2-2.1">"sig_hash":
            </dt>
            <dd pn="section-appendix.c.2.2-2.2">The hash over the associated signature value (the bytes of the
	    base64url-decoded signature parameter).
	    </dd>
            <dt pn="section-appendix.c.2.2-2.3">"sb_hash":
            </dt>
            <dd pn="section-appendix.c.2.2-2.4">The hash over all bytes signed by the associated signature
	    (the JWS Signing Input according to <xref target="RFC7515" format="default" sectionFormat="of" derivedContent="RFC7515"/>).
	    </dd>
          </dl>
        </section>
        <section anchor="jws-signed-data-reference" numbered="true" removeInRFC="false" toc="include" pn="section-appendix.c.2.3">
          <name slugifiedName="name-jws-signed-data-reference-d">JWS Signed Data Reference Data</name>
          <t indent="0" pn="section-appendix.c.2.3-1">The SVT Signature object <bcp14>MUST</bcp14> contain one instance of the "sig_data" claim (SignedData object) with the following elements:</t>
          <dl indent="3" newline="false" spacing="normal" pn="section-appendix.c.2.3-2">
            <dt pn="section-appendix.c.2.3-2.1">"ref":
            </dt>
            <dd pn="section-appendix.c.2.3-2.2">
              <t indent="0" pn="section-appendix.c.2.3-2.2.1">This parameter <bcp14>MUST</bcp14> hold one of the
	        following three possible values:  </t>
              <ol spacing="normal" type="1" indent="adaptive" start="1" pn="section-appendix.c.2.3-2.2.2"><li pn="section-appendix.c.2.3-2.2.2.1" derivedCounter="1.">The explicit string value
              "payload" if the signed JWS Payload is embedded in a "payload"
              member of the JWS.</li>
                <li pn="section-appendix.c.2.3-2.2.2.2" derivedCounter="2.">The explicit string value "detached" if the JWS signs
                detached payload data without explicit reference.</li>
                <li pn="section-appendix.c.2.3-2.2.2.3" derivedCounter="3.">A URI that can be used to identify or fetch the detached
                Signed Data. The means to determine the URI for the detached
                Signed Data is outside the scope of this specification.</li>
              </ol>
            </dd>
            <dt pn="section-appendix.c.2.3-2.3">"hash":
            </dt>
            <dd pn="section-appendix.c.2.3-2.4">The hash over the JWS Payload data bytes (not its
	    base64url-encoded string representation).
	    </dd>
          </dl>
        </section>
        <section anchor="jws-signer-certificate-references" numbered="true" removeInRFC="false" toc="include" pn="section-appendix.c.2.4">
          <name slugifiedName="name-jws-signer-certificate-refe">JWS Signer Certificate References</name>
          <t indent="0" pn="section-appendix.c.2.4-1">The SVT Signature object <bcp14>MUST</bcp14> contain a "signer_cert_ref" claim (CertReference object). The "type" parameter of the "signer_cert_ref" claim <bcp14>MUST</bcp14> be either "chain" or "chain_hash".</t>
          <ul spacing="normal" bare="false" empty="false" indent="3" pn="section-appendix.c.2.4-2">
            <li pn="section-appendix.c.2.4-2.1">The "chain" type <bcp14>MUST</bcp14> be used when signature validation was performed using one or more certificates where some or all of the certificates in the chain are not present in the target signature.</li>
            <li pn="section-appendix.c.2.4-2.2">The "chain_hash" type <bcp14>MUST</bcp14> be used when signature validation was performed using one or more certificates where all of the certificates are present in the target signature JOSE header using the "x5c" Header Parameter.</li>
          </ul>
        </section>
      </section>
      <section anchor="jws-svt-jose-header" numbered="true" removeInRFC="false" toc="include" pn="section-appendix.c.3">
        <name slugifiedName="name-svt-jose-header-2">SVT JOSE Header</name>
        <section anchor="jws-svt-signing-key-reference" numbered="true" removeInRFC="false" toc="include" pn="section-appendix.c.3.1">
          <name slugifiedName="name-svt-signing-key-reference-3">SVT Signing Key Reference</name>
          <t indent="0" pn="section-appendix.c.3.1-1">The SVT JOSE header must contain one of the following header
          parameters in accordance with <xref target="RFC7515" format="default" sectionFormat="of" derivedContent="RFC7515"/> for storing
          a reference to the public key used to verify the signature on the
          SVT:</t>
          <dl indent="3" newline="false" spacing="normal" pn="section-appendix.c.3.1-2">
            <dt pn="section-appendix.c.3.1-2.1">"x5c":
            </dt>
            <dd pn="section-appendix.c.3.1-2.2">Holds an X.509 certificate <xref target="RFC5280" format="default" sectionFormat="of" derivedContent="RFC5280"/> or a chain
	    of certificates. The certificate holding the public key that
	    verifies the signature on the SVT <bcp14>MUST</bcp14> be the first
	    certificate in the chain.
	    </dd>
            <dt pn="section-appendix.c.3.1-2.3">"kid":
            </dt>
            <dd pn="section-appendix.c.3.1-2.4">A key identifier holding the Base64-encoded hash value of the
	    certificate that can verify the signature on the SVT. The hash
	    algorithm <bcp14>MUST</bcp14> be the same hash algorithm used when
	    signing the SVT as specified by the "<tt>alg</tt>" Header Parameter.
	    </dd>
          </dl>
        </section>
      </section>
    </section>
    <section anchor="schema-appendix" numbered="true" removeInRFC="false" toc="include" pn="section-appendix.d">
      <name slugifiedName="name-schemas">Schemas</name>
      <section anchor="concise-data-definition-language-cddl" numbered="true" removeInRFC="false" toc="include" pn="section-appendix.d.1">
        <name slugifiedName="name-concise-data-definition-lan">Concise Data Definition Language (CDDL)</name>
        <t indent="0" pn="section-appendix.d.1-1">The following informative CDDL <xref target="RFC8610" format="default" sectionFormat="of" derivedContent="RFC8610"/> expresses the structure of an SVT token:</t>
        <sourcecode type="cddl" markers="false" pn="section-appendix.d.1-2">
svt = {
  jti: text
  iss: text
  iat: uint
  ? aud: text / [* text]
  ? exp: uint
  sig_val_claims: SigValClaims
}

SigValClaims = {
  ver: text
  profile: text
  hash_algo: text
  sig: [+ Signature]
  ? ext: Extension
}

Signature = {
  sig_ref: SigReference
  sig_data_ref: [+ SignedDataReference]
  signer_cert_ref: CertReference
  sig_val: [+ PolicyValidation]
  ? time_val: [* TimeValidation]
  ? ext: Extension
}

SigReference = {
  ? id: text / null
  sig_hash: binary-value
  sb_hash: binary-value
}

SignedDataReference = {
  ref: text
  hash: binary-value
}


CertReference = {
  type: "chain" / "chain_hash"
  ref: [+ text]
}

PolicyValidation = {
  pol: text
  res: "PASSED" / "FAILED" / "INDETERMINATE"
  ? msg: text / null
  ? ext: Extension
}

TimeValidation = {
  "time": uint
  type: text
  iss: text
  ? id: text / null
  ? hash: binary-value / null
  ? val: [* PolicyValidation]
  ? ext: Extension
}


Extension = {
  + text =&gt; text
} / null

binary-value = text             ; base64 classic with padding
</sourcecode>
      </section>
      <section anchor="json-schema" numbered="true" removeInRFC="false" toc="include" pn="section-appendix.d.2">
        <name slugifiedName="name-json-schema">JSON Schema</name>
        <t indent="0" pn="section-appendix.d.2-1">The following informative JSON schema describes the syntax of the SVT token payload.</t>
        <sourcecode type="json" markers="false" pn="section-appendix.d.2-2">
{
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "title": "Signature Validation Token JSON Schema",
    "description": "Schema defining the payload format for SVTs",
    "type": "object",
    "required": [
        "jti",
        "iss",
        "iat",
        "sig_val_claims"
    ],
    "properties": {
        "jti": {
            "description": "JWT ID",
            "type": "string"
        },
        "iss": {
            "description": "Issuer",
            "type": "string"
        },
        "iat": {
            "description": "Issued At",
            "type": "integer"
        },
        "aud": {
            "description": "Audience",
            "type": [
                "string",
                "array"
            ],
            "items": {"type": "string"}
        },
        "exp": {
            "description": "Expiration time (seconds since epoch)",
            "type": "integer"
        },
        "sig_val_claims": {
            "description": "Signature validation claims",
            "type": "object",
            "required": [
                "ver",
                "profile",
                "hash_algo",
                "sig"
            ],
            "properties": {
                "ver": {
                    "description": "Version",
                    "type": "string"
                },
                "profile": {
                    "description": "Implementation profile",
                    "type": "string"
                },
                "hash_algo": {
                    "description": "Hash algorithm URI",
                    "type": "string"
                },
                "sig": {
                    "description": "Validated signatures",
                    "type": "array",
                    "items": {
                        "$ref": "#/$def/Signature"
                    },
                    "minItems": 1
                },
                "ext": {
                    "description": "Extension map",
                    "$ref": "#/$def/Extension"
                }
            },
            "additionalProperties": false
        }
    },
"additionalProperties": false,
"$def": {
         "Signature":{
             "type": "object",
             "required": [
                 "sig_ref",
                 "sig_data_ref",
                 "signer_cert_ref",
                 "sig_val"
             ],
             "properties": {
                 "sig_ref": {
                     "description": "Signature Reference",
                     "$ref": "#/$def/SigReference"
                 },
                 "sig_data_ref": {
                     "description": "Signed data array",
                     "type": "array",
                     "items": {
                         "$ref" : "#/$def/SignedDataReference"
                     },
                     "minItems": 1
                 },
                 "signer_cert_ref": {
                     "description": "Signer certificate reference",
                     "$ref": "#/$def/CertReference"
                 },
                 "sig_val": {
                     "description": "Signature validation results",
                     "type": "array",
                     "items": {
                         "$ref": "#/$def/PolicyValidation"
                     },
                     "minItems": 1
                 },
                 "time_val": {
                     "description": "Time validations",
                     "type": "array",
                     "items": {
                         "$ref": "#/$def/TimeValidation"
                     }
                 },
                "ext": {
                    "description": "Extension map",
                    "$ref": "#/$def/Extension"
                }
             },
             "additionalProperties": false
         },
         "SigReference":{
             "type": "object",
             "required": [
                 "sig_hash",
                 "sb_hash"
             ],
             "properties": {
                 "sig_hash": {
                     "description": "Hash of the signature value",
                     "type": "string",
                     "format": "base64"
                 },
                 "sb_hash": {
                     "description": "Hash of the Signed Bytes",
                     "type": "string",
                     "format": "base64"
                 },
                 "id": {
                     "description": "Signature ID reference",
                     "type": ["string","null"]
                 }
             },
            "additionalProperties": false
         },
         "SignedDataReference": {
             "type": "object",
             "required": [
                 "ref",
                 "hash"
             ],
             "properties": {
                 "ref": {
                     "description": "Reference to the signed data",
                     "type": "string"
                 },
                 "hash": {
                     "description": "Signed data hash",
                     "type": "string",
                     "format": "base64"
                 }
             },
            "additionalProperties": false
         },
         "CertReference":{
             "type": "object",
             "required": [
                 "type",
                 "ref"
             ],
             "properties": {
                 "type": {
                     "description": "Type of certificate reference",
                     "type": "string",
                     "enum": ["chain","chain_hash"]
                 },
                 "ref": {
                     "description": "Certificate reference data",
                     "type": "array",
                     "items": {
                         "type": "string",
                         "format": "base64"
                     },
                     "minItems": 1
                 }
             },
            "additionalProperties": false
         },
         "PolicyValidation":{
             "type": "object",
             "required": [
                 "pol",
                 "res"
             ],
             "properties": {
                 "pol": {
                     "description": "Policy identifier",
                     "type": "string"
                 },
                 "res": {
                     "description": "Signature validation result",
                     "type": "string",
                     "enum": ["PASSED","FAILED","INDETERMINATE"]
                 },
                 "msg": {
                     "description": "Message",
                     "type": ["string","null"]
                 },
                 "ext": {
                    "description": "Extension map",
                    "$ref": "#/$def/Extension"
                }
             },
            "additionalProperties": false
         },
         "TimeValidation":{
             "type": "object",
             "required": [
                 "time",
                 "type",
                 "iss"
             ],
             "properties": {
                 "time": {
                     "description": "Verified time",
                     "type": "integer"
                 },
                 "type": {
                     "description": "Type of time validation proof",
                     "type": "string"
                 },
                 "iss": {
                     "description": "Issuer of the time proof",
                     "type": "string"
                 },
                 "id": {
                     "description": "Time evidence identifier",
                     "type": ["string","null"]

                 },
                 "hash": {
                     "description": "Hash of time evidence",
                     "type": ["string","null"],
                     "format": "base64"
                 },
                 "val": {
                     "description": "Validation result",
                     "type": "array",
                     "items": {
                         "$ref": "#/$def/PolicyValidation"
                     }
                 },
                 "ext": {
                    "description": "Extension map",
                    "$ref": "#/$def/Extension"
                }
             },
            "additionalProperties": false
         },
         "Extension": {
           "description": "Extension map",
           "type": ["object","null"],
           "required": [],
           "additionalProperties": {
               "type": "string"
           }
         }
     }
}
</sourcecode>
      </section>
    </section>
    <section anchor="appendix-examples" numbered="true" removeInRFC="false" toc="include" pn="section-appendix.e">
      <name slugifiedName="name-examples">Examples</name>
      <t indent="0" pn="section-appendix.e-1">The following example illustrates a basic SVT according to this specification
issued for a signed PDF document.</t>
      <t indent="0" pn="section-appendix.e-2">Note: Line breaks in the decoded example are inserted for readability. Line
breaks are not allowed in valid JSON data.</t>
      <t indent="0" pn="section-appendix.e-3">Signature validation token JWT:</t>
      <sourcecode markers="false" pn="section-appendix.e-4">
eyJraWQiOiJPZW5JKzQzNEpoYnZmRG50ZlZcLzhyT3hHN0ZrdnlqYUtWSmFWcUlG
QlhvaFZoQWU1Zks4YW5vdjFTNjg4cjdLYmFsK2Z2cGFIMWo4aWJnNTJRQnkxUFE9
PSIsInR5cCI6IkpXVCIsImFsZyI6IlJTNTEyIn0.eyJhdWQiOiJodHRwOlwvXC9l
eGFtcGxlLmNvbVwvYXVkaWVuY2UxIiwiaXNzIjoiaHR0cHM6XC9cL3N3ZWRlbmNv
bm5lY3Quc2VcL3ZhbGlkYXRvciIsImlhdCI6MTYwMzQ1ODQyMSwianRpIjoiNGQx
Mzk2ZjFmZjcyOGY0MGQ1MjQwM2I2MWM1NzQ0ODYiLCJzaWdfdmFsX2NsYWltcyI6
eyJzaWciOlt7ImV4dCI6bnVsbCwic2lnX3ZhbCI6W3sibXNnIjoiT0siLCJleHQi
Om51bGwsInJlcyI6IlBBU1NFRCIsInBvbCI6Imh0dHA6XC9cL2lkLnN3ZWRlbmNv
bm5lY3Quc2VcL3N2dFwvc2lndmFsLXBvbGljeVwvdHMtcGtpeFwvMDEifV0sInNp
Z19yZWYiOnsic2lnX2hhc2giOiJ5Y2VQVkxJemRjcEs5N0lZT2hGSWYxbnk3OUht
SUNiU1Z6SWVaTmJpem83ckdJd0hOTjB6WElTeUtHakN2bm9uT2FRR2ZMXC9QM3ZE
dEI4OHlLU1dlWGc9PSIsImlkIjoiaWQtNzM5ODljNmZjMDYzNjM2YWI1ZTc1M2Yx
MGY3NTc0NjciLCJzYl9oYXNoIjoiQm9QVjRXQ0E5c0FJYWhqSzFIYWpmRnhpK0F6
QzRKR1R1ZjM5VzNaV2pjekRDVVJ4ZGM5WWV0ZUh0Y3hHVmVnZ3B4SEo3NVwvY1E3
SE4xZERkbGl5SXdnPT0ifSwic2lnbmVyX2NlcnRfcmVmIjp7InJlZiI6WyIxK2Fh
SmV0ZzdyZWxFUmxVRFlFaVU0WklaaFQ0UlV2aUlRWnVLN28xR0ZLYVRQUTZ5K2t4
XC9QTnREcnB1cVE2WGZya0g5d1lESzRleTB5NFdyTkVybnc9PSIsImg0UER4YjVa
S214MWVUU3F2VnZZRzhnMzNzMDVKendCK05nRUhGVTRnYzl0cUcwa2dIa2Y2VzNv
THprVHd3dXJJaDZZOUFhZlpZcWMyelAycEUycDRRPT0iLCJEZDJDNXNCMElPUWVN
Vm5FQmtNNVE5Vzk2bUJITnd3YTJ0elhNcytMd3VZY09VdlBrcnlHUjBhUEc4Tzlu
SVAzbGJ3NktqUTFoRG1SazZ6Qzh4MmpkZz09Il0sInR5cGUiOiJjaGFpbl9oYXNo
In0sInNpZ19kYXRhX3JlZiI6W3sicmVmIjoiIiwiaGFzaCI6IkZjR3BPT2Y4aWxj
UHQyMUdEZDJjR25MR0R4UlM1ajdzdk00YXBwMkg0MWRERUxtMkN6Y2VUWTAybmRl
SmZXamludG1RMzc2SWxYVE9BcjMxeXpZenNnPT0ifSx7InJlZiI6IiN4YWRlcy0x
MWExNTVkOTJiZjU1Nzc0NjEzYmI3YjY2MTQ3N2NmZCIsImhhc2giOiJLUmtnYlo2
UFwvbmhVNjNJTWswR2lVZlVcL0RUd3ZlWWl0ZVFrd0dlSnFDNUJ6VE5WOGJRYnBl
ZFRUdVdKUHhxdkowUlk4NGh3bTdlWVwvZzBIckFPZWdLdz09In1dLCJ0aW1lX3Zh
bCI6W119XSwiZXh0IjpudWxsLCJ2ZXIiOiIxLjAiLCJwcm9maWxlIjoiWE1MIiwi
aGFzaF9hbGdvIjoiaHR0cDpcL1wvd3d3LnczLm9yZ1wvMjAwMVwvMDRcL3htbGVu
YyNzaGE1MTIifX0.TdHCoIUSZj2zMINKg7E44-8VE_mJq6TG1OoPwnYSs_hyUbuX
mrLJpuk8GR5YrndeOucPUYAwPxHt_f68JIQyFTi0agO9VJjn1R7Pj3Jt6WG9pYVN
n5LH-D1maxD11ZxxbcYeHbsstd2Sy2uMa3BdpsstGdPymSmc6GxY5uJoL0-5vwo_
3l-4Bb3LCTiuxYPcmztKIbDy2hEgJ3Hx1K4HF0SHgn3InpqBev3hm2SLw3hH5BCM
rywBAhHYE6OGE0aOJ6ktA5UP0jIIHfaw9i1wIiJtHTaGuvtyWSLk5cshmun9Hkdk
kRTA75bzuq0Iyd0qh070rA8Gje-s4Tw4xzttgKx1KSkvy8n5FqvzWdsZvclCG2mY
Y9rMxh_7607NXcxajAP4yDOoKNs5nm937ULe0vCN8a7WTrFuiaGjry7HhzRM4C5A
qxbDOBXPLyoMr4qn4LRJCHxOeLZ6o3ugvDOOWsyjk3eliyBwDu8qJH7UmyicLxDc
Cr0hUK_kvREqjD2Z
</sourcecode>
      <t indent="0" pn="section-appendix.e-5">Decoded JWT Header:</t>
      <sourcecode markers="false" pn="section-appendix.e-6">
{
  "kid":"OenI+434JhbvfDntfV\/8rOxG7FkvyjaKVJaVqIFBXohVhAe5fK8anov
         1S688r7Kbal+fvpaH1j8ibg52QBy1PQ==",
  "typ":"JWT",
  "alg":"RS512"
}
</sourcecode>
      <t indent="0" pn="section-appendix.e-7">Decoded JWT Claims:</t>
      <sourcecode markers="false" pn="section-appendix.e-8">
{
  "aud" : "http://example.com/audience1",
  "iss" : "https://swedenconnect.se/validator",
  "iat" : 1603458421,
  "jti" : "4d1396f1ff728f40d52403b61c574486",
  "sig_val_claims" : {
    "sig" : [ {
      "ext" : null,
      "sig_val" : [ {
        "msg" : "OK",
        "ext" : null,
        "res" : "PASSED",
        "pol" : "http://id.swedenconnect.se/svt/sigval-policy/
                 ts-pkix/01"
      } ],
      "sig_ref" : {
        "sig_hash" : "ycePVLIzdcpK97IYOhFIf1ny79HmICbSVzIeZNbizo7rGIw
                      HNN0zXISyKGjCvnonOaQGfL/P3vDtB88yKSWeXg==",
        "id" : "id-73989c6fc063636ab5e753f10f757467",
        "sb_hash" : "BoPV4WCA9sAIahjK1HajfFxi+AzC4JGTuf39W3ZWjczDCURx
                     dc9YeteHtcxGVeggpxHJ75/cQ7HN1dDdliyIwg=="
      },
      "signer_cert_ref" : {
        "ref" : [ "1+aaJetg7relERlUDYEiU4ZIZhT4RUviIQZuK7o1GFKaTPQ6y+
                   kx/PNtDrpuqQ6XfrkH9wYDK4ey0y4WrNErnw==",
                  "h4PDxb5ZKmx1eTSqvVvYG8g33s05JzwB+NgEHFU4gc9tqG0kgH
                   kf6W3oLzkTwwurIh6Y9AafZYqc2zP2pE2p4Q==",
                  "Dd2C5sB0IOQeMVnEBkM5Q9W96mBHNwwa2tzXMs+LwuYcOUvPkr
                   yGR0aPG8O9nIP3lbw6KjQ1hDmRk6zC8x2jdg==" ],
        "type" : "chain_hash"
      },
      "sig_data_ref" : [ {
        "ref" : "",
        "hash" : "FcGpOOf8ilcPt21GDd2cGnLGDxRS5j7svM4app2H41dDELm2Czc
                  eTY02ndeJfWjintmQ376IlXTOAr31yzYzsg=="
      }, {
        "ref" : "#xades-11a155d92bf55774613bb7b661477cfd",
        "hash" : "KRkgbZ6P/nhU63IMk0GiUfU/DTwveYiteQkwGeJqC5BzTNV8bQb
                  pedTTuWJPxqvJ0RY84hwm7eY/g0HrAOegKw=="
      } ],
      "time_val" : [ ]
    } ],
    "ext" : null,
    "ver" : "1.0",
    "profile" : "XML",
    "hash_algo" : "http://www.w3.org/2001/04/xmlenc#sha512"
  }
}
</sourcecode>
    </section>
    <section anchor="authors-addresses" numbered="false" removeInRFC="false" toc="include" pn="section-appendix.f">
      <name slugifiedName="name-authors-addresses">Authors' Addresses</name>
      <author initials="S." surname="Santesson" fullname="Stefan Santesson">
        <organization abbrev="IDsec Solutions" showOnFrontPage="true">IDsec Solutions AB</organization>
        <address>
          <postal>
            <street>Forskningsbyn Ideon</street>
            <city>Lund</city>
            <code>223 70</code>
            <country>Sweden</country>
          </postal>
          <email>sts@aaa-sec.com</email>
        </address>
      </author>
      <author initials="R." surname="Housley" fullname="Russ Housley">
        <organization abbrev="Vigil Security" showOnFrontPage="true">Vigil Security, LLC</organization>
        <address>
          <postal>
            <street>516 Dranesville Road</street>
            <city>Herndon</city>
            <region>VA</region>
            <code>20170</code>
            <country>United States of America</country>
          </postal>
          <email>housley@vigilsec.com</email>
        </address>
      </author>
    </section>
  </back>
</rfc>
