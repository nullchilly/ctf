<?xml version='1.0' encoding='utf-8'?>
<rfc xmlns:xi="http://www.w3.org/2001/XInclude" version="3" category="std" consensus="true" docName="draft-ietf-oauth-rar-23" indexInclude="true" ipr="trust200902" number="9396" prepTime="2023-05-30T15:55:07" scripts="Common,Latin" sortRefs="true" submissionType="IETF" symRefs="true" tocDepth="3" tocInclude="true" xml:lang="en">
  <link href="https://datatracker.ietf.org/doc/draft-ietf-oauth-rar-23" rel="prev"/>
  <link href="https://dx.doi.org/10.17487/rfc9396" rel="alternate"/>
  <link href="urn:issn:2070-1721" rel="alternate"/>
  <front>
    <title abbrev="OAuth-RAR">OAuth 2.0 Rich Authorization Requests</title>
    <seriesInfo name="RFC" value="9396" stream="IETF"/>
    <author initials="T." surname="Lodderstedt" fullname="Torsten Lodderstedt">
      <organization showOnFrontPage="true">yes.com</organization>
      <address>
        <postal>
          <street/>
        </postal>
        <email>torsten@lodderstedt.net</email>
      </address>
    </author>
    <author initials="J." surname="Richer" fullname="Justin Richer">
      <organization showOnFrontPage="true">Bespoke Engineering</organization>
      <address>
        <postal>
          <street/>
        </postal>
        <email>ietf@justin.richer.org</email>
      </address>
    </author>
    <author initials="B." surname="Campbell" fullname="Brian Campbell">
      <organization showOnFrontPage="true">Ping Identity</organization>
      <address>
        <postal>
          <street/>
        </postal>
        <email>bcampbell@pingidentity.com</email>
      </address>
    </author>
    <date month="05" year="2023"/>
    <area>sec</area>
    <workgroup>oauth</workgroup>
    <keyword>security</keyword>
    <keyword>oauth2</keyword>
    <abstract pn="section-abstract">
      <t indent="0" pn="section-abstract-1">This document specifies a new parameter <tt>authorization_details</tt> that is
used to carry fine-grained authorization data in OAuth messages.</t>
    </abstract>
    <boilerplate>
      <section anchor="status-of-memo" numbered="false" removeInRFC="false" toc="exclude" pn="section-boilerplate.1">
        <name slugifiedName="name-status-of-this-memo">Status of This Memo</name>
        <t indent="0" pn="section-boilerplate.1-1">
            This is an Internet Standards Track document.
        </t>
        <t indent="0" pn="section-boilerplate.1-2">
            This document is a product of the Internet Engineering Task Force
            (IETF).  It represents the consensus of the IETF community.  It has
            received public review and has been approved for publication by
            the Internet Engineering Steering Group (IESG).  Further
            information on Internet Standards is available in Section 2 of 
            RFC 7841.
        </t>
        <t indent="0" pn="section-boilerplate.1-3">
            Information about the current status of this document, any
            errata, and how to provide feedback on it may be obtained at
            <eref target="https://www.rfc-editor.org/info/rfc9396" brackets="none"/>.
        </t>
      </section>
      <section anchor="copyright" numbered="false" removeInRFC="false" toc="exclude" pn="section-boilerplate.2">
        <name slugifiedName="name-copyright-notice">Copyright Notice</name>
        <t indent="0" pn="section-boilerplate.2-1">
            Copyright (c) 2023 IETF Trust and the persons identified as the
            document authors. All rights reserved.
        </t>
        <t indent="0" pn="section-boilerplate.2-2">
            This document is subject to BCP 78 and the IETF Trust's Legal
            Provisions Relating to IETF Documents
            (<eref target="https://trustee.ietf.org/license-info" brackets="none"/>) in effect on the date of
            publication of this document. Please review these documents
            carefully, as they describe your rights and restrictions with
            respect to this document. Code Components extracted from this
            document must include Revised BSD License text as described in
            Section 4.e of the Trust Legal Provisions and are provided without
            warranty as described in the Revised BSD License.
        </t>
      </section>
    </boilerplate>
    <toc>
      <section anchor="toc" numbered="false" removeInRFC="false" toc="exclude" pn="section-toc.1">
        <name slugifiedName="name-table-of-contents">Table of Contents</name>
        <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1">
          <li pn="section-toc.1-1.1">
            <t indent="0" keepWithNext="true" pn="section-toc.1-1.1.1"><xref derivedContent="1" format="counter" sectionFormat="of" target="section-1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-introduction">Introduction</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.1.2">
              <li pn="section-toc.1-1.1.2.1">
                <t indent="0" keepWithNext="true" pn="section-toc.1-1.1.2.1.1"><xref derivedContent="1.1" format="counter" sectionFormat="of" target="section-1.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-conventions-and-terminology">Conventions and Terminology</xref></t>
              </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.2">
            <t indent="0" pn="section-toc.1-1.2.1"><xref derivedContent="2" format="counter" sectionFormat="of" target="section-2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-request-parameter-authoriza">Request Parameter "authorization_details"</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.2.2">
              <li pn="section-toc.1-1.2.2.1">
                <t indent="0" keepWithNext="true" pn="section-toc.1-1.2.2.1.1"><xref derivedContent="2.1" format="counter" sectionFormat="of" target="section-2.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-authorization-details-types">Authorization Details Types</xref></t>
              </li>
              <li pn="section-toc.1-1.2.2.2">
                <t indent="0" pn="section-toc.1-1.2.2.2.1"><xref derivedContent="2.2" format="counter" sectionFormat="of" target="section-2.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-common-data-fields">Common Data Fields</xref></t>
              </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.3">
            <t indent="0" pn="section-toc.1-1.3.1"><xref derivedContent="3" format="counter" sectionFormat="of" target="section-3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-authorization-request">Authorization Request</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.3.2">
              <li pn="section-toc.1-1.3.2.1">
                <t indent="0" pn="section-toc.1-1.3.2.1.1"><xref derivedContent="3.1" format="counter" sectionFormat="of" target="section-3.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-relationship-to-the-scope-p">Relationship to the "scope" Parameter</xref></t>
              </li>
              <li pn="section-toc.1-1.3.2.2">
                <t indent="0" pn="section-toc.1-1.3.2.2.1"><xref derivedContent="3.2" format="counter" sectionFormat="of" target="section-3.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-relationship-to-the-resourc">Relationship to the "resource" Parameter</xref></t>
              </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.4">
            <t indent="0" pn="section-toc.1-1.4.1"><xref derivedContent="4" format="counter" sectionFormat="of" target="section-4"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-authorization-response">Authorization Response</xref></t>
          </li>
          <li pn="section-toc.1-1.5">
            <t indent="0" pn="section-toc.1-1.5.1"><xref derivedContent="5" format="counter" sectionFormat="of" target="section-5"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-authorization-error-respons">Authorization Error Response</xref></t>
          </li>
          <li pn="section-toc.1-1.6">
            <t indent="0" pn="section-toc.1-1.6.1"><xref derivedContent="6" format="counter" sectionFormat="of" target="section-6"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-token-request">Token Request</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.6.2">
              <li pn="section-toc.1-1.6.2.1">
                <t indent="0" pn="section-toc.1-1.6.2.1.1"><xref derivedContent="6.1" format="counter" sectionFormat="of" target="section-6.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-comparing-authorization-det">Comparing Authorization Details</xref></t>
              </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.7">
            <t indent="0" pn="section-toc.1-1.7.1"><xref derivedContent="7" format="counter" sectionFormat="of" target="section-7"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-token-response">Token Response</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.7.2">
              <li pn="section-toc.1-1.7.2.1">
                <t indent="0" pn="section-toc.1-1.7.2.1.1"><xref derivedContent="7.1" format="counter" sectionFormat="of" target="section-7.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-enriched-authorization-deta">Enriched Authorization Details in Token Response</xref></t>
              </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.8">
            <t indent="0" pn="section-toc.1-1.8.1"><xref derivedContent="8" format="counter" sectionFormat="of" target="section-8"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-token-error-response">Token Error Response</xref></t>
          </li>
          <li pn="section-toc.1-1.9">
            <t indent="0" pn="section-toc.1-1.9.1"><xref derivedContent="9" format="counter" sectionFormat="of" target="section-9"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-resource-servers">Resource Servers</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.9.2">
              <li pn="section-toc.1-1.9.2.1">
                <t indent="0" pn="section-toc.1-1.9.2.1.1"><xref derivedContent="9.1" format="counter" sectionFormat="of" target="section-9.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-jwt-based-access-tokens">JWT-Based Access Tokens</xref></t>
              </li>
              <li pn="section-toc.1-1.9.2.2">
                <t indent="0" pn="section-toc.1-1.9.2.2.1"><xref derivedContent="9.2" format="counter" sectionFormat="of" target="section-9.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-token-introspection">Token Introspection</xref></t>
              </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.10">
            <t indent="0" pn="section-toc.1-1.10.1"><xref derivedContent="10" format="counter" sectionFormat="of" target="section-10"/>. <xref derivedContent="" format="title" sectionFormat="of" target="name-metadata">Metadata</xref></t>
          </li>
          <li pn="section-toc.1-1.11">
            <t indent="0" pn="section-toc.1-1.11.1"><xref derivedContent="11" format="counter" sectionFormat="of" target="section-11"/>. <xref derivedContent="" format="title" sectionFormat="of" target="name-implementation-consideratio">Implementation Considerations</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.11.2">
              <li pn="section-toc.1-1.11.2.1">
                <t indent="0" pn="section-toc.1-1.11.2.1.1"><xref derivedContent="11.1" format="counter" sectionFormat="of" target="section-11.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-using-authorization-details">Using Authorization Details in a Certain Deployment</xref></t>
              </li>
              <li pn="section-toc.1-1.11.2.2">
                <t indent="0" pn="section-toc.1-1.11.2.2.1"><xref derivedContent="11.2" format="counter" sectionFormat="of" target="section-11.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-minimal-implementation-supp">Minimal Implementation Support</xref></t>
              </li>
              <li pn="section-toc.1-1.11.2.3">
                <t indent="0" pn="section-toc.1-1.11.2.3.1"><xref derivedContent="11.3" format="counter" sectionFormat="of" target="section-11.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-use-of-machine-readable-typ">Use of Machine-Readable Type Schemas</xref></t>
              </li>
              <li pn="section-toc.1-1.11.2.4">
                <t indent="0" pn="section-toc.1-1.11.2.4.1"><xref derivedContent="11.4" format="counter" sectionFormat="of" target="section-11.4"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-large-requests">Large Requests</xref></t>
              </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.12">
            <t indent="0" pn="section-toc.1-1.12.1"><xref derivedContent="12" format="counter" sectionFormat="of" target="section-12"/>. <xref derivedContent="" format="title" sectionFormat="of" target="name-security-considerations">Security Considerations</xref></t>
          </li>
          <li pn="section-toc.1-1.13">
            <t indent="0" pn="section-toc.1-1.13.1"><xref derivedContent="13" format="counter" sectionFormat="of" target="section-13"/>. <xref derivedContent="" format="title" sectionFormat="of" target="name-privacy-considerations">Privacy Considerations</xref></t>
          </li>
          <li pn="section-toc.1-1.14">
            <t indent="0" pn="section-toc.1-1.14.1"><xref derivedContent="14" format="counter" sectionFormat="of" target="section-14"/>. <xref derivedContent="" format="title" sectionFormat="of" target="name-iana-considerations">IANA Considerations</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.14.2">
              <li pn="section-toc.1-1.14.2.1">
                <t indent="0" pn="section-toc.1-1.14.2.1.1"><xref derivedContent="14.1" format="counter" sectionFormat="of" target="section-14.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-oauth-parameters-registrati">OAuth Parameters Registration</xref></t>
              </li>
              <li pn="section-toc.1-1.14.2.2">
                <t indent="0" pn="section-toc.1-1.14.2.2.1"><xref derivedContent="14.2" format="counter" sectionFormat="of" target="section-14.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-json-web-token-claims-regis">JSON Web Token Claims Registration</xref></t>
              </li>
              <li pn="section-toc.1-1.14.2.3">
                <t indent="0" pn="section-toc.1-1.14.2.3.1"><xref derivedContent="14.3" format="counter" sectionFormat="of" target="section-14.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-oauth-token-introspection-r">OAuth Token Introspection Response Registration</xref></t>
              </li>
              <li pn="section-toc.1-1.14.2.4">
                <t indent="0" pn="section-toc.1-1.14.2.4.1"><xref derivedContent="14.4" format="counter" sectionFormat="of" target="section-14.4"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-oauth-authorization-server-">OAuth Authorization Server Metadata Registration</xref></t>
              </li>
              <li pn="section-toc.1-1.14.2.5">
                <t indent="0" pn="section-toc.1-1.14.2.5.1"><xref derivedContent="14.5" format="counter" sectionFormat="of" target="section-14.5"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-oauth-dynamic-client-regist">OAuth Dynamic Client Registration Metadata Registration</xref></t>
              </li>
              <li pn="section-toc.1-1.14.2.6">
                <t indent="0" pn="section-toc.1-1.14.2.6.1"><xref derivedContent="14.6" format="counter" sectionFormat="of" target="section-14.6"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-oauth-extensions-error-regi">OAuth Extensions Error Registration</xref></t>
              </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.15">
            <t indent="0" pn="section-toc.1-1.15.1"><xref derivedContent="15" format="counter" sectionFormat="of" target="section-15"/>. <xref derivedContent="" format="title" sectionFormat="of" target="name-references">References</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.15.2">
              <li pn="section-toc.1-1.15.2.1">
                <t indent="0" pn="section-toc.1-1.15.2.1.1"><xref derivedContent="15.1" format="counter" sectionFormat="of" target="section-15.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-normative-references">Normative References</xref></t>
              </li>
              <li pn="section-toc.1-1.15.2.2">
                <t indent="0" pn="section-toc.1-1.15.2.2.1"><xref derivedContent="15.2" format="counter" sectionFormat="of" target="section-15.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-informative-references">Informative References</xref></t>
              </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.16">
            <t indent="0" pn="section-toc.1-1.16.1"><xref derivedContent="Appendix A" format="default" sectionFormat="of" target="section-appendix.a"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-additional-examples">Additional Examples</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.16.2">
              <li pn="section-toc.1-1.16.2.1">
                <t indent="0" pn="section-toc.1-1.16.2.1.1"><xref derivedContent="A.1" format="counter" sectionFormat="of" target="section-appendix.a.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-openid-connect">OpenID Connect</xref></t>
              </li>
              <li pn="section-toc.1-1.16.2.2">
                <t indent="0" pn="section-toc.1-1.16.2.2.1"><xref derivedContent="A.2" format="counter" sectionFormat="of" target="section-appendix.a.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-remote-electronic-signing">Remote Electronic Signing</xref></t>
              </li>
              <li pn="section-toc.1-1.16.2.3">
                <t indent="0" pn="section-toc.1-1.16.2.3.1"><xref derivedContent="A.3" format="counter" sectionFormat="of" target="section-appendix.a.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-access-to-tax-data">Access to Tax Data</xref></t>
              </li>
              <li pn="section-toc.1-1.16.2.4">
                <t indent="0" pn="section-toc.1-1.16.2.4.1"><xref derivedContent="A.4" format="counter" sectionFormat="of" target="section-appendix.a.4"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-ehealth">eHealth</xref></t>
              </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.17">
            <t indent="0" pn="section-toc.1-1.17.1"><xref derivedContent="" format="none" sectionFormat="of" target="section-appendix.b"/><xref derivedContent="" format="title" sectionFormat="of" target="name-acknowledgements">Acknowledgements</xref></t>
          </li>
          <li pn="section-toc.1-1.18">
            <t indent="0" pn="section-toc.1-1.18.1"><xref derivedContent="" format="none" sectionFormat="of" target="section-appendix.c"/><xref derivedContent="" format="title" sectionFormat="of" target="name-authors-addresses">Authors' Addresses</xref></t>
          </li>
        </ul>
      </section>
    </toc>
  </front>
  <middle>
    <section anchor="Introduction" numbered="true" removeInRFC="false" toc="include" pn="section-1">
      <name slugifiedName="name-introduction">Introduction</name>
      <t indent="0" pn="section-1-1">"The OAuth 2.0 Authorization Framework" <xref target="RFC6749" format="default" sectionFormat="of" derivedContent="RFC6749"/> defines the <tt>scope</tt> parameter that allows OAuth clients to
specify the requested scope, i.e., the limited capability, of an access token.
This mechanism is sufficient to implement static scenarios and
coarse-grained authorization requests, such as "give me read access to
the resource owner's profile." However, it is not sufficient to specify
fine-grained authorization requirements, such as "please let me transfer an amount of 45 Euros to Merchant A"
or "please give me read access to directory A and write access to file X."</t>
      <t indent="0" pn="section-1-2">This specification introduces a new parameter <tt>authorization_details</tt> that allows clients to specify their fine-grained authorization requirements using the expressiveness of JSON <xref target="RFC8259" format="default" sectionFormat="of" derivedContent="RFC8259"/> data structures.</t>
      <t indent="0" pn="section-1-3">For example, an authorization request for a credit transfer (designated as "payment initiation" in several open banking initiatives) can be represented using a JSON object like this:</t>
      <figure align="left" suppress-title="false" pn="figure-1">
        <name slugifiedName="name-example-of-an-authorization">Example of an Authorization Request for a Credit Transfer
</name>
        <sourcecode type="json" markers="false" pn="section-1-4.1">{
   "type": "payment_initiation",
   "locations": [
      "https://example.com/payments"
   ],
   "instructedAmount": {
      "currency": "EUR",
      "amount": "123.50"
   },
   "creditorName": "Merchant A",
   "creditorAccount": {
      "bic":"ABCIDEFFXXX",
      "iban": "DE02100100109307118603"
   },
   "remittanceInformationUnstructured": "Ref Number Merchant"
}
</sourcecode>
      </figure>
      <t indent="0" pn="section-1-5">This object contains detailed information about the intended payment, such as amount, currency, and creditor, that is required to inform the user and obtain their consent. The authorization server (AS) and the respective resource server (RS) (providing the payment initiation API) will together enforce this consent.</t>
      <t indent="0" pn="section-1-6">For a comprehensive discussion of the challenges arising from new use cases in the open banking and electronic signing spaces, see <xref target="Transaction-Auth" format="default" sectionFormat="of" derivedContent="Transaction-Auth"/>.</t>
      <t indent="0" pn="section-1-7">In addition to facilitating custom authorization requests, this specification also introduces a set of common data type fields for use across different APIs.</t>
      <section anchor="conventions-and-terminology" numbered="true" removeInRFC="false" toc="include" pn="section-1.1">
        <name slugifiedName="name-conventions-and-terminology">Conventions and Terminology</name>
        <t indent="0" pn="section-1.1-1">
    The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>", "<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>", "<bcp14>SHALL NOT</bcp14>", "<bcp14>SHOULD</bcp14>", "<bcp14>SHOULD NOT</bcp14>", "<bcp14>RECOMMENDED</bcp14>", "<bcp14>NOT RECOMMENDED</bcp14>",
    "<bcp14>MAY</bcp14>", and "<bcp14>OPTIONAL</bcp14>" in this document are to be interpreted as
    described in BCP 14 <xref target="RFC2119" format="default" sectionFormat="of" derivedContent="RFC2119"/> <xref target="RFC8174" format="default" sectionFormat="of" derivedContent="RFC8174"/> 
    when, and only when, they appear in all capitals, as shown here.
        </t>
        <t indent="0" pn="section-1.1-2">This specification uses the terms "access token", "refresh token",
"authorization server" (AS), "resource server" (RS), "authorization endpoint",
"authorization request", "authorization response", "token endpoint",
"grant type", "access token request", "access token response", and
"client" defined by "<xref target="RFC6749" format="title" sectionFormat="of" derivedContent="The OAuth 2.0 Authorization Framework"/>" <xref target="RFC6749" format="default" sectionFormat="of" derivedContent="RFC6749"/>.</t>
      </section>
    </section>
    <section anchor="authz_details" numbered="true" removeInRFC="false" toc="include" pn="section-2">
      <name slugifiedName="name-request-parameter-authoriza">Request Parameter "authorization_details"</name>
      <t indent="0" pn="section-2-1">The request parameter <tt>authorization_details</tt> contains, in JSON notation, an array of objects. Each JSON object contains the data to specify the authorization requirements for a certain type of resource. The type of resource or access requirement is determined by the <tt>type</tt> field, which is defined as follows:</t>
      <dl spacing="normal" indent="3" newline="false" pn="section-2-2">
        <dt pn="section-2-2.1"><tt>type</tt>:</dt>
        <dd pn="section-2-2.2">An identifier for the authorization details type as a string. The value of the <tt>type</tt> field determines the allowable contents of the object that contains it. The value is unique for the described API in the context of the AS. This field is <bcp14>REQUIRED</bcp14>.</dd>
      </dl>
      <t indent="0" pn="section-2-3">An <tt>authorization_details</tt> array <bcp14>MAY</bcp14> contain multiple entries of the same <tt>type</tt>.</t>
      <t indent="0" pn="section-2-4"><xref target="figure2" format="default" sectionFormat="of" derivedContent="Figure 2"/> shows an <tt>authorization_details</tt> of type <tt>payment_initiation</tt> using the example data shown above:</t>
      <figure anchor="figure2" align="left" suppress-title="false" pn="figure-2">
        <name slugifiedName="name-example-of-authorization_de">Example of "authorization_details" for a Credit Transfer
</name>
        <sourcecode type="json" markers="false" pn="section-2-5.1">[
   {
      "type": "payment_initiation",
      "actions": [
         "initiate",
         "status",
         "cancel"
      ],
      "locations": [
         "https://example.com/payments"
      ],
      "instructedAmount": {
         "currency": "EUR",
         "amount": "123.50"
      },
      "creditorName": "Merchant A",
      "creditorAccount": {
         "iban": "DE02100100109307118603"
      },
      "remittanceInformationUnstructured": "Ref Number Merchant"
   }
]
</sourcecode>
      </figure>
      <t indent="0" pn="section-2-6"><xref target="figure3" format="default" sectionFormat="of" derivedContent="Figure 3"/> shows a combined request asking for access to account information and permission to initiate a payment:</t>
      <figure anchor="figure3" align="left" suppress-title="false" pn="figure-3">
        <name slugifiedName="name-example-of-authorization_det">Example of "authorization_details" for a Combined Request
</name>
        <sourcecode type="json" markers="false" pn="section-2-7.1">[
   {
      "type": "account_information",
      "actions": [
         "list_accounts",
         "read_balances",
         "read_transactions"
      ],
      "locations": [
         "https://example.com/accounts"
      ]
   },
   {
      "type": "payment_initiation",
      "actions": [
         "initiate",
         "status",
         "cancel"
      ],
      "locations": [
         "https://example.com/payments"
      ],
      "instructedAmount": {
         "currency": "EUR",
         "amount": "123.50"
      },
      "creditorName": "Merchant A",
      "creditorAccount": {
         "iban": "DE02100100109307118603"
      },
      "remittanceInformationUnstructured": "Ref Number Merchant"
   }
]
</sourcecode>
      </figure>
      <t indent="0" pn="section-2-8">The JSON objects with <tt>type</tt> fields of <tt>account_information</tt> and <tt>payment_initiation</tt> represent the different <tt>authorization_details</tt> to be used by the AS to ask for consent.</t>
      <aside pn="section-2-9">
        <t indent="0" pn="section-2-9.1">Note: The AS will make this data subsequently available to the respective RSs (see <xref target="resource_servers" format="default" sectionFormat="of" derivedContent="Section 9"/>).</t>
      </aside>
      <section anchor="authorization-details-types" numbered="true" removeInRFC="false" toc="include" pn="section-2.1">
        <name slugifiedName="name-authorization-details-types">Authorization Details Types</name>
        <t indent="0" pn="section-2.1-1">The AS controls the interpretation of the value of the <tt>type</tt> parameter as well as the object fields that the <tt>type</tt> parameter allows. However, the value of the <tt>type</tt> parameter is also generally documented and intended to be used by developers. It is <bcp14>RECOMMENDED</bcp14> that API designers choose <tt>type</tt> values that are easily copied without ambiguity. For example, some glyphs have multiple Unicode code points for the same visual character, and a developer could potentially type a different character than what the AS has defined. Possible means of reducing potential confusion are limiting the value to ASCII <xref target="RFC0020" format="default" sectionFormat="of" derivedContent="RFC0020"/> characters, providing a machine-readable listing of data type values, or instructing developers to copy and paste directly from the documentation.</t>
        <t indent="0" pn="section-2.1-2">If an application or API is expected to be deployed across different servers, such as the case in an open standard, the API designer is <bcp14>RECOMMENDED</bcp14> to use a collision-resistant namespace under their control, such as a URI that the API designer controls.</t>
        <t indent="0" pn="section-2.1-3">The following example shows how an implementation could utilize the namespace <tt>https://scheme.example.org/</tt> to ensure collision-resistant type values.</t>
        <figure align="left" suppress-title="false" pn="figure-4">
          <name slugifiedName="name-example-of-authorization_deta">Example of "authorization_details" with a URL as Type Identifier
</name>
          <sourcecode type="json" markers="false" pn="section-2.1-4.1">{
   "type": "https://scheme.example.org/files",
   "locations": [
      "https://example.com/files"
   ],
   "permissions": [
      {
         "path": "/myfiles/A",
         "access": [
            "read"
         ]
      },
      {
         "path": "/myfiles/A/X",
         "access": [
            "read",
            "write"
         ]
      }
   ]
}
</sourcecode>
        </figure>
      </section>
      <section anchor="common_data_fields" numbered="true" removeInRFC="false" toc="include" pn="section-2.2">
        <name slugifiedName="name-common-data-fields">Common Data Fields</name>
        <t indent="0" pn="section-2.2-1">This specification defines a set of common data fields that are designed to be usable across different types of APIs. This specification does not require the use of these common fields by an API definition but, instead, provides them as reusable generic components for API designers to make use of. The allowable values of all fields are determined by the API being protected, as defined by a particular "type" value.</t>
        <dl spacing="normal" indent="3" newline="false" pn="section-2.2-2">
          <dt pn="section-2.2-2.1"><tt>locations</tt>:</dt>
          <dd pn="section-2.2-2.2">An array of strings representing the location of the resource or RS. These strings are typically URIs identifying the
location of the RS. This field can allow a client to specify a particular RS, as discussed in <xref target="security_considerations" format="default" sectionFormat="of" derivedContent="Section 12"/>.</dd>
          <dt pn="section-2.2-2.3"><tt>actions</tt>:</dt>
          <dd pn="section-2.2-2.4">An array of strings representing the kinds of actions to be taken at the resource.</dd>
          <dt pn="section-2.2-2.5"><tt>datatypes</tt>:</dt>
          <dd pn="section-2.2-2.6">An array of strings representing the kinds of data being requested from the resource.</dd>
          <dt pn="section-2.2-2.7"><tt>identifier</tt>:</dt>
          <dd pn="section-2.2-2.8">A string identifier indicating a specific resource available at the API.</dd>
          <dt pn="section-2.2-2.9"><tt>privileges</tt>:</dt>
          <dd pn="section-2.2-2.10">An array of strings representing the types or levels of privilege being requested at the resource.</dd>
        </dl>
        <t indent="0" pn="section-2.2-3">When different common data fields are used in combination, the permissions the client requests are the product of all the values.
The object represents a request for all <tt>actions</tt> values listed within the object
to be used at all <tt>locations</tt> values listed within the object for all <tt>datatypes</tt>
values listed within the object. In the following example, the client is requesting <tt>read</tt> and <tt>write</tt>
access to both the <tt>contacts</tt> and <tt>photos</tt> belonging to customers in a <tt>customer_information</tt> API. 

If this request is granted, the client
would assume it would be able to use any combination of rights
defined by the API, such as read access to the photos and write
access to the contacts.</t>
        <figure align="left" suppress-title="false" pn="figure-5">
          <name slugifiedName="name-example-of-authorization_detai">Example of "authorization_details" with Common Data Fields
</name>
          <sourcecode type="json" markers="false" pn="section-2.2-4.1">[
   {
      "type": "customer_information",
      "locations": [
         "https://example.com/customers"
      ],
      "actions": [
         "read",
         "write"
      ],
      "datatypes": [
         "contacts",
         "photos"
      ]
   }
]
</sourcecode>
        </figure>
        <t indent="0" pn="section-2.2-5">If the client wishes to have finer control over its access, it can send multiple objects. In this example,
the client is asking for <tt>read</tt> access to the <tt>contacts</tt> and <tt>write</tt> access to the <tt>photos</tt> in the same API endpoint.
If this request is granted, the client would not be able to write to the contacts.</t>
        <figure align="left" suppress-title="false" pn="figure-6">
          <name slugifiedName="name-example-of-authorization_detail">Example of "authorization_details" with Common Data Fields in Multiple Objects
</name>
          <sourcecode type="json" markers="false" pn="section-2.2-6.1">[
   {
      "type": "customer_information",
      "locations": [
         "https://example.com/customers"
      ],
      "actions": [
         "read"
      ],
      "datatypes": [
         "contacts"
      ]
   },
   {
      "type": "customer_information",
      "locations": [
         "https://example.com/customers"
      ],
      "actions": [
         "write"
      ],
      "datatypes": [
         "photos"
      ]
   }
]
</sourcecode>
        </figure>
        <t indent="0" pn="section-2.2-7">An API <bcp14>MAY</bcp14> define its own extensions, subject to the <tt>type</tt> of the respective authorization object.
It is anticipated that API designers will use a combination
of common data fields defined in this specification as well as
fields specific to the API itself. The following non-normative
example shows the use of both common and API-specific fields as
part of two different fictitious API <tt>type</tt> values. The first
access request includes the <tt>actions</tt>, <tt>locations</tt>, and <tt>datatypes</tt>
fields specified here as well as the API-specific <tt>geolocation</tt>
field, indicating access to photos taken at the given coordinates.
The second access request includes the <tt>actions</tt> and
<tt>identifier</tt> fields specified here as well as the API-specific
<tt>currency</tt> fields.</t>
        <figure align="left" suppress-title="false" pn="figure-7">
          <name slugifiedName="name-example-of-authorization_details">Example of "authorization_details" Using Common and Extension Data Fields</name>
          <sourcecode type="json" markers="false" pn="section-2.2-8.1">[
   {
      "type":"photo-api",
      "actions":[
         "read",
         "write"
      ],
      "locations":[
         "https://server.example.net/",
         "https://resource.local/other"
      ],
      "datatypes":[
         "metadata",
         "images"
      ],
      "geolocation":[
         {
            "lat":-32.364,
            "lng":153.207
         },
         {
            "lat":-35.364,
            "lng":158.207
         }
      ]
   },
   {
      "type":"financial-transaction",
      "actions":[
         "withdraw"
      ],
      "identifier":"account-14-32-32-3",
      "currency":"USD"
   }
]
</sourcecode>
        </figure>
        <t indent="0" pn="section-2.2-9">If this request is approved, the resulting access token's access rights will be
the union of the requested types of access for each of the two APIs, just as above.</t>
      </section>
    </section>
    <section anchor="authz_request" numbered="true" removeInRFC="false" toc="include" pn="section-3">
      <name slugifiedName="name-authorization-request">Authorization Request</name>
      <t indent="0" pn="section-3-1">The <tt>authorization_details</tt> authorization request parameter can be used to specify authorization requirements in all places where the <tt>scope</tt> parameter is used for the same purpose, examples include:</t>
      <ul spacing="normal" bare="false" empty="false" indent="3" pn="section-3-2">
        <li pn="section-3-2.1">authorization requests as specified in <xref target="RFC6749" format="default" sectionFormat="of" derivedContent="RFC6749"/></li>
        <li pn="section-3-2.2">device authorization requests as specified in <xref target="RFC8628" format="default" sectionFormat="of" derivedContent="RFC8628"/></li>
        <li pn="section-3-2.3">backchannel authentication requests as defined in <xref target="OID-CIBA" format="default" sectionFormat="of" derivedContent="OID-CIBA"/></li>
      </ul>
      <t indent="0" pn="section-3-3">In case of authorization requests as defined in <xref target="RFC6749" format="default" sectionFormat="of" derivedContent="RFC6749"/>, implementers <bcp14>MAY</bcp14> consider using pushed authorization requests <xref target="RFC9126" format="default" sectionFormat="of" derivedContent="RFC9126"/> to improve the security, privacy, and reliability of the flow. See Sections <xref target="security_considerations" format="counter" sectionFormat="of" derivedContent="12"/>, <xref target="privacy_considerations" format="counter" sectionFormat="of" derivedContent="13"/>, and <xref target="large_requests" format="counter" sectionFormat="of" derivedContent="11.4"/> for details.</t>
      <t indent="0" pn="section-3-4">Parameter encoding is determined by the respective context. In the context of an authorization request according to <xref target="RFC6749" format="default" sectionFormat="of" derivedContent="RFC6749"/>, the parameter is encoded using the <tt>application/x-www-form-urlencoded</tt> format of the serialized JSON as shown in <xref target="fig8" format="default" sectionFormat="of" derivedContent="Figure 8"/>, using the example from <xref target="authz_details" format="default" sectionFormat="of" derivedContent="Section 2"/> (line breaks for display purposes only):</t>
      <figure anchor="fig8" align="left" suppress-title="false" pn="figure-8">
        <name slugifiedName="name-example-of-authorization-re">Example of Authorization Request with "authorization_details"</name>
        <sourcecode type="http-message" markers="false" pn="section-3-5.1">
GET /authorize?response_type=code
   &amp;client_id=s6BhdRkqt3
   &amp;state=af0ifjsldkj
   &amp;redirect_uri=https%3A%2F%2Fclient.example.org%2Fcb
   &amp;code_challenge_method=S256
   &amp;code_challenge=K2-ltc83acc4h0c9w6ESC_rEMTJ3bwc-uCHaoeK1t8U
   &amp;authorization_details=%5B%7B%22type%22%3A%22account%5Finfo
   rmation%22%2C%22actions%22%3A%5B%22list%5Faccounts%22%2C%22
   read%5Fbalances%22%2C%22read%5Ftransactions%22%5D%2C%22loca
   tions%22%3A%5B%22https%3A%2F%2Fexample%2Ecom%2Faccounts%22%
   5D%7D%2C%7B%22type%22%3A%22payment%5Finitiation%22%2C%22act
   ions%22%3A%5B%22initiate%22%2C%22status%22%2C%22cancel%22%5
   D%2C%22locations%22%3A%5B%22https%3A%2F%2Fexample%2Ecom%2Fp
   ayments%22%5D%2C%22instructedAmount%22%3A%7B%22currency%22%
   3A%22EUR%22%2C%22amount%22%3A%22123%2E50%22%7D%2C%22credito
   rName%22%3A%22Merchant%20A%22%2C%22creditorAccount%22%3A%7B
   %22iban%22%3A%22DE02100100109307118603%22%7D%2C%22remittanc
   eInformationUnstructured%22%3A%22Ref%20Number%20Merchant%22
   %7D%5D HTTP/1.1
Host: server.example.com
</sourcecode>
      </figure>
      <t indent="0" pn="section-3-6">Based on the data provided in the <tt>authorization_details</tt> parameter, the AS will ask the user for consent to the requested access permissions.</t>
      <aside pn="section-3-7">
        <t indent="0" pn="section-3-7.1">Note: The user may also grant a subset of the requested authorization details.</t>
      </aside>
      <t indent="0" pn="section-3-8">In <xref target="fig9" format="default" sectionFormat="of" derivedContent="Figure 9"/>, the client wants to get access to account information and initiate a payment:</t>
      <figure anchor="fig9" align="left" suppress-title="false" pn="figure-9">
        <name slugifiedName="name-url-decoded-authorization_d">URL Decoded "authorization_details"</name>
        <sourcecode type="json" markers="false" pn="section-3-9.1">[
   {
      "type": "account_information",
      "actions": [
         "list_accounts",
         "read_balances",
         "read_transactions"
      ],
      "locations": [
         "https://example.com/accounts"
      ]
   },
   {
      "type": "payment_initiation",
      "actions": [
         "initiate",
         "status",
         "cancel"
      ],
      "locations": [
         "https://example.com/payments"
      ],
      "instructedAmount": {
         "currency": "EUR",
         "amount": "123.50"
      },
      "creditorName": "Merchant A",
      "creditorAccount": {
         "iban": "DE02100100109307118603"
      },
      "remittanceInformationUnstructured": "Ref Number Merchant"
   }
]
</sourcecode>
      </figure>
      <section anchor="scope" numbered="true" removeInRFC="false" toc="include" pn="section-3.1">
        <name slugifiedName="name-relationship-to-the-scope-p">Relationship to the "scope" Parameter</name>
        <t indent="0" pn="section-3.1-1"><tt>authorization_details</tt> and <tt>scope</tt> can be used in the same authorization request for carrying independent authorization requirements.</t>
        <t indent="0" pn="section-3.1-2">Combined use of <tt>authorization_details</tt> and <tt>scope</tt> is supported by this specification in part to allow existing OAuth-based applications to incrementally migrate towards using <tt>authorization_details</tt> exclusively. It is <bcp14>RECOMMENDED</bcp14> that a given API use only one form of requirement specification.</t>
        <t indent="0" pn="section-3.1-3">The AS <bcp14>MUST</bcp14> process both sets of requirements in combination with each other for the given authorization request. The details of how the AS combines these parameters are specific to the APIs being protected and outside the scope of this specification.</t>
        <t indent="0" pn="section-3.1-4">When gathering user consent, the AS <bcp14>MUST</bcp14> present the merged set of requirements represented by the authorization request.</t>
        <t indent="0" pn="section-3.1-5">If the resource owner grants the client the requested access, the AS will issue tokens to the client that are associated with the respective <tt>authorization_details</tt> (and scope values, if applicable).</t>
      </section>
      <section anchor="relationship-to-resource-parameter" numbered="true" removeInRFC="false" toc="include" pn="section-3.2">
        <name slugifiedName="name-relationship-to-the-resourc">Relationship to the "resource" Parameter</name>
        <t indent="0" pn="section-3.2-1">The <tt>resource</tt> authorization request parameter, as defined in <xref target="RFC8707" format="default" sectionFormat="of" derivedContent="RFC8707"/>, can be used to further determine the resources where the requested scope can be applied. The <tt>resource</tt> parameter does not have any impact on the way the AS processes the <tt>authorization_details</tt> authorization request parameter.</t>
      </section>
    </section>
    <section anchor="authorization-response" numbered="true" removeInRFC="false" toc="include" pn="section-4">
      <name slugifiedName="name-authorization-response">Authorization Response</name>
      <t indent="0" pn="section-4-1">This specification does not define extensions to the authorization response.</t>
    </section>
    <section anchor="authz_details_error" numbered="true" removeInRFC="false" toc="include" pn="section-5">
      <name slugifiedName="name-authorization-error-respons">Authorization Error Response</name>
      <t indent="0" pn="section-5-1">The AS <bcp14>MUST</bcp14> refuse to process any unknown authorization details type or authorization details not conforming to the respective type definition. The AS <bcp14>MUST</bcp14> abort processing and respond with an error <tt>invalid_authorization_details</tt> to the client if any of the following are true of the objects in the <tt>authorization_details</tt> structure:</t>
      <ul spacing="normal" bare="false" empty="false" indent="3" pn="section-5-2">
        <li pn="section-5-2.1">contains an unknown authorization details type value,</li>
        <li pn="section-5-2.2">is an object of known type but containing unknown fields,</li>
        <li pn="section-5-2.3">contains fields of the wrong type for the authorization details type,</li>
        <li pn="section-5-2.4">contains fields with invalid values for the authorization details type, or</li>
        <li pn="section-5-2.5">is missing required fields for the authorization details type.</li>
      </ul>
    </section>
    <section anchor="token-request" numbered="true" removeInRFC="false" toc="include" pn="section-6">
      <name slugifiedName="name-token-request">Token Request</name>
      <t indent="0" pn="section-6-1">The <tt>authorization_details</tt> token request parameter can be used to specify the authorization details that a client wants the AS to assign to an access token. The AS checks whether the underlying grant (in case of grant types <tt>authorization_code</tt>, <tt>refresh_token</tt>, etc.) or the client's policy (in case of grant type <tt>client_credentials</tt>) allows the issuance of an access token with the requested authorization details. Otherwise, the AS refuses the request with the error code <tt>invalid_authorization_details</tt> (similar to <tt>invalid_scope</tt>).</t>
      <section anchor="comparing-authorization-details" numbered="true" removeInRFC="false" toc="include" pn="section-6.1">
        <name slugifiedName="name-comparing-authorization-det">Comparing Authorization Details</name>
        <t indent="0" pn="section-6.1-1">Many actions in the OAuth protocol allow the AS and RS to make security decisions based on whether the request
is asking for "more" or "less" than a previous, existing request. For example, upon refreshing a token, the client can
ask for a new access token with "fewer permissions" than had been previously authorized by the resource owner.
The requested access token will convey the reduced permissions, but the resource owner's previous authorization is unchanged by such requests.
Since the semantics of the fields in the <tt>authorization_details</tt> will be implementation specific to a given API or set of APIs, there is no
standardized mechanism to compare two arbitrary authorization detail requests.
An AS should not rely on simple object comparison in most cases, as the intersection of some fields
within a request could have side effects on the access rights granted, depending on how the API
has been designed and deployed. This is a similar effect to the scope values used with some APIs.</t>
        <t indent="0" pn="section-6.1-2">When comparing a new request to an existing request, an AS can use the same
processing techniques as used in granting the request in the first place to determine if a resource
owner needs to authorize the request. The details of this comparison are dependent on the definition
of the <tt>type</tt> of authorization request and outside the scope of this specification, but common patterns
can be applied.</t>
        <t indent="0" pn="section-6.1-3">This shall be illustrated using our running example. The example authorization request in <xref target="authz_request" format="default" sectionFormat="of" derivedContent="Section 3"/>, if approved by the user, resulted in the issuance of an authorization code associated with the privileges to:</t>
        <ul spacing="normal" bare="false" empty="false" indent="3" pn="section-6.1-4">
          <li pn="section-6.1-4.1">list accounts,</li>
          <li pn="section-6.1-4.2">access the balance of one or more accounts,</li>
          <li pn="section-6.1-4.3">access the transactions of one or more accounts, and</li>
          <li pn="section-6.1-4.4">initiate, check the status of, and cancel a payment.</li>
        </ul>
        <t indent="0" pn="section-6.1-5">The client could now request the AS to issue an access token assigned with the privilege to just access a list of accounts as follows:</t>
        <figure align="left" suppress-title="false" pn="figure-10">
          <name slugifiedName="name-example-of-authorization_details-">Example of "authorization_details" Reduced Privileges
</name>
          <sourcecode type="json" markers="false" pn="section-6.1-6.1">[
   {
      "type": "account_information",
      "actions": [
         "list_accounts"
      ],
      "locations": [
         "https://example.com/accounts"
      ]
   }
]
</sourcecode>
        </figure>
        <t indent="0" pn="section-6.1-7">The example API is designed such that each field used by the <tt>account_information</tt> type contains additive rights,
with each value within the <tt>actions</tt> and <tt>locations</tt> arrays specifying a different element of access. To make a comparison in this
instance, the AS would perform the following steps:</t>
        <ul spacing="normal" bare="false" empty="false" indent="3" pn="section-6.1-8">
          <li pn="section-6.1-8.1">verify that the authorization code issued in the previous step contains an authorization details object of type <tt>account_information</tt>,</li>
          <li pn="section-6.1-8.2">verify whether the approved list of actions contains <tt>list_accounts</tt>, and</li>
          <li pn="section-6.1-8.3">verify whether the <tt>locations</tt> value includes only previously approved locations.</li>
        </ul>
        <t indent="0" pn="section-6.1-9">If all checks succeed, the AS would issue the requested access token with the reduced set of access.</t>
        <t indent="0" pn="section-6.1-10">Note that this comparison is relevant to this specific API type definition. A different API type definition could have different processing rules. For example, an <tt>actions</tt> value could subsume the rights associated with another <tt>actions</tt> value. For example, if a client initially asks for
a token with <tt>write</tt> access, this implies both read and write access to this API:</t>
        <figure align="left" suppress-title="false" pn="figure-11">
          <name slugifiedName="name-example-of-authorization_details-r">Example of "authorization_details" Requesting "write" Access to an API</name>
          <sourcecode type="json" markers="false" pn="section-6.1-11.1">[
    {
        "type": "example_api",
        "actions": [
            "write"
        ]
    }
]
</sourcecode>
        </figure>
        <t indent="0" pn="section-6.1-12">Later, that same client makes a refresh request for <tt>read</tt> access:</t>
        <figure align="left" suppress-title="false" pn="figure-12">
          <name slugifiedName="name-example-of-authorization_details-re">Example of "authorization_details" Requesting "read" Access to an API
</name>
          <sourcecode type="json" markers="false" pn="section-6.1-13.1">[
    {
        "type": "example_api",
        "actions": [
            "read"
        ]
    }
]
</sourcecode>
        </figure>
        <t indent="0" pn="section-6.1-14">The AS would compare the <tt>type</tt> value and the <tt>actions</tt> value to determine that the <tt>read</tt> access is
already covered by the <tt>write</tt> access previously granted to the client.</t>
        <t indent="0" pn="section-6.1-15">This same API could be designed with a possible value for <tt>privileges</tt> of <tt>admin</tt>, used in this example to
denote that the resulting token is allowed to perform any of the functions on the resources.

If that
client is then granted such <tt>admin</tt> privileges to the API, the <tt>authorization_details</tt> would be as follows:
</t>
        <figure align="left" suppress-title="false" pn="figure-13">
          <name slugifiedName="name-example-of-authorization_details-w">Example of "authorization_details" with "admin" Access to an API
</name>
          <sourcecode type="json" markers="false" pn="section-6.1-16.1">[
    {
        "type": "example_api",
        "privileges": [
            "admin"
        ]
    }
]
</sourcecode>
        </figure>
        <t indent="0" pn="section-6.1-17">The AS would compare the <tt>type</tt> value and find that the <tt>privileges</tt> value subsumes any aspects of
<tt>read</tt> or <tt>write</tt> access that had been granted to the client previously. Note that other
API definitions can use <tt>privileges</tt> such that values do not subsume one another.</t>
        <t indent="0" pn="section-6.1-18">The next example shows how the client can use the common data element <tt>locations</tt> (see <xref target="common_data_fields" format="default" sectionFormat="of" derivedContent="Section 2.2"/>) to request the issuance of an access token restricted to a certain RS. In our running example, the client may ask for all permissions of the approved grant of type <tt>payment_initiation</tt> applicable to the RS residing at <tt>https://example.com/payments</tt> as follows:</t>
        <figure align="left" suppress-title="false" pn="figure-14">
          <name slugifiedName="name-example-of-authorization_details-re-2">Example of "authorization_details" Requesting an Audience-Restricted Access Token
</name>
          <sourcecode type="json" markers="false" pn="section-6.1-19.1">[
   {
      "type": "payment_initiation",
      "locations": [
         "https://example.com/payments"
      ]
   }
]

</sourcecode>
        </figure>
      </section>
    </section>
    <section anchor="token-response" numbered="true" removeInRFC="false" toc="include" pn="section-7">
      <name slugifiedName="name-token-response">Token Response</name>
      <t indent="0" pn="section-7-1">In addition to the token response parameters as defined in <xref target="RFC6749" format="default" sectionFormat="of" derivedContent="RFC6749"/>, the AS <bcp14>MUST</bcp14> also return the <tt>authorization_details</tt> as granted by the resource owner and assigned to the respective access token.</t>
      <t indent="0" pn="section-7-2">The authorization details assigned to the access token issued in a token response are determined by the <tt>authorization_details</tt> parameter of the corresponding token request. If the client does not specify the <tt>authorization_details</tt> token request parameters, the AS determines the resulting <tt>authorization_details</tt> at its discretion.</t>
      <t indent="0" pn="section-7-3">The AS <bcp14>MAY</bcp14> omit values in the <tt>authorization_details</tt> to the client.</t>
      <t indent="0" pn="section-7-4">For our running example, it would look like this:</t>
      <figure align="left" suppress-title="false" pn="figure-15">
        <name slugifiedName="name-example-token-response">Example Token Response</name>
        <sourcecode type="http-message" markers="false" pn="section-7-5.1">
HTTP/1.1 200 OK
Content-Type: application/json
Cache-Control: no-store

{
   "access_token": "2YotnFZFEjr1zCsicMWpAA",
   "token_type": "example",
   "expires_in": 3600,
   "refresh_token": "tGzv3JOkF0XG5Qx2TlKWIA",
   "authorization_details": [
      {
         "type": "payment_initiation",
         "actions": [
            "initiate",
            "status",
            "cancel"
         ],
         "locations": [
            "https://example.com/payments"
         ],
         "instructedAmount": {
            "currency": "EUR",
            "amount": "123.50"
         },
         "creditorName": "Merchant A",
         "creditorAccount": {
            "iban": "DE02100100109307118603"
         },
         "remittanceInformationUnstructured": "Ref Number Merchant"
      }
   ]
}
</sourcecode>
      </figure>
      <section anchor="enriched-authorization-details-in-token-response" numbered="true" removeInRFC="false" toc="include" pn="section-7.1">
        <name slugifiedName="name-enriched-authorization-deta">Enriched Authorization Details in Token Response</name>
        <t indent="0" pn="section-7.1-1">The authorization details attached to the access token <bcp14>MAY</bcp14> differ from what the client requests. In addition to the user authorizing less than what the client requested, there are some use cases where the AS enriches the data in an authorization details object. Whether enrichment is allowed and specifics of how it works are necessarily part of the definition of the respective authorization details type.</t>
        <t indent="0" pn="section-7.1-2">As one example, a client may ask for access to account information but leave the decision about the specific accounts it will be able to access to the user. During the course of the authorization process, the user would select the subset of their accounts that they want to allow the client to access. As one design option to convey the selected accounts, the AS could add this information to the respective authorization details object.</t>
        <t indent="0" pn="section-7.1-3">In that example, the requested <tt>authorization_details</tt> parameter might look like the following. In this example, the empty arrays serve as placeholders for where data will be added during enrichment by the AS. This example is illustrative only and is not intended to suggest a preference for designing the specifics of any authorization details type this way.</t>
        <figure align="left" suppress-title="false" pn="figure-16">
          <name slugifiedName="name-example-of-requested-author">Example of Requested "authorization_details"</name>
          <sourcecode type="json" markers="false" pn="section-7.1-4.1">"authorization_details": [
   {
      "type": "account_information",
      "access": {
         "accounts": [],
         "balances": [],
         "transactions": []
      },
      "recurringIndicator":true
   }
]
</sourcecode>
        </figure>
        <t indent="0" pn="section-7.1-5">The AS then would expand the authorization details object and add the respective account identifiers.</t>
        <figure align="left" suppress-title="false" pn="figure-17">
          <name slugifiedName="name-example-of-enriched-authori">Example of Enriched "authorization_details"</name>
          <sourcecode type="http-message" markers="false" pn="section-7.1-6.1">
HTTP/1.1 200 OK
Content-Type: application/json
Cache-Control: no-store

{
   "access_token":"2YotnFZFEjr1zCsicMWpAA",
   "token_type":"example",
   "expires_in":3600,
   "refresh_token":"tGzv3JokF0XG5Qx2TlKWIA",
   "authorization_details":[
      {
         "type":"account_information",
         "access":{
            "accounts":[
               {
                  "iban":"DE2310010010123456789"
               },
               {
                  "maskedPan":"123456xxxxxx1234"
               }
            ],
            "balances":[
               {
                  "iban":"DE2310010010123456789"
               }
            ],
            "transactions":[
               {
                  "iban":"DE2310010010123456789"
               },
               {
                  "maskedPan":"123456xxxxxx1234"
               }
            ]
         },
         "recurringIndicator":true
      }
   ]
}
</sourcecode>
        </figure>
        <t indent="0" pn="section-7.1-7">For another example, the client is asking for access to a medical record but does not know the record number at request time. In this example, the client specifies the type of access it wants but doesn't specify the location or identifier of that access.</t>
        <figure align="left" suppress-title="false" pn="figure-18">
          <name slugifiedName="name-example-of-requested-authori">Example of Requested "authorization_details"</name>
          <sourcecode type="json" markers="false" pn="section-7.1-8.1">{
"authorization_details": [
   {
      "type": "medical_record",
      "sens": [ "HIV", "ETH", "MART" ],
      "actions": [ "read" ],
      "datatypes": [ "Patient", "Observation", "Appointment" ]
   }
]}
</sourcecode>
        </figure>
        <t indent="0" pn="section-7.1-9">When the user interacts with the AS, they select which of the medical records they are responsible for giving to the client. This information gets returned with the access token.</t>
        <figure align="left" suppress-title="false" pn="figure-19">
          <name slugifiedName="name-example-of-enriched-authoriz">Example of Enriched "authorization_details"</name>
          <sourcecode type="json" markers="false" pn="section-7.1-10.1">{
   "access_token":"2YotnFZFEjr1zCsicMWpAA",
   "token_type":"example",
   "expires_in":3600,
   "refresh_token":"tGzv3JokF0XG5Qx2TlKWIA",
   "authorization_details":[
    {
      "type": "medical_record",
      "sens": [ "HIV", "ETH", "MART" ],
      "actions": [ "read" ],
      "datatypes": [ "Patient", "Observation", "Appointment" ],
      "identifier": "patient-541235",
      "locations": [ "https://records.example.com/" ]
     }
  ]
}
</sourcecode>
        </figure>
        <aside pn="section-7.1-11">
          <t indent="0" pn="section-7.1-11.1">Note: The client needs to be aware upfront of the possibility that a certain authorization details object can be enriched. It is assumed that this property is part of the definition of the respective authorization details type.</t>
        </aside>
      </section>
    </section>
    <section anchor="token-error-response" numbered="true" removeInRFC="false" toc="include" pn="section-8">
      <name slugifiedName="name-token-error-response">Token Error Response</name>
      <t indent="0" pn="section-8-1">The Token Error Response <bcp14>MUST</bcp14> conform to the rules given in <xref target="authz_details_error" format="default" sectionFormat="of" derivedContent="Section 5"/>.</t>
    </section>
    <section anchor="resource_servers" numbered="true" removeInRFC="false" toc="include" pn="section-9">
      <name slugifiedName="name-resource-servers">Resource Servers</name>
      <t indent="0" pn="section-9-1">In order to enable the RS to enforce the authorization details as approved in the authorization process, the AS <bcp14>MUST</bcp14> make this data available to the RS. The AS <bcp14>MAY</bcp14> add the <tt>authorization_details</tt> field to access tokens in JSON Web Token (JWT) format or to token introspection responses.</t>
      <section anchor="jwt_based_access_tokens" numbered="true" removeInRFC="false" toc="include" pn="section-9.1">
        <name slugifiedName="name-jwt-based-access-tokens">JWT-Based Access Tokens</name>
        <t indent="0" pn="section-9.1-1">If the access token is a JWT <xref target="RFC7519" format="default" sectionFormat="of" derivedContent="RFC7519"/>, the AS is <bcp14>RECOMMENDED</bcp14> to add the authorization details object, filtered to the specific audience, as a top-level claim.</t>
        <t indent="0" pn="section-9.1-2">The AS will typically also add further claims to the JWT that the RS requires request processing, e.g., user ID, roles, and transaction-specific data. What claims the particular RS requires is defined by the RS-specific policy with the AS.</t>
        <t indent="0" pn="section-9.1-3">The following shows the contents of an example JWT for the payment initiation example above:</t>
        <figure align="left" suppress-title="false" pn="figure-20">
          <name slugifiedName="name-example-of-authorization_details-i">Example of "authorization_details" in JWT-Based Access Token</name>
          <sourcecode type="json" markers="false" pn="section-9.1-4.1">{
   "iss": "https://as.example.com",
   "sub": "24400320",
   "aud": "a7AfcPcsl2",
   "exp": 1311281970,
   "acr": "psd2_sca",
   "txn": "8b4729cc-32e4-4370-8cf0-5796154d1296",
   "authorization_details": [
      {
         "type": "https://scheme.example.com/payment_initiation",
         "actions": [
            "initiate",
            "status",
            "cancel"
         ],
         "locations": [
            "https://example.com/payments"
         ],
         "instructedAmount": {
            "currency": "EUR",
            "amount": "123.50"
         },
         "creditorName": "Merchant A",
         "creditorAccount": {
            "iban": "DE02100100109307118603"
         },
         "remittanceInformationUnstructured": "Ref Number Merchant"
      }
   ],
   "debtorAccount": {
      "iban": "DE40100100103307118608",
      "user_role": "owner"
   }
}
</sourcecode>
        </figure>
        <t indent="0" pn="section-9.1-5">In this case, the AS added the following example claims to the JWT-based access token:</t>
        <dl spacing="normal" newline="false" indent="3" pn="section-9.1-6">
          <dt pn="section-9.1-6.1"><tt>sub</tt>:</dt>
          <dd pn="section-9.1-6.2">indicates the user for which the client is asking for payment initiation.</dd>
          <dt pn="section-9.1-6.3"><tt>txn</tt>:</dt>
          <dd pn="section-9.1-6.4">transaction id used to trace the transaction across the services of provider <tt>example.com</tt></dd>
          <dt pn="section-9.1-6.5"><tt>debtorAccount</tt>:</dt>
          <dd pn="section-9.1-6.6">API-specific field containing the debtor account. In the example, this account was not passed in the <tt>authorization_details</tt> but was selected by the user during the authorization process. The field <tt>user_role</tt> conveys the role the user has with respect to this particular account. In this case, they are the owner. This data is used for access control at the payment API (the RS).</dd>
        </dl>
      </section>
      <section anchor="token_introspection" numbered="true" removeInRFC="false" toc="include" pn="section-9.2">
        <name slugifiedName="name-token-introspection">Token Introspection</name>
        <t indent="0" pn="section-9.2-1">Token introspection <xref target="RFC7662" format="default" sectionFormat="of" derivedContent="RFC7662"/> provides a means for an RS to query the AS to determine information about an access token. If the AS includes authorization detail information for the token in its response, the information <bcp14>MUST</bcp14> be conveyed with <tt>authorization_details</tt> as a top-level member of the introspection response JSON object. The <tt>authorization_details</tt> member <bcp14>MUST</bcp14> contain the same structure defined in <xref target="authz_details" format="default" sectionFormat="of" derivedContent="Section 2"/>, potentially filtered and extended for the RS making the introspection request.</t>
        <t indent="0" pn="section-9.2-2">Here is an example introspection response for the payment initiation example:</t>
        <figure align="left" suppress-title="false" pn="figure-21">
          <name slugifiedName="name-example-of-authorization_details-in">Example of "authorization_details" in Introspection Response</name>
          <sourcecode type="json" markers="false" pn="section-9.2-3.1">{
   "active": true,
   "sub": "24400320",
   "aud": "s6BhdRkqt3",
   "exp": 1311281970,
   "acr": "psd2_sca",
   "txn": "8b4729cc-32e4-4370-8cf0-5796154d1296",
   "authorization_details": [
      {
         "type": "https://scheme.example.com/payment_initiation",
         "actions": [
            "initiate",
            "status",
            "cancel"
         ],
         "locations": [
            "https://example.com/payments"
         ],
         "instructedAmount": {
            "currency": "EUR",
            "amount": "123.50"
         },
         "creditorName": "Merchant123",
         "creditorAccount": {
            "iban": "DE02100100109307118603"
         },
         "remittanceInformationUnstructured": "Ref Number Merchant"
      }
   ],
   "debtorAccount": {
      "iban": "DE40100100103307118608",
      "user_role": "owner"
   }
}
</sourcecode>
        </figure>
      </section>
    </section>
    <section anchor="metadata" numbered="true" removeInRFC="false" toc="include" pn="section-10">
      <name slugifiedName="name-metadata">Metadata</name>
      <t indent="0" pn="section-10-1">To advertise its support for this feature, the supported list of authorization details types is included in the AS metadata response <xref target="RFC8414" format="default" sectionFormat="of" derivedContent="RFC8414"/> using the metadata parameter <tt>authorization_details_types_supported</tt>, which is a JSON array.</t>
      <t indent="0" pn="section-10-2">This is illustrated by the following example:</t>
      <figure align="left" suppress-title="false" pn="figure-22">
        <name slugifiedName="name-example-of-server-metadata-">Example of Server Metadata about the Supported Authorization Details</name>
        <sourcecode type="json" markers="false" pn="section-10-3.1">{
   ...
   "authorization_details_types_supported":[
      "payment_initiation",
      "account_information"
   ]
}
</sourcecode>
      </figure>
      <t indent="0" pn="section-10-4">Clients <bcp14>MAY</bcp14> indicate the authorization details types they will use when requesting authorization with the client registration metadata parameter <tt>authorization_details_types</tt>, which is a JSON array.</t>
      <t indent="0" pn="section-10-5">This is illustrated by the following example:</t>
      <figure align="left" suppress-title="false" pn="figure-23">
        <name slugifiedName="name-example-of-server-metadata-a">Example of Server Metadata about Authorization Details</name>
        <sourcecode type="json" markers="false" pn="section-10-6.1">{
   ...
   "authorization_details_types":[
      "payment_initiation"
   ]
}
</sourcecode>
      </figure>
      <t indent="0" pn="section-10-7">The registration of authorization details types with the AS is outside the scope of this specification.</t>
    </section>
    <section anchor="implementation-considerations" numbered="true" removeInRFC="false" toc="include" pn="section-11">
      <name slugifiedName="name-implementation-consideratio">Implementation Considerations</name>
      <section anchor="using-authorization-details-in-a-certain-deployment" numbered="true" removeInRFC="false" toc="include" pn="section-11.1">
        <name slugifiedName="name-using-authorization-details">Using Authorization Details in a Certain Deployment</name>
        <t indent="0" pn="section-11.1-1">Using authorization details in a certain deployment will require the following steps:</t>
        <ul spacing="normal" bare="false" empty="false" indent="3" pn="section-11.1-2">
          <li pn="section-11.1-2.1">Define authorization details types.</li>
          <li pn="section-11.1-2.2">Publish authorization details types in the OAuth server metadata.</li>
          <li pn="section-11.1-2.3">Determine how authorization details are shown to the user in the user consent prompt.</li>
          <li pn="section-11.1-2.4">If needed, enrich authorization details in the user consent process (e.g., add selected accounts or set expirations).</li>
          <li pn="section-11.1-2.5">If needed, determine how authorization details are reflected in access token content or introspection responses.</li>
          <li pn="section-11.1-2.6">Determine how the RSs process the authorization details or token data derived from authorization details.</li>
          <li pn="section-11.1-2.7">If needed, entitle clients to use certain authorization details types.</li>
        </ul>
      </section>
      <section anchor="minimal-implementation-support" numbered="true" removeInRFC="false" toc="include" pn="section-11.2">
        <name slugifiedName="name-minimal-implementation-supp">Minimal Implementation Support</name>
        <t indent="0" pn="section-11.2-1">General AS implementations supporting this specification should provide the following basic functions:</t>
        <ul spacing="normal" bare="false" empty="false" indent="3" pn="section-11.2-2">
          <li pn="section-11.2-2.1">Support advertisement of supported authorization details types in OAuth server metadata</li>
          <li pn="section-11.2-2.2">Accept the <tt>authorization_details</tt> parameter in authorization requests in conformance with this specification</li>
          <li pn="section-11.2-2.3">Support storage of consented authorization details as part of a grant</li>
          <li pn="section-11.2-2.4">Implement default behavior for adding authorization details to access tokens and token introspection responses in order to make them available to RSs (similar to scope values). This should work with any grant type, especially <tt>authorization_code</tt> and <tt>refresh_token</tt>.</li>
        </ul>
        <t indent="0" pn="section-11.2-3">Processing and presentation of authorization details will vary significantly among different authorization details types. Implementations should therefore support customization of the respective behavior. In particular, implementations should allow deployments to:</t>
        <ul spacing="normal" bare="false" empty="false" indent="3" pn="section-11.2-4">
          <li pn="section-11.2-4.1">determine presentation of the authorization details;</li>
          <li pn="section-11.2-4.2">modify requested authorization details in the user consent process, e.g., adding fields; and</li>
          <li pn="section-11.2-4.3">merge requested and preexisting authorization details.</li>
        </ul>
        <t indent="0" pn="section-11.2-5">One approach to supporting such customization would be to have a mechanism allowing the registration of extension modules, each of them responsible for rendering the respective user consent and any transformation needed to provide the data needed to the RS by way of structured access tokens or token introspection responses.</t>
      </section>
      <section anchor="use-of-machine-readable-type-schemas" numbered="true" removeInRFC="false" toc="include" pn="section-11.3">
        <name slugifiedName="name-use-of-machine-readable-typ">Use of Machine-Readable Type Schemas</name>
        <t indent="0" pn="section-11.3-1">Implementations might allow deployments to use machine-readable schema languages for defining authorization details types to facilitate creating and validating authorization details objects against such schemas. For example, if an authorization details <tt>type</tt> were defined using JSON Schemas <xref target="JSON.Schema" format="default" sectionFormat="of" derivedContent="JSON.Schema"/>, the JSON Schema identifier could be used as <tt>type</tt> value in the respective authorization details objects.</t>
        <t indent="0" pn="section-11.3-2">Note, however, that <tt>type</tt> values are identifiers understood by the AS and, to the extent necessary, the client and RS.
This specification makes no assumption that a <tt>type</tt> value would point to a machine-readable schema format or that any party in the system (such as the client, AS, or RS) would dereference or process the contents of the <tt>type</tt> field in any specific way.</t>
      </section>
      <section anchor="large_requests" numbered="true" removeInRFC="false" toc="include" pn="section-11.4">
        <name slugifiedName="name-large-requests">Large Requests</name>
        <t indent="0" pn="section-11.4-1">Authorization request URIs containing <tt>authorization_details</tt> in a request parameter or a request object can become very long. Therefore, implementers should consider using the <tt>request_uri</tt> parameter as defined in <xref target="RFC9101" format="default" sectionFormat="of" derivedContent="RFC9101"/> in combination with the pushed request object mechanism as defined in <xref target="RFC9126" format="default" sectionFormat="of" derivedContent="RFC9126"/> to pass <tt>authorization_details</tt> in a reliable and secure manner. Here is an example of such a pushed authorization request that sends the authorization request data directly to the AS via an HTTPS-protected connection:</t>
        <figure align="left" suppress-title="false" pn="figure-24">
          <name slugifiedName="name-example-of-large-request-in">Example of Large Request including "authorization_details"</name>
          <sourcecode type="http-message" markers="false" pn="section-11.4-2.1">
  POST /as/par HTTP/1.1
  Host: as.example.com
  Content-Type: application/x-www-form-urlencoded
  Authorization: Basic czZCaGRSa3F0Mzo3RmpmcDBaQnIxS3REUmJuZlZkbUl3

  response_type=code&amp;
  client_id=s6BhdRkqt3
  &amp;state=af0ifjsldkj
  &amp;redirect_uri=https%3A%2F%2Fclient.example.org%2Fcb
  &amp;code_challenge_method=S256
  &amp;code_challenge=K2-ltc83acc4h0c9w6ESC_rEMTJ3bwc-uCHaoeK1t8U
  &amp;authorization_details=%5B%7B%22type%22%3A%22account_information%22
  %2C%22actions%22%3A%5B%22list_accounts%22%2C%22read_balances%22%2C%
  22read_transactions%22%5D%2C%22locations%22%3A%5B%22https%3A%2F%2Fe
  xample.com%2Faccounts%22%5D%7D%2C%7B%22type%22%3A%22payment_initiat
  ion%22%2C%22actions%22%3A%5B%22initiate%22%2C%22status%22%2C%22canc
  el%22%5D%2C%22locations%22%3A%5B%22https%3A%2F%2Fexample.com%2Fpaym
  ents%22%5D%2C%22instructedAmount%22%3A%7B%22currency%22%3A%22EUR%22
  %2C%22amount%22%3A%22123.50%22%7D%2C%22creditorName%22%3A%22Merchan
  t123%22%2C%22creditorAccount%22%3A%7B%22iban%22%3A%22DE021001001093
  07118603%22%7D%2C%22remittanceInformationUnstructured%22%3A%22Ref%2
  0Number%20Merchant%22%7D%5D
</sourcecode>
        </figure>
      </section>
    </section>
    <section anchor="security_considerations" numbered="true" removeInRFC="false" toc="include" pn="section-12">
      <name slugifiedName="name-security-considerations">Security Considerations</name>
      <t indent="0" pn="section-12-1">The <tt>authorization_details</tt> parameter is sent through the user agent in case of an OAuth authorization request, which makes them vulnerable to modifications by the user. If the integrity of the
<tt>authorization_details</tt> is a concern, clients <bcp14>MUST</bcp14> protect <tt>authorization_details</tt> against tampering and swapping. This can be achieved by signing the request using signed request objects as defined in <xref target="RFC9101" format="default" sectionFormat="of" derivedContent="RFC9101"/> or using the <tt>request_uri</tt> authorization request parameter as defined in <xref target="RFC9101" format="default" sectionFormat="of" derivedContent="RFC9101"/> in conjunction with <xref target="RFC9126" format="default" sectionFormat="of" derivedContent="RFC9126"/> to pass the URI of the request object to the AS.</t>
      <t indent="0" pn="section-12-2">All string comparisons in an <tt>authorization_details</tt> parameter are to be done as defined by <xref target="RFC8259" format="default" sectionFormat="of" derivedContent="RFC8259"/>. No additional transformation or normalization is to be done in evaluating equivalence of string values.</t>
      <t indent="0" pn="section-12-3">The common data field <tt>locations</tt> allows a client to specify where it intends to use a certain authorization, i.e., it is  possible to unambiguously assign permissions to RSs. In situations with multiple RSs, this prevents unintended client authorizations (e.g., a <tt>read</tt> scope value potentially applicable for an email as well as a cloud service) through audience restriction.</t>
      <t indent="0" pn="section-12-4">The AS <bcp14>MUST</bcp14> properly sanitize and handle the data passed in the <tt>authorization_details</tt> in order to prevent injection attacks.</t>
      <t indent="0" pn="section-12-5">The Security Considerations of <xref target="RFC6749" format="default" sectionFormat="of" derivedContent="RFC6749"/>, <xref target="RFC7662" format="default" sectionFormat="of" derivedContent="RFC7662"/>, and <xref target="RFC8414" format="default" sectionFormat="of" derivedContent="RFC8414"/> also apply.</t>
    </section>
    <section anchor="privacy_considerations" numbered="true" removeInRFC="false" toc="include" pn="section-13">
      <name slugifiedName="name-privacy-considerations">Privacy Considerations</name>
      <t indent="0" pn="section-13-1">It is especially important for implementers to design and use authorization details in a privacy-preserving manner.</t>
      <t indent="0" pn="section-13-2">Any sensitive personal data included in <tt>authorization_details</tt> must be prevented from leaking, e.g., through referrer headers. Implementation options include encrypted request objects as defined in <xref target="RFC9101" format="default" sectionFormat="of" derivedContent="RFC9101"/> or transmission of <tt>authorization_details</tt> via end-to-end encrypted connections between client and AS by utilizing <xref target="RFC9126" format="default" sectionFormat="of" derivedContent="RFC9126"/> and the <tt>request_uri</tt> authorization request parameter as defined in <xref target="RFC9101" format="default" sectionFormat="of" derivedContent="RFC9101"/>. The latter does not require application-level encryption, but it requires another message exchange between the client and the AS.</t>
      <t indent="0" pn="section-13-3">Even if the request data is encrypted, an attacker could use the AS to learn the user's data by injecting the encrypted request data into an authorization request on a device under their control and use the AS's user consent screens to show the (decrypted) user data in the clear. Implementations need to consider this attack vector and implement appropriate countermeasures, e.g., by only showing portions of the data or, if possible, determining whether the assumed user context is still the same (after user authentication).</t>
      <t indent="0" pn="section-13-4">The AS needs to take into consideration the privacy implications when sharing <tt>authorization_details</tt> with the client or RSs. The AS should share this data with those parties on a "need to know" basis as determined by local policy.</t>
    </section>
    <section anchor="iana_considerations" numbered="true" removeInRFC="false" toc="include" pn="section-14">
      <name slugifiedName="name-iana-considerations">IANA Considerations</name>
      <section anchor="oauth-parameters-registration" numbered="true" removeInRFC="false" toc="include" pn="section-14.1">
        <name slugifiedName="name-oauth-parameters-registrati">OAuth Parameters Registration</name>
        <t indent="0" pn="section-14.1-1">The following parameter has been registered 
in the "OAuth Parameters" registry <xref target="IANA.OAuth.Parameters" format="default" sectionFormat="of" derivedContent="IANA.OAuth.Parameters"/>
established by <xref target="RFC6749" format="default" sectionFormat="of" derivedContent="RFC6749"/>.</t>
        <dl spacing="normal" indent="3" newline="false" pn="section-14.1-2">
          <dt pn="section-14.1-2.1">Name:</dt>
          <dd pn="section-14.1-2.2">
            <tt>authorization_details</tt></dd>
          <dt pn="section-14.1-2.3">Parameter Usage Location:</dt>
          <dd pn="section-14.1-2.4">authorization request, token request, token response</dd>
          <dt pn="section-14.1-2.5">Change Controller:</dt>
          <dd pn="section-14.1-2.6">IETF</dd>
          <dt pn="section-14.1-2.7">Reference:</dt>
          <dd pn="section-14.1-2.8">RFC 9396</dd>
        </dl>
      </section>
      <section anchor="json-web-token-claims-registration" numbered="true" removeInRFC="false" toc="include" pn="section-14.2">
        <name slugifiedName="name-json-web-token-claims-regis">JSON Web Token Claims Registration</name>
        <t indent="0" pn="section-14.2-1">The following value has been registered in the IANA "JSON Web Token Claims" registry established by <xref target="RFC7519" format="default" sectionFormat="of" derivedContent="RFC7519"/>.</t>
        <dl spacing="normal" indent="3" newline="false" pn="section-14.2-2">
          <dt pn="section-14.2-2.1">Claim Name:</dt>
          <dd pn="section-14.2-2.2">
            <tt>authorization_details</tt></dd>
          <dt pn="section-14.2-2.3">Claim Description:</dt>
          <dd pn="section-14.2-2.4">The claim <tt>authorization_details</tt> contains a JSON array of JSON objects representing the rights of the access token. Each JSON object contains the data to specify the authorization requirements for a certain type of resource.</dd>
          <dt pn="section-14.2-2.5">Change Controller:</dt>
          <dd pn="section-14.2-2.6">IETF</dd>
          <dt pn="section-14.2-2.7">Reference:</dt>
          <dd pn="section-14.2-2.8">
            <xref target="jwt_based_access_tokens" format="default" sectionFormat="of" derivedContent="Section 9.1"/> of RFC 9396</dd>
        </dl>
      </section>
      <section anchor="oauth-token-introspection-response-registration" numbered="true" removeInRFC="false" toc="include" pn="section-14.3">
        <name slugifiedName="name-oauth-token-introspection-r">OAuth Token Introspection Response Registration</name>
        <t indent="0" pn="section-14.3-1">The following value has been registered in the IANA "OAuth Token Introspection Response" registry established by <xref target="RFC7662" format="default" sectionFormat="of" derivedContent="RFC7662"/>.</t>
        <dl spacing="normal" indent="3" newline="false" pn="section-14.3-2">
          <dt pn="section-14.3-2.1">Name:</dt>
          <dd pn="section-14.3-2.2">
            <tt>authorization_details</tt></dd>
          <dt pn="section-14.3-2.3">Description:</dt>
          <dd pn="section-14.3-2.4">The member <tt>authorization_details</tt> contains a JSON array of JSON objects representing the rights of the access token. Each JSON object contains the data to specify the authorization requirements for a certain type of resource.</dd>
          <dt pn="section-14.3-2.5">Change Controller:</dt>
          <dd pn="section-14.3-2.6">IETF</dd>
          <dt pn="section-14.3-2.7">Reference:</dt>
          <dd pn="section-14.3-2.8">
            <xref target="token_introspection" format="default" sectionFormat="of" derivedContent="Section 9.2"/> of RFC 9396</dd>
        </dl>
      </section>
      <section anchor="oauth-authorization-server-metadata-registration" numbered="true" removeInRFC="false" toc="include" pn="section-14.4">
        <name slugifiedName="name-oauth-authorization-server-">OAuth Authorization Server Metadata Registration</name>
        <t indent="0" pn="section-14.4-1">The following values have been registered in the IANA "OAuth Authorization Server Metadata" registry of <xref target="IANA.OAuth.Parameters" format="default" sectionFormat="of" derivedContent="IANA.OAuth.Parameters"/> established by <xref target="RFC8414" format="default" sectionFormat="of" derivedContent="RFC8414"/>.</t>
        <dl spacing="normal" indent="3" newline="false" pn="section-14.4-2">
          <dt pn="section-14.4-2.1">Metadata Name:</dt>
          <dd pn="section-14.4-2.2">
            <tt>authorization_details_types_supported</tt></dd>
          <dt pn="section-14.4-2.3">Metadata Description:</dt>
          <dd pn="section-14.4-2.4">JSON array containing the authorization details types the AS supports</dd>
          <dt pn="section-14.4-2.5">Change Controller:</dt>
          <dd pn="section-14.4-2.6">IETF</dd>
          <dt pn="section-14.4-2.7">Reference:</dt>
          <dd pn="section-14.4-2.8">
            <xref target="metadata" format="default" sectionFormat="of" derivedContent="Section 10"/> of RFC 9396</dd>
        </dl>
      </section>
      <section anchor="oauth-dynamic-client-registration-metadata-registration" numbered="true" removeInRFC="false" toc="include" pn="section-14.5">
        <name slugifiedName="name-oauth-dynamic-client-regist">OAuth Dynamic Client Registration Metadata Registration</name>
        <t indent="0" pn="section-14.5-1">The following value has been registered in the IANA "OAuth Dynamic Client Registration Metadata" registry of <xref target="IANA.OAuth.Parameters" format="default" sectionFormat="of" derivedContent="IANA.OAuth.Parameters"/> established by <xref target="RFC7591" format="default" sectionFormat="of" derivedContent="RFC7591"/>.</t>
        <dl spacing="normal" indent="3" newline="false" pn="section-14.5-2">
          <dt pn="section-14.5-2.1">Client Metadata Name:</dt>
          <dd pn="section-14.5-2.2">
            <tt>authorization_details_types</tt></dd>
          <dt pn="section-14.5-2.3">Client Metadata Description:</dt>
          <dd pn="section-14.5-2.4">Indicates what authorization details types the client uses.</dd>
          <dt pn="section-14.5-2.5">Change Controller:</dt>
          <dd pn="section-14.5-2.6">IETF</dd>
          <dt pn="section-14.5-2.7">Reference:</dt>
          <dd pn="section-14.5-2.8">
            <xref target="metadata" format="default" sectionFormat="of" derivedContent="Section 10"/> of RFC 9396</dd>
        </dl>
      </section>
      <section anchor="oauth-extensions-error-registration" numbered="true" removeInRFC="false" toc="include" pn="section-14.6">
        <name slugifiedName="name-oauth-extensions-error-regi">OAuth Extensions Error Registration</name>
        <t indent="0" pn="section-14.6-1">The following value has been registered in the IANA "OAuth Extensions Error Registry" of <xref target="IANA.OAuth.Parameters" format="default" sectionFormat="of" derivedContent="IANA.OAuth.Parameters"/> established by <xref target="RFC6749" format="default" sectionFormat="of" derivedContent="RFC6749"/>.</t>
        <dl spacing="normal" indent="3" newline="false" pn="section-14.6-2">
          <dt pn="section-14.6-2.1">Name:</dt>
          <dd pn="section-14.6-2.2">
            <tt>invalid_authorization_details</tt></dd>
          <dt pn="section-14.6-2.3">Usage Location:</dt>
          <dd pn="section-14.6-2.4">token endpoint, authorization endpoint</dd>
          <dt pn="section-14.6-2.5">Protocol Extension:</dt>
          <dd pn="section-14.6-2.6">OAuth 2.0 Rich Authorization Requests</dd>
          <dt pn="section-14.6-2.7">Change Controller:</dt>
          <dd pn="section-14.6-2.8">IETF</dd>
          <dt pn="section-14.6-2.9">Reference:</dt>
          <dd pn="section-14.6-2.10">
            <xref target="authz_details_error" format="default" sectionFormat="of" derivedContent="Section 5"/> of RFC 9396</dd>
        </dl>
      </section>
    </section>
  </middle>
  <back>
    <references pn="section-15">
      <name slugifiedName="name-references">References</name>
      <references pn="section-15.1">
        <name slugifiedName="name-normative-references">Normative References</name>
        <reference anchor="RFC2119" target="https://www.rfc-editor.org/info/rfc2119" quoteTitle="true" derivedAnchor="RFC2119">
          <front>
            <title>Key words for use in RFCs to Indicate Requirement Levels</title>
            <author fullname="S. Bradner" initials="S." surname="Bradner"/>
            <date month="March" year="1997"/>
            <abstract>
              <t indent="0">In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized.  This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t>
            </abstract>
          </front>
          <seriesInfo name="BCP" value="14"/>
          <seriesInfo name="RFC" value="2119"/>
          <seriesInfo name="DOI" value="10.17487/RFC2119"/>
        </reference>
        <reference anchor="RFC7519" target="https://www.rfc-editor.org/info/rfc7519" quoteTitle="true" derivedAnchor="RFC7519">
          <front>
            <title>JSON Web Token (JWT)</title>
            <author fullname="M. Jones" initials="M." surname="Jones"/>
            <author fullname="J. Bradley" initials="J." surname="Bradley"/>
            <author fullname="N. Sakimura" initials="N." surname="Sakimura"/>
            <date month="May" year="2015"/>
            <abstract>
              <t indent="0">JSON Web Token (JWT) is a compact, URL-safe means of representing claims to be transferred between two parties.  The claims in a JWT are encoded as a JSON object that is used as the payload of a JSON Web Signature (JWS) structure or as the plaintext of a JSON Web Encryption (JWE) structure, enabling the claims to be digitally signed or integrity protected with a Message Authentication Code (MAC) and/or encrypted.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="7519"/>
          <seriesInfo name="DOI" value="10.17487/RFC7519"/>
        </reference>
        <reference anchor="RFC7662" target="https://www.rfc-editor.org/info/rfc7662" quoteTitle="true" derivedAnchor="RFC7662">
          <front>
            <title>OAuth 2.0 Token Introspection</title>
            <author fullname="J. Richer" initials="J." role="editor" surname="Richer"/>
            <date month="October" year="2015"/>
            <abstract>
              <t indent="0">This specification defines a method for a protected resource to query an OAuth 2.0 authorization server to determine the active state of an OAuth 2.0 token and to determine meta-information about this token.  OAuth 2.0 deployments can use this method to convey information about the authorization context of the token from the authorization server to the protected resource.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="7662"/>
          <seriesInfo name="DOI" value="10.17487/RFC7662"/>
        </reference>
        <reference anchor="RFC8174" target="https://www.rfc-editor.org/info/rfc8174" quoteTitle="true" derivedAnchor="RFC8174">
          <front>
            <title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
            <author fullname="B. Leiba" initials="B." surname="Leiba"/>
            <date month="May" year="2017"/>
            <abstract>
              <t indent="0">RFC 2119 specifies common key words that may be used in protocol specifications.  This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the defined special meanings.</t>
            </abstract>
          </front>
          <seriesInfo name="BCP" value="14"/>
          <seriesInfo name="RFC" value="8174"/>
          <seriesInfo name="DOI" value="10.17487/RFC8174"/>
        </reference>
        <reference anchor="RFC8414" target="https://www.rfc-editor.org/info/rfc8414" quoteTitle="true" derivedAnchor="RFC8414">
          <front>
            <title>OAuth 2.0 Authorization Server Metadata</title>
            <author fullname="M. Jones" initials="M." surname="Jones"/>
            <author fullname="N. Sakimura" initials="N." surname="Sakimura"/>
            <author fullname="J. Bradley" initials="J." surname="Bradley"/>
            <date month="June" year="2018"/>
            <abstract>
              <t indent="0">This specification defines a metadata format that an OAuth 2.0 client can use to obtain the information needed to interact with an OAuth 2.0 authorization server, including its endpoint locations and authorization server capabilities.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8414"/>
          <seriesInfo name="DOI" value="10.17487/RFC8414"/>
        </reference>
        <reference anchor="RFC8628" target="https://www.rfc-editor.org/info/rfc8628" quoteTitle="true" derivedAnchor="RFC8628">
          <front>
            <title>OAuth 2.0 Device Authorization Grant</title>
            <author fullname="W. Denniss" initials="W." surname="Denniss"/>
            <author fullname="J. Bradley" initials="J." surname="Bradley"/>
            <author fullname="M. Jones" initials="M." surname="Jones"/>
            <author fullname="H. Tschofenig" initials="H." surname="Tschofenig"/>
            <date month="August" year="2019"/>
            <abstract>
              <t indent="0">The OAuth 2.0 device authorization grant is designed for Internet- connected devices that either lack a browser to perform a user-agent- based authorization or are input constrained to the extent that requiring the user to input text in order to authenticate during the authorization flow is impractical.  It enables OAuth clients on such devices (like smart TVs, media consoles, digital picture frames, and printers) to obtain user authorization to access protected resources by using a user agent on a separate device.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8628"/>
          <seriesInfo name="DOI" value="10.17487/RFC8628"/>
        </reference>
        <reference anchor="RFC8707" target="https://www.rfc-editor.org/info/rfc8707" quoteTitle="true" derivedAnchor="RFC8707">
          <front>
            <title>Resource Indicators for OAuth 2.0</title>
            <author fullname="B. Campbell" initials="B." surname="Campbell"/>
            <author fullname="J. Bradley" initials="J." surname="Bradley"/>
            <author fullname="H. Tschofenig" initials="H." surname="Tschofenig"/>
            <date month="February" year="2020"/>
            <abstract>
              <t indent="0">This document specifies an extension to the OAuth 2.0 Authorization Framework defining request parameters that enable a client to explicitly signal to an authorization server about the identity of the protected resource(s) to which it is requesting access.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8707"/>
          <seriesInfo name="DOI" value="10.17487/RFC8707"/>
        </reference>
      </references>
      <references pn="section-15.2">
        <name slugifiedName="name-informative-references">Informative References</name>
        <reference anchor="CSC" target="https://cloudsignatureconsortium.org/wp-content/uploads/2020/01/CSC_API_V1_1.0.4.0.pdf" quoteTitle="true" derivedAnchor="CSC">
          <front>
            <title>Architectures and protocols for remote signature applications</title>
            <author>
              <organization showOnFrontPage="true">Cloud Signature Consortium</organization>
            </author>
            <date year="2019" month="June"/>
          </front>
          <refcontent>Version 1.0.4.0</refcontent>
        </reference>
        <reference anchor="ETSI" target="https://www.etsi.org/deliver/etsi_ts/119400_119499/119432/01.01.01_60/ts_119432v010101p.pdf" quoteTitle="true" derivedAnchor="ETSI">
          <front>
            <title>Electronic Signatures and Infrastructures (ESI); Protocols for remote digital signature creation</title>
            <author>
              <organization showOnFrontPage="true">ETSI</organization>
            </author>
            <date year="2019" month="March"/>
          </front>
          <seriesInfo name="ETSI TS" value="119 432"/>
          <refcontent>V1.1.1</refcontent>
        </reference>
        <reference anchor="IANA.OAuth.Parameters" target="https://www.iana.org/assignments/oauth-parameters" quoteTitle="true" derivedAnchor="IANA.OAuth.Parameters">
          <front>
            <title>OAuth Parameters</title>
            <author>
              <organization showOnFrontPage="true">IANA</organization>
            </author>
          </front>
        </reference>
        <reference anchor="JSON.Schema" target="https://json-schema.org/" quoteTitle="true" derivedAnchor="JSON.Schema">
          <front>
            <title>JSON Schema</title>
            <author>
              <organization showOnFrontPage="true">OpenJS Foundation</organization>
            </author>
          </front>
        </reference>
        <reference anchor="OID-CIBA" target="https://openid.net/specs/openid-client-initiated-backchannel-authentication-core-1_0.html" quoteTitle="true" derivedAnchor="OID-CIBA">
          <front>
            <title>OpenID Connect Client-Initiated Backchannel Authentication Flow - Core 1.0</title>
            <author initials="G." surname="Fernandez">
              <organization showOnFrontPage="true">Telefonica</organization>
            </author>
            <author initials="F." surname="Walter">
              <organization showOnFrontPage="true">Deutsche Telekom AG</organization>
            </author>
            <author initials="A." surname="Nennker">
              <organization showOnFrontPage="true">Deutsche Telekom AG</organization>
            </author>
            <author initials="D." surname="Tonge">
              <organization showOnFrontPage="true">Moneyhub</organization>
            </author>
            <author initials="B." surname="Campbell">
              <organization abbrev="Ping Identity" showOnFrontPage="true">Ping Identity</organization>
            </author>
            <date year="2021" month="September" day="1"/>
          </front>
        </reference>
        <reference anchor="OIDC" target="https://openid.net/specs/openid-connect-core-1_0.html" quoteTitle="true" derivedAnchor="OIDC">
          <front>
            <title>OpenID Connect Core 1.0 incorporating errata set 1</title>
            <author initials="N." surname="Sakimura">
              <organization showOnFrontPage="true">NRI</organization>
            </author>
            <author initials="J." surname="Bradley">
              <organization showOnFrontPage="true">Ping Identity</organization>
            </author>
            <author initials="M." surname="Jones">
              <organization showOnFrontPage="true">Microsoft</organization>
            </author>
            <author initials="B." surname="de Medeiros">
              <organization showOnFrontPage="true">Google</organization>
            </author>
            <author initials="C." surname="Mortimore">
              <organization showOnFrontPage="true">Salesforce</organization>
            </author>
            <date year="2014" month="Nov" day="8"/>
          </front>
        </reference>
        <reference anchor="RFC0020" target="https://www.rfc-editor.org/info/rfc20" quoteTitle="true" derivedAnchor="RFC0020">
          <front>
            <title>ASCII format for network interchange</title>
            <author fullname="V.G. Cerf" initials="V.G." surname="Cerf"/>
            <date month="October" year="1969"/>
          </front>
          <seriesInfo name="STD" value="80"/>
          <seriesInfo name="RFC" value="20"/>
          <seriesInfo name="DOI" value="10.17487/RFC0020"/>
        </reference>
        <reference anchor="RFC6749" target="https://www.rfc-editor.org/info/rfc6749" quoteTitle="true" derivedAnchor="RFC6749">
          <front>
            <title>The OAuth 2.0 Authorization Framework</title>
            <author fullname="D. Hardt" initials="D." role="editor" surname="Hardt"/>
            <date month="October" year="2012"/>
            <abstract>
              <t indent="0">The OAuth 2.0 authorization framework enables a third-party application to obtain limited access to an HTTP service, either on behalf of a resource owner by orchestrating an approval interaction between the resource owner and the HTTP service, or by allowing the third-party application to obtain access on its own behalf.  This specification replaces and obsoletes the OAuth 1.0 protocol described in RFC 5849. [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="6749"/>
          <seriesInfo name="DOI" value="10.17487/RFC6749"/>
        </reference>
        <reference anchor="RFC7591" target="https://www.rfc-editor.org/info/rfc7591" quoteTitle="true" derivedAnchor="RFC7591">
          <front>
            <title>OAuth 2.0 Dynamic Client Registration Protocol</title>
            <author fullname="J. Richer" initials="J." role="editor" surname="Richer"/>
            <author fullname="M. Jones" initials="M." surname="Jones"/>
            <author fullname="J. Bradley" initials="J." surname="Bradley"/>
            <author fullname="M. Machulak" initials="M." surname="Machulak"/>
            <author fullname="P. Hunt" initials="P." surname="Hunt"/>
            <date month="July" year="2015"/>
            <abstract>
              <t indent="0">This specification defines mechanisms for dynamically registering OAuth 2.0 clients with authorization servers.  Registration requests send a set of desired client metadata values to the authorization server.  The resulting registration responses return a client identifier to use at the authorization server and the client metadata values registered for the client.  The client can then use this registration information to communicate with the authorization server using the OAuth 2.0 protocol.  This specification also defines a set of common client metadata fields and values for clients to use during registration.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="7591"/>
          <seriesInfo name="DOI" value="10.17487/RFC7591"/>
        </reference>
        <reference anchor="RFC8259" target="https://www.rfc-editor.org/info/rfc8259" quoteTitle="true" derivedAnchor="RFC8259">
          <front>
            <title>The JavaScript Object Notation (JSON) Data Interchange Format</title>
            <author fullname="T. Bray" initials="T." role="editor" surname="Bray"/>
            <date month="December" year="2017"/>
            <abstract>
              <t indent="0">JavaScript Object Notation (JSON) is a lightweight, text-based, language-independent data interchange format. It was derived from the ECMAScript Programming Language Standard. JSON defines a small set of formatting rules for the portable representation of structured data.</t>
              <t indent="0">This document removes inconsistencies with other specifications of JSON, repairs specification errors, and offers experience-based interoperability guidance.</t>
            </abstract>
          </front>
          <seriesInfo name="STD" value="90"/>
          <seriesInfo name="RFC" value="8259"/>
          <seriesInfo name="DOI" value="10.17487/RFC8259"/>
        </reference>
        <reference anchor="RFC9101" target="https://www.rfc-editor.org/info/rfc9101" quoteTitle="true" derivedAnchor="RFC9101">
          <front>
            <title>The OAuth 2.0 Authorization Framework: JWT-Secured Authorization Request (JAR)</title>
            <author fullname="N. Sakimura" initials="N." surname="Sakimura"/>
            <author fullname="J. Bradley" initials="J." surname="Bradley"/>
            <author fullname="M. Jones" initials="M." surname="Jones"/>
            <date month="August" year="2021"/>
            <abstract>
              <t indent="0">The authorization request in OAuth 2.0 described in RFC 6749 utilizes query parameter serialization, which means that authorization request parameters are encoded in the URI of the request and sent through user agents such as web browsers. While it is easy to implement, it means that a) the communication through the user agents is not integrity protected and thus, the parameters can be tainted, b) the source of the communication is not authenticated, and c) the communication through the user agents can be monitored. Because of these weaknesses, several attacks to the protocol have now been put forward.</t>
              <t indent="0">This document introduces the ability to send request parameters in a JSON Web Token (JWT) instead, which allows the request to be signed with JSON Web Signature (JWS) and encrypted with JSON Web Encryption (JWE) so that the integrity, source authentication, and confidentiality properties of the authorization request are attained. The request can be sent by value or by reference.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="9101"/>
          <seriesInfo name="DOI" value="10.17487/RFC9101"/>
        </reference>
        <reference anchor="RFC9126" target="https://www.rfc-editor.org/info/rfc9126" quoteTitle="true" derivedAnchor="RFC9126">
          <front>
            <title>OAuth 2.0 Pushed Authorization Requests</title>
            <author fullname="T. Lodderstedt" initials="T." surname="Lodderstedt"/>
            <author fullname="B. Campbell" initials="B." surname="Campbell"/>
            <author fullname="N. Sakimura" initials="N." surname="Sakimura"/>
            <author fullname="D. Tonge" initials="D." surname="Tonge"/>
            <author fullname="F. Skokan" initials="F." surname="Skokan"/>
            <date month="September" year="2021"/>
            <abstract>
              <t indent="0">This document defines the pushed authorization request (PAR) endpoint, which allows clients to push the payload of an OAuth 2.0 authorization request to the authorization server via a direct request and provides them with a request URI that is used as reference to the data in a subsequent call to the authorization endpoint.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="9126"/>
          <seriesInfo name="DOI" value="10.17487/RFC9126"/>
        </reference>
        <reference anchor="Transaction-Auth" target="https://medium.com/oauth-2/transaction-authorization-or-why-we-need-to-re-think-oauth-scopes-2326e2038948" quoteTitle="true" derivedAnchor="Transaction-Auth">
          <front>
            <title>Transaction Authorization or why we need to re-think OAuth scopes</title>
            <author fullname="Torsten Lodderstedt" initials="T." surname="Lodderstedt">
              <organization showOnFrontPage="true">yes.com</organization>
            </author>
            <date year="2019" month="April" day="20"/>
          </front>
        </reference>
      </references>
    </references>
    <section anchor="additional-examples" numbered="true" removeInRFC="false" toc="include" pn="section-appendix.a">
      <name slugifiedName="name-additional-examples">Additional Examples</name>
      <section anchor="openid" numbered="true" removeInRFC="false" toc="include" pn="section-appendix.a.1">
        <name slugifiedName="name-openid-connect">OpenID Connect</name>
        <t indent="0" pn="section-appendix.a.1-1">OpenID Connect <xref target="OIDC" format="default" sectionFormat="of" derivedContent="OIDC"/> specifies the JSON-based <tt>claims</tt> request parameter that can be used to specify the claims a client (acting as an OpenID Connect Relying Party) wishes to receive in a fine-grained and privacy-preserving way as well as assign those claims to certain delivery mechanisms, i.e., ID Token or userinfo response.</t>
        <t indent="0" pn="section-appendix.a.1-2">The combination of the scope value <tt>openid</tt> and the additional parameter <tt>claims</tt> can be used beside <tt>authorization_details</tt> in the same way as every non-OIDC scope value.</t>
        <t indent="0" pn="section-appendix.a.1-3">Alternatively, there could be an authorization details type for OpenID Connect. This section gives an example of what such an authorization details type could look like, but defining this authorization details type is outside the scope of this specification.</t>
        <t indent="0" pn="section-appendix.a.1-4">These hypothetical examples try to encapsulate all details specific to the OpenID Connect part of an authorization process into an authorization JSON object.</t>
        <t indent="0" pn="section-appendix.a.1-5">The top-level fields are based on the definitions given in <xref target="OIDC" format="default" sectionFormat="of" derivedContent="OIDC"/>:</t>
        <dl spacing="normal" newline="false" indent="3" pn="section-appendix.a.1-6">
          <dt pn="section-appendix.a.1-6.1"><tt>claim_sets</tt>:</dt>
          <dd pn="section-appendix.a.1-6.2">the names of predefined claim sets, replacement for respective scope values, such as <tt>profile</tt></dd>
          <dt pn="section-appendix.a.1-6.3"><tt>max_age</tt>:</dt>
          <dd pn="section-appendix.a.1-6.4">Maximum Authentication Age</dd>
          <dt pn="section-appendix.a.1-6.5"><tt>acr_values</tt>:</dt>
          <dd pn="section-appendix.a.1-6.6">requested Authentication Context Class Reference (ACR) values</dd>
          <dt pn="section-appendix.a.1-6.7"><tt>claims</tt>:</dt>
          <dd pn="section-appendix.a.1-6.8">the <tt>claims</tt> JSON structure as defined in <xref target="OIDC" format="default" sectionFormat="of" derivedContent="OIDC"/></dd>
        </dl>
        <t indent="0" pn="section-appendix.a.1-7">This is a simple request for some claim sets.</t>
        <figure align="left" suppress-title="false" pn="figure-25">
          <name slugifiedName="name-example-of-openid-connect-r">Example of OpenID Connect Request Utilizing "authorization_details"</name>
          <sourcecode type="json" markers="false" pn="section-appendix.a.1-8.1">[
   {
      "type": "openid",
      "locations": [
         "https://op.example.com/userinfo"
      ],
      "claim_sets": [
         "email",
         "profile"
      ]
   }
]
</sourcecode>
        </figure>
        <aside pn="section-appendix.a.1-9">
          <t indent="0" pn="section-appendix.a.1-9.1">Note: <tt>locations</tt> specifies the location of the userinfo endpoint since this is the only place where an access token is used by a client (Relying Party) in OpenID Connect to obtain claims.</t>
        </aside>
        <t indent="0" pn="section-appendix.a.1-10">A more sophisticated example is shown in <xref target="fig26" format="default" sectionFormat="of" derivedContent="Figure 26"/>.</t>
        <figure anchor="fig26" align="left" suppress-title="false" pn="figure-26">
          <name slugifiedName="name-advanced-example-of-openid-">Advanced Example of OpenID Connect Request Utilizing "authorization_details"</name>
          <sourcecode type="json" markers="false" pn="section-appendix.a.1-11.1">[
   {
      "type": "openid",
      "locations": [
         "https://op.example.com/userinfo"
      ],
      "max_age": 86400,
      "acr_values": "urn:mace:incommon:iap:silver",
      "claims": {
         "userinfo": {
            "given_name": {
               "essential": true
            },
            "nickname": null,
            "email": {
               "essential": true
            },
            "email_verified": {
               "essential": true
            },
            "picture": null,
            "http://example.com/claims/groups": null
         },
         "id_token": {
            "auth_time": {
               "essential": true
            }
         }
      }
   }
]
</sourcecode>
        </figure>
      </section>
      <section anchor="signing" numbered="true" removeInRFC="false" toc="include" pn="section-appendix.a.2">
        <name slugifiedName="name-remote-electronic-signing">Remote Electronic Signing</name>
        <t indent="0" pn="section-appendix.a.2-1">The following example is based on the concept laid out for remote electronic signing in ETSI TS 119 432 <xref target="ETSI" format="default" sectionFormat="of" derivedContent="ETSI"/> and the Cloud Signature Consortium (CSC) API for remote signature creation <xref target="CSC" format="default" sectionFormat="of" derivedContent="CSC"/>.</t>
        <figure align="left" suppress-title="false" pn="figure-27">
          <name slugifiedName="name-example-of-electronic-signi">Example of Electronic Signing</name>
          <sourcecode type="json" markers="false" pn="section-appendix.a.2-2.1">[
   {
      "type": "sign",
      "locations": [
         "https://signing.example.com/signdoc"
      ],
      "credentialID": "60916d31-932e-4820-ba82-1fcead1c9ea3",
      "documentDigests": [
         {
            "hash": "sTOgwOm+474gFj0q0x1iSNspKqbcse4IeiqlDg/HWuI=",
            "label": "Credit Contract"
         },
         {
            "hash": "HZQzZmMAIWekfGH0/ZKW1nsdt0xg3H6bZYztgsMTLw0=",
            "label": "Contract Payment Protection Insurance"
         }
      ],
      "hashAlgorithmOID": "2.16.840.1.101.3.4.2.1"
   }
]
</sourcecode>
        </figure>
        <t indent="0" pn="section-appendix.a.2-3">The top-level fields have the following meaning:</t>
        <dl spacing="normal" newline="false" indent="3" pn="section-appendix.a.2-4">
          <dt pn="section-appendix.a.2-4.1"><tt>credentialID</tt>:</dt>
          <dd pn="section-appendix.a.2-4.2">identifier of the certificate to be used for signing</dd>
          <dt pn="section-appendix.a.2-4.3"><tt>documentDigests</tt>:</dt>
          <dd pn="section-appendix.a.2-4.4">array containing the hash of every document to be signed (<tt>hash</tt> fields). Additionally, the corresponding <tt>label</tt> field identifies the respective document to the user, e.g., to be used in user consent.</dd>
          <dt pn="section-appendix.a.2-4.5"><tt>hashAlgorithm</tt>:</dt>
          <dd pn="section-appendix.a.2-4.6">algorithm that was used to calculate the hash values</dd>
        </dl>
        <t indent="0" pn="section-appendix.a.2-5">The AS is supposed to ask the user for consent for the creation of signatures for the documents listed in the structure. The client uses the access token issued as a result of the process to call the document signature API at the respective signing service to actually create the signature. This access token is bound to the client, the user ID and the hashes (and signature algorithm) as consented by the user.</t>
      </section>
      <section anchor="tax" numbered="true" removeInRFC="false" toc="include" pn="section-appendix.a.3">
        <name slugifiedName="name-access-to-tax-data">Access to Tax Data</name>
        <t indent="0" pn="section-appendix.a.3-1">This example is inspired by an API allowing third parties to access citizen's tax declarations and income statements, for example, to determine their creditworthiness.</t>
        <figure align="left" suppress-title="false" pn="figure-28">
          <name slugifiedName="name-example-of-tax-data-access">Example of Tax Data Access</name>
          <sourcecode type="json" markers="false" pn="section-appendix.a.3-2.1">[
    {
        "type": "tax_data",
        "locations": [
            "https://taxservice.govehub.no.example.com"
        ],
        "actions":"read_tax_declaration",
        "periods": ["2018"],
        "duration_of_access": 30,
        "tax_payer_id": "23674185438934"
    }
]
</sourcecode>
        </figure>
        <t indent="0" pn="section-appendix.a.3-3">The top-level fields have the following meaning:</t>
        <dl spacing="normal" newline="false" indent="3" pn="section-appendix.a.3-4">
          <dt pn="section-appendix.a.3-4.1"><tt>periods</tt>:</dt>
          <dd pn="section-appendix.a.3-4.2">the periods the client wants to access</dd>
          <dt pn="section-appendix.a.3-4.3"><tt>duration_of_access</tt>:</dt>
          <dd pn="section-appendix.a.3-4.4">how long the clients intend to access the data in days</dd>
          <dt pn="section-appendix.a.3-4.5"><tt>tax_payer_id</tt>:</dt>
          <dd pn="section-appendix.a.3-4.6">identifier of the taxpayer (if known to the client)</dd>
        </dl>
      </section>
      <section anchor="ehealth" numbered="true" removeInRFC="false" toc="include" pn="section-appendix.a.4">
        <name slugifiedName="name-ehealth">eHealth</name>
        <t indent="0" pn="section-appendix.a.4-1">These two examples are inspired by requirements for APIs used in the Norwegian eHealth system.</t>
        <t indent="0" pn="section-appendix.a.4-2">In this use case, the physical therapist sits in front of their computer using a local Electronic Health Records (EHR) system. They want to look at the electronic patient records of a certain patient, and they also want to fetch the patient's journal entries in another system, perhaps at another institution or a national service. Access to this data is provided by an API.</t>
        <t indent="0" pn="section-appendix.a.4-3">The information necessary to authorize the request at the API is only known by the EHR system and must be presented to the API.</t>
        <t indent="0" pn="section-appendix.a.4-4">In the first example, the authorization details object contains the identifier of an organization. In this case, the API needs to know if the given organization has the lawful basis for processing personal health information to give access to sensitive data.</t>
        <figure align="left" suppress-title="false" pn="figure-29">
          <name slugifiedName="name-ehealth-example">eHealth Example</name>
          <sourcecode type="json" markers="false" pn="section-appendix.a.4-5.1">"authorization_details": {
    "type": "patient_record",
    "requesting_entity": {
        "type": "Practitioner",
        "identifier": [
        {
            "system": "urn:oid:2.16.578.1.12.4.1.4.4",
            "value": "1234567"
        }],
        "practitioner_role": {
            "organization": {
                "identifier": {
                    "system": "urn:oid:2.16.578.1.12.4.1.2.101",
                    "type": "ENH",
                    "value": "[organizational number]"
                }
            }
        }
    }
}
</sourcecode>
        </figure>
        <t indent="0" pn="section-appendix.a.4-6">In the second example, the API requires more information to authorize the request. In this case, the authorization details object contains additional information about the health institution and the current profession the user has at the time of the request. The additional level of detail could be used for both authorization and data minimization.</t>
        <figure align="left" suppress-title="false" pn="figure-30">
          <name slugifiedName="name-advanced-ehealth-example">Advanced eHealth Example</name>
          <sourcecode type="json" markers="false" pn="section-appendix.a.4-7.1">
[
   {
      "type": "patient_record",
      "location": "https://fhir.example.com/patient",
      "actions": [
         "read"
      ],
      "patient_identifier": [
         {
            "system": "urn:oid:2.16.578.1.12.4.1.4.1",
            "value": "12345678901"
         }
      ],
      "reason_for_request": "Clinical treatment",
      "requesting_entity": {
         "type": "Practitioner",
         "identifier": [
            {
               "system": "urn:oid:2.16.578.1.12.4.1.4.4",
               "value": "1234567"
            }
         ],
         "practitioner_role": {
            "organization": {
               "identifier": [
                  {
                     "system": "urn:oid:2.16.578.1.12.4.1.2.101",
                     "type": "ENH",
                     "value": "&lt;organizational number&gt;"
                  }
               ],
               "type": {
                  "coding": [
                     {
                        "system":
                           "http://hl7.example.org/fhir/org-type",
                        "code": "dept",
                        "display": "Hospital Department"
                     }
                  ]
               },
               "name": "Akuttmottak"
            },
            "profession": {
               "coding": [
                  {
                     "system": "http://snomed.example.org/sct",
                     "code": "36682004",
                     "display": "Physical therapist"
                  }
               ]
            }
         }
      }
   }
]
</sourcecode>
        </figure>
        <t indent="0" pn="section-appendix.a.4-8">Description of the fields:</t>
        <dl spacing="normal" newline="false" indent="3" pn="section-appendix.a.4-9">
          <dt pn="section-appendix.a.4-9.1"><tt>patient_identifier</tt>:</dt>
          <dd pn="section-appendix.a.4-9.2">the identifier of the patient composed of a system identifier in OID format (namespace) and the actual value within this namespace.</dd>
          <dt pn="section-appendix.a.4-9.3"><tt>reason_for_request</tt>:</dt>
          <dd pn="section-appendix.a.4-9.4">the reason why the user wants to access a certain API.</dd>
          <dt pn="section-appendix.a.4-9.5"><tt>requesting_entity</tt>:</dt>
          <dd pn="section-appendix.a.4-9.6">specification of the requester by means of identity, role and organizational context. This data is provided to facilitate authorization and for auditing purposes.</dd>
        </dl>
        <t indent="0" pn="section-appendix.a.4-10">In this use case, the AS authenticates the requester, who is not the patient, and approves access based on policies.</t>
      </section>
    </section>
    <section anchor="Acknowledgements" numbered="false" removeInRFC="false" toc="include" pn="section-appendix.b">
      <name slugifiedName="name-acknowledgements">Acknowledgements</name>
      <t indent="0" pn="section-appendix.b-1">We would like to thank <contact fullname="Daniel Fett"/>, <contact fullname="Sebastian Ebling"/>, <contact fullname="Dave Tonge"/>, <contact fullname="Mike Jones"/>, <contact fullname="Nat Sakimura"/>, and <contact fullname="Rob Otto"/> for their valuable feedback during the preparation of this specification.</t>
      <t indent="0" pn="section-appendix.b-2">We would also like to thank <contact fullname="Vladimir Dzhuvinov"/>,
<contact fullname="Takahiko Kawasaki"/>, <contact fullname="Daniel Fett"/>,
<contact fullname="Dave Tonge"/>, <contact fullname="Travis Spencer"/>,
<contact fullname="Joergen Binningsboe"/>, <contact fullname="Aamund Bremer"/>, <contact fullname="Steinar Noem"/>, <contact fullname="Francis Pouatcha"/>, <contact fullname="Jacob Ideskog"/>, <contact fullname="Hannes Tschofenig"/>, and <contact fullname="Aaron Parecki"/> for their valuable
feedback to this specification.</t>
    </section>
    <section anchor="authors-addresses" numbered="false" removeInRFC="false" toc="include" pn="section-appendix.c">
      <name slugifiedName="name-authors-addresses">Authors' Addresses</name>
      <author initials="T." surname="Lodderstedt" fullname="Torsten Lodderstedt">
        <organization showOnFrontPage="true">yes.com</organization>
        <address>
          <postal>
            <street/>
          </postal>
          <email>torsten@lodderstedt.net</email>
        </address>
      </author>
      <author initials="J." surname="Richer" fullname="Justin Richer">
        <organization showOnFrontPage="true">Bespoke Engineering</organization>
        <address>
          <postal>
            <street/>
          </postal>
          <email>ietf@justin.richer.org</email>
        </address>
      </author>
      <author initials="B." surname="Campbell" fullname="Brian Campbell">
        <organization showOnFrontPage="true">Ping Identity</organization>
        <address>
          <postal>
            <street/>
          </postal>
          <email>bcampbell@pingidentity.com</email>
        </address>
      </author>
    </section>
  </back>
</rfc>
