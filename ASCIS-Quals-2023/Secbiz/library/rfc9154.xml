<?xml version='1.0' encoding='utf-8'?>
<rfc xmlns:xi="http://www.w3.org/2001/XInclude" version="3" category="std" consensus="true" docName="draft-ietf-regext-secure-authinfo-transfer-07" indexInclude="true" ipr="trust200902" number="9154" prepTime="2021-12-30T10:58:43" scripts="Common,Latin" sortRefs="true" submissionType="IETF" symRefs="true" tocDepth="4" tocInclude="true" xml:lang="en">
  <link href="https://datatracker.ietf.org/doc/draft-ietf-regext-secure-authinfo-transfer-07" rel="prev"/>
  <link href="https://dx.doi.org/10.17487/rfc9154" rel="alternate"/>
  <link href="urn:issn:2070-1721" rel="alternate"/>
  <front>
    <title abbrev="EPP Secure AuthInfo for Transfer">Extensible Provisioning Protocol (EPP) Secure Authorization Information for Transfer</title>
    <seriesInfo name="RFC" value="9154" stream="IETF"/>
    <author fullname="James Gould" surname="Gould">
      <organization showOnFrontPage="true">Verisign, Inc.</organization>
      <address>
        <postal>
          <street>12061 Bluemont Way</street>
          <city>Reston</city>
          <region>VA</region>
          <code>20190</code>
          <country>United States of America</country>
        </postal>
        <email>jgould@verisign.com</email>
        <uri>https://www.verisign.com</uri>
      </address>
    </author>
    <author fullname="Richard Wilhelm" surname="Wilhelm">
      <organization showOnFrontPage="true">Verisign, Inc.</organization>
      <address>
        <postal>
          <street>12061 Bluemont Way</street>
          <city>Reston</city>
          <region>VA</region>
          <code>20190</code>
          <country>United States of America</country>
        </postal>
        <email>4rickwilhelm@gmail.com</email>
        <uri>https://www.verisign.com</uri>
      </address>
    </author>
    <date month="12" year="2021"/>
    <keyword>EPP</keyword>
    <keyword>authinfo</keyword>
    <keyword>random</keyword>
    <keyword>short-lived</keyword>
    <keyword>strong</keyword>
    <keyword>storing</keyword>
    <keyword>securely</keyword>
    <abstract pn="section-abstract">
      <t indent="0" pn="section-abstract-1">The Extensible Provisioning Protocol (EPP) (RFC 5730)
       defines the use of authorization information to authorize a transfer of an EPP object,
       such as a domain name, between clients that are referred to as "registrars".
       Object-specific, password-based authorization information (see RFCs 5731 and
       5733) is commonly used but raises issues related to the security,
       complexity, storage, and lifetime of authentication information.
       This document defines an operational practice, using the EPP RFCs,
       that leverages the use of strong random authorization information
       values that are short lived, not stored by the client, and stored
       by the server using a cryptographic hash that provides for secure
       authorization information that can safely be used for object
       transfers.</t>
    </abstract>
    <boilerplate>
      <section anchor="status-of-memo" numbered="false" removeInRFC="false" toc="exclude" pn="section-boilerplate.1">
        <name slugifiedName="name-status-of-this-memo">Status of This Memo</name>
        <t indent="0" pn="section-boilerplate.1-1">
            This is an Internet Standards Track document.
        </t>
        <t indent="0" pn="section-boilerplate.1-2">
            This document is a product of the Internet Engineering Task Force
            (IETF).  It represents the consensus of the IETF community.  It has
            received public review and has been approved for publication by
            the Internet Engineering Steering Group (IESG).  Further
            information on Internet Standards is available in Section 2 of 
            RFC 7841.
        </t>
        <t indent="0" pn="section-boilerplate.1-3">
            Information about the current status of this document, any
            errata, and how to provide feedback on it may be obtained at
            <eref target="https://www.rfc-editor.org/info/rfc9154" brackets="none"/>.
        </t>
      </section>
      <section anchor="copyright" numbered="false" removeInRFC="false" toc="exclude" pn="section-boilerplate.2">
        <name slugifiedName="name-copyright-notice">Copyright Notice</name>
        <t indent="0" pn="section-boilerplate.2-1">
            Copyright (c) 2021 IETF Trust and the persons identified as the
            document authors. All rights reserved.
        </t>
        <t indent="0" pn="section-boilerplate.2-2">
            This document is subject to BCP 78 and the IETF Trust's Legal
            Provisions Relating to IETF Documents
            (<eref target="https://trustee.ietf.org/license-info" brackets="none"/>) in effect on the date of
            publication of this document. Please review these documents
            carefully, as they describe your rights and restrictions with
            respect to this document. Code Components extracted from this
            document must include Revised BSD License text as described in
            Section 4.e of the Trust Legal Provisions and are provided without
            warranty as described in the Revised BSD License.
        </t>
      </section>
    </boilerplate>
    <toc>
      <section anchor="toc" numbered="false" removeInRFC="false" toc="exclude" pn="section-toc.1">
        <name slugifiedName="name-table-of-contents">Table of Contents</name>
        <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1">
          <li pn="section-toc.1-1.1">
            <t indent="0" keepWithNext="true" pn="section-toc.1-1.1.1"><xref derivedContent="1" format="counter" sectionFormat="of" target="section-1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-introduction">Introduction</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.1.2">
              <li pn="section-toc.1-1.1.2.1">
                <t indent="0" keepWithNext="true" pn="section-toc.1-1.1.2.1.1"><xref derivedContent="1.1" format="counter" sectionFormat="of" target="section-1.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-conventions-used-in-this-do">Conventions Used in This Document</xref></t>
              </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.2">
            <t indent="0" keepWithNext="true" pn="section-toc.1-1.2.1"><xref derivedContent="2" format="counter" sectionFormat="of" target="section-2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-registrant-registrar-regist">Registrant, Registrar, Registry</xref></t>
          </li>
          <li pn="section-toc.1-1.3">
            <t indent="0" pn="section-toc.1-1.3.1"><xref derivedContent="3" format="counter" sectionFormat="of" target="section-3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-signaling-client-and-server">Signaling Client and Server Support</xref></t>
          </li>
          <li pn="section-toc.1-1.4">
            <t indent="0" pn="section-toc.1-1.4.1"><xref derivedContent="4" format="counter" sectionFormat="of" target="section-4"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-secure-authorization-inform">Secure Authorization Information</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.4.2">
              <li pn="section-toc.1-1.4.2.1">
                <t indent="0" pn="section-toc.1-1.4.2.1.1"><xref derivedContent="4.1" format="counter" sectionFormat="of" target="section-4.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-secure-random-authorization">Secure Random Authorization Information</xref></t>
              </li>
              <li pn="section-toc.1-1.4.2.2">
                <t indent="0" pn="section-toc.1-1.4.2.2.1"><xref derivedContent="4.2" format="counter" sectionFormat="of" target="section-4.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-authorization-information-t">Authorization Information Time To Live (TTL)</xref></t>
              </li>
              <li pn="section-toc.1-1.4.2.3">
                <t indent="0" pn="section-toc.1-1.4.2.3.1"><xref derivedContent="4.3" format="counter" sectionFormat="of" target="section-4.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-authorization-information-s">Authorization Information Storage and Transport</xref></t>
              </li>
              <li pn="section-toc.1-1.4.2.4">
                <t indent="0" pn="section-toc.1-1.4.2.4.1"><xref derivedContent="4.4" format="counter" sectionFormat="of" target="section-4.4"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-authorization-information-m">Authorization Information Matching</xref></t>
              </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.5">
            <t indent="0" pn="section-toc.1-1.5.1"><xref derivedContent="5" format="counter" sectionFormat="of" target="section-5"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-create-transfer-and-secure-">Create, Transfer, and Secure Authorization Information</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.5.2">
              <li pn="section-toc.1-1.5.2.1">
                <t indent="0" pn="section-toc.1-1.5.2.1.1"><xref derivedContent="5.1" format="counter" sectionFormat="of" target="section-5.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-create-command">&lt;Create&gt; Command</xref></t>
              </li>
              <li pn="section-toc.1-1.5.2.2">
                <t indent="0" pn="section-toc.1-1.5.2.2.1"><xref derivedContent="5.2" format="counter" sectionFormat="of" target="section-5.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-update-command">&lt;Update&gt; Command</xref></t>
              </li>
              <li pn="section-toc.1-1.5.2.3">
                <t indent="0" pn="section-toc.1-1.5.2.3.1"><xref derivedContent="5.3" format="counter" sectionFormat="of" target="section-5.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-info-command-and-response">&lt;Info&gt; Command and Response</xref></t>
              </li>
              <li pn="section-toc.1-1.5.2.4">
                <t indent="0" pn="section-toc.1-1.5.2.4.1"><xref derivedContent="5.4" format="counter" sectionFormat="of" target="section-5.4"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-transfer-request-command">&lt;Transfer&gt; Request Command</xref></t>
              </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.6">
            <t indent="0" pn="section-toc.1-1.6.1"><xref derivedContent="6" format="counter" sectionFormat="of" target="section-6"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-transition-considerations">Transition Considerations</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.6.2">
              <li pn="section-toc.1-1.6.2.1">
                <t indent="0" pn="section-toc.1-1.6.2.1.1"><xref derivedContent="6.1" format="counter" sectionFormat="of" target="section-6.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-transition-phase-1-features">Transition Phase 1 - Features</xref></t>
              </li>
              <li pn="section-toc.1-1.6.2.2">
                <t indent="0" pn="section-toc.1-1.6.2.2.1"><xref derivedContent="6.2" format="counter" sectionFormat="of" target="section-6.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-transition-phase-2-storage">Transition Phase 2 - Storage</xref></t>
              </li>
              <li pn="section-toc.1-1.6.2.3">
                <t indent="0" pn="section-toc.1-1.6.2.3.1"><xref derivedContent="6.3" format="counter" sectionFormat="of" target="section-6.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-transition-phase-3-enforcem">Transition Phase 3 - Enforcement</xref></t>
              </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.7">
            <t indent="0" pn="section-toc.1-1.7.1"><xref derivedContent="7" format="counter" sectionFormat="of" target="section-7"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-iana-considerations">IANA Considerations</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.7.2">
              <li pn="section-toc.1-1.7.2.1">
                <t indent="0" pn="section-toc.1-1.7.2.1.1"><xref derivedContent="7.1" format="counter" sectionFormat="of" target="section-7.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-xml-namespace">XML Namespace</xref></t>
              </li>
              <li pn="section-toc.1-1.7.2.2">
                <t indent="0" pn="section-toc.1-1.7.2.2.1"><xref derivedContent="7.2" format="counter" sectionFormat="of" target="section-7.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-epp-extension-registry">EPP Extension Registry</xref></t>
              </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.8">
            <t indent="0" pn="section-toc.1-1.8.1"><xref derivedContent="8" format="counter" sectionFormat="of" target="section-8"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-security-considerations">Security Considerations</xref></t>
          </li>
          <li pn="section-toc.1-1.9">
            <t indent="0" pn="section-toc.1-1.9.1"><xref derivedContent="9" format="counter" sectionFormat="of" target="section-9"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-references">References</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.9.2">
              <li pn="section-toc.1-1.9.2.1">
                <t indent="0" pn="section-toc.1-1.9.2.1.1"><xref derivedContent="9.1" format="counter" sectionFormat="of" target="section-9.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-normative-references">Normative References</xref></t>
              </li>
              <li pn="section-toc.1-1.9.2.2">
                <t indent="0" pn="section-toc.1-1.9.2.2.1"><xref derivedContent="9.2" format="counter" sectionFormat="of" target="section-9.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-informative-references">Informative References</xref></t>
              </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.10">
            <t indent="0" pn="section-toc.1-1.10.1"><xref derivedContent="" format="none" sectionFormat="of" target="section-appendix.a"/><xref derivedContent="" format="title" sectionFormat="of" target="name-acknowledgements">Acknowledgements</xref></t>
          </li>
          <li pn="section-toc.1-1.11">
            <t indent="0" pn="section-toc.1-1.11.1"><xref derivedContent="" format="none" sectionFormat="of" target="section-appendix.b"/><xref derivedContent="" format="title" sectionFormat="of" target="name-authors-addresses">Authors' Addresses</xref></t>
          </li>
        </ul>
      </section>
    </toc>
  </front>
  <middle>
    <section numbered="true" toc="include" removeInRFC="false" pn="section-1">
      <name slugifiedName="name-introduction">Introduction</name>
      <t indent="0" pn="section-1-1">The Extensible Provisioning Protocol (EPP) <xref target="RFC5730" format="default" sectionFormat="of" derivedContent="RFC5730"/>
      defines the use of authorization information to authorize a transfer of an EPP object,
      such as a domain name, between clients that are referred to as "registrars".
      The authorization information is object specific and has been
      defined in "<xref target="RFC5731" format="title" sectionFormat="of" derivedContent="Extensible Provisioning Protocol (EPP) Domain Name Mapping"/>" <xref target="RFC5731" format="default" sectionFormat="of" derivedContent="RFC5731"/> and "<xref target="RFC5733" format="title" sectionFormat="of" derivedContent="Extensible Provisioning Protocol (EPP) Contact Mapping"/>" <xref target="RFC5733" format="default" sectionFormat="of" derivedContent="RFC5733"/> as password-based authorization
      information.  Other authorization mechanisms can be used, but in practice
      the password-based authorization information has been used at the time of object creation,
      managed with the object update, and used to authorize an object transfer request.
      What has not been considered is the security of the authorization
      information, which includes the complexity of the authorization information,
      the Time To Live (TTL) of the authorization information,
      and where and how the authorization information is stored.</t>
      <t indent="0" pn="section-1-2">The current/original lifecycle for authorization information involves
        long-term storage of encrypted (not hashed) passwords, which presents a
        significant latent risk of password compromise and is not consistent
        with current best practices. The mechanisms in this document provide a
        way to avoid long-term password storage entirely and to only require
        the storage of hashed (not retrievable) passwords instead of encrypted
        passwords.</t>
      <t indent="0" pn="section-1-3">This document
      defines an operational practice, using the EPP RFCs, that
      leverages the use of strong, random authorization information values
      that are short lived, not stored by the client, and stored by the server using a cryptographic hash to provide
      secure authorization information used for transfers.
      This operational practice can be used to support
      transfers of any EPP object, where the domain name object as defined in <xref target="RFC5731" format="default" sectionFormat="of" derivedContent="RFC5731"/> is used in this document for illustration purposes.
      Elements of the practice may be used to support the secure use of the
      authorization information for purposes other than transfer, but any
      other purposes and the applicable elements are out of scope for this document.</t>
      <t indent="0" pn="section-1-4">The overall goal is to have strong, random authorization information values
      that are short lived and are either not stored or stored as 
      cryptographic hash values by the non-responsible parties.
      In a registrant, registrar, and registry model, the registrant registers
      the object through the registrar to the registry.
      The registrant is the responsible party, and the registrar
      and the registry are the non-responsible parties.  EPP is a protocol
      between the registrar and the registry, where the registrar is referred to as
      the "client" and the registry is referred to as the "server".  The following
      are the elements of the operational practice and how the existing features
      of the EPP RFCs can be leveraged to satisfy them:</t>
      <dl newline="false" spacing="normal" indent="4" pn="section-1-5">
        <dt pn="section-1-5.1">Strong Random Authorization Information:</dt>
        <dd pn="section-1-5.2">
          The EPP RFCs define the password-based authorization information value using
          an XML schema "normalizedString" type, so they don't restrict what can be used in any substantial way.
          This operational practice defines the recommended mechanism for
          creating a strong random authorization value that would be generated by the client.
        </dd>
        <dt pn="section-1-5.3">Short-Lived Authorization Information:</dt>
        <dd pn="section-1-5.4">The EPP RFCs don't explicitly
        support short-lived authorization information or a TTL for authorization information,
        but there are EPP RFC features that can be leveraged to support short-lived authorization information.
        All of these features are compatible with the EPP RFCs, though not mandatory to implement.
        As stated in <xref target="RFC5731" sectionFormat="of" section="2.6" format="default" derivedLink="https://rfc-editor.org/rfc/rfc5731#section-2.6" derivedContent="RFC5731"/>, 
authorization information is assigned when a domain object is created,
        which results in long-lived authorization information.  This specification changes the nature of the
        authorization information from long lived to short lived.
        If authorization information is set only when a transfer is in process, the server
        needs to support an empty authorization information value on create, support setting and
        unsetting authorization information, and support automatically unsetting the authorization information upon a
        successful transfer.  All of these features can be supported by the EPP RFCs.
        </dd>
        <dt pn="section-1-5.5">Storing Authorization Information Securely:</dt>
        <dd pn="section-1-5.6">The EPP RFCs don't
        specify where and how the authorization information is stored in the client or the server, so
        there are no restrictions on defining an operational practice for storing the authorization information
        securely.  The operational practice will require the client to not store the authorization information
        and will require the server to store the authorization information using a cryptographic hash with
        at least a 256-bit hash function, such as SHA-256 <xref target="FIPS-180-4" format="default" sectionFormat="of" derivedContent="FIPS-180-4"/>, and with a per-authorization information random salt with at least 128 bits.
        Returning the authorization information set in an EPP info response will not be supported.
        </dd>
      </dl>
      <section numbered="true" toc="include" removeInRFC="false" pn="section-1.1">
        <name slugifiedName="name-conventions-used-in-this-do">Conventions Used in This Document</name>
        <t indent="0" pn="section-1.1-1">The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>",
       "<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>",
       "<bcp14>SHALL NOT</bcp14>", "<bcp14>SHOULD</bcp14>",
       "<bcp14>SHOULD NOT</bcp14>",
       "<bcp14>RECOMMENDED</bcp14>", "<bcp14>NOT RECOMMENDED</bcp14>",
       "<bcp14>MAY</bcp14>", and "<bcp14>OPTIONAL</bcp14>" in this document
       are to be interpreted as described in BCP 14
       <xref target="RFC2119" format="default" sectionFormat="of" derivedContent="RFC2119"/> <xref target="RFC8174" format="default" sectionFormat="of" derivedContent="RFC8174"/> when, and only
       when, they appear in all capitals, as shown here.</t>
        <t indent="0" pn="section-1.1-2">XML <xref target="W3C.REC-xml-20081126" format="default" sectionFormat="of" derivedContent="W3C.REC-xml-20081126"/> is case sensitive. Unless stated otherwise, XML specifications
        and examples provided in this document <bcp14>MUST</bcp14> be interpreted in the
        character case presented in order to develop a conforming
        implementation.</t>
        <t indent="0" pn="section-1.1-3">In examples, "C:" represents lines sent by a protocol client and "S:" represents lines returned by a protocol server.
        Indentation and empty space in examples are provided only to illustrate element relationships
        and are not a required feature of this protocol.
        </t>
        <t indent="0" pn="section-1.1-4">The examples reference XML namespace prefixes that are used for the associated XML namespaces.
        Implementations <bcp14>MUST NOT</bcp14> depend on the example XML namespaces and instead employ a proper
        namespace-aware XML parser and serializer to interpret and
        output the XML documents.  The example namespace prefixes used and their associated XML namespaces include the following:</t>
        <dl newline="false" spacing="normal" indent="4" pn="section-1.1-5">
          <dt pn="section-1.1-5.1">domain:</dt>
          <dd pn="section-1.1-5.2">urn:ietf:params:xml:ns:domain-1.0</dd>
          <dt pn="section-1.1-5.3">contact:</dt>
          <dd pn="section-1.1-5.4">urn:ietf:params:xml:ns:contact-1.0</dd>
        </dl>
      </section>
    </section>
    <section anchor="rrr" numbered="true" toc="include" removeInRFC="false" pn="section-2">
      <name slugifiedName="name-registrant-registrar-regist">Registrant, Registrar, Registry</name>
      <t indent="0" pn="section-2-1">The EPP RFCs refer to "client" and "server", but when it comes to transfers, there are three types of actors that are involved.
          This document will refer to these actors as "registrant", "registrar", and "registry".  <xref target="RFC8499" format="default" sectionFormat="of" derivedContent="RFC8499"/> defines these terms formally for the Domain Name System (DNS).
          The terms are further described below to cover their roles as actors using the authorization information in the transfer process of any object in the registry,
          such as a domain name or a contact:</t>
      <dl newline="false" spacing="normal" indent="4" pn="section-2-2">
        <dt pn="section-2-2.1">Registrant:</dt>
        <dd pn="section-2-2.2">
          <xref target="RFC8499" format="default" sectionFormat="of" derivedContent="RFC8499"/> defines the registrant as "an individual or organization on whose behalf a name in a zone is registered by the registry."
            The registrant can be the owner of any object in the registry, such as a domain name or a contact.  The registrant interfaces with the
            registrar for provisioning the objects.  A transfer is coordinated by the registrant to transfer the sponsorship
            of the object from one registrar to another.  The authorization information is meant to authenticate the registrant
            as the owner of the object to the non-sponsoring registrar and to authorize the transfer.</dd>
        <dt pn="section-2-2.3">Registrar:</dt>
        <dd pn="section-2-2.4">
          <xref target="RFC8499" format="default" sectionFormat="of" derivedContent="RFC8499"/> defines the registrar as "a service provider that acts as a go-between for registrants and registries."
            The registrar interfaces with the registrant for the provisioning of objects, such as domain names and contacts, and with the
            registries to satisfy the registrant's provisioning requests.  A registrar may (1) directly interface with the registrant or (2) indirectly interface with the registrant, typically through one or more resellers.  Implementing a transfer using
            secure authorization information extends through the registrar's reseller channel up to the direct interface with the registrant.  The
            registrar's interface with the registries uses EPP.  The registrar's interface with its reseller channel or the registrant is registrar specific.
            In the EPP RFCs, the registrar is referred to as the "client", since EPP is the protocol used between the registrar and the registry.
            The sponsoring registrar is the authorized registrar to manage objects on behalf of the registrant.  A non-sponsoring registrar
            is not authorized to manage objects on behalf of the registrant.  A transfer of an object's sponsorship is from one registrar,
            referred to as the "losing registrar", to another registrar, referred to as the "gaining registrar".</dd>
        <dt pn="section-2-2.5">Registry:</dt>
        <dd pn="section-2-2.6">
          <xref target="RFC8499" format="default" sectionFormat="of" derivedContent="RFC8499"/> defines the registry as "the administrative operation of a zone that allows registration of names within that zone."
            The registry typically interfaces with the registrars over EPP and generally does not
            interact directly with the registrant.  In the EPP RFCs, the registry is referred to as the "server", since EPP is the protocol used between
            the registrar and the registry.  The registry has a record of the sponsoring registrar for each object and provides the mechanism
            (over EPP) to coordinate a transfer of an object's sponsorship between registrars.</dd>
      </dl>
    </section>
    <section anchor="signal-client-server-support" numbered="true" toc="include" removeInRFC="false" pn="section-3">
      <name slugifiedName="name-signaling-client-and-server">Signaling Client and Server Support</name>
      <t indent="0" pn="section-3-1">This document does not define a new protocol; rather, it defines an operational practice using existing EPP features, where
      the client and the server can signal support for the operational practice using a namespace URI in the login and greeting extension services.
      The namespace URI "urn:ietf:params:xml:ns:epp:secure-authinfo-transfer-1.0" is used to signal support for the operational practice.  The
      client includes the namespace URI in an &lt;svcExtension&gt; &lt;extURI&gt; element of the &lt;login&gt; command <xref target="RFC5730" format="default" sectionFormat="of" derivedContent="RFC5730"/>.
      The server includes the namespace URI in an &lt;svcExtension&gt; &lt;extURI&gt; element of the greeting <xref target="RFC5730" format="default" sectionFormat="of" derivedContent="RFC5730"/>.</t>
      <t indent="0" pn="section-3-2">A client that receives the namespace URI in the server's greeting extension services can expect the following supported behavior by the server:
      </t>
      <ol spacing="normal" type="1" indent="adaptive" start="1" pn="section-3-3">
        <li pn="section-3-3.1" derivedCounter="1.">Support for an empty authorization information value with a &lt;create&gt; command.</li>
        <li pn="section-3-3.2" derivedCounter="2.">Support for unsetting authorization information with an &lt;update&gt; command.</li>
        <li pn="section-3-3.3" derivedCounter="3.">Support for validating authorization information with an &lt;info&gt; command.</li>
        <li pn="section-3-3.4" derivedCounter="4.">Support for not returning an indication of whether the authorization information is set or unset to the non-sponsoring registrar.</li>
        <li pn="section-3-3.5" derivedCounter="5.">Support for returning an empty authorization information value to the sponsoring registrar when the authorization information is set in an info response.</li>
        <li pn="section-3-3.6" derivedCounter="6.">Support for allowing the passing of a matching non-empty authorization information value to authorize a transfer.</li>
        <li pn="section-3-3.7" derivedCounter="7.">Support for automatically unsetting the authorization information upon successful completion of a transfer.</li>
      </ol>
      <t indent="0" pn="section-3-4">A server that receives the namespace URI in the client's &lt;login&gt; command extension services can expect the following supported behavior by the client:
      </t>
      <ol spacing="normal" type="1" indent="adaptive" start="1" pn="section-3-5">
        <li pn="section-3-5.1" derivedCounter="1.">Support for the generation of authorization information using a secure random value.</li>
        <li pn="section-3-5.2" derivedCounter="2.">Support for only setting the authorization information when a transfer is in process.</li>
      </ol>
    </section>
    <section anchor="secureAuthInfo" numbered="true" toc="include" removeInRFC="false" pn="section-4">
      <name slugifiedName="name-secure-authorization-inform">Secure Authorization Information</name>
      <t indent="0" pn="section-4-1">The EPP RFCs (<xref target="RFC5731" format="default" sectionFormat="of" derivedContent="RFC5731"/> and <xref target="RFC5733" format="default" sectionFormat="of" derivedContent="RFC5733"/>) use password-based authorization information to support transfer with the &lt;domain:pw&gt; element <xref target="RFC5731" format="default" sectionFormat="of" derivedContent="RFC5731"/> and with the &lt;contact:pw&gt; element <xref target="RFC5733" format="default" sectionFormat="of" derivedContent="RFC5733"/>.
    Other EPP objects that support password-based authorization information for
          transfer can use secure authorization information as defined in this document.  For 
       authorization information to be secure, it must be generated using a strong random value and have a short TTL. The security of the authorization information is defined in the
          following sections.</t>
      <section anchor="secureRandomAuthInfo" numbered="true" toc="include" removeInRFC="false" pn="section-4.1">
        <name slugifiedName="name-secure-random-authorization">Secure Random Authorization Information</name>
        <t indent="0" pn="section-4.1-1">For authorization information to be secure, it <bcp14>MUST</bcp14> be generated
       using a secure random value.  The authorization information is treated
       as a password, and the required length L of a password, rounded up to the
       largest whole number, is based on the size N of the set of characters and
       the desired entropy H, in the equation L = ROUNDUP(H / log<sub>2</sub> N).  Given a
       target entropy, the required length can be calculated after deciding on the
       set of characters that will be randomized.  In accordance with current
       best practices and noting that the authorization information is a
       machine-generated value, the implementation <bcp14>SHOULD</bcp14> use at least 128 bits of
       entropy as the value of H.  The lengths below are calculated using that
       value.</t>
        <t indent="0" pn="section-4.1-2">Calculation of the required length with 128 bits of entropy and with the set of all printable ASCII characters except space (0x20), which consists of the 94 characters 0x21-0x7E:</t>
        <t indent="0" pn="section-4.1-3">ROUNDUP(128 / log<sub>2</sub> 94) =~ ROUNDUP(128 / 6.55) =~ ROUNDUP(19.54) = 20</t>
        <t indent="0" pn="section-4.1-4">Calculation of the required length with 128 bits of entropy and with the set of case-insensitive alphanumeric characters, which consists of 36 characters (a-z A-Z 0-9):</t>
        <t indent="0" pn="section-4.1-5">ROUNDUP(128 / log<sub>2</sub> 36) =~ ROUNDUP(128 / 5.17) =~ ROUNDUP(24.76) = 25</t>
        <t indent="0" pn="section-4.1-6">The strength of the random authorization information is dependent on the
      random number generator.  Suitably strong random number generators are
      available in a wide variety of implementation environments, including the
      interfaces listed in Sections <xref target="RFC4086" section="7.1.2" sectionFormat="bare" format="default" derivedLink="https://rfc-editor.org/rfc/rfc4086#section-7.1.2" derivedContent="RFC4086"/> and <xref target="RFC4086" section="7.1.3" sectionFormat="bare" format="default" derivedLink="https://rfc-editor.org/rfc/rfc4086#section-7.1.3" derivedContent="RFC4086"/> of <xref target="RFC4086" format="default" sectionFormat="of" derivedContent="RFC4086"/>.  In environments
      that do not provide interfaces to strong random number
      generators, the practices defined in <xref target="RFC4086" format="default" sectionFormat="of" derivedContent="RFC4086"/> and Section 4.7.1 of the <xref target="FIPS-140-2" format="default" sectionFormat="of" derivedContent="FIPS-140-2">NIST Federal Information Processing Standards (FIPS) Publication 140-2</xref> can be followed to produce random values that will be
      resistant to attack. (Note:  FIPS 140-2 has been superseded by FIPS 140-3, but 
      FIPS 140-3 does not contain information regarding random number generators.)</t>
      </section>
      <section anchor="authInfoTTL" numbered="true" toc="include" removeInRFC="false" pn="section-4.2">
        <name slugifiedName="name-authorization-information-t">Authorization Information Time To Live (TTL)</name>
        <t indent="0" pn="section-4.2-1">The authorization information <bcp14>SHOULD</bcp14> only be set when a transfer is in process.  This implies that the authorization information
            has a TTL by which the authorization information is cleared when the TTL expires.  The EPP RFCs do not provide definitions for TTL,
            but since the server supports the setting and unsetting of the authorization information by the sponsoring registrar, the sponsoring registrar
            can apply a TTL based on client policy.  The TTL client policy may be based on proprietary registrar-specific criteria, which provides for a
            transfer-specific TTL tuned for the particular circumstances of the transaction.
            The sponsoring registrar will be aware of the TTL, and the sponsoring registrar
            <bcp14>MUST</bcp14> inform the registrant of the TTL when the authorization information is provided to the registrant.</t>
      </section>
      <section anchor="authInfoStorageTransport" numbered="true" toc="include" removeInRFC="false" pn="section-4.3">
        <name slugifiedName="name-authorization-information-s">Authorization Information Storage and Transport</name>
        <t indent="0" pn="section-4.3-1">To protect the disclosure of the authorization information, the following requirements apply:</t>
        <ol spacing="normal" type="1" indent="adaptive" start="1" pn="section-4.3-2">
          <li pn="section-4.3-2.1" derivedCounter="1.">The authorization information <bcp14>MUST</bcp14> be stored by the registry using a strong one-way cryptographic hash with
          at least a 256-bit hash function, such as SHA-256 <xref target="FIPS-180-4" format="default" sectionFormat="of" derivedContent="FIPS-180-4"/>, and with a per-authorization information random salt
          with at least 128 bits.</li>
          <li pn="section-4.3-2.2" derivedCounter="2.">An empty authorization information value <bcp14>MUST</bcp14> be stored as an undefined value that is referred to as a "NULL" value.
          The representation of a NULL (undefined) value is dependent on the type of database used.</li>
          <li pn="section-4.3-2.3" derivedCounter="3.">The authorization information <bcp14>MUST NOT</bcp14> be stored by the losing registrar.</li>
          <li pn="section-4.3-2.4" derivedCounter="4.">The authorization information <bcp14>MUST</bcp14> only be stored by the gaining registrar as a "transient" value in support of the transfer process.</li>
          <li pn="section-4.3-2.5" derivedCounter="5.">The plain-text version of the authorization information <bcp14>MUST NOT</bcp14> be written to any logs by a registrar or the registry, nor
           otherwise recorded where it will persist beyond the transfer process.</li>
          <li pn="section-4.3-2.6" derivedCounter="6.">All communication that includes the authorization information <bcp14>MUST</bcp14> be over an encrypted channel (for example, see <xref target="RFC5734" format="default" sectionFormat="of" derivedContent="RFC5734"/>) for EPP.</li>
          <li pn="section-4.3-2.7" derivedCounter="7.">The registrar's interface for communicating the authorization information with the registrant <bcp14>MUST</bcp14> be over an authenticated and encrypted channel.</li>
        </ol>
      </section>
      <section anchor="authInfoMatching" numbered="true" toc="include" removeInRFC="false" pn="section-4.4">
        <name slugifiedName="name-authorization-information-m">Authorization Information Matching</name>
        <t indent="0" pn="section-4.4-1">To support the authorization information TTL, as described in <xref target="authInfoTTL" format="default" sectionFormat="of" derivedContent="Section 4.2"/>, the authorization information must have either a set or unset state.
        Authorization information that is unset is stored with a NULL (undefined) value.  Based on the requirement to store the
        authorization information using a strong one-way cryptographic hash,
        as described in <xref target="authInfoStorageTransport" format="default" sectionFormat="of" derivedContent="Section 4.3"/>, authorization information that is set is
        stored with a non-NULL hashed value.  The empty authorization information value is used as input in both the <xref target="createCommand" format="default" sectionFormat="of" derivedContent="Section 5.1">&lt;create&gt; command</xref> and the <xref target="updateCommand" format="default" sectionFormat="of" derivedContent="Section 5.2">&lt;update&gt; command</xref> to
         define the unset state.  The matching of the authorization information in the <xref target="infoCommandResponse" format="default" sectionFormat="of" derivedContent="Section 5.3">&lt;info&gt; command</xref> and the <xref target="transferRequestCommand" format="default" sectionFormat="of" derivedContent="Section 5.4">&lt;transfer&gt; request command</xref> is based on the following rules:
        </t>
        <ol spacing="normal" type="1" indent="adaptive" start="1" pn="section-4.4-2">
          <li pn="section-4.4-2.1" derivedCounter="1.">Any input authorization information value <bcp14>MUST NOT</bcp14> match an unset authorization information value.
            For example, in <xref target="RFC5731" format="default" sectionFormat="of" derivedContent="RFC5731"/> the input &lt;domain:pw&gt;2fooBAR&lt;/domain:pw&gt; must not match an unset authorization information value that used &lt;domain:null/&gt; or &lt;domain:pw/&gt;.</li>
          <li pn="section-4.4-2.2" derivedCounter="2.">An empty input authorization information value <bcp14>MUST NOT</bcp14> match any set authorization information value.</li>
          <li pn="section-4.4-2.3" derivedCounter="3.">A non-empty input authorization information value <bcp14>MUST</bcp14> be hashed and matched against the set authorization information value, which is stored using the same hash algorithm.</li>
        </ol>
      </section>
    </section>
    <section anchor="createTransferSecureAuthInfo" numbered="true" toc="include" removeInRFC="false" pn="section-5">
      <name slugifiedName="name-create-transfer-and-secure-">Create, Transfer, and Secure Authorization Information</name>
      <t indent="0" pn="section-5-1">To secure the transfer process using secure authorization information as described in <xref target="secureAuthInfo" format="default" sectionFormat="of" derivedContent="Section 4"/>,
      the client and server need to implement steps where the authorization information is set only when a transfer is
      actively in process and ensure that the authorization information is stored securely and transported only over secure channels.  The steps
      for management of the authorization information for transfers include the following:</t>
      <ol spacing="normal" type="1" indent="adaptive" start="1" pn="section-5-2">
        <li pn="section-5-2.1" derivedCounter="1.">The registrant requests to register the object with the registrar. The registrar sends the &lt;create&gt; command with an empty authorization information value
to the registry, as described in <xref target="createCommand" format="default" sectionFormat="of" derivedContent="Section 5.1"/>.</li>
        <li pn="section-5-2.2" derivedCounter="2.">The registrant requests from the losing registrar the authorization information to provide to the gaining registrar.</li>
        <li pn="section-5-2.3" derivedCounter="3.">The losing registrar generates a secure random authorization information value and sends it to the registry, as described in <xref target="updateCommand" format="default" sectionFormat="of" derivedContent="Section 5.2"/>, and then provides it to the registrant.</li>
        <li pn="section-5-2.4" derivedCounter="4.">The registrant provides the authorization information value to the gaining registrar.</li>
        <li pn="section-5-2.5" derivedCounter="5.">The gaining registrar optionally verifies the authorization information with the &lt;info&gt; command to the registry, as described in <xref target="infoCommandResponse" format="default" sectionFormat="of" derivedContent="Section 5.3"/>.</li>
        <li pn="section-5-2.6" derivedCounter="6.">The gaining registrar sends the transfer request with the authorization information to the registry, as described in <xref target="transferRequestCommand" format="default" sectionFormat="of" derivedContent="Section 5.4"/>.</li>
        <li pn="section-5-2.7" derivedCounter="7.">If the transfer completes successfully, the registry automatically unsets the authorization information;
            otherwise, the losing registrar unsets the authorization information when the TTL expires; see <xref target="updateCommand" format="default" sectionFormat="of" derivedContent="Section 5.2"/>.</li>
      </ol>
      <t indent="0" pn="section-5-3">The following sections outline the practices of the EPP commands and responses between the registrar and the registry that supports secure authorization information
      for transfer.</t>
      <section anchor="createCommand" numbered="true" toc="include" removeInRFC="false" pn="section-5.1">
        <name slugifiedName="name-create-command">&lt;Create&gt; Command</name>
        <t indent="0" pn="section-5.1-1">For a &lt;create&gt; command, the registry <bcp14>MUST</bcp14> allow the passing of an empty authorization information value and <bcp14>MAY</bcp14> disallow  the passing of a non-empty
        authorization information value.  By having an empty authorization information value on create, the object is initially not involved in the transfer process.  Any EPP object extension that supports setting
        the authorization information with an "eppcom:pwAuthInfoType" element can pass an empty authorization information value.  Examples of such extensions are found in <xref target="RFC5731" format="default" sectionFormat="of" derivedContent="RFC5731"/> and <xref target="RFC5733" format="default" sectionFormat="of" derivedContent="RFC5733"/>.</t>
        <t keepWithNext="true" indent="0" pn="section-5.1-2">Example of passing an empty authorization information value in a domain name &lt;create&gt; command <xref target="RFC5731" format="default" sectionFormat="of" derivedContent="RFC5731"/>:</t>
        <sourcecode name="" type="xml" markers="false" pn="section-5.1-3">
C:&lt;?xml version="1.0" encoding="UTF-8" standalone="no"?&gt;
C:&lt;epp xmlns="urn:ietf:params:xml:ns:epp-1.0"&gt;
C:  &lt;command&gt;
C:    &lt;create&gt;
C:      &lt;domain:create
C:        xmlns:domain="urn:ietf:params:xml:ns:domain-1.0"&gt;
C:        &lt;domain:name&gt;example.com&lt;/domain:name&gt;
C:        &lt;domain:authInfo&gt;
C:          &lt;domain:pw/&gt;
C:        &lt;/domain:authInfo&gt;
C:      &lt;/domain:create&gt;
C:    &lt;/create&gt;
C:    &lt;clTRID&gt;ABC-12345&lt;/clTRID&gt;
C:  &lt;/command&gt;
C:&lt;/epp&gt;
</sourcecode>
        <t keepWithNext="true" indent="0" pn="section-5.1-4">Example of passing an empty authorization information value in a contact &lt;create&gt; command <xref target="RFC5733" format="default" sectionFormat="of" derivedContent="RFC5733"/>:</t>
        <sourcecode name="" type="xml" markers="false" pn="section-5.1-5">
C:&lt;?xml version="1.0" encoding="UTF-8" standalone="no"?&gt;
C:&lt;epp xmlns="urn:ietf:params:xml:ns:epp-1.0"&gt;
C:  &lt;command&gt;
C:    &lt;create&gt;
C:      &lt;contact:create
C:       xmlns:contact="urn:ietf:params:xml:ns:contact-1.0"&gt;
C:        &lt;contact:id&gt;sh8013&lt;/contact:id&gt;
C:        &lt;contact:postalInfo type="int"&gt;
C:          &lt;contact:name&gt;John Doe&lt;/contact:name&gt;
C:          &lt;contact:addr&gt;
C:            &lt;contact:city&gt;Dulles&lt;/contact:city&gt;
C:            &lt;contact:cc&gt;US&lt;/contact:cc&gt;
C:          &lt;/contact:addr&gt;
C:        &lt;/contact:postalInfo&gt;
C:        &lt;contact:email&gt;jdoe@example.com&lt;/contact:email&gt;
C:        &lt;contact:authInfo&gt;
C:          &lt;contact:pw/&gt;
C:        &lt;/contact:authInfo&gt;
C:      &lt;/contact:create&gt;
C:    &lt;/create&gt;
C:    &lt;clTRID&gt;ABC-12345&lt;/clTRID&gt;
C:  &lt;/command&gt;
C:&lt;/epp&gt;
</sourcecode>
      </section>
      <section anchor="updateCommand" numbered="true" toc="include" removeInRFC="false" pn="section-5.2">
        <name slugifiedName="name-update-command">&lt;Update&gt; Command</name>
        <t indent="0" pn="section-5.2-1">
          For an &lt;update&gt; command, the registry <bcp14>MUST</bcp14> allow the setting and
          unsetting of the authorization information.  The registrar sets the
          authorization information by first generating a strong, random
          authorization information value, based on the information provided in <xref target="secureRandomAuthInfo" format="default" sectionFormat="of" derivedContent="Section 4.1"/>, and setting it
          in the registry in the &lt;update&gt; command.  The importance of generating
          strong authorization information values cannot be overstated: secure
          transfers are very important to the Internet to mitigate damage in the
          form of theft, fraud, and other abuse.  It is
          critical that registrars only use strong,
          randomly generated authorization information values.
        </t>
        <t indent="0" pn="section-5.2-2">
        Because of this, registries may validate the randomness of
        the authorization information based on the length and character set
        required by the registry -- for example,
        validating that an authorization value contains a combination of uppercase,
        lowercase, and non-alphanumeric characters in an attempt to
        assess the strength of the value and returning an EPP error result of
        2202 ("Invalid authorization information") <xref target="RFC5730" format="default" sectionFormat="of" derivedContent="RFC5730"/> 
        if the check fails.
        </t>
        <t indent="0" pn="section-5.2-3">
          Such checks are, by their nature, heuristic and imperfect, and
          may identify well-chosen authorization
          information values as being not sufficiently strong.  Registrars,
          therefore, must be prepared for an error response of 2202 and respond by
          generating a new value and trying again, possibly more than once.
        </t>
        <t indent="0" pn="section-5.2-4">
          Often, the registrar has the "clientTransferProhibited" status set, so to start the transfer process, the "clientTransferProhibited" status needs to be
        removed, and the strong, random authorization information value needs to be set.  The registrar <bcp14>MUST</bcp14> define a TTL, as described in <xref target="authInfoTTL" format="default" sectionFormat="of" derivedContent="Section 4.2"/>,
        and if the TTL expires, the registrar will unset the authorization information.
        </t>
        <t keepWithNext="true" indent="0" pn="section-5.2-5">Example of removing the "clientTransferProhibited" status and setting the authorization information in a domain name &lt;update&gt; command <xref target="RFC5731" format="default" sectionFormat="of" derivedContent="RFC5731"/>:</t>
        <sourcecode name="" type="xml" markers="false" pn="section-5.2-6">
C:&lt;?xml version="1.0" encoding="UTF-8" standalone="no"?&gt;
C:&lt;epp xmlns="urn:ietf:params:xml:ns:epp-1.0"&gt;
C:  &lt;command&gt;
C:    &lt;update&gt;
C:      &lt;domain:update
C:        xmlns:domain="urn:ietf:params:xml:ns:domain-1.0"&gt;
C:        &lt;domain:name&gt;example.com&lt;/domain:name&gt;
C:        &lt;domain:rem&gt;
C:          &lt;domain:status s="clientTransferProhibited"/&gt;
C:        &lt;/domain:rem&gt;
C:        &lt;domain:chg&gt;
C:          &lt;domain:authInfo&gt;
C:            &lt;domain:pw&gt;LuQ7Bu@w9?%+_HK3cayg$55$LSft3MPP
C:            &lt;/domain:pw&gt;
C:          &lt;/domain:authInfo&gt;
C:        &lt;/domain:chg&gt;
C:      &lt;/domain:update&gt;
C:    &lt;/update&gt;
C:    &lt;clTRID&gt;ABC-12345-XYZ&lt;/clTRID&gt;
C:  &lt;/command&gt;
C:&lt;/epp&gt;
</sourcecode>
        <t indent="0" pn="section-5.2-7">
        When the registrar-defined TTL expires, the sponsoring registrar <bcp14>MUST</bcp14> cancel the transfer process by unsetting the authorization information value and <bcp14>MAY</bcp14> add back statuses like the "clientTransferProhibited" status.
        Any EPP object extension that supports setting
        the authorization information with an "eppcom:pwAuthInfoType" element can pass an empty authorization information value. Examples of such extensions are found in  <xref target="RFC5731" format="default" sectionFormat="of" derivedContent="RFC5731"/> and <xref target="RFC5733" format="default" sectionFormat="of" derivedContent="RFC5733"/>.  Setting an
        empty authorization information value unsets the authorization information.  <xref target="RFC5731" format="default" sectionFormat="of" derivedContent="RFC5731"/> supports an explicit mechanism of unsetting the authorization information, by passing the &lt;domain:null&gt; authorization
        information value.  The registry <bcp14>MUST</bcp14> support unsetting the authorization information by accepting an empty authorization information value and accepting an explicit unset element if it
        is supported by the object extension.</t>
        <t keepWithNext="true" indent="0" pn="section-5.2-8">Example of adding the "clientTransferProhibited" status and unsetting the authorization information explicitly in a domain name &lt;update&gt; command <xref target="RFC5731" format="default" sectionFormat="of" derivedContent="RFC5731"/>:</t>
        <sourcecode name="" type="xml" markers="false" pn="section-5.2-9">
C:&lt;?xml version="1.0" encoding="UTF-8" standalone="no"?&gt;
C:&lt;epp xmlns="urn:ietf:params:xml:ns:epp-1.0"&gt;
C:  &lt;command&gt;
C:    &lt;update&gt;
C:      &lt;domain:update
C:        xmlns:domain="urn:ietf:params:xml:ns:domain-1.0"&gt;
C:        &lt;domain:name&gt;example.com&lt;/domain:name&gt;
C:        &lt;domain:add&gt;
C:          &lt;domain:status s="clientTransferProhibited"/&gt;
C:        &lt;/domain:add&gt;
C:        &lt;domain:chg&gt;
C:          &lt;domain:authInfo&gt;
C:            &lt;domain:null/&gt;
C:          &lt;/domain:authInfo&gt;
C:        &lt;/domain:chg&gt;
C:      &lt;/domain:update&gt;
C:    &lt;/update&gt;
C:    &lt;clTRID&gt;ABC-12345-XYZ&lt;/clTRID&gt;
C:  &lt;/command&gt;
C:&lt;/epp&gt;
</sourcecode>
        <t keepWithNext="true" indent="0" pn="section-5.2-10">Example of unsetting the authorization information with an empty authorization information value in a domain name &lt;update&gt; command <xref target="RFC5731" format="default" sectionFormat="of" derivedContent="RFC5731"/>:</t>
        <sourcecode name="" type="xml" markers="false" pn="section-5.2-11">
C:&lt;?xml version="1.0" encoding="UTF-8" standalone="no"?&gt;
C:&lt;epp xmlns="urn:ietf:params:xml:ns:epp-1.0"&gt;
C:  &lt;command&gt;
C:    &lt;update&gt;
C:      &lt;domain:update
C:        xmlns:domain="urn:ietf:params:xml:ns:domain-1.0"&gt;
C:        &lt;domain:name&gt;example.com&lt;/domain:name&gt;
C:        &lt;domain:add&gt;
C:          &lt;domain:status s="clientTransferProhibited"/&gt;
C:        &lt;/domain:add&gt;
C:        &lt;domain:chg&gt;
C:          &lt;domain:authInfo&gt;
C:            &lt;domain:pw/&gt;
C:          &lt;/domain:authInfo&gt;
C:        &lt;/domain:chg&gt;
C:      &lt;/domain:update&gt;
C:    &lt;/update&gt;
C:    &lt;clTRID&gt;ABC-12345-XYZ&lt;/clTRID&gt;
C:  &lt;/command&gt;
C:&lt;/epp&gt;
</sourcecode>
        <t keepWithNext="true" indent="0" pn="section-5.2-12">Example of unsetting the authorization information with an empty authorization information value in a contact &lt;update&gt; command <xref target="RFC5733" format="default" sectionFormat="of" derivedContent="RFC5733"/>:</t>
        <sourcecode name="" type="xml" markers="false" pn="section-5.2-13">
C:&lt;?xml version="1.0" encoding="UTF-8" standalone="no"?&gt;
C:&lt;epp xmlns="urn:ietf:params:xml:ns:epp-1.0"&gt;
C:  &lt;command&gt;
C:    &lt;update&gt;
C:      &lt;contact:update
C:        xmlns:contact="urn:ietf:params:xml:ns:contact-1.0"&gt;
C:        &lt;contact:id&gt;sh8013&lt;/contact:id&gt;
C:        &lt;contact:chg&gt;
C:          &lt;contact:authInfo&gt;
C:            &lt;contact:pw/&gt;
C:          &lt;/contact:authInfo&gt;
C:        &lt;/contact:chg&gt;
C:      &lt;/contact:update&gt;
C:    &lt;/update&gt;
C:    &lt;clTRID&gt;ABC-12345-XYZ&lt;/clTRID&gt;
C:  &lt;/command&gt;
C:&lt;/epp&gt;
</sourcecode>
      </section>
      <section anchor="infoCommandResponse" numbered="true" toc="include" removeInRFC="false" pn="section-5.3">
        <name slugifiedName="name-info-command-and-response">&lt;Info&gt; Command and Response</name>
        <t indent="0" pn="section-5.3-1">For an &lt;info&gt; command, the registry <bcp14>MUST</bcp14> allow the passing of a non-empty authorization information value for verification.  The gaining registrar can pre-verify the authorization information
        provided by the registrant prior to submitting the transfer request with the use of the &lt;info&gt; command.  The
        registry compares the hash of the passed authorization information with the hashed authorization information value stored for the object.
        When the authorization information is not set or the passed authorization information does not match the previously set value, the registry <bcp14>MUST</bcp14> return an EPP error result code of 2202 <xref target="RFC5730" format="default" sectionFormat="of" derivedContent="RFC5730"/>.</t>
        <t keepWithNext="true" indent="0" pn="section-5.3-2">Example of passing a non-empty authorization information value in a domain name &lt;info&gt; command <xref target="RFC5731" format="default" sectionFormat="of" derivedContent="RFC5731"/> to verify the authorization information value:</t>
        <sourcecode name="" type="xml" markers="false" pn="section-5.3-3">
C:&lt;?xml version="1.0" encoding="UTF-8" standalone="no"?&gt;
C:&lt;epp xmlns="urn:ietf:params:xml:ns:epp-1.0"&gt;
C:  &lt;command&gt;
C:    &lt;info&gt;
C:      &lt;domain:info
C:        xmlns:domain="urn:ietf:params:xml:ns:domain-1.0"&gt;
C:        &lt;domain:name&gt;example.com&lt;/domain:name&gt;
C:        &lt;domain:authInfo&gt;
C:          &lt;domain:pw&gt;LuQ7Bu@w9?%+_HK3cayg$55$LSft3MPP
C:          &lt;/domain:pw&gt;
C:        &lt;/domain:authInfo&gt;
C:      &lt;/domain:info&gt;
C:    &lt;/info&gt;
C:    &lt;clTRID&gt;ABC-12345&lt;/clTRID&gt;
C:  &lt;/command&gt;
C:&lt;/epp&gt;
</sourcecode>
        <t indent="0" pn="section-5.3-4">The info response in object extensions, such as those defined in <xref target="RFC5731" format="default" sectionFormat="of" derivedContent="RFC5731"/> and <xref target="RFC5733" format="default" sectionFormat="of" derivedContent="RFC5733"/>, <bcp14>MUST NOT</bcp14> include the optional authorization information element with a non-empty authorization value.  The authorization
                information is stored as a hash in the registry, so returning the plain-text authorization information is not possible, unless valid plain-text authorization information is passed in the &lt;info&gt; command.
    The registry <bcp14>MUST NOT</bcp14> return any indication of whether the authorization
                information is set or unset to the non-sponsoring registrar by not returning the authorization information element in the response.
    The registry <bcp14>MAY</bcp14> return an indication to the sponsoring registrar that the authorization information is set by using an empty authorization information value.
    The registry <bcp14>MAY</bcp14> return an indication to the sponsoring registrar that the authorization information is unset by not returning the authorization information element.</t>
        <t keepWithNext="true" indent="0" pn="section-5.3-5">Example of returning an empty authorization information value in a domain name info response <xref target="RFC5731" format="default" sectionFormat="of" derivedContent="RFC5731"/> to indicate to the sponsoring registrar that the authorization information is set:</t>
        <sourcecode name="" type="xml" markers="false" pn="section-5.3-6">
S:&lt;?xml version="1.0" encoding="UTF-8" standalone="no"?&gt;
S:&lt;epp xmlns="urn:ietf:params:xml:ns:epp-1.0"&gt;
S:  &lt;response&gt;
S:    &lt;result code="1000"&gt;
S:      &lt;msg&gt;Command completed successfully&lt;/msg&gt;
S:    &lt;/result&gt;
S:    &lt;resData&gt;
S:      &lt;domain:infData
S:       xmlns:domain="urn:ietf:params:xml:ns:domain-1.0"&gt;
S:        &lt;domain:name&gt;example.com&lt;/domain:name&gt;
S:        &lt;domain:roid&gt;EXAMPLE1-REP&lt;/domain:roid&gt;
S:        &lt;domain:status s="ok"/&gt;
S:        &lt;domain:clID&gt;ClientX&lt;/domain:clID&gt;
S:        &lt;domain:authInfo&gt;
S:          &lt;domain:pw/&gt;
S:        &lt;/domain:authInfo&gt;
S:      &lt;/domain:infData&gt;
S:    &lt;/resData&gt;
S:    &lt;trID&gt;
S:      &lt;clTRID&gt;ABC-12345&lt;/clTRID&gt;
S:      &lt;svTRID&gt;54322-XYZ&lt;/svTRID&gt;
S:    &lt;/trID&gt;
S:  &lt;/response&gt;
S:&lt;/epp&gt;
</sourcecode>
      </section>
      <section anchor="transferRequestCommand" numbered="true" toc="include" removeInRFC="false" pn="section-5.4">
        <name slugifiedName="name-transfer-request-command">&lt;Transfer&gt; Request Command</name>
        <t indent="0" pn="section-5.4-1">For a &lt;transfer&gt; request command, the registry <bcp14>MUST</bcp14> allow the passing of a non-empty authorization information value to authorize a transfer.  The
        registry compares the hash of the passed authorization information with the hashed authorization information value stored for the object.
        When the authorization information is not set or the passed authorization information does not match the previously set value, the registry <bcp14>MUST</bcp14> return an EPP error result code of 2202 <xref target="RFC5730" format="default" sectionFormat="of" derivedContent="RFC5730"/>.
        Whether the transfer occurs immediately or is pending is up to server policy.  When the transfer occurs immediately, the registry <bcp14>MUST</bcp14> return the EPP success result code of 1000 ("Command completed successfully") <xref target="RFC5730" format="default" sectionFormat="of" derivedContent="RFC5730"/>, and
        when the transfer is pending, the registry <bcp14>MUST</bcp14> return the EPP success result code of 1001 ("Command completed successfully; action pending").  The losing registrar <bcp14>MUST</bcp14> be informed of a successful transfer request using an EPP &lt;poll&gt; message.</t>
        <t keepWithNext="true" indent="0" pn="section-5.4-2">Example of passing a non-empty authorization information value in a domain name &lt;transfer&gt; request command <xref target="RFC5731" format="default" sectionFormat="of" derivedContent="RFC5731"/> to authorize the transfer:</t>
        <sourcecode name="" type="xml" markers="false" pn="section-5.4-3">
C:&lt;?xml version="1.0" encoding="UTF-8" standalone="no"?&gt;
C:&lt;epp xmlns="urn:ietf:params:xml:ns:epp-1.0"&gt;
C:  &lt;command&gt;
C:    &lt;transfer op="request"&gt;
C:      &lt;domain:transfer
C:        xmlns:domain="urn:ietf:params:xml:ns:domain-1.0"&gt;
C:        &lt;domain:name&gt;example1.com&lt;/domain:name&gt;
C:        &lt;domain:authInfo&gt;
C:          &lt;domain:pw&gt;LuQ7Bu@w9?%+_HK3cayg$55$LSft3MPP
C:          &lt;/domain:pw&gt;
C:        &lt;/domain:authInfo&gt;
C:      &lt;/domain:transfer&gt;
C:    &lt;/transfer&gt;
C:    &lt;clTRID&gt;ABC-12345&lt;/clTRID&gt;
C:  &lt;/command&gt;
C:&lt;/epp&gt;
</sourcecode>
        <t indent="0" pn="section-5.4-4">Upon successful completion of the transfer, the registry <bcp14>MUST</bcp14> automatically unset the authorization information.
      If the transfer request is not submitted within the <xref target="authInfoTTL" format="default" sectionFormat="of" derivedContent="Section 4.2">TTL</xref> or the transfer is canceled or rejected,
      the registrar <bcp14>MUST</bcp14> unset the authorization information, as described in <xref target="updateCommand" format="default" sectionFormat="of" derivedContent="Section 5.2"/>.</t>
      </section>
    </section>
    <section anchor="Transition" numbered="true" toc="include" removeInRFC="false" pn="section-6">
      <name slugifiedName="name-transition-considerations">Transition Considerations</name>
      <t indent="0" pn="section-6-1">
The goal of the transition considerations is to minimize the impact to the registrars in supporting the Secure Authorization Information Model defined in this document by supporting incremental transition steps.
         The transition steps are dependent on the starting point of the registry.  Registries may have different starting points, since some of the elements of the Secure Authorization Information Model may have already been implemented.
         The considerations assume a starting point, referred to as the "Classic Authorization Information Model", which incorporates the following steps for management of the authorization information for transfers:
</t>
      <ol spacing="normal" type="1" indent="adaptive" start="1" pn="section-6-2">
        <li pn="section-6-2.1" derivedCounter="1.">The registrant requests to register the object with the registrar. The registrar sends the &lt;create&gt; command, with a non-empty authorization information value, to the registry.  The registry
               stores the authorization information as an encrypted value and requires a non-empty authorization information value for the life of the object.  The registrar may store the long-lived authorization information.</li>
        <li pn="section-6-2.2" derivedCounter="2.">At the time of transfer, the registrant requests from the losing registrar the authorization information to provide to the gaining registrar.</li>
        <li pn="section-6-2.3" derivedCounter="3.">The losing registrar retrieves the locally stored authorization information or queries the registry for authorization information using the &lt;info&gt; command, and provides it to the registrant.  If the registry is queried, the authorization information is decrypted and
               the plain-text authorization information is returned in the info response to the registrar.</li>
        <li pn="section-6-2.4" derivedCounter="4.">The registrant provides the authorization information value to the gaining registrar.</li>
        <li pn="section-6-2.5" derivedCounter="5.">The gaining registrar optionally verifies the authorization information with the &lt;info&gt; command to the registry, by passing the authorization information in the &lt;info&gt; command to the registry.</li>
        <li pn="section-6-2.6" derivedCounter="6.">The gaining registrar sends the transfer request with the authorization information to the registry.  The registry will decrypt the stored authorization information to compare to the passed authorization information.</li>
        <li pn="section-6-2.7" derivedCounter="7.">If the transfer completes successfully, the authorization information is not touched by the registry and may be updated by the gaining registrar using the &lt;update&gt; command.
               If the transfer is canceled or rejected, the losing registrar may reset the authorization information using the &lt;update&gt; command.</li>
      </ol>
      <t indent="0" pn="section-6-3">The gaps between the Classic Authorization Information Model and the Secure Authorization Information Model include the following:</t>
      <ol spacing="normal" type="1" indent="adaptive" start="1" pn="section-6-4">
        <li pn="section-6-4.1" derivedCounter="1.">Registry requirement for a non-empty authorization information value on create and for the life of the object versus the authorization information not being set on create and only being set when a transfer is in process.</li>
        <li pn="section-6-4.2" derivedCounter="2.">Registry not allowing the authorization information to be unset versus providing support for unsetting the authorization information in the &lt;update&gt; command.</li>
        <li pn="section-6-4.3" derivedCounter="3.">Registry storing the authorization information as an encrypted value versus a hashed value.</li>
        <li pn="section-6-4.4" derivedCounter="4.">Registry support for returning the authorization information versus not returning the authorization information in the info response.</li>
        <li pn="section-6-4.5" derivedCounter="5.">Registry not touching the authorization information versus the registry automatically unsetting the authorization information upon a successful transfer.</li>
        <li pn="section-6-4.6" derivedCounter="6.">Registry possibly validating a shorter authorization information value using password complexity rules versus validating the randomness of a longer authorization information value that meets the required bits of entropy.</li>
      </ol>
      <t indent="0" pn="section-6-5">The transition can be handled in the three phases defined in  Sections <xref target="TransitionFeatures" format="counter" sectionFormat="of" derivedContent="6.1"/>, <xref target="TransitionStorage" format="counter" sectionFormat="of" derivedContent="6.2"/>, and <xref target="TransitionEnforcement" format="counter" sectionFormat="of" derivedContent="6.3"/>.</t>
      <section anchor="TransitionFeatures" numbered="true" toc="include" removeInRFC="false" pn="section-6.1">
        <name slugifiedName="name-transition-phase-1-features">Transition Phase 1 - Features</name>
        <t indent="0" pn="section-6.1-1">The goal of "Transition Phase 1 - Features" is to implement the needed features in EPP so that the registrar can optionally implement the Secure Authorization Information Model.  The features to implement are broken out by
        the commands and responses below:</t>
        <dl newline="false" spacing="normal" indent="3" pn="section-6.1-2">
          <dt pn="section-6.1-2.1">&lt;Create&gt; Command:</dt>
          <dd pn="section-6.1-2.2">Change the &lt;create&gt; command to make the authorization information optional, by allowing both a non-empty value and an empty value.
            This enables a registrar to optionally create objects without an authorization information value, as described in <xref target="createCommand" format="default" sectionFormat="of" derivedContent="Section 5.1"/>.</dd>
          <dt pn="section-6.1-2.3">&lt;Update&gt; Command:</dt>
          <dd pn="section-6.1-2.4">Change the &lt;update&gt; command to allow unsetting the authorization information, as described in <xref target="updateCommand" format="default" sectionFormat="of" derivedContent="Section 5.2"/>.
            This enables the registrar to optionally unset the authorization information when the TTL expires or when the transfer is canceled or rejected.</dd>
          <dt pn="section-6.1-2.5">Transfer Approve Command and Transfer Auto-Approve:</dt>
          <dd pn="section-6.1-2.6">Change the transfer approve command and the transfer auto-approve to automatically unset the authorization information.
            This sets the default state of the object to not have the authorization information set.
            The registrar implementing the Secure Authorization Information Model will not set the authorization information for an inbound transfer, and the registrar implementing the
            Classic Authorization Information Model will set the new authorization information upon a successful transfer.</dd>
          <dt pn="section-6.1-2.7">Info Response:</dt>
          <dd pn="section-6.1-2.8">Change the &lt;info&gt; command to not return the authorization information in the info response, as described in <xref target="infoCommandResponse" format="default" sectionFormat="of" derivedContent="Section 5.3"/>.
          This sets up the implementation of "Transition Phase 2 - Storage" (<xref target="TransitionStorage" format="default" sectionFormat="of" derivedContent="Section 6.2"/>), since the dependency on returning the authorization information in the info response will be removed.
          This feature is the only one that is not an optional change to the registrar, and this change could potentially break the client, so it's recommended that the registry provide notice of the change.</dd>
          <dt pn="section-6.1-2.9">&lt;Info&gt; Command and Transfer Request:</dt>
          <dd pn="section-6.1-2.10">Change the &lt;info&gt; command and the transfer request to ensure that a registrar cannot get an indication that the authorization information
            is set or not set by returning the EPP error result code of 2202 when comparing a passed authorization to a non-matching set authorization information value or an unset value.</dd>
        </dl>
      </section>
      <section anchor="TransitionStorage" numbered="true" toc="include" removeInRFC="false" pn="section-6.2">
        <name slugifiedName="name-transition-phase-2-storage">Transition Phase 2 - Storage</name>
        <t indent="0" pn="section-6.2-1">The goal of "Transition Phase 2 - Storage" is to transition the registry to use hashed authorization information instead of encrypted authorization information.
          There is no direct impact on the registrars, since the only visible indication that the authorization information has been hashed is that the set
          authorization information is not returned in the info response, as addressed in <xref target="TransitionFeatures" format="default" sectionFormat="of" derivedContent="Section 6.1">"Transition Phase 1 - Features"</xref>.  Transitioning the authorization information storage includes the
following three steps:
</t>
        <dl newline="false" spacing="normal" indent="3" pn="section-6.2-2">
          <dt pn="section-6.2-2.1">Hash New Authorization Information Values:</dt>
          <dd pn="section-6.2-2.2">Change the &lt;create&gt; command and the &lt;update&gt; command to hash rather than encrypt the authorization information.</dd>
          <dt pn="section-6.2-2.3">Support Comparison against Encrypted or Hashed Authorization Information:</dt>
          <dd pn="section-6.2-2.4">Change the &lt;info&gt; command and the &lt;transfer&gt; request command to be able to compare a passed authorization information value with
            either a hashed or encrypted authorization information value.  This requires that the stored values be self-identifying as being in hashed or encrypted form.</dd>
          <dt pn="section-6.2-2.5">Hash Existing Encrypted Authorization Information Values:</dt>
          <dd pn="section-6.2-2.6">Convert the encrypted authorization information values stored in the registry database to hashed values.
              This update will not be visible to the registrar.  The conversion can be done over a period of time, depending on registry policy.</dd>
        </dl>
      </section>
      <section anchor="TransitionEnforcement" numbered="true" toc="include" removeInRFC="false" pn="section-6.3">
        <name slugifiedName="name-transition-phase-3-enforcem">Transition Phase 3 - Enforcement</name>
        <t indent="0" pn="section-6.3-1">The goal of "Transition Phase 3 - Enforcement" is to complete the implementation of the Secure Authorization Information Model, by enforcing the following:</t>
        <dl newline="false" spacing="normal" indent="3" pn="section-6.3-2">
          <dt pn="section-6.3-2.1">Disallow Authorization Information on &lt;Create&gt; Command:</dt>
          <dd pn="section-6.3-2.2">Change the &lt;create&gt; command to not allow the passing of a non-empty authorization information value.
            This behavior could potentially break the client, so it's recommended that the registry provide notice
            of this change.</dd>
          <dt pn="section-6.3-2.3">Validate the Strong Random Authorization Information:</dt>
          <dd pn="section-6.3-2.4">Change the validation of the authorization information in the &lt;update&gt; command to ensure at least 128 bits of entropy.</dd>
        </dl>
      </section>
    </section>
    <section anchor="IANA" numbered="true" toc="include" removeInRFC="false" pn="section-7">
      <name slugifiedName="name-iana-considerations">IANA Considerations</name>
      <section anchor="IANA-XML-Namespace" numbered="true" toc="include" removeInRFC="false" pn="section-7.1">
        <name slugifiedName="name-xml-namespace">XML Namespace</name>
        <t indent="0" pn="section-7.1-1">
             This document uses URNs to describe XML namespaces
             conforming to the registry mechanism described in <xref target="RFC3688" format="default" sectionFormat="of" derivedContent="RFC3688"/>. IANA has assigned the following URI in the "ns" subregistry within the "IETF XML Registry" for secure authorization information for the transfer namespace:</t>
        <dl newline="false" spacing="compact" indent="3" pn="section-7.1-2">
          <dt pn="section-7.1-2.1">URI:</dt>
          <dd pn="section-7.1-2.2">urn:ietf:params:xml:ns:epp:secure-authinfo-transfer-1.0</dd>
          <dt pn="section-7.1-2.3">Registrant Contact:</dt>
          <dd pn="section-7.1-2.4">IESG</dd>
          <dt pn="section-7.1-2.5">XML:</dt>
          <dd pn="section-7.1-2.6">None. Namespace URIs do not represent an XML specification.</dd>
        </dl>
      </section>
      <section anchor="EPP-Extension-Registry" numbered="true" toc="include" removeInRFC="false" pn="section-7.2">
        <name slugifiedName="name-epp-extension-registry">EPP Extension Registry</name>
        <t indent="0" pn="section-7.2-1">
          IANA has registered the EPP operational practice described in this document in the "Extensions for the Extensible Provisioning Protocol (EPP)" registry as defined in <xref target="RFC7451" format="default" sectionFormat="of" derivedContent="RFC7451"/>.  The
   details of the registration are as follows:
        </t>
        <dl newline="false" spacing="compact" indent="3" pn="section-7.2-2">
          <dt pn="section-7.2-2.1">Name of Extension:</dt>
          <dd pn="section-7.2-2.2">"Extensible Provisioning Protocol (EPP) Secure Authorization Information for Transfer"</dd>
          <dt pn="section-7.2-2.3">Document status:</dt>
          <dd pn="section-7.2-2.4">Standards Track</dd>
          <dt pn="section-7.2-2.5">Reference:</dt>
          <dd pn="section-7.2-2.6">RFC 9154</dd>
          <dt pn="section-7.2-2.7">Registrant Name and Email Address:</dt>
          <dd pn="section-7.2-2.8">IESG (iesg@ietf.org)</dd>
          <dt pn="section-7.2-2.9">TLDs:</dt>
          <dd pn="section-7.2-2.10">Any</dd>
          <dt pn="section-7.2-2.11">IPR Disclosure:</dt>
          <dd pn="section-7.2-2.12">None</dd>
          <dt pn="section-7.2-2.13">Status:</dt>
          <dd pn="section-7.2-2.14">Active</dd>
          <dt pn="section-7.2-2.15">Notes:</dt>
          <dd pn="section-7.2-2.16">None</dd>
        </dl>
      </section>
    </section>
    <section anchor="Security" numbered="true" toc="include" removeInRFC="false" pn="section-8">
      <name slugifiedName="name-security-considerations">Security Considerations</name>
      <t indent="0" pn="section-8-1"><xref target="secureRandomAuthInfo" format="default" sectionFormat="of" derivedContent="Section 4.1"/> defines the use of a secure random value for the generation of authorization information.
      The client <bcp14>SHOULD</bcp14> choose a length and set of characters that result in at least 128 bits of entropy.</t>
      <t indent="0" pn="section-8-2"><xref target="authInfoTTL" format="default" sectionFormat="of" derivedContent="Section 4.2"/> defines the use of an authorization information TTL.  The registrar <bcp14>SHOULD</bcp14> only set the authorization information during the transfer process
      by setting the authorization information at the start of the transfer process and unsetting the authorization information at the end of the transfer process.
 The TTL value is left up to registrar policy, and the sponsoring registrar <bcp14>MUST</bcp14> inform the registrant of the TTL
      when providing the authorization information to the registrant.</t>
      <t indent="0" pn="section-8-3"><xref target="authInfoStorageTransport" format="default" sectionFormat="of" derivedContent="Section 4.3"/> defines the storage and transport of authorization information.  The losing registrar <bcp14>MUST NOT</bcp14> store the authorization information and the gaining
      registrar <bcp14>MUST</bcp14> only store the authorization information as a "transient" value during the transfer process, where the authorization information <bcp14>MUST NOT</bcp14> be stored after the end of the transfer process.
      The registry <bcp14>MUST</bcp14> store the authorization information using a one-way cryptographic hash of at least 256 bits and with a per-authorization information random salt with at least 128 bits.
      All communication that includes the authorization information <bcp14>MUST</bcp14> be over an encrypted channel.  The plain-text
      authorization information <bcp14>MUST NOT</bcp14> be written to any logs by the registrar or the registry.</t>
      <t indent="0" pn="section-8-4"><xref target="authInfoMatching" format="default" sectionFormat="of" derivedContent="Section 4.4"/> defines the matching of the authorization information values.  The registry stores an unset authorization information value as a NULL (undefined) value to ensure that
      an empty input authorization information value never matches it.  The method used to define a NULL (undefined) value is database specific.</t>
    </section>
  </middle>
  <back>
    <references pn="section-9">
      <name slugifiedName="name-references">References</name>
      <references pn="section-9.1">
        <name slugifiedName="name-normative-references">Normative References</name>
        <reference anchor="RFC2119" target="https://www.rfc-editor.org/info/rfc2119" quoteTitle="true" derivedAnchor="RFC2119">
          <front>
            <title>Key words for use in RFCs to Indicate Requirement Levels</title>
            <author initials="S." surname="Bradner" fullname="S. Bradner">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="1997" month="March"/>
            <abstract>
              <t indent="0">In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t>
            </abstract>
          </front>
          <seriesInfo name="BCP" value="14"/>
          <seriesInfo name="RFC" value="2119"/>
          <seriesInfo name="DOI" value="10.17487/RFC2119"/>
        </reference>
        <reference anchor="RFC3688" target="https://www.rfc-editor.org/info/rfc3688" quoteTitle="true" derivedAnchor="RFC3688">
          <front>
            <title>The IETF XML Registry</title>
            <author initials="M." surname="Mealling" fullname="M. Mealling">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2004" month="January"/>
            <abstract>
              <t indent="0">This document describes an IANA maintained registry for IETF standards which use Extensible Markup Language (XML) related items such as Namespaces, Document Type Declarations (DTDs), Schemas, and Resource Description Framework (RDF) Schemas.</t>
            </abstract>
          </front>
          <seriesInfo name="BCP" value="81"/>
          <seriesInfo name="RFC" value="3688"/>
          <seriesInfo name="DOI" value="10.17487/RFC3688"/>
        </reference>
        <reference anchor="RFC4086" target="https://www.rfc-editor.org/info/rfc4086" quoteTitle="true" derivedAnchor="RFC4086">
          <front>
            <title>Randomness Requirements for Security</title>
            <author initials="D." surname="Eastlake 3rd" fullname="D. Eastlake 3rd">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="J." surname="Schiller" fullname="J. Schiller">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="S." surname="Crocker" fullname="S. Crocker">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2005" month="June"/>
            <abstract>
              <t indent="0">Security systems are built on strong cryptographic algorithms that foil pattern analysis attempts.  However, the security of these systems is dependent on generating secret quantities for passwords, cryptographic keys, and similar quantities.  The use of pseudo-random processes to generate secret quantities can result in pseudo-security. A sophisticated attacker may find it easier to reproduce the environment that produced the secret quantities and to search the resulting small set of possibilities than to locate the quantities in the whole of the potential number space.</t>
              <t indent="0">Choosing random quantities to foil a resourceful and motivated adversary is surprisingly difficult.  This document points out many pitfalls in using poor entropy sources or traditional pseudo-random number generation techniques for generating such quantities.  It recommends the use of truly random hardware techniques and shows that the existing hardware on many systems can be used for this purpose. It provides suggestions to ameliorate the problem when a hardware solution is not available, and it gives examples of how large such quantities need to be for some applications.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t>
            </abstract>
          </front>
          <seriesInfo name="BCP" value="106"/>
          <seriesInfo name="RFC" value="4086"/>
          <seriesInfo name="DOI" value="10.17487/RFC4086"/>
        </reference>
        <reference anchor="RFC5730" target="https://www.rfc-editor.org/info/rfc5730" quoteTitle="true" derivedAnchor="RFC5730">
          <front>
            <title>Extensible Provisioning Protocol (EPP)</title>
            <author initials="S." surname="Hollenbeck" fullname="S. Hollenbeck">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2009" month="August"/>
            <abstract>
              <t indent="0">This document describes an application-layer client-server protocol for the provisioning and management of objects stored in a shared central repository.  Specified in XML, the protocol defines generic object management operations and an extensible framework that maps protocol operations to objects.  This document includes a protocol specification, an object mapping template, and an XML media type registration.  This document obsoletes RFC 4930.  [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="STD" value="69"/>
          <seriesInfo name="RFC" value="5730"/>
          <seriesInfo name="DOI" value="10.17487/RFC5730"/>
        </reference>
        <reference anchor="RFC5731" target="https://www.rfc-editor.org/info/rfc5731" quoteTitle="true" derivedAnchor="RFC5731">
          <front>
            <title>Extensible Provisioning Protocol (EPP) Domain Name Mapping</title>
            <author initials="S." surname="Hollenbeck" fullname="S. Hollenbeck">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2009" month="August"/>
            <abstract>
              <t indent="0">This document describes an Extensible Provisioning Protocol (EPP) mapping for the provisioning and management of Internet domain names stored in a shared central repository.  Specified in XML, the mapping defines EPP command syntax and semantics as applied to domain names. This document obsoletes RFC 4931.  [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="STD" value="69"/>
          <seriesInfo name="RFC" value="5731"/>
          <seriesInfo name="DOI" value="10.17487/RFC5731"/>
        </reference>
        <reference anchor="RFC5733" target="https://www.rfc-editor.org/info/rfc5733" quoteTitle="true" derivedAnchor="RFC5733">
          <front>
            <title>Extensible Provisioning Protocol (EPP) Contact Mapping</title>
            <author initials="S." surname="Hollenbeck" fullname="S. Hollenbeck">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2009" month="August"/>
            <abstract>
              <t indent="0">This document describes an Extensible Provisioning Protocol (EPP) mapping for the provisioning and management of individual or organizational social information identifiers (known as "contacts") stored in a shared central repository.  Specified in Extensible Markup Language (XML), the mapping defines EPP command syntax and semantics as applied to contacts.  This document obsoletes RFC 4933.   [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="STD" value="69"/>
          <seriesInfo name="RFC" value="5733"/>
          <seriesInfo name="DOI" value="10.17487/RFC5733"/>
        </reference>
        <reference anchor="RFC5734" target="https://www.rfc-editor.org/info/rfc5734" quoteTitle="true" derivedAnchor="RFC5734">
          <front>
            <title>Extensible Provisioning Protocol (EPP) Transport over TCP</title>
            <author initials="S." surname="Hollenbeck" fullname="S. Hollenbeck">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2009" month="August"/>
            <abstract>
              <t indent="0">This document describes how an Extensible Provisioning Protocol (EPP) session is mapped onto a single Transmission Control Protocol (TCP) connection.  This mapping requires use of the Transport Layer Security (TLS) protocol to protect information exchanged between an EPP client and an EPP server.  This document obsoletes RFC 4934.  [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="STD" value="69"/>
          <seriesInfo name="RFC" value="5734"/>
          <seriesInfo name="DOI" value="10.17487/RFC5734"/>
        </reference>
        <reference anchor="RFC8174" target="https://www.rfc-editor.org/info/rfc8174" quoteTitle="true" derivedAnchor="RFC8174">
          <front>
            <title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
            <author initials="B." surname="Leiba" fullname="B. Leiba">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2017" month="May"/>
            <abstract>
              <t indent="0">RFC 2119 specifies common key words that may be used in protocol  specifications.  This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the  defined special meanings.</t>
            </abstract>
          </front>
          <seriesInfo name="BCP" value="14"/>
          <seriesInfo name="RFC" value="8174"/>
          <seriesInfo name="DOI" value="10.17487/RFC8174"/>
        </reference>
        <reference anchor="RFC8499" target="https://www.rfc-editor.org/info/rfc8499" quoteTitle="true" derivedAnchor="RFC8499">
          <front>
            <title>DNS Terminology</title>
            <author initials="P." surname="Hoffman" fullname="P. Hoffman">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="A." surname="Sullivan" fullname="A. Sullivan">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="K." surname="Fujiwara" fullname="K. Fujiwara">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2019" month="January"/>
            <abstract>
              <t indent="0">The Domain Name System (DNS) is defined in literally dozens of different RFCs.  The terminology used by implementers and developers of DNS protocols, and by operators of DNS systems, has sometimes changed in the decades since the DNS was first defined.  This document gives current definitions for many of the terms used in the DNS in a single document.</t>
              <t indent="0">This document obsoletes RFC 7719 and updates RFC 2308.</t>
            </abstract>
          </front>
          <seriesInfo name="BCP" value="219"/>
          <seriesInfo name="RFC" value="8499"/>
          <seriesInfo name="DOI" value="10.17487/RFC8499"/>
        </reference>
        <reference anchor="W3C.REC-xml-20081126" target="https://www.w3.org/TR/2008/REC-xml-20081126" quoteTitle="true" derivedAnchor="W3C.REC-xml-20081126">
          <front>
            <title>Extensible Markup Language (XML) 1.0 (Fifth Edition)</title>
            <author initials="T." surname="Bray" fullname="Tim Bray">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="J." surname="Paoli" fullname="Jean Paoli">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="M." surname="Sperberg-McQueen" fullname="Michael Sperberg-McQueen">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="E." surname="Maler" fullname="Eve Maler">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="F." surname="Yergeau" fullname="Francois Yergeau">
              <organization showOnFrontPage="true"/>
            </author>
            <date month="November" year="2008"/>
          </front>
          <refcontent>World Wide Web Consortium Recommendation REC-xml-20081126</refcontent>
        </reference>
      </references>
      <references pn="section-9.2">
        <name slugifiedName="name-informative-references">Informative References</name>
        <reference anchor="FIPS-140-2" target="https://csrc.nist.gov/publications/detail/fips/140/2/final" quoteTitle="true" derivedAnchor="FIPS-140-2">
          <front>
            <title>NIST Federal Information Processing Standards (FIPS) Publication 140-2</title>
            <author>
              <organization showOnFrontPage="true">National Institute of Standards and Technology, U.S. Department of Commerce</organization>
            </author>
            <date month="May" year="2001"/>
          </front>
          <seriesInfo name="DOI" value="10.6028/NIST.FIPS.140-2"/>
        </reference>
        <reference anchor="FIPS-180-4" target="https://csrc.nist.gov/publications/detail/fips/180/4/final" quoteTitle="true" derivedAnchor="FIPS-180-4">
          <front>
            <title>Secure Hash Standard, NIST Federal Information Processing Standards (FIPS) Publication 180-4</title>
            <author>
              <organization showOnFrontPage="true">National Institute of Standards and Technology, U.S. Department of Commerce</organization>
            </author>
            <date month="August" year="2015"/>
          </front>
          <seriesInfo name="DOI" value="10.6028/NIST.FIPS.180-4"/>
        </reference>
        <reference anchor="RFC7451" target="https://www.rfc-editor.org/info/rfc7451" quoteTitle="true" derivedAnchor="RFC7451">
          <front>
            <title>Extension Registry for the Extensible Provisioning Protocol</title>
            <author initials="S." surname="Hollenbeck" fullname="S. Hollenbeck">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2015" month="February"/>
            <abstract>
              <t indent="0">The Extensible Provisioning Protocol (EPP) includes features to add functionality by extending the protocol.  It does not, however, describe how those extensions are managed.  This document describes a procedure for the registration and management of extensions to EPP, and it specifies a format for an IANA registry to record those extensions.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="7451"/>
          <seriesInfo name="DOI" value="10.17487/RFC7451"/>
        </reference>
      </references>
    </references>
    <section anchor="Acknowledgements" numbered="false" toc="include" removeInRFC="false" pn="section-appendix.a">
      <name slugifiedName="name-acknowledgements">Acknowledgements</name>
      <t indent="0" pn="section-appendix.a-1">The authors wish to thank the following persons for their feedback and suggestions:
        <contact fullname="Michael Bauland"/>,
        <contact fullname="Martin Casanova"/>,
        <contact fullname="Scott Hollenbeck"/>,
        <contact fullname="Benjamin Kaduk"/>,
        <contact fullname="Jody Kolker"/>,
        <contact fullname="Barry Leiba"/>,
        <contact fullname="Patrick Mevzek"/>,
        <contact fullname="Matthew Pozun"/>,
        <contact fullname="Srikanth Veeramachaneni"/>,
        and <contact fullname="Ulrich Wisser"/>.
      </t>
    </section>
    <section anchor="authors-addresses" numbered="false" removeInRFC="false" toc="include" pn="section-appendix.b">
      <name slugifiedName="name-authors-addresses">Authors' Addresses</name>
      <author fullname="James Gould" surname="Gould">
        <organization showOnFrontPage="true">Verisign, Inc.</organization>
        <address>
          <postal>
            <street>12061 Bluemont Way</street>
            <city>Reston</city>
            <region>VA</region>
            <code>20190</code>
            <country>United States of America</country>
          </postal>
          <email>jgould@verisign.com</email>
          <uri>https://www.verisign.com</uri>
        </address>
      </author>
      <author fullname="Richard Wilhelm" surname="Wilhelm">
        <organization showOnFrontPage="true">Verisign, Inc.</organization>
        <address>
          <postal>
            <street>12061 Bluemont Way</street>
            <city>Reston</city>
            <region>VA</region>
            <code>20190</code>
            <country>United States of America</country>
          </postal>
          <email>4rickwilhelm@gmail.com</email>
          <uri>https://www.verisign.com</uri>
        </address>
      </author>
    </section>
  </back>
</rfc>
