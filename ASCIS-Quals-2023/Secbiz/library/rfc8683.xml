<?xml version='1.0' encoding='utf-8'?>
<rfc xmlns:xi="http://www.w3.org/2001/XInclude" version="3" category="info" consensus="true" docName="draft-ietf-v6ops-nat64-deployment-08" indexInclude="true" ipr="trust200902" number="8683" prepTime="2019-11-26T12:56:16" scripts="Common,Latin" sortRefs="true" submissionType="IETF" symRefs="true" tocDepth="6" tocInclude="true" xml:lang="en">
  <link href="https://datatracker.ietf.org/doc/draft-ietf-v6ops-nat64-deployment-08" rel="prev"/>
  <link href="https://dx.doi.org/10.17487/rfc8683" rel="alternate"/>
  <link href="urn:issn:2070-1721" rel="alternate"/>
  <front>
    <title abbrev="NAT64/464XLAT Deployment">Additional Deployment Guidelines for NAT64/464XLAT in Operator and Enterprise Networks</title>
    <seriesInfo name="RFC" value="8683" stream="IETF"/>
    <author fullname="Jordi Palet Martinez" initials="J" surname="Palet Martinez">
      <organization showOnFrontPage="true">The IPv6 Company</organization>
      <address>
        <postal>
          <street>Molino de la Navata, 75</street>
          <city>La Navata - Galapagar</city>
          <region>Madrid</region>
          <code>28420</code>
          <country>Spain</country>
        </postal>
        <email>jordi.palet@theipv6company.com</email>
        <uri>http://www.theipv6company.com/</uri>
      </address>
    </author>
    <date month="11" year="2019"/>
    <workgroup>v6ops</workgroup>
    <keyword>IPv6</keyword>
    <keyword>DNSSEC</keyword>
    <keyword>NAT64</keyword>
    <keyword>DNS64</keyword>
    <keyword>464XLAT</keyword>
    <keyword>CLAT</keyword>
    <keyword>NAT46</keyword>
    <keyword>PLAT</keyword>
    <abstract pn="section-abstract">
      <t pn="section-abstract-1">This document describes how Network Address and Protocol 
   Translation from IPv6 Clients to IPv4 Servers (NAT64) (including 464XLAT) can be deployed 
			in an IPv6 network -- whether it's cellular ISP, broadband ISP, 
			or enterprise -- and the possible
			optimizations.
			This document also discusses issues to be considered when having 
			IPv6-only connectivity, such as:
			a) DNS64, 
			b) applications or devices that use literal IPv4 addresses or 
			non-IPv6-compliant APIs, 
			and c) IPv4-only hosts or applications.</t>
    </abstract>
    <boilerplate>
      <section anchor="status-of-memo" numbered="false" removeInRFC="false" toc="exclude" pn="section-boilerplate.1">
        <name slugifiedName="name-status-of-this-memo">Status of This Memo</name>
        <t pn="section-boilerplate.1-1">
            This document is not an Internet Standards Track specification; it is
            published for informational purposes.  
        </t>
        <t pn="section-boilerplate.1-2">
            This document is a product of the Internet Engineering Task Force
            (IETF).  It represents the consensus of the IETF community.  It has
            received public review and has been approved for publication by the
            Internet Engineering Steering Group (IESG).  Not all documents
            approved by the IESG are candidates for any level of Internet
            Standard; see Section 2 of RFC 7841. 
        </t>
        <t pn="section-boilerplate.1-3">
            Information about the current status of this document, any
            errata, and how to provide feedback on it may be obtained at
            <eref target="https://www.rfc-editor.org/info/rfc8683" brackets="none"/>.
        </t>
      </section>
      <section anchor="copyright" numbered="false" removeInRFC="false" toc="exclude" pn="section-boilerplate.2">
        <name slugifiedName="name-copyright-notice">Copyright Notice</name>
        <t pn="section-boilerplate.2-1">
            Copyright (c) 2019 IETF Trust and the persons identified as the
            document authors. All rights reserved.
        </t>
        <t pn="section-boilerplate.2-2">
            This document is subject to BCP 78 and the IETF Trust's Legal
            Provisions Relating to IETF Documents
            (<eref target="https://trustee.ietf.org/license-info" brackets="none"/>) in effect on the date of
            publication of this document. Please review these documents
            carefully, as they describe your rights and restrictions with
            respect to this document. Code Components extracted from this
            document must include Simplified BSD License text as described in
            Section 4.e of the Trust Legal Provisions and are provided without
            warranty as described in the Simplified BSD License.
        </t>
      </section>
    </boilerplate>
    <toc>
      <section anchor="toc" numbered="false" removeInRFC="false" toc="exclude" pn="section-toc.1">
        <name slugifiedName="name-table-of-contents">Table of Contents</name>
        <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1">
          <li pn="section-toc.1-1.1">
            <t keepWithNext="true" pn="section-toc.1-1.1.1"><xref derivedContent="1" format="counter" sectionFormat="of" target="section-1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-introduction">Introduction</xref></t>
          </li>
          <li pn="section-toc.1-1.2">
            <t keepWithNext="true" pn="section-toc.1-1.2.1"><xref derivedContent="2" format="counter" sectionFormat="of" target="section-2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-requirements-language">Requirements Language</xref></t>
          </li>
          <li pn="section-toc.1-1.3">
            <t keepWithNext="true" pn="section-toc.1-1.3.1"><xref derivedContent="3" format="counter" sectionFormat="of" target="section-3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-nat64-deployment-scenarios">NAT64 Deployment Scenarios</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.3.2">
              <li pn="section-toc.1-1.3.2.1">
                <t keepWithNext="true" pn="section-toc.1-1.3.2.1.1"><xref derivedContent="3.1" format="counter" sectionFormat="of" target="section-3.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-known-to-work">Known to Work</xref></t>
                <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.3.2.1.2">
                  <li pn="section-toc.1-1.3.2.1.2.1">
                    <t keepWithNext="true" pn="section-toc.1-1.3.2.1.2.1.1"><xref derivedContent="3.1.1" format="counter" sectionFormat="of" target="section-3.1.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-service-provider-nat64-with">Service Provider NAT64 with DNS64</xref></t>
                  </li>
                  <li pn="section-toc.1-1.3.2.1.2.2">
                    <t keepWithNext="true" pn="section-toc.1-1.3.2.1.2.2.1"><xref derivedContent="3.1.2" format="counter" sectionFormat="of" target="section-3.1.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-service-provider-offering-4">Service Provider Offering 464XLAT Using DNS64</xref></t>
                  </li>
                  <li pn="section-toc.1-1.3.2.1.2.3">
                    <t keepWithNext="true" pn="section-toc.1-1.3.2.1.2.3.1"><xref derivedContent="3.1.3" format="counter" sectionFormat="of" target="section-3.1.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-service-provider-offering-46">Service Provider Offering 464XLAT,     without Using DNS64</xref></t>
                  </li>
                </ul>
              </li>
              <li pn="section-toc.1-1.3.2.2">
                <t keepWithNext="true" pn="section-toc.1-1.3.2.2.1"><xref derivedContent="3.2" format="counter" sectionFormat="of" target="section-3.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-known-to-work-under-special">Known to Work under Special Conditions</xref></t>
                <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.3.2.2.2">
                  <li pn="section-toc.1-1.3.2.2.2.1">
                    <t keepWithNext="true" pn="section-toc.1-1.3.2.2.2.1.1"><xref derivedContent="3.2.1" format="counter" sectionFormat="of" target="section-3.2.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-service-provider-nat64-witho">Service Provider NAT64 without DNS64</xref></t>
                  </li>
                  <li pn="section-toc.1-1.3.2.2.2.2">
                    <t keepWithNext="true" pn="section-toc.1-1.3.2.2.2.2.1"><xref derivedContent="3.2.2" format="counter" sectionFormat="of" target="section-3.2.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-service-provider-nat64-dns6">Service-Provider NAT64; DNS64 in IPv6 Hosts</xref></t>
                  </li>
                  <li pn="section-toc.1-1.3.2.2.2.3">
                    <t keepWithNext="true" pn="section-toc.1-1.3.2.2.2.3.1"><xref derivedContent="3.2.3" format="counter" sectionFormat="of" target="section-3.2.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-service-provider-nat64-dns64">Service-Provider NAT64; DNS64 in the IPv4-Only     Remote Network</xref></t>
                  </li>
                </ul>
              </li>
              <li pn="section-toc.1-1.3.2.3">
                <t keepWithNext="true" pn="section-toc.1-1.3.2.3.1"><xref derivedContent="3.3" format="counter" sectionFormat="of" target="section-3.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-comparing-the-scenarios">Comparing the Scenarios</xref></t>
              </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.4">
            <t keepWithNext="true" pn="section-toc.1-1.4.1"><xref derivedContent="4" format="counter" sectionFormat="of" target="section-4"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-issues-to-be-considered">Issues to be Considered</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.4.2">
              <li pn="section-toc.1-1.4.2.1">
                <t keepWithNext="true" pn="section-toc.1-1.4.2.1.1"><xref derivedContent="4.1" format="counter" sectionFormat="of" target="section-4.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-dnssec-considerations-and-p">DNSSEC Considerations and Possible Approaches</xref></t>
                <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.4.2.1.2">
                  <li pn="section-toc.1-1.4.2.1.2.1">
                    <t keepWithNext="true" pn="section-toc.1-1.4.2.1.2.1.1"><xref derivedContent="4.1.1" format="counter" sectionFormat="of" target="section-4.1.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-not-using-dns64">Not Using DNS64</xref></t>
                  </li>
                  <li pn="section-toc.1-1.4.2.1.2.2">
                    <t keepWithNext="true" pn="section-toc.1-1.4.2.1.2.2.1"><xref derivedContent="4.1.2" format="counter" sectionFormat="of" target="section-4.1.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-dnssec-validator-aware-of-d">DNSSEC Validator Aware of DNS64</xref></t>
                  </li>
                  <li pn="section-toc.1-1.4.2.1.2.3">
                    <t keepWithNext="true" pn="section-toc.1-1.4.2.1.2.3.1"><xref derivedContent="4.1.3" format="counter" sectionFormat="of" target="section-4.1.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-stub-validator">Stub Validator</xref></t>
                  </li>
                  <li pn="section-toc.1-1.4.2.1.2.4">
                    <t keepWithNext="true" pn="section-toc.1-1.4.2.1.2.4.1"><xref derivedContent="4.1.4" format="counter" sectionFormat="of" target="section-4.1.4"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-clat-with-dns-proxy-and-val">CLAT with DNS Proxy and Validator</xref></t>
                  </li>
                  <li pn="section-toc.1-1.4.2.1.2.5">
                    <t keepWithNext="true" pn="section-toc.1-1.4.2.1.2.5.1"><xref derivedContent="4.1.5" format="counter" sectionFormat="of" target="section-4.1.5"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-acl-of-clients">ACL of Clients</xref></t>
                  </li>
                  <li pn="section-toc.1-1.4.2.1.2.6">
                    <t keepWithNext="true" pn="section-toc.1-1.4.2.1.2.6.1"><xref derivedContent="4.1.6" format="counter" sectionFormat="of" target="section-4.1.6"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-mapping-out-ipv4-addresses">Mapping Out IPv4 Addresses</xref></t>
                  </li>
                </ul>
              </li>
              <li pn="section-toc.1-1.4.2.2">
                <t keepWithNext="true" pn="section-toc.1-1.4.2.2.1"><xref derivedContent="4.2" format="counter" sectionFormat="of" target="section-4.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-dns64-and-reverse-mapping">DNS64 and Reverse Mapping</xref></t>
              </li>
              <li pn="section-toc.1-1.4.2.3">
                <t keepWithNext="true" pn="section-toc.1-1.4.2.3.1"><xref derivedContent="4.3" format="counter" sectionFormat="of" target="section-4.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-using-464xlat-with-without-">Using 464XLAT with/without DNS64</xref></t>
              </li>
              <li pn="section-toc.1-1.4.2.4">
                <t keepWithNext="true" pn="section-toc.1-1.4.2.4.1"><xref derivedContent="4.4" format="counter" sectionFormat="of" target="section-4.4"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-foreign-dns">Foreign DNS</xref></t>
                <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.4.2.4.2">
                  <li pn="section-toc.1-1.4.2.4.2.1">
                    <t keepWithNext="true" pn="section-toc.1-1.4.2.4.2.1.1"><xref derivedContent="4.4.1" format="counter" sectionFormat="of" target="section-4.4.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-manual-configuration-of-dns">Manual Configuration of DNS</xref></t>
                  </li>
                  <li pn="section-toc.1-1.4.2.4.2.2">
                    <t keepWithNext="true" pn="section-toc.1-1.4.2.4.2.2.1"><xref derivedContent="4.4.2" format="counter" sectionFormat="of" target="section-4.4.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-dns-privacy-encryption-mech">DNS Privacy/Encryption Mechanisms</xref></t>
                  </li>
                  <li pn="section-toc.1-1.4.2.4.2.3">
                    <t keepWithNext="true" pn="section-toc.1-1.4.2.4.2.3.1"><xref derivedContent="4.4.3" format="counter" sectionFormat="of" target="section-4.4.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-split-dns-and-vpns">Split DNS and VPNs</xref></t>
                  </li>
                </ul>
              </li>
              <li pn="section-toc.1-1.4.2.5">
                <t keepWithNext="true" pn="section-toc.1-1.4.2.5.1"><xref derivedContent="4.5" format="counter" sectionFormat="of" target="section-4.5"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-well-known-prefix-wkp-vs-ne">Well-Known Prefix (WKP) vs. Network-Specific Prefix (NSP)</xref></t>
              </li>
              <li pn="section-toc.1-1.4.2.6">
                <t keepWithNext="true" pn="section-toc.1-1.4.2.6.1"><xref derivedContent="4.6" format="counter" sectionFormat="of" target="section-4.6"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-ipv4-literals-and-non-ipv6-">IPv4 Literals and Non-IPv6-Compliant APIs</xref></t>
              </li>
              <li pn="section-toc.1-1.4.2.7">
                <t keepWithNext="true" pn="section-toc.1-1.4.2.7.1"><xref derivedContent="4.7" format="counter" sectionFormat="of" target="section-4.7"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-ipv4-only-hosts-or-applicat">IPv4-Only Hosts or Applications</xref></t>
              </li>
              <li pn="section-toc.1-1.4.2.8">
                <t keepWithNext="true" pn="section-toc.1-1.4.2.8.1"><xref derivedContent="4.8" format="counter" sectionFormat="of" target="section-4.8"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-clat-translation-considerat">CLAT Translation Considerations</xref></t>
              </li>
              <li pn="section-toc.1-1.4.2.9">
                <t keepWithNext="true" pn="section-toc.1-1.4.2.9.1"><xref derivedContent="4.9" format="counter" sectionFormat="of" target="section-4.9"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-eam-considerations">EAM Considerations</xref></t>
              </li>
              <li pn="section-toc.1-1.4.2.10">
                <t keepWithNext="true" pn="section-toc.1-1.4.2.10.1"><xref derivedContent="4.10" format="counter" sectionFormat="of" target="section-4.10"/>. <xref derivedContent="" format="title" sectionFormat="of" target="name-incoming-connections">Incoming Connections</xref></t>
              </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.5">
            <t keepWithNext="true" pn="section-toc.1-1.5.1"><xref derivedContent="5" format="counter" sectionFormat="of" target="section-5"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-summary-of-deployment-recom">Summary of Deployment Recommendations for NAT64/464XLAT</xref></t>
          </li>
          <li pn="section-toc.1-1.6">
            <t keepWithNext="true" pn="section-toc.1-1.6.1"><xref derivedContent="6" format="counter" sectionFormat="of" target="section-6"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-deployment-of-464xlat-nat64">Deployment of 464XLAT/NAT64 in Enterprise Networks</xref></t>
          </li>
          <li pn="section-toc.1-1.7">
            <t keepWithNext="true" pn="section-toc.1-1.7.1"><xref derivedContent="7" format="counter" sectionFormat="of" target="section-7"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-security-considerations">Security Considerations</xref></t>
          </li>
          <li pn="section-toc.1-1.8">
            <t keepWithNext="true" pn="section-toc.1-1.8.1"><xref derivedContent="8" format="counter" sectionFormat="of" target="section-8"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-iana-considerations">IANA Considerations</xref></t>
          </li>
          <li pn="section-toc.1-1.9">
            <t keepWithNext="true" pn="section-toc.1-1.9.1"><xref derivedContent="9" format="counter" sectionFormat="of" target="section-9"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-references">References</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.9.2">
              <li pn="section-toc.1-1.9.2.1">
                <t keepWithNext="true" pn="section-toc.1-1.9.2.1.1"><xref derivedContent="9.1" format="counter" sectionFormat="of" target="section-9.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-normative-references">Normative References</xref></t>
              </li>
              <li pn="section-toc.1-1.9.2.2">
                <t keepWithNext="true" pn="section-toc.1-1.9.2.2.1"><xref derivedContent="9.2" format="counter" sectionFormat="of" target="section-9.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-informative-references">Informative References</xref></t>
              </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.10">
            <t keepWithNext="true" pn="section-toc.1-1.10.1"><xref derivedContent="Appendix A" format="default" sectionFormat="of" target="section-appendix.a"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-example-of-broadband-deploy">Example of Broadband Deployment with 464XLAT</xref></t>
          </li>
          <li pn="section-toc.1-1.11">
            <t keepWithNext="true" pn="section-toc.1-1.11.1"><xref derivedContent="Appendix B" format="default" sectionFormat="of" target="section-appendix.b"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-clat-implementation">CLAT Implementation</xref></t>
          </li>
          <li pn="section-toc.1-1.12">
            <t keepWithNext="true" pn="section-toc.1-1.12.1"><xref derivedContent="Appendix C" format="default" sectionFormat="of" target="section-appendix.c"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-benchmarking">Benchmarking</xref></t>
          </li>
          <li pn="section-toc.1-1.13">
            <t keepWithNext="true" pn="section-toc.1-1.13.1"><xref derivedContent="" format="none" sectionFormat="of" target="section-appendix.d"/><xref derivedContent="" format="title" sectionFormat="of" target="name-acknowledgements">Acknowledgements</xref></t>
          </li>
          <li pn="section-toc.1-1.14">
            <t keepWithNext="true" pn="section-toc.1-1.14.1"><xref derivedContent="" format="none" sectionFormat="of" target="section-appendix.e"/><xref derivedContent="" format="title" sectionFormat="of" target="name-authors-address">Author's Address</xref></t>
          </li>
        </ul>
      </section>
    </toc>
  </front>
  <middle>
    <section numbered="true" toc="include" removeInRFC="false" pn="section-1">
      <name slugifiedName="name-introduction">Introduction</name>
      <t pn="section-1-1">Stateful NAT64 <xref target="RFC6146" format="default" sectionFormat="of" derivedContent="RFC6146"/> describes a stateful IPv6-to-IPv4 
		translation mechanism that allows IPv6-only hosts to communicate with 
		IPv4-only servers using unicast UDP, TCP, or ICMP by means of IPv4 public 
		address sharing among multiple IPv6-only 
		hosts. Unless otherwise stated, references
		to NAT64 (function) in this document should be interpreted as Stateful NAT64.</t>
      <t pn="section-1-2">The translation of the packet headers is done using the IP/ICMP 
		translation algorithm defined in <xref target="RFC7915" format="default" sectionFormat="of" derivedContent="RFC7915"/>;  
		algorithmically translating the IPv4 addresses to IPv6 addresses, 
		and vice versa, is done following <xref target="RFC6052" format="default" sectionFormat="of" derivedContent="RFC6052"/>.</t>
      <t pn="section-1-3">DNS64 <xref target="RFC6147" format="default" sectionFormat="of" derivedContent="RFC6147"/> is in charge of the synthesis 
		of AAAA records from the A records, so it only works for applications 
		making use of DNS. It was designed to avoid changes in both 
		the IPv6-only hosts and the IPv4-only server, so they can use 
		a NAT64 function. As discussed in <xref target="RFC6147" sectionFormat="of" section="5.5" format="default" derivedLink="https://rfc-editor.org/rfc/rfc6147#section-5.5" derivedContent="RFC6147"/>, 
		a security-aware and validating host has to perform the 
		DNS64 function locally.</t>
      <t pn="section-1-4">However, the use of NAT64 and/or DNS64 presents three drawbacks:</t>
      <ol spacing="normal" type="1" start="1" pn="section-1-5">
        <li pn="section-1-5.1" derivedCounter="1.">Because DNS64 <xref target="RFC6147" format="default" sectionFormat="of" derivedContent="RFC6147"/> modifies DNS answers, 
			and DNSSEC is designed to detect such modifications, DNS64 
			<xref target="RFC6147" format="default" sectionFormat="of" derivedContent="RFC6147"/> may potentially break DNSSEC, depending on 
			a number of factors such as the location of the DNS64 
			function (at a DNS server or validator, at the end host, ...), how it 
			has been configured, if the end hosts are validating, etc.</li>
        <li pn="section-1-5.2" derivedCounter="2.">Because of the need to use DNS64 <xref target="RFC6147" format="default" sectionFormat="of" derivedContent="RFC6147"/> or 
			an alternative "host/application built-in" mechanism for address synthesis, 
			there may be an issue for NAT64 <xref target="RFC6146" format="default" sectionFormat="of" derivedContent="RFC6146"/>
			because it doesn't work when IPv4 literal addresses or non-IPv6-compliant 
			APIs are being used.</li>
        <li pn="section-1-5.3" derivedCounter="3.">NAT64 alone was not designed to provide a solution for 
			IPv4-only hosts or applications that are located within a network 
			and connected to a service provider IPv6-only access link, 
			as it was designed for a very specific
	scenario (see <xref target="RFC6144" sectionFormat="of" section="2.1" format="default" derivedLink="https://rfc-editor.org/rfc/rfc6144#section-2.1" derivedContent="RFC6144"/>).</li>
      </ol>
      <t pn="section-1-6">The drawbacks discussed above may come into play if part of an enterprise network
		is connected to other parts of the same network or to third-party networks 
		by means of IPv6-only connectivity. This is just an example that may 
		apply to many other similar cases. All of them are deployment specific.</t>
      <t pn="section-1-7">Accordingly, the use of "operator", 
		"operator network", "service provider", and similar terms in this document 
		are interchangeable with equivalent cases of enterprise networks; other cases may be similar as well. This may be also the case for "managed end-user 
		networks".</t>
      <t pn="section-1-8">Note that if all the hosts in a network were performing address synthesis, 
		as described in <xref target="RFC6147" sectionFormat="of" section="7.2" format="default" derivedLink="https://rfc-editor.org/rfc/rfc6147#section-7.2" derivedContent="RFC6147"/>, some of the drawbacks 
		may not apply. However, it is unrealistic to expect
		that in today's world, considering 
		the high number of devices and applications that aren't yet IPv6 enabled. 
		In this document, the case in which all hosts provide synthesis will be considered only for specific scenarios 
		that can guarantee it.</t>
      <t pn="section-1-9">An analysis of stateful IPv4/IPv6 mechanisms is provided in 
		<xref target="RFC6889" format="default" sectionFormat="of" derivedContent="RFC6889"/>.</t>
      <t pn="section-1-10">This document looks into different possible NAT64 <xref target="RFC6146" format="default" sectionFormat="of" derivedContent="RFC6146"/> 
		deployment scenarios, including IPv4-IPv6-IPv4 (464 for short) and similar ones 
		that were not documented in <xref target="RFC6144" format="default" sectionFormat="of" derivedContent="RFC6144"/>, such as 464XLAT 
		<xref target="RFC6877" format="default" sectionFormat="of" derivedContent="RFC6877"/> in operator (broadband and cellular) and 
		enterprise networks; it provides guidelines to avoid operational issues.</t>
      <t pn="section-1-11">This document also explores the possible NAT64 deployment 
		scenarios (split in "known to work" and "known to work under special conditions"), 
		providing a quick and generic comparison table among them. 
		Then, the document describes the issues that an operator needs to understand, which
	        will allow the best 
		approach/scenario to be defined for each specific network case. A summary provides some 
		recommendations and decision points.

		A section with clarifications 
		on the usage of this document for enterprise networks is also provided. 
		Finally, <xref target="AppendixA" format="default" sectionFormat="of" derivedContent="Appendix A"/> provides an example of a broadband deployment using 464XLAT
		and hints for a customer-side translator (CLAT) implementation.</t>
      <t pn="section-1-12"><xref target="RFC7269" format="default" sectionFormat="of" derivedContent="RFC7269"/> already provides information about 
		NAT64 deployment options and experiences. This document and 
		<xref target="RFC7269" format="default" sectionFormat="of" derivedContent="RFC7269"/> are complementary; they both look into 
		different deployment considerations. Furthermore, this document considers the updated deployment experience and newer standards.</t>
      <t pn="section-1-13">The target deployment scenarios in this document
		may also be covered by other IPv4-as-a-Service (IPv4aaS) transition mechanisms. Note that this is 
		true only for broadband networks; in the case of cellular 
		networks, the only supported solution is the use of NAT64/464XLAT.
		So, it is out of scope of this document to provide a comparison among the 
		different IPv4aaS transition mechanisms, which are analyzed
		in <xref target="I-D.lmhp-v6ops-transition-comparison" format="default" sectionFormat="of" derivedContent="IPv6-TRANSITION"/>.</t>
      <t pn="section-1-14">Consequently, this document should not be used as a guide for 
		an operator or enterprise to decide which IPv4aaS is the best one for 
		its own network. Instead, it should be used as a tool for understanding 
		all the implications, including relevant documents (or even specific 
		parts of them) for the deployment of NAT64/464XLAT and for facilitating 
		the decision process regarding specific deployment details.</t>
    </section>
    <section numbered="true" toc="include" removeInRFC="false" pn="section-2">
      <name slugifiedName="name-requirements-language">Requirements Language</name>
      <t pn="section-2-1">    The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>", "<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>", "<bcp14>SHALL NOT</bcp14>", "<bcp14>SHOULD</bcp14>", "<bcp14>SHOULD NOT</bcp14>", "<bcp14>RECOMMENDED</bcp14>", "<bcp14>NOT RECOMMENDED</bcp14>",
    "<bcp14>MAY</bcp14>", and "<bcp14>OPTIONAL</bcp14>" in this document are to be interpreted as
    described in BCP 14 <xref target="RFC2119" format="default" sectionFormat="of" derivedContent="RFC2119"/> <xref target="RFC8174" format="default" sectionFormat="of" derivedContent="RFC8174"/> 
    when, and only when, they appear in all capitals, as shown here.</t>
    </section>
    <section numbered="true" toc="include" removeInRFC="false" pn="section-3">
      <name slugifiedName="name-nat64-deployment-scenarios">NAT64 Deployment Scenarios</name>
      <t pn="section-3-1">DNS64 (see <xref target="RFC6147" sectionFormat="of" section="7" format="default" derivedLink="https://rfc-editor.org/rfc/rfc6147#section-7" derivedContent="RFC6147"/>) provides three deployment scenarios, 
		depending on the location of the DNS64 function. However, since the publication 
		of that document, other deployment scenarios and NAT64 use cases need to 
		be considered in actual networks, despite the fact that some of them were specifically 
		ruled out by the original NAT64/DNS64 work.</t>
      <t pn="section-3-2">Consequently, the perspective in this document is
		to broaden those scenarios and
		include a few new ones. However, in order to reduce the number 
		of possible cases, we work under the assumption that the service 
		provider wants to make sure that all the customers have a service 
		without failures. This means considering the following assumptions 
		for the worst possible case:</t>
      <ol spacing="normal" type="a" start="1" pn="section-3-3">
        <li pn="section-3-3.1" derivedCounter="a.">There are hosts that will be validating DNSSEC.</li>
        <li pn="section-3-3.2" derivedCounter="b.">IPv4 literal addresses and non-IPv6-compliant APIs are being used.</li>
        <li pn="section-3-3.3" derivedCounter="c.">There are IPv4-only hosts or applications beyond the 
				IPv6-only link (e.g., tethering in cellular networks).</li>
      </ol>
      <t pn="section-3-4">This document uses a common set of possible "participant entities":</t>
      <ol spacing="normal" type="1" start="1" pn="section-3-5">
        <li pn="section-3-5.1" derivedCounter="1.">An IPv6-only access network (IPv6).</li>
        <li pn="section-3-5.2" derivedCounter="2.">An IPv4-only remote network/server/service (IPv4).</li>
        <li pn="section-3-5.3" derivedCounter="3.">A NAT64 function (NAT64) in the service provider.</li>
        <li pn="section-3-5.4" derivedCounter="4.">A DNS64 function (DNS64) in the service provider.</li>
        <li pn="section-3-5.5" derivedCounter="5.">An external service provider offering the NAT64 function and/or the 
				DNS64 function (extNAT64/extDNS64).</li>
        <li pn="section-3-5.6" derivedCounter="6.">A 464XLAT customer-side translator (CLAT).</li>
      </ol>
      <t pn="section-3-6">Note that the nomenclature used in parentheses is the one that, for short, 
		will be used in the figures. Note: for simplicity, the boxes in 
		the figures don't mean they are actually a single device; they represent 
		one or more functions as located in that part of the network (i.e., a single box 
		with NAT64 and DNS64 functions can actually be several devices, not just one).</t>
      <t pn="section-3-7">The possible scenarios are split in two general categories:</t>
      <ol spacing="normal" type="1" start="1" pn="section-3-8">
        <li pn="section-3-8.1" derivedCounter="1.">Known to work.</li>
        <li pn="section-3-8.2" derivedCounter="2.">Known to work under special conditions.</li>
      </ol>
      <section numbered="true" toc="include" removeInRFC="false" pn="section-3.1">
        <name slugifiedName="name-known-to-work">Known to Work</name>
        <t pn="section-3.1-1">The scenarios in this category are known to work, as there are well-known 
			existing deployments from different operators using them. Each one may have 
			different pros and cons, and in some cases, the trade-offs 
			may be acceptable for some operators.</t>
        <section anchor="spnatdns64" numbered="true" toc="include" removeInRFC="false" pn="section-3.1.1">
          <name slugifiedName="name-service-provider-nat64-with">Service Provider NAT64 with DNS64</name>
          <t pn="section-3.1.1-1">In this scenario (<xref target="sp-nat64-dns64" format="default" sectionFormat="of" derivedContent="Figure 1"/>), the service 
				provider offers both the NAT64 and DNS64 functions.</t>
          <t pn="section-3.1.1-2">This is the most common scenario as originally considered by
				the designers of NAT64 <xref target="RFC6146" format="default" sectionFormat="of" derivedContent="RFC6146"/> and 
				DNS64 <xref target="RFC6147" format="default" sectionFormat="of" derivedContent="RFC6147"/>; however, 
				it may also have the implications related to the DNSSEC.</t>
          <t pn="section-3.1.1-3">This scenario may also fail to solve the issues of 
				IPv4 literal addresses, non-IPv6-compliant APIs, or
				IPv4-only hosts or applications behind the 
				IPv6-only access network.</t>
          <figure anchor="sp-nat64-dns64" align="left" suppress-title="false" pn="figure-1">
            <name slugifiedName="name-nat64-with-dns64">NAT64 with DNS64</name>
            <artwork align="center" name="" type="" alt="" pn="section-3.1.1-4.1">
+----------+        +----------+        +----------+
|          |        |  NAT64   |        |          |
|   IPv6   +--------+    +     +--------+   IPv4   |
|          |        |  DNS64   |        |          |
+----------+        +----------+        +----------+</artwork>
          </figure>
          <t pn="section-3.1.1-5">A similar scenario (<xref target="sp-dns64-e-nat64" format="default" sectionFormat="of" derivedContent="Figure 2"/>) exists if 
				the service provider offers only the
				DNS64 function; the NAT64 
				function is provided by an outsourcing agreement with 
				an external provider. 
				All the considerations in the previous paragraphs of this 
				section are the same for this sub-case.</t>
          <figure anchor="sp-dns64-e-nat64" align="left" suppress-title="false" pn="figure-2">
            <name slugifiedName="name-nat64-in-an-external-servic">NAT64 in an External Service Provider</name>
            <artwork align="center" name="" type="" alt="" pn="section-3.1.1-6.1">
                    +----------+        +----------+
                    |          |        |          |
                    | extNAT64 +--------+   IPv4   |
                    |          |        |          |
                    +----+-----+        +----------+
                         |
                         |
+----------+        +----+-----+
|          |        |          |
|   IPv6   +--------+  DNS64   +
|          |        |          |
+----------+        +----------+</artwork>
          </figure>
          <t pn="section-3.1.1-7">This is equivalent to the scenario (<xref target="e-nat64-dns64" format="default" sectionFormat="of" derivedContent="Figure 3"/>) 
				where the outsourcing 
				agreement with the external provider is to provide both the 
				NAT64 and DNS64 functions. Once more, all the considerations 
				in the previous paragraphs of this section are the same 
				for this sub-case.</t>
          <figure anchor="e-nat64-dns64" align="left" suppress-title="false" pn="figure-3">
            <name slugifiedName="name-nat64-and-dns64-in-an-exter">NAT64 and DNS64 in an External Provider</name>
            <artwork align="center" name="" type="" alt="" pn="section-3.1.1-8.1">
                    +----------+       +----------+
                    | extNAT64 |       |          |
                    |    +     +-------+   IPv4   |
                    | extDNS64 |       |          |
                    +----+-----+       +----------+
                         |
+----------+             |
|          |             |
|   IPv6   +-------------+
|          |
+----------+</artwork>
          </figure>
          <t pn="section-3.1.1-9">One additional equivalent scenario (<xref target="sp-nat64-e-dns64" format="default" sectionFormat="of" derivedContent="Figure 4"/>) 
				exists if the service provider 
				only offers the NAT64 function; the DNS64 function is from an 
				external provider with or without a specific agreement among them. 
				This is a common scenario today, as 
				several "global" service providers provide free DNS/DNS64 
				services, and users often configure their DNS manually. This 
				will only work if both the NAT64 and DNS64 functions are using the  
				Well-Known Prefix (WKP) or the same Network-Specific Prefix (NSP). 
				All the considerations in the previous paragraphs 
				of this section are the same for this sub-case.</t>
          <t pn="section-3.1.1-10">Of course, if the external DNS64 function is agreed with the 
				service provider, then this case is similar to the  
				ones already depicted in this scenario.</t>
          <figure anchor="sp-nat64-e-dns64" align="left" suppress-title="false" pn="figure-4">
            <name slugifiedName="name-nat64-dns64-by-an-external-">NAT64; DNS64 by an External Provider</name>
            <artwork align="center" name="" type="" alt="" pn="section-3.1.1-11.1">
                    +----------+
                    |          |
                    | extDNS64 |
                    |          |
                    +----+-----+
                         |
                         |
+----------+        +----+-----+        +----------+
|          |        |          |        |          |
|   IPv6   +--------+  NAT64   +--------+   IPv4   |
|          |        |          |        |          |
+----------+        +----------+        +----------+</artwork>
          </figure>
        </section>
        <section numbered="true" toc="include" removeInRFC="false" pn="section-3.1.2">
          <name slugifiedName="name-service-provider-offering-4">Service Provider Offering 464XLAT Using DNS64</name>
          <t pn="section-3.1.2-1">464XLAT <xref target="RFC6877" format="default" sectionFormat="of" derivedContent="RFC6877"/> describes an architecture that 
			provides IPv4 connectivity across a network, or part of it, 
			when it is only natively transporting IPv6. 
			The need to support the CLAT function in order to 
			ensure the IPv4 service continuity in IPv6-only cellular deployments has been suggested in <xref target="RFC7849" format="default" sectionFormat="of" derivedContent="RFC7849"/>.</t>
          <t pn="section-3.1.2-2">In order to do that, 464XLAT <xref target="RFC6877" format="default" sectionFormat="of" derivedContent="RFC6877"/> relies on the 
			combination of existing protocols:</t>
          <ol spacing="normal" type="1" start="1" pn="section-3.1.2-3">
            <li pn="section-3.1.2-3.1" derivedCounter="1.">The CLAT is a stateless IPv4-to-IPv6 
				translator (NAT46) <xref target="RFC7915" format="default" sectionFormat="of" derivedContent="RFC7915"/> implemented in the 
				end-user device or Customer Edge Router (CE), located at the 
				"customer edge" of the network.</li>
            <li pn="section-3.1.2-3.2" derivedCounter="2.">The provider-side translator (PLAT) is a stateful NAT64 
				<xref target="RFC6146" format="default" sectionFormat="of" derivedContent="RFC6146"/>, implemented typically in 
				the operator network.</li>
            <li pn="section-3.1.2-3.3" derivedCounter="3.">Optionally, DNS64 <xref target="RFC6147" format="default" sectionFormat="of" derivedContent="RFC6147"/> may allow 
				an optimization: a single translation at the NAT64, instead 
				of two translations (NAT46+NAT64), when the application at 
				the end-user device supports IPv6 DNS (uses AAAA 
				Resource Records).</li>
          </ol>
          <t pn="section-3.1.2-4">Note that even if the provider-side translator is referred to as PLAT in the 
                        464XLAT terminology <xref target="RFC6877" format="default" sectionFormat="of" derivedContent="RFC6877"/>, for simplicity and 
			uniformity across this document, it is always referred to as NAT64 (function).</t>
          <t pn="section-3.1.2-5">In this scenario (<xref target="sp-464xlat-dns64" format="default" sectionFormat="of" derivedContent="Figure 5"/>), the service provider 
			deploys 464XLAT with a DNS64 function.</t>
          <t pn="section-3.1.2-6">As a consequence, the DNSSEC issues remain, unless the host 
			is doing the address synthesis.</t>
          <t pn="section-3.1.2-7">464XLAT <xref target="RFC6877" format="default" sectionFormat="of" derivedContent="RFC6877"/> is a very simple approach to cope 
			with the major NAT64+DNS64 drawback: not working with applications or 
			devices that use literal IPv4 addresses or non-IPv6-compliant APIs.</t>
          <t pn="section-3.1.2-8">464XLAT <xref target="RFC6877" format="default" sectionFormat="of" derivedContent="RFC6877"/> has been used mainly in 
			IPv6-only cellular networks. By supporting a CLAT function, end-user 
			device applications can access IPv4-only end networks / applications, 
			despite the fact that those applications or devices use literal IPv4 addresses 
			or non-IPv6-compliant APIs.</t>
          <t pn="section-3.1.2-9">In addition, in the cellular network example above,
			if the User Equipment (UE) provides tethering, other devices behind it 
			will be presented with a traditional Network Address Translation from IPv4 to IPv4 (NAT44), in addition to the native 
			IPv6 support, so clearly it allows IPv4-only hosts behind the IPv6-only 
			access network.</t>
          <t pn="section-3.1.2-10">Furthermore, as discussed in <xref target="RFC6877" format="default" sectionFormat="of" derivedContent="RFC6877"/>, 464XLAT 
			can be used in broadband IPv6 network architectures, 
			by implementing the CLAT function at the CE.</t>
          <t pn="section-3.1.2-11">The support of this scenario in a network offers two additional advantages:</t>
          <ul spacing="normal" bare="false" empty="false" pn="section-3.1.2-12">
            <li pn="section-3.1.2-12.1">DNS load optimization: A CLAT should implement a DNS proxy 
				(per <xref target="RFC5625" format="default" sectionFormat="of" derivedContent="RFC5625"/>) so that only IPv6-native queries 
				and AAAA records are sent to the DNS64 server. Otherwise, 
				doubling the number of queries may impact the DNS infrastructure.</li>
            <li pn="section-3.1.2-12.2">Connection establishment delay optimization: If the UE/CE 
				implementation is detecting the presence of a DNS64 function, 
				it may issue only the AAAA query, instead of both the AAAA 
				and A queries.</li>
          </ul>
          <t pn="section-3.1.2-13">In order to understand all the communication possibilities, let's 
			assume the following representation of two
	  dual-stack (DS) peers:</t>
          <artwork align="center" name="" type="" alt="" pn="section-3.1.2-14">
               +-------+     .-----.                     .-----.
               |       |    /       \                   /       \
   .-----.     | Res./ |   /  IPv6-  \     .-----.     /  IPv4-  \
  / Local \    | SOHO  +--(   only    )---( NAT64 )---(   only    )
 /         \   |       |   \  flow   /\    `-----'     \  flow   /
(   Dual-   )--+ IPv6  |    \       /  \              / \       /
 \  Stack  /   |  CE   |     `--+--'    \   .-----.  /   `--+--'
  \ Peer  /    | with  |        |        \ / Remote\/       |
   `-----'     | CLAT  |    +---+----+    /         \    +---+----+
               |       |    |DNS/IPv6|   (   Dual-   )   |DNS/IPv4|
               +-------+    |  with  |    \  Stack  /    +--------+
                            | DNS64  |     \ Peer  /
                            +--------+      `-----'

  Figure A: Representation of 464XLAT among Two Peers with DNS64

</artwork>
          <t pn="section-3.1.2-15">In this case, the possible communication paths, among the IPv4/IPv6 stacks of 
			both peers, are as follows:</t>
          <ol spacing="normal" type="a" start="1" pn="section-3.1.2-16">
            <li pn="section-3.1.2-16.1" derivedCounter="a.">Local-IPv6 to Remote-IPv6: Regular DNS and native IPv6 among peers.</li>
            <li pn="section-3.1.2-16.2" derivedCounter="b.">Local-IPv6 to Remote-IPv4: DNS64 and NAT64 translation.</li>
            <li pn="section-3.1.2-16.3" derivedCounter="c.">Local-IPv4 to Remote-IPv6: Not possible unless the CLAT 
				implements Explicit Address Mappings (EAMs) as indicated by 
				<xref target="EAM" format="default" sectionFormat="of" derivedContent="Section 4.9"/>. In principle, 
				it is not expected that services are deployed in the Internet when using 
				IPv6 only, unless there is certainty that peers will also be 
				IPv6 capable.</li>
            <li pn="section-3.1.2-16.4" derivedCounter="d.">Local-IPv4 to Remote-IPv4: DNS64, CLAT, and NAT64 translations.</li>
            <li pn="section-3.1.2-16.5" derivedCounter="e.">Local-IPv4 to Remote-dual-stack using EAM optimization: If the CLAT 
				implements EAM as indicated by <xref target="EAM" format="default" sectionFormat="of" derivedContent="Section 4.9"/>, instead of 
				using the path d. above, NAT64 translation is avoided, and the 
				flow will use IPv6 from the CLAT to the destination.</li>
          </ol>
          <t pn="section-3.1.2-17">The rest of the figures in this section show different choices for placing 
			the different elements.</t>
          <figure anchor="sp-464xlat-dns64" align="left" suppress-title="false" pn="figure-5">
            <name slugifiedName="name-464xlat-with-dns64">464XLAT with DNS64</name>
            <artwork align="center" name="" type="" alt="" pn="section-3.1.2-18.1">
+----------+        +----------+        +----------+
|   IPv6   |        |  NAT64   |        |          |
|     +    +--------+    +     +--------+   IPv4   |
|   CLAT   |        |  DNS64   |        |          |
+----------+        +----------+        +----------+ </artwork>
          </figure>
          <t pn="section-3.1.2-19">A similar scenario (<xref target="ext-nat64-464xlatdns64" format="default" sectionFormat="of" derivedContent="Figure 6"/>) exists
				if the service provider only 
				offers the DNS64 function; the NAT64 function is provided by 
				an outsourcing agreement with an external provider. 
				All the considerations in the previous paragraphs of this 
				section are the same for this sub-case.</t>
          <figure anchor="ext-nat64-464xlatdns64" align="left" suppress-title="false" pn="figure-6">
            <name slugifiedName="name-464xlat-with-dns64-nat64-in">464XLAT with DNS64; NAT64 in an External Provider</name>
            <artwork align="center" name="" type="" alt="" pn="section-3.1.2-20.1">
                    +----------+        +----------+
                    |          |        |          |
                    | extNAT64 +--------+   IPv4   |
                    |          |        |          |
                    +----+-----+        +----------+
                         |
                         |
+----------+        +----+-----+
|   IPv6   |        |          |
|     +    +--------+  DNS64   +
|   CLAT   |        |          |
+----------+        +----------+</artwork>
          </figure>
          <t pn="section-3.1.2-21">In addition, it is equivalent to the scenario (<xref target="ext-nat64-dns64-464xlatdns64" format="default" sectionFormat="of" derivedContent="Figure 7"/>) 
				where the outsourcing 
				agreement with the external provider is to provide both the 
				NAT64 and DNS64 functions. Once more, all the considerations 
				in the previous paragraphs of this section are the same 
				for this sub-case.</t>
          <figure anchor="ext-nat64-dns64-464xlatdns64" align="left" suppress-title="false" pn="figure-7">
            <name slugifiedName="name-464xlat-with-dns64-nat64-an">464XLAT with DNS64; NAT64 and DNS64 in an External Provider</name>
            <artwork align="center" name="" type="" alt="" pn="section-3.1.2-22.1">
                    +----------+        +----------+
                    | extNAT64 |        |          |
                    |    +     +--------+   IPv4   |
                    | extDNS64 |        |          |
                    +----+-----+        +----------+
                         |
+----------+             |
|   IPv6   |             |
|     +    +-------------+
|   CLAT   |
+----------+</artwork>
          </figure>
        </section>
        <section anchor="xlat-dns64" numbered="true" toc="include" removeInRFC="false" pn="section-3.1.3">
          <name slugifiedName="name-service-provider-offering-46">Service Provider Offering 464XLAT,     without Using DNS64</name>
          <t pn="section-3.1.3-1">The major advantage of this scenario (<xref target="sp-464xlat" format="default" sectionFormat="of" derivedContent="Figure 8"/>), 
			using 464XLAT without DNS64, 
			is that the service provider ensures that DNSSEC is never broken, even 
			if the user modifies the DNS configuration. Nevertheless, some 
			CLAT implementations or applications may impose an extra delay, which 
			is induced by the dual A/AAAA queries (and the wait for both responses), 
			unless Happy Eyeballs v2 <xref target="RFC8305" format="default" sectionFormat="of" derivedContent="RFC8305"/> is also present.</t>
          <t pn="section-3.1.3-2">A possible variation of this scenario is when DNS64 is 
			used only for the discovery of the NAT64 prefix. In the rest of the document, 
			it is not considered a different scenario because once the prefix 
			has been discovered, the DNS64 function is not used, so it behaves as if 
			the DNS64 synthesis function is not present.</t>
          <t pn="section-3.1.3-3">In this scenario, as in the previous one, there are no 
			issues related to IPv4-only hosts (or IPv4-only applications) 
			behind the IPv6-only access network, as neither are related to the 
			usage of IPv4 literals or non-IPv6-compliant APIs.</t>
          <t pn="section-3.1.3-4">The support of this scenario in a network offers one advantage:</t>
          <ul spacing="normal" bare="false" empty="false" pn="section-3.1.3-5">
            <li pn="section-3.1.3-5.1">DNS load optimization: A CLAT should implement a DNS proxy 
				(per <xref target="RFC5625" format="default" sectionFormat="of" derivedContent="RFC5625"/>) so that only IPv6 native queries 
				are sent to the DNS64 server. Otherwise, doubling the number of 
				queries may impact the DNS infrastructure.</li>
          </ul>
          <t pn="section-3.1.3-6">As indicated earlier, the connection establishment delay optimization 
			is achieved only in the case of devices, Operating Systems, or applications 
			that use Happy Eyeballs v2 <xref target="RFC8305" format="default" sectionFormat="of" derivedContent="RFC8305"/>, which is very common.</t>
          <t pn="section-3.1.3-7">As in the previous case, let's assume the representation of two dual-stack peers:</t>
          <artwork align="center" name="" type="" alt="" pn="section-3.1.3-8">
               +-------+     .-----.                     .-----.
               |       |    /       \                   /       \
   .-----.     | Res./ |   /  IPv6-  \     .-----.     /  IPv4-  \
  / Local \    | SOHO  +--(   only    )---( NAT64 )---(   only    )
 /         \   |       |   \  flow   /\    `-----'     \  flow   /
(   Dual-   )--+ IPv6  |    \       /  \              / \       /
 \  Stack  /   |  CE   |     `--+--'    \   .-----.  /   `--+--'
  \ Peer  /    | with  |        |        \ / Remote\/       |
   `-----'     | CLAT  |    +---+----+    /         \    +---+----+
               |       |    |DNS/IPv6|   (   Dual-   )   |DNS/IPv4|
               +-------+    +--------+    \  Stack  /    +--------+
                                           \ Peer  /
                                            `-----'

 Figure B: Representation of 464XLAT among Two Peers without DNS64

</artwork>
          <t pn="section-3.1.3-9">In this case, the possible communication paths, among the IPv4/IPv6 stacks of 
			both peers, are as follows:</t>
          <ol spacing="normal" type="a" start="1" pn="section-3.1.3-10">
            <li pn="section-3.1.3-10.1" derivedCounter="a.">Local-IPv6 to Remote-IPv6: Regular DNS and native IPv6 among peers.</li>
            <li pn="section-3.1.3-10.2" derivedCounter="b.">Local-IPv6 to Remote-IPv4: Regular DNS, CLAT, and NAT64 translations.</li>
            <li pn="section-3.1.3-10.3" derivedCounter="c.">Local-IPv4 to Remote-IPv6: Not possible unless the CLAT 
				implements EAM as indicated by <xref target="EAM" format="default" sectionFormat="of" derivedContent="Section 4.9"/>. In principle, 
				it is not expected that services are deployed in the Internet using 
				IPv6 only, unless there is certainty that peers will also be 
				IPv6-capable.</li>
            <li pn="section-3.1.3-10.4" derivedCounter="d.">Local-IPv4 to Remote-IPv4: Regular DNS, CLAT, and NAT64 translations.</li>
            <li pn="section-3.1.3-10.5" derivedCounter="e.">Local-IPv4 to Remote-dual-stack using EAM optimization: If the CLAT 
				implements EAM as indicated by <xref target="EAM" format="default" sectionFormat="of" derivedContent="Section 4.9"/>, instead of 
				using the path d. above, NAT64 translation is avoided, and the flow 
				will use IPv6 from the CLAT to the destination.</li>
          </ol>
          <t pn="section-3.1.3-11">Notice that this scenario works while the local 
			hosts/applications are dual stack (which is the current situation) 
			because the connectivity from a local IPv6 to a remote IPv4 is not possible 
			without a AAAA synthesis. This aspect is important only when there are IPv6-only hosts in the LANs behind the CLAT and they need to 
			communicate with remote IPv4-only hosts. However, it is not a sensible 
			approach from an Operating System or application vendor 
			perspective to provide IPv6-only support unless, 
			similar to case c above, there is certainty of peers supporting 
			IPv6 as well. An approach to a solution for this is also presented 
			in <xref target="I-D.palet-v6ops-464xlat-opt-cdn-caches" format="default" sectionFormat="of" derivedContent="OPT-464XLAT"/>.</t>
          <t pn="section-3.1.3-12">The following figures show different choices for placing 
			the different elements.</t>
          <figure anchor="sp-464xlat" align="left" suppress-title="false" pn="figure-8">
            <name slugifiedName="name-464xlat-without-dns64">464XLAT without DNS64</name>
            <artwork align="center" name="" type="" alt="" pn="section-3.1.3-13.1">
+----------+        +----------+        +----------+
|   IPv6   |        |          |        |          |
|     +    +--------+  NAT64   +--------+   IPv4   |
|   CLAT   |        |          |        |          |
+----------+        +----------+        +----------+</artwork>
          </figure>
          <t pn="section-3.1.3-14">This is equivalent to the scenario (<xref target="ext-nat64-464xlat" format="default" sectionFormat="of" derivedContent="Figure 9"/>) 
				where there is an 
				outsourcing agreement with an external provider for the 
				NAT64 function. All the considerations in the previous 
				paragraphs of this section are the same for this sub-case.</t>
          <figure anchor="ext-nat64-464xlat" align="left" suppress-title="false" pn="figure-9">
            <name slugifiedName="name-464xlat-without-dns64-nat64">464XLAT without DNS64; NAT64 in an External Provider</name>
            <artwork align="center" name="" type="" alt="" pn="section-3.1.3-15.1">
                    +----------+        +----------+
                    |          |        |          |
                    | extNAT64 +--------+   IPv4   |
                    |          |        |          |
                    +----+-----+        +----------+
                         |
+----------+             |
|   IPv6   |             |
|     +    +-------------+
|   CLAT   |
+----------+</artwork>
          </figure>
        </section>
      </section>
      <section numbered="true" toc="include" removeInRFC="false" pn="section-3.2">
        <name slugifiedName="name-known-to-work-under-special">Known to Work under Special Conditions</name>
        <t pn="section-3.2-1">The scenarios in this category are known
			not to work unless significant 
			effort is devoted to solving the issues or they are intended to solve problems 
			across "closed" networks instead of as a general Internet access usage. 

			Even though some of the different pros, cons, and trade-offs
			may be acceptable, operators have implementation 
			difficulties, as their expectations of
			NAT64/DNS64 are beyond the original intent.</t>
        <section anchor="onlynat64" numbered="true" toc="include" removeInRFC="false" pn="section-3.2.1">
          <name slugifiedName="name-service-provider-nat64-witho">Service Provider NAT64 without DNS64</name>
          <t pn="section-3.2.1-1">In this scenario (<xref target="only-nat64" format="default" sectionFormat="of" derivedContent="Figure 10"/>), 
				the service provider offers a NAT64 function; 
				however, there is no DNS64 function support at all.</t>
          <t pn="section-3.2.1-2">As a consequence, an IPv6 host in the IPv6-only 
				access network will not be able to detect the presence 
				of DNS64 by means of <xref target="RFC7050" format="default" sectionFormat="of" derivedContent="RFC7050"/> or learn the 
				IPv6 prefix to be used for the NAT64 function.</t>
          <t pn="section-3.2.1-3">This can be sorted out as indicated in <xref target="nodns64" format="default" sectionFormat="of" derivedContent="Section 4.1.1"/>.</t>
          <t pn="section-3.2.1-4">Regardless, because of the lack of the DNS64 
				function, the IPv6 host will not be able to obtain 
				AAAA synthesized records, so the NAT64 function becomes useless.</t>
          <t pn="section-3.2.1-5">An exception to this "useless" scenario is to 
				manually configure mappings between the A records of each 
				of the IPv4-only remote hosts and the corresponding AAAA records 
				with the WKP or NSP 
				used by the service-provider NAT64 function, 
				as if they were synthesized by a DNS64 function.</t>
          <t pn="section-3.2.1-6">This mapping could be done by several means, typically 
				at the authoritative DNS server or at the service-provider 
				resolvers by means of DNS Response Policy Zones (RPZs) 
				<xref target="I-D.vixie-dnsop-dns-rpz" format="default" sectionFormat="of" derivedContent="DNS-RPZ"/> or equivalent functionality. 
				DNS RPZ may have implications in DNSSEC if the zone is signed.
				Also, if the service provider is using an NSP, having the mapping 
				at the authoritative server may create troubles for other parties 
				trying to use a different NSP or WKP, unless multiple DNS "views" 
				(split-DNS) are also being used at the authoritative servers.</t>
          <t pn="section-3.2.1-7">Generally, the mappings alternative will only make sense 
				if a few sets of IPv4-only remote hosts need to be accessed  
				by a single network (or a small number of them), which supports 
				IPv6 only in the access.
                                This will require some kind of mutual 
				agreement for using this procedure; this should not be a problem because it won't interfere with Internet use (which is a "closed service").</t>
          <t pn="section-3.2.1-8">In any case, this scenario doesn't solve the issue of 
				IPv4 literal addresses, non-IPv6-compliant APIs, or IPv4-only 
                                hosts within that IPv6-only access network.</t>
          <figure anchor="only-nat64" align="left" suppress-title="false" pn="figure-10">
            <name slugifiedName="name-nat64-without-dns64">NAT64 without DNS64</name>
            <artwork align="center" name="" type="" alt="" pn="section-3.2.1-9.1">
+----------+        +----------+        +----------+
|          |        |          |        |          |
|   IPv6   +--------+  NAT64   +--------+   IPv4   |
|          |        |          |        |          |
+----------+        +----------+        +----------+</artwork>
          </figure>
        </section>
        <section numbered="true" toc="include" removeInRFC="false" pn="section-3.2.2">
          <name slugifiedName="name-service-provider-nat64-dns6">Service-Provider NAT64; DNS64 in IPv6 Hosts</name>
          <t pn="section-3.2.2-1">In this scenario (<xref target="sp-nat64-h-dns64" format="default" sectionFormat="of" derivedContent="Figure 11"/>), 
				the service provider offers the 
				NAT64 function but not the DNS64 function. However, the IPv6 hosts 
				have a built-in DNS64 function.</t>
          <t pn="section-3.2.2-2">This may become common if the DNS64 function is 
				implemented in all the IPv6 hosts/stacks. 
				This is not common at the
				time of writing but may become more
				common in the near future.
				This way, the DNSSEC validation is performed on the A record, 
				and then the host can use the DNS64 function in order to 
				use the NAT64 function without any DNSSEC issues.</t>
          <t pn="section-3.2.2-3">This scenario fails to solve the issue of 
				IPv4 literal addresses or non-IPv6-compliant APIs, unless 
				the IPv6 hosts also support Happy Eyeballs v2 
				(<xref target="RFC8305" sectionFormat="of" section="7.1" format="default" derivedLink="https://rfc-editor.org/rfc/rfc8305#section-7.1" derivedContent="RFC8305"/>).</t>
          <t pn="section-3.2.2-4">Moreover, this scenario also fails to solve the problem 
				of IPv4-only hosts or applications behind the IPv6-only 
				access network.</t>
          <figure anchor="sp-nat64-h-dns64" align="left" suppress-title="false" pn="figure-11">
            <name slugifiedName="name-nat64-dns64-in-ipv6-hosts">NAT64; DNS64 in IPv6 Hosts</name>
            <artwork align="center" name="" type="" alt="" pn="section-3.2.2-5.1">
+----------+        +----------+        +----------+
|   IPv6   |        |          |        |          |
|     +    +--------+  NAT64   +--------+   IPv4   |
|   DNS64  |        |          |        |          |
+----------+        +----------+        +----------+</artwork>
          </figure>
        </section>
        <section anchor="sprdns64" numbered="true" toc="include" removeInRFC="false" pn="section-3.2.3">
          <name slugifiedName="name-service-provider-nat64-dns64">Service-Provider NAT64; DNS64 in the IPv4-Only     Remote Network</name>
          <t pn="section-3.2.3-1">In this scenario (<xref target="sp-nat64-r-dns64" format="default" sectionFormat="of" derivedContent="Figure 12"/>), the service provider offers the 
				NAT64 function only. The IPv4-only remote network offers the 
				DNS64 function.</t>
          <t pn="section-3.2.3-2">This is not common, and it doesn't make sense 
				that a remote network, not deploying IPv6, is providing a DNS64 
				function. Like the scenario depicted in 
				<xref target="onlynat64" format="default" sectionFormat="of" derivedContent="Section 3.2.1"/>, it will only work if both sides are 
				using the WKP or the same NSP, so the same considerations apply. 
				It can also be tuned to behave as in <xref target="spnatdns64" format="default" sectionFormat="of" derivedContent="Section 3.1.1"/>.</t>
          <t pn="section-3.2.3-3">This scenario fails to solve the issue of 
				IPv4 literal addresses or non-IPv6-compliant APIs.</t>
          <t pn="section-3.2.3-4">Moreover, this scenario also fails to solve the problem 
				of IPv4-only hosts or applications behind the IPv6-only 
				access network.</t>
          <figure anchor="sp-nat64-r-dns64" align="left" suppress-title="false" pn="figure-12">
            <name slugifiedName="name-nat64-dns64-in-ipv4-only-ho">NAT64; DNS64 in IPv4-Only Hosts</name>
            <artwork align="center" name="" type="" alt="" pn="section-3.2.3-5.1">
+----------+        +----------+        +----------+
|          |        |          |        |   IPv4   |
|   IPv6   +--------+  NAT64   +--------+     +    |
|          |        |          |        |   DNS64  |
+----------+        +----------+        +----------+</artwork>
          </figure>
        </section>
      </section>
      <section numbered="true" toc="include" removeInRFC="false" pn="section-3.3">
        <name slugifiedName="name-comparing-the-scenarios">Comparing the Scenarios</name>
        <t pn="section-3.3-1">This section compares the different scenarios, including 
			possible variations (each one represented in the previous sections 
			by a different figure), while considering the following criteria:</t>
        <ol spacing="normal" type="a" start="1" pn="section-3.3-2">
          <li pn="section-3.3-2.1" derivedCounter="a.">DNSSEC: Are there hosts validating DNSSEC?</li>
          <li pn="section-3.3-2.2" derivedCounter="b.">Literal/APIs: Are there applications using IPv4 literals or 
                                non-IPv6-compliant APIs?</li>
          <li pn="section-3.3-2.3" derivedCounter="c.">IPv4 only: Are there hosts or applications using IPv4 only?</li>
          <li pn="section-3.3-2.4" derivedCounter="d.">Foreign DNS: Does the scenario survive if the user, Operating System, 
				applications, or devices change the DNS?</li>
          <li pn="section-3.3-2.5" derivedCounter="e.">DNS load opt. (DNS load optimization): Are there extra queries that 
    may impact the DNS infrastructure?</li>
          <li pn="section-3.3-2.6" derivedCounter="f.">Connect. opt. (connection establishment delay optimization): 
    Is the UE/CE only issuing the AAAA query or also the A query and 
    waiting for both responses?</li>
        </ol>
        <t pn="section-3.3-3">In the table below, the columns represent each of the scenarios from the 
			previous sections by the figure number. The
			possible values are as follows:</t>
        <ul empty="true" bare="false" spacing="normal" pn="section-3.3-4">
          <li pn="section-3.3-4.1">
            <dl spacing="normal" indent="6" newline="false" pn="section-3.3-4.1.1">
              <dt pn="section-3.3-4.1.1.1">"-"</dt>
              <dd pn="section-3.3-4.1.1.2">means the scenario is "bad" for that criterion.</dd>
              <dt pn="section-3.3-4.1.1.3">"+"</dt>
              <dd pn="section-3.3-4.1.1.4">means the scenario is "good" for that criterion.</dd>
              <dt pn="section-3.3-4.1.1.5">"*"</dt>
              <dd pn="section-3.3-4.1.1.6">means the scenario is "bad" for that criterion; however, it is typically 
				resolved with the support of Happy Eyeballs v2 <xref target="RFC8305" format="default" sectionFormat="of" derivedContent="RFC8305"/>.</dd>
            </dl>
          </li>
        </ul>
        <t pn="section-3.3-5">In some cases, "countermeasures", alternative or 
			special configurations, may be available for the criterion designated 
			as "bad". So, this comparison is considering a generic 
			case as a quick comparison guide. In some cases, a "bad" criterion is 
			not necessarily a negative aspect; it all depends on the specific 
			needs/characteristics of the network where the deployment will 
			take place.

                        For instance, in a network that only has IPv6-only hosts and 
			apps using DNS and IPv6-compliant APIs, there is no impact using 
			only NAT64 and DNS64, but if the hosts validate DNSSEC, 
	that criterion is still relevant.</t>
        <table anchor="comparing" align="center" pn="table-1">
          <name slugifiedName="name-scenario-comparison">Scenario Comparison</name>
          <thead>
            <tr>
              <th align="left" colspan="1" rowspan="1">Item / Figure</th>
              <th align="left" colspan="1" rowspan="1">1</th>
              <th align="left" colspan="1" rowspan="1">2</th>
              <th align="left" colspan="1" rowspan="1">3</th>
              <th align="left" colspan="1" rowspan="1">4</th>
              <th align="left" colspan="1" rowspan="1">5</th>
              <th align="left" colspan="1" rowspan="1">6</th>
              <th align="left" colspan="1" rowspan="1">7</th>
              <th align="left" colspan="1" rowspan="1">8</th>
              <th align="left" colspan="1" rowspan="1">9</th>
              <th align="left" colspan="1" rowspan="1">10</th>
              <th align="left" colspan="1" rowspan="1">11</th>
              <th align="left" colspan="1" rowspan="1">12</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left" colspan="1" rowspan="1">DNSSEC</td>
              <td align="left" colspan="1" rowspan="1">-</td>
              <td align="left" colspan="1" rowspan="1">-</td>
              <td align="left" colspan="1" rowspan="1">-</td>
              <td align="left" colspan="1" rowspan="1">-</td>
              <td align="left" colspan="1" rowspan="1">-</td>
              <td align="left" colspan="1" rowspan="1">-</td>
              <td align="left" colspan="1" rowspan="1">-</td>
              <td align="left" colspan="1" rowspan="1">+</td>
              <td align="left" colspan="1" rowspan="1">+</td>
              <td align="left" colspan="1" rowspan="1">+</td>
              <td align="left" colspan="1" rowspan="1">+</td>
              <td align="left" colspan="1" rowspan="1">+</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">Literal/APIs</td>
              <td align="left" colspan="1" rowspan="1">-</td>
              <td align="left" colspan="1" rowspan="1">-</td>
              <td align="left" colspan="1" rowspan="1">-</td>
              <td align="left" colspan="1" rowspan="1">-</td>
              <td align="left" colspan="1" rowspan="1">+</td>
              <td align="left" colspan="1" rowspan="1">+</td>
              <td align="left" colspan="1" rowspan="1">+</td>
              <td align="left" colspan="1" rowspan="1">+</td>
              <td align="left" colspan="1" rowspan="1">+</td>
              <td align="left" colspan="1" rowspan="1">-</td>
              <td align="left" colspan="1" rowspan="1">-</td>
              <td align="left" colspan="1" rowspan="1">-</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">IPv4-only</td>
              <td align="left" colspan="1" rowspan="1">-</td>
              <td align="left" colspan="1" rowspan="1">-</td>
              <td align="left" colspan="1" rowspan="1">-</td>
              <td align="left" colspan="1" rowspan="1">-</td>
              <td align="left" colspan="1" rowspan="1">+</td>
              <td align="left" colspan="1" rowspan="1">+</td>
              <td align="left" colspan="1" rowspan="1">+</td>
              <td align="left" colspan="1" rowspan="1">+</td>
              <td align="left" colspan="1" rowspan="1">+</td>
              <td align="left" colspan="1" rowspan="1">-</td>
              <td align="left" colspan="1" rowspan="1">-</td>
              <td align="left" colspan="1" rowspan="1">-</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">Foreign DNS</td>
              <td align="left" colspan="1" rowspan="1">-</td>
              <td align="left" colspan="1" rowspan="1">-</td>
              <td align="left" colspan="1" rowspan="1">-</td>
              <td align="left" colspan="1" rowspan="1">-</td>
              <td align="left" colspan="1" rowspan="1">+</td>
              <td align="left" colspan="1" rowspan="1">+</td>
              <td align="left" colspan="1" rowspan="1">+</td>
              <td align="left" colspan="1" rowspan="1">+</td>
              <td align="left" colspan="1" rowspan="1">+</td>
              <td align="left" colspan="1" rowspan="1">-</td>
              <td align="left" colspan="1" rowspan="1">+</td>
              <td align="left" colspan="1" rowspan="1">-</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">DNS load opt.</td>
              <td align="left" colspan="1" rowspan="1">+</td>
              <td align="left" colspan="1" rowspan="1">+</td>
              <td align="left" colspan="1" rowspan="1">+</td>
              <td align="left" colspan="1" rowspan="1">+</td>
              <td align="left" colspan="1" rowspan="1">+</td>
              <td align="left" colspan="1" rowspan="1">+</td>
              <td align="left" colspan="1" rowspan="1">+</td>
              <td align="left" colspan="1" rowspan="1">+</td>
              <td align="left" colspan="1" rowspan="1">+</td>
              <td align="left" colspan="1" rowspan="1">+</td>
              <td align="left" colspan="1" rowspan="1">+</td>
              <td align="left" colspan="1" rowspan="1">+</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">Connect. opt.</td>
              <td align="left" colspan="1" rowspan="1">+</td>
              <td align="left" colspan="1" rowspan="1">+</td>
              <td align="left" colspan="1" rowspan="1">+</td>
              <td align="left" colspan="1" rowspan="1">+</td>
              <td align="left" colspan="1" rowspan="1">+</td>
              <td align="left" colspan="1" rowspan="1">+</td>
              <td align="left" colspan="1" rowspan="1">+</td>
              <td align="left" colspan="1" rowspan="1">*</td>
              <td align="left" colspan="1" rowspan="1">*</td>
              <td align="left" colspan="1" rowspan="1">+</td>
              <td align="left" colspan="1" rowspan="1">+</td>
              <td align="left" colspan="1" rowspan="1">+</td>
            </tr>
          </tbody>
        </table>
        <t pn="section-3.3-7">As a general conclusion, we should note if the network 
			must support applications using any of the following:</t>
        <ul spacing="normal" bare="false" empty="false" pn="section-3.3-8">
          <li pn="section-3.3-8.1">IPv4 literals</li>
          <li pn="section-3.3-8.2">non-IPv6-compliant APIs</li>
          <li pn="section-3.3-8.3">IPv4-only hosts or applications</li>
        </ul>
        <t pn="section-3.3-9">Then, only the scenarios with 464XLAT, a CLAT function, 
			or equivalent built-in local address synthesis features 
			will provide a valid solution. Furthermore, those scenarios will also 
			keep working if the DNS configuration is modified. Clearly, 
			depending on if DNS64 is used or not, DNSSEC may be broken for 
			those hosts doing DNSSEC validation.</t>
        <t pn="section-3.3-10">All the scenarios are good in terms of DNS load optimization, 
			and in the case of 464XLAT, it may provide an extra degree 
			of optimization. Finally, all of the scenarios are also good in terms of 
			connection establishment delay optimization. 
			However, in the case of 464XLAT without DNS64, the 
			usage of Happy Eyeballs v2 is required. This is not an issue as it is commonly available 
			in actual Operating Systems.</t>
      </section>
    </section>
    <section numbered="true" toc="include" removeInRFC="false" pn="section-4">
      <name slugifiedName="name-issues-to-be-considered">Issues to be Considered</name>
      <t pn="section-4-1">This section reviews the different issues that an operator needs 
			to consider for a NAT64/464XLAT deployment, as they may develop 
			specific decision points about how to approach that deployment.</t>
      <section numbered="true" toc="include" removeInRFC="false" pn="section-4.1">
        <name slugifiedName="name-dnssec-considerations-and-p">DNSSEC Considerations and Possible Approaches</name>
        <t pn="section-4.1-1">As indicated in the security considerations for DNS64 (see
	<xref target="RFC6147" sectionFormat="of" section="8" format="default" derivedLink="https://rfc-editor.org/rfc/rfc6147#section-8" derivedContent="RFC6147"/>) 
                        because DNS64 modifies DNS answers and DNSSEC is designed 
			to detect such modifications, DNS64 may break DNSSEC.</t>
        <t pn="section-4.1-2">When a device connected to an IPv6-only access network queries 
			for a domain name in a signed zone, by means of a recursive name server 
			that supports DNS64, the result may be a synthesized AAAA record. In that case, 
			if the recursive name server is configured to perform DNSSEC validation and has 
			a valid chain of trust to the zone in question, it will 
			cryptographically validate the negative response from the authoritative 
			name server. This is the expected DNS64 behavior: the recursive name 
			server actually "lies" to the client device. However, in most of the cases, 
			the client will not notice it, because generally, they don't perform 
			validation themselves; instead, they rely on the recursive name servers.</t>
        <t pn="section-4.1-3">In fact, a validating DNS64 resolver increases the confidence on 
			the synthetic AAAA, as it has validated that a non-synthetic AAAA 
			doesn't exist. However, if the client device is oblivious to NAT64 
			(the most common case) and performs DNSSEC validation on the AAAA record, 
			it will fail as it is a synthesized record.</t>
        <t pn="section-4.1-4">The best possible scenario from a DNSSEC point of view is when the 
			client requests that the DNS64 server perform the DNSSEC validation 
			(by setting the DNSSEC OK (DO) bit to 1 and the CD bit to 0). In this case, 
			the DNS64 server validates the data; thus, tampering may only happen 
			inside the DNS64 server (which is considered as a trusted part, 
			thus, its likelihood is low) or between the DNS64 server and the 
			client. All other parts of the system (including transmission 
			and caching) are protected by DNSSEC <xref target="Threat-DNS64" format="default" sectionFormat="of" derivedContent="Threat-DNS64"/>.</t>
        <t pn="section-4.1-5">Similarly, if the client querying the recursive name server is another 
			name server configured to use it as a forwarder, and it is performing DNSSEC 
			validation, it will also fail on any synthesized AAAA record.</t>
        <t pn="section-4.1-6">All those considerations are extensively covered in
	Sections
	<xref target="RFC6147" sectionFormat="bare" section="3" format="default" derivedLink="https://rfc-editor.org/rfc/rfc6147#section-3" derivedContent="RFC6147"/>,
	<xref target="RFC6147" sectionFormat="bare" section="5.5" format="default" derivedLink="https://rfc-editor.org/rfc/rfc6147#section-5.5" derivedContent="RFC6147"/>,
	and
	<xref target="RFC6147" sectionFormat="bare" section="6.2" format="default" derivedLink="https://rfc-editor.org/rfc/rfc6147#section-6.2" derivedContent="RFC6147"/> of
	<xref target="RFC6147" format="default" sectionFormat="of" derivedContent="RFC6147"/>.</t>
        <t pn="section-4.1-7">DNSSEC issues could be avoided if all the signed zones provide IPv6 connectivity together with the 
			corresponding AAAA records. However, this is out of the control 
			of the operator needing to deploy a NAT64 function. This has been 
			proposed already in <xref target="I-D.bp-v6ops-ipv6-ready-dns-dnssec" format="default" sectionFormat="of" derivedContent="DNS-DNSSEC"/>.</t>
        <t pn="section-4.1-8">An alternative solution, which was considered 
			while developing <xref target="RFC6147" format="default" sectionFormat="of" derivedContent="RFC6147"/>, is that the validators 
			will be DNS64 aware.  Then, they can perform the necessary discovery 
			and do their own synthesis. Since that was standardized sufficiently early in the validator deployment 
			curve, the expectation was that it would be okay to break certain DNSSEC assumptions 
			for networks that were stuck and really needing NAT64/DNS64.</t>
        <t pn="section-4.1-9">As already indicated, the scenarios in the previous section
			are simplified to look at the worst possible case and for the most perfect approach. 
		        A DNSSEC breach will not happen if the end host 
			is not doing validation.</t>
        <t pn="section-4.1-10">The figures in previous studies indicate that DNSSEC 
			broken by using DNS64 makes up about 1.7% 
			<xref target="About-DNS64" format="default" sectionFormat="of" derivedContent="About-DNS64"/> of the cases. However, we can't negate 
			that this may increase as DNSSEC deployment grows. 


			Consequently, a decision point for the operator must depend on 
			the following question: Do I really care about that percentage of cases and the impact on 
			my help desk, or can I provide alternative solutions for them?
			Some possible solutions may be exist, as depicted in the next sections.</t>
        <section anchor="nodns64" numbered="true" toc="include" removeInRFC="false" pn="section-4.1.1">
          <name slugifiedName="name-not-using-dns64">Not Using DNS64</name>
          <t pn="section-4.1.1-1">One solution is to avoid using DNS64, but as already 
			indicated, this is not possible in all the scenarios.</t>
          <t pn="section-4.1.1-2">The use of DNS64 is a key component for some networks, in order 
			to comply with traffic performance metrics, monitored by some 
			governmental bodies and other institutions <xref target="FCC" format="default" sectionFormat="of" derivedContent="FCC"/> <xref target="ARCEP" format="default" sectionFormat="of" derivedContent="ARCEP"/>.</t>
          <t pn="section-4.1.1-3">One drawback of not having a DNS64 on the network side 
			is that it's not possible to heuristically discover 
			NAT64 <xref target="RFC7050" format="default" sectionFormat="of" derivedContent="RFC7050"/>. 
			Consequently, an IPv6 host behind the IPv6-only access network will not 
			be able to detect the presence of the NAT64 function, nor learn the 
			IPv6 prefix to be used for it, unless it is configured by alternative 
			means.</t>
          <t pn="section-4.1.1-4">The discovery of the IPv6 prefix could be solved, 
			as described in <xref target="RFC7050" format="default" sectionFormat="of" derivedContent="RFC7050"/>, by means 
			of adding the relevant AAAA records to the ipv4only.arpa. zone 
			of the service-provider recursive servers, i.e., if 
			using the WKP (64:ff9b::/96):</t>
          <artwork align="center" name="" type="" alt="" pn="section-4.1.1-5">
ipv4only.arpa.  SOA     . . 0 0 0 0 0
ipv4only.arpa.  NS      .
ipv4only.arpa.  AAAA    64:ff9b::192.0.0.170
ipv4only.arpa.  AAAA    64:ff9b::192.0.0.171
ipv4only.arpa.  A       192.0.0.170
ipv4only.arpa.  A       192.0.0.171

</artwork>
          <t pn="section-4.1.1-6">An alternative option is the use of DNS RPZ 
			<xref target="I-D.vixie-dnsop-dns-rpz" format="default" sectionFormat="of" derivedContent="DNS-RPZ"/> or equivalent functionalities. Note 
			that this may impact DNSSEC if the zone is signed.</t>
          <t pn="section-4.1.1-7">Another alternative, only valid in environments with support from the Port Control Protocol (PCP) (for 
			both the hosts or CEs and for the service-provider network), is to follow 
			"Discovering NAT64 IPv6 Prefixes Using the Port Control Protocol (PCP)" <xref target="RFC7225" format="default" sectionFormat="of" derivedContent="RFC7225"/>.</t>
          <t pn="section-4.1.1-8">Other alternatives may be available in the future. All them are 
			extensively discussed in <xref target="RFC7051" format="default" sectionFormat="of" derivedContent="RFC7051"/>;
			however, due to the deployment evolution, many considerations
			from that document have changed. New options are being documented, such as using Router 
			Advertising <xref target="I-D.ietf-6man-ra-pref64" format="default" sectionFormat="of" derivedContent="PREF64"/> or DHCPv6 options 
			<xref target="I-D.li-intarea-nat64-prefix-dhcp-option" format="default" sectionFormat="of" derivedContent="DHCPv6-OPTIONS"/>.</t>
          <t pn="section-4.1.1-9">Simultaneous support of several of the 
			possible approaches is convenient and will ensure that clients with different 
			ways to configure the NAT64 prefix successfully obtain it. 
			This is also convenient even if DNS64 is being used.</t>
          <t pn="section-4.1.1-10">Also of special relevance to this section is <xref target="I-D.cheshire-sudn-ipv4only-dot-arpa" format="default" sectionFormat="of" derivedContent="IPV4ONLY-ARPA"/>.</t>
        </section>
        <section anchor="dns64-aware" numbered="true" toc="include" removeInRFC="false" pn="section-4.1.2">
          <name slugifiedName="name-dnssec-validator-aware-of-d">DNSSEC Validator Aware of DNS64</name>
          <t pn="section-4.1.2-1">In general, by default, DNS servers with DNS64 function will not 
			synthesize AAAA responses if the DO flag was set in the query.</t>
          <t pn="section-4.1.2-2">In this case, since only an A record is available, if a CLAT function 
			is present, the CLAT will, 
			as in the case of literal IPv4 addresses, keep that traffic 
			flow end to end as IPv4 so DNSSEC is not broken.</t>
          <t pn="section-4.1.2-3">However, this will not work if a CLAT function is not present 
			because the hosts will not be able to use IPv4 (which is the case for all the 
			scenarios without 464XLAT).</t>
        </section>
        <section anchor="stub" numbered="true" toc="include" removeInRFC="false" pn="section-4.1.3">
          <name slugifiedName="name-stub-validator">Stub Validator</name>
          <t pn="section-4.1.3-1">If the DO flag is set and the client device performs DNSSEC validation, 
			and the Checking Disabled (CD) flag is set for a query, the DNS64 
			recursive server will not synthesize AAAA responses.
                        In this case, 
			the client could perform the DNSSEC validation with the A record 
			and then synthesize the AAAA responses <xref target="RFC6052" format="default" sectionFormat="of" derivedContent="RFC6052"/>. 
			For that to be possible, the client must have learned  
			the NAT64 prefix beforehand using any of the available methods 
			(see <xref target="RFC7050" format="default" sectionFormat="of" derivedContent="RFC7050"/>, <xref target="RFC7225" format="default" sectionFormat="of" derivedContent="RFC7225"/>, 
			<xref target="I-D.ietf-6man-ra-pref64" format="default" sectionFormat="of" derivedContent="PREF64"/>, and <xref target="I-D.li-intarea-nat64-prefix-dhcp-option" format="default" sectionFormat="of" derivedContent="DHCPv6-OPTIONS"/>). 
			This allows the client device to avoid using the DNS64 function and still 
			use NAT64 even with DNSSEC.</t>
          <t pn="section-4.1.3-2">If the end host is IPv4 only, this will not work if a CLAT function is 
			not present (which is the case for all scenarios without 464XLAT).</t>
          <t pn="section-4.1.3-3">Instead of a CLAT, some devices or Operating Systems may implement
			an equivalent function by using Bump-in-the-Host <xref target="RFC6535" format="default" sectionFormat="of" derivedContent="RFC6535"/>
                        as part of Happy Eyeballs v2 (see 
			<xref target="RFC8305" sectionFormat="of" section="7.1" format="default" derivedLink="https://rfc-editor.org/rfc/rfc8305#section-7.1" derivedContent="RFC8305"/>). 
			In this case, the considerations in the above paragraphs are 
			also applicable.</t>
        </section>
        <section anchor="dns-proxy" numbered="true" toc="include" removeInRFC="false" pn="section-4.1.4">
          <name slugifiedName="name-clat-with-dns-proxy-and-val">CLAT with DNS Proxy and Validator</name>
          <t pn="section-4.1.4-1">If a CE includes CLAT support and also a DNS proxy, as indicated in 
			<xref target="RFC6877" sectionFormat="of" section="6.4" format="default" derivedLink="https://rfc-editor.org/rfc/rfc6877#section-6.4" derivedContent="RFC6877"/>, the CE could behave as a stub 
			validator on behalf of the client devices. Then, following the same approach 
			described in <xref target="stub" format="default" sectionFormat="of" derivedContent="Section 4.1.3"/>, the DNS proxy 
		        will actually "lie" to the client devices, which, in most cases, will 
			not be noticed unless they perform validation by themselves. Again, this 
			allows the client devices to avoid the use of
			the DNS64 function but to still use NAT64 
			with DNSSEC.</t>
          <t pn="section-4.1.4-2">Once more, this will not work without a CLAT function (which is the case for all scenarios without 464XLAT).</t>
        </section>
        <section anchor="acl-client" numbered="true" toc="include" removeInRFC="false" pn="section-4.1.5">
          <name slugifiedName="name-acl-of-clients">ACL of Clients</name>
          <t pn="section-4.1.5-1">In cases of dual-stack clients, AAAA queries typically take 
			preference over A queries. If DNS64 is enabled for those clients, 
			it will never get A records, even for IPv4-only servers.</t>
          <t pn="section-4.1.5-2">As a consequence, in cases where there are IPv4-only servers, 
			and those are located in the path before the NAT64 function, 
			the clients will not be able to reach them. If DNSSEC is being 
			used for all those flows, specific addresses or prefixes can be 
			left out of the DNS64 synthesis by means of Access Control Lists (ACLs).</t>
          <t pn="section-4.1.5-3">Once more, this will not work without a CLAT function (which is the case for all scenarios without 464XLAT).</t>
        </section>
        <section anchor="mapping-out" numbered="true" toc="include" removeInRFC="false" pn="section-4.1.6">
          <name slugifiedName="name-mapping-out-ipv4-addresses">Mapping Out IPv4 Addresses</name>
          <t pn="section-4.1.6-1">If there are well-known specific IPv4 addresses or prefixes 
			using DNSSEC, they can be mapped out of the DNS64 synthesis.</t>
          <t pn="section-4.1.6-2">Even if this is not related to DNSSEC, this "mapping-out" feature 
			is quite commonly used to ensure that 
			addresses <xref target="RFC1918" format="default" sectionFormat="of" derivedContent="RFC1918"/> (for example, used by LAN servers) are not synthesized to 
			AAAA.</t>
          <t pn="section-4.1.6-3">Once more, this will not work without a CLAT function (which is the case for all scenarios without 464XLAT).</t>
        </section>
      </section>
      <section numbered="true" toc="include" removeInRFC="false" pn="section-4.2">
        <name slugifiedName="name-dns64-and-reverse-mapping">DNS64 and Reverse Mapping</name>
        <t pn="section-4.2-1">When a client device using DNS64 tries to reverse-map a 
			synthesized IPv6 address, the name server responds with a CNAME record 
			that points the domain name used to reverse-map the 
			synthesized IPv6 address (the one under ip6.arpa) to the domain name 
			corresponding to the embedded IPv4 address (under in-addr.arpa).</t>
        <t pn="section-4.2-2">This is the expected behavior, so no issues need to be considered 
			regarding DNS reverse mapping.</t>
      </section>
      <section anchor="xlatwwdns64" numbered="true" toc="include" removeInRFC="false" pn="section-4.3">
        <name slugifiedName="name-using-464xlat-with-without-">Using 464XLAT with/without DNS64</name>
        <t pn="section-4.3-1">In case the client device is IPv6 only (either because the stack or 
			application is IPv6 only or because it is connected via an IPv6-only LAN) 
			and the remote server is IPv4 only (either because the stack is IPv4 only
			or because it is connected via an IPv4-only LAN), only NAT64 combined 
			with DNS64 will be able to provide access between both. Because DNS64 is 
			then required, DNSSEC validation will only be possible if the recursive 
			name server is validating the negative response from the authoritative 
			name server, and the client is not performing validation.</t>
        <t pn="section-4.3-2">Note that at this stage of the transition, it is not expected 
			that applications, devices, or Operating Systems are IPv6 only. It will 
			not be a sensible decision for a developer to work on that direction, 
			unless it is clear that the deployment scenario fully supports it.</t>
        <t pn="section-4.3-3">On the other hand, an end user or enterprise network may decide to 
			run IPv6 only in the LANs. In case there is any chance for 
			applications to be IPv6 only, the Operating System may be 
			responsible for either doing a local address synthesis or 
			setting up some kind of on-demand VPN (IPv4-in-IPv6), 
			which needs to be supported by that network. This may become 
			very common in enterprise networks, where "Unique IPv6 Prefix 
			per Host" <xref target="RFC8273" format="default" sectionFormat="of" derivedContent="RFC8273"/> is supported.</t>
        <t pn="section-4.3-4">However, when the client device is dual stack and/or connected in a 
			dual-stack LAN by means of a CLAT function (or has a built-in 
			CLAT function), DNS64 is an option.</t>
        <ol spacing="normal" type="1" start="1" pn="section-4.3-5">
          <li pn="section-4.3-5.1" derivedCounter="1.">With DNS64: If DNS64 is used, most of the IPv4 traffic 
				(except if using literal IPv4 addresses or non-IPv6-compliant APIs) 
				will not use the CLAT and will instead use the IPv6 path, so only one 
				translation will be done at the NAT64. This may break DNSSEC, 
				unless measures as described in the previous sections are taken.</li>
          <li pn="section-4.3-5.2" derivedCounter="2.">Without DNS64: If DNS64 is not used, all the IPv4 traffic 
				will make use of the CLAT, so two translations are required (NAT46 
				at the CLAT and NAT64 at the PLAT), which adds some overhead in 
				terms of the extra NAT46 translation. However, this avoids the AAAA 
				synthesis and consequently will never break DNSSEC.</li>
        </ol>
        <t pn="section-4.3-6">Note that the extra translation, when DNS64 is not used, takes place 
			at the CLAT, which means no extra overhead for the operator. 
			However, it adds potential extra delays to establish the connections and has no 
			perceptible impact for a CE in a broadband network, but it may have 
			some impact on a battery-powered device. The cost for a battery-powered 
			device is possibly comparable to the cost when the device is doing a 
			local address synthesis (see
	<xref target="RFC8305" sectionFormat="of" section="7.1" format="default" derivedLink="https://rfc-editor.org/rfc/rfc8305#section-7.1" derivedContent="RFC8305"/>).</t>
      </section>
      <section anchor="foreignDNS" numbered="true" toc="include" removeInRFC="false" pn="section-4.4">
        <name slugifiedName="name-foreign-dns">Foreign DNS</name>
        <t pn="section-4.4-1">Clients, devices, or applications in a service-provider network 
			may use DNS servers from other networks. This may be the case
			if individual applications use their own DNS server, the 
			Operating System itself or even the CE, or combinations of the above.</t>
        <t pn="section-4.4-2">Those "foreign" DNS servers may not support DNS64; as a consequence, 
			those scenarios that require a DNS64 may not work. 
			However, if a CLAT function is available, the considerations in 
			<xref target="xlatwwdns64" format="default" sectionFormat="of" derivedContent="Section 4.3"/> will apply.</t>
        <t pn="section-4.4-3">If the foreign DNS supports the DNS64 function, incorrect configuration parameters may be provided that, 
                           for example, cause WKP or NSP to become unmatched or result in a case such as the one described in <xref target="sprdns64" format="default" sectionFormat="of" derivedContent="Section 3.2.3"/>.</t>
        <t pn="section-4.4-4">Having a CLAT function, even if using foreign DNS 
			without a DNS64 function, ensures that everything will work, 
			so the CLAT must be considered to be an advantage despite
			user configuration errors.
                        As a result, all the 
			traffic will use a double translation (NAT46 at the CLAT 
			and NAT64 at the operator network), unless there is 
			support for EAM (<xref target="EAM" format="default" sectionFormat="of" derivedContent="Section 4.9"/>).</t>
        <t pn="section-4.4-5">An exception is the case where there is a CLAT function 
			at the CE that is not able to obtain the correct configuration 
			parameters (again, causing WKP or NSP to become unmatched).</t>
        <t pn="section-4.4-6">However, it needs to be emphasized that if there is no CLAT function 
			(which is the case for all scenarios without 464XLAT), an external DNS without DNS64 support 
			will disallow any access to IPv4-only destination networks and will 
			not guarantee the correct DNSSEC validation, 
			so it will behave as in <xref target="onlynat64" format="default" sectionFormat="of" derivedContent="Section 3.2.1"/>.</t>
        <t pn="section-4.4-7">In summary, the consequences of using
			foreign DNS depends on each specific case. However, in general, 
			if a CLAT function is present, most of the time there will not be any issues. 
			In the other cases, the access to IPv6-enabled services 
			is still guaranteed for IPv6-enabled hosts, but it is not guaranteed for IPv4-only hosts 
			nor is the access to IPv4-only services for any hosts in the network.</t>
        <t pn="section-4.4-8">The causes of "foreign DNS" could be classified in three main categories, 
			as depicted in the following subsections.</t>
        <section numbered="true" toc="include" removeInRFC="false" pn="section-4.4.1">
          <name slugifiedName="name-manual-configuration-of-dns">Manual Configuration of DNS</name>
          <t pn="section-4.4.1-1">It is becoming increasingly common that end users, or even devices 
			or applications, configure alternative DNS in their Operating Systems 
			and sometimes in CEs.</t>
        </section>
        <section anchor="dnspriv" numbered="true" toc="include" removeInRFC="false" pn="section-4.4.2">
          <name slugifiedName="name-dns-privacy-encryption-mech">DNS Privacy/Encryption Mechanisms</name>
          <t pn="section-4.4.2-1">Clients or applications may use mechanisms for 
			DNS privacy/encryption, such as DNS over TLS (DoT)
			<xref target="RFC7858" format="default" sectionFormat="of" derivedContent="RFC7858"/>, DNS over DTLS <xref target="RFC8094" format="default" sectionFormat="of" derivedContent="RFC8094"/>, 
			DNS queries over HTTPS (DoH) <xref target="RFC8484" format="default" sectionFormat="of" derivedContent="RFC8484"/>, or 
			DNS over QUIC (DoQ) <xref target="I-D.huitema-quic-dnsoquic" format="default" sectionFormat="of" derivedContent="QUIC-CONNECTIONS"/>. 
          </t>
          <t pn="section-4.4.2-2">Currently, those DNS privacy/encryption options are typically 
			provided by the applications, not the Operating System vendors. 
			At the time this document was written, the DoT and DoH standards 
			have declared DNS64 (and consequently NAT64) out of their scope, so 
			an application using them may break NAT64, unless a correctly configured 
			CLAT function is used.</t>
        </section>
        <section anchor="SplitDNS" numbered="true" toc="include" removeInRFC="false" pn="section-4.4.3">
          <name slugifiedName="name-split-dns-and-vpns">Split DNS and VPNs</name>
          <t pn="section-4.4.3-1">When networks or hosts use "split-DNS" (also called Split Horizon, 
			DNS views, or private DNS), the successful use of DNS64 is not guaranteed. 
			This case is analyzed in <xref target="RFC6950" sectionFormat="of" section="4" format="default" derivedLink="https://rfc-editor.org/rfc/rfc6950#section-4" derivedContent="RFC6950"/>.</t>
          <t pn="section-4.4.3-2">A similar situation may happen with VPNs that force all 
			the DNS queries through the VPN and ignore the operator DNS64 function.</t>
        </section>
      </section>
      <section anchor="WKP-NSP" numbered="true" toc="include" removeInRFC="false" pn="section-4.5">
        <name slugifiedName="name-well-known-prefix-wkp-vs-ne">Well-Known Prefix (WKP) vs. Network-Specific Prefix (NSP)</name>
        <t pn="section-4.5-1">Section 3 of "IPv6 Addressing of IPv4/IPv6 Translator" <xref target="RFC6052" format="default" sectionFormat="of" derivedContent="RFC6052"/> 
			discusses some considerations that are useful to an operator when deciding if 
			a WKP or an NSP should be used.</t>
        <t pn="section-4.5-2">Considering that discussion and other issues, we can 
			summarize the possible decision points to as follows:</t>
        <ol spacing="normal" type="a" start="1" pn="section-4.5-3">
          <li pn="section-4.5-3.1" derivedCounter="a.">The WKP <bcp14>MUST NOT</bcp14> be used to represent non-global IPv4 addresses. 
			If this is required because the network to be translated uses 
			non-global addresses, then an NSP is required.</li>
          <li pn="section-4.5-3.2" derivedCounter="b.">The WKP <bcp14>MAY</bcp14> appear in interdomain routing tables, if the operator 
			provides a NAT64 function to peers. However, in this case, special 
			considerations related to BGP filtering are required, and IPv4-embedded 
			IPv6 prefixes longer than the WKP <bcp14>MUST NOT</bcp14> be advertised (or accepted) 
			in BGP. An NSP may be a more appropriate option in those cases.</li>
          <li pn="section-4.5-3.3" derivedCounter="c.">If several NAT64s use the same prefix, packets from the same 
			flow may be routed to a different NAT64 in case of routing changes. 
			This can be avoided by either using different prefixes for each NAT64 
			function or ensuring that all the NAT64s coordinate their state. 
			Using an NSP could simplify that.</li>
          <li pn="section-4.5-3.4" derivedCounter="d.">If DNS64 is required and users, devices, Operating Systems, or 
			applications may change their DNS configuration and deliberately 
			choose an alternative DNS64 function, the alternative 
			DNS64 will most likely use the WKP by default. In that case, if an NSP is used by 
			the NAT64 function, clients will not be able to use the operator 
			NAT64 function, which will break connectivity to 
			IPv4-only destinations.</li>
        </ol>
      </section>
      <section anchor="literals" numbered="true" toc="include" removeInRFC="false" pn="section-4.6">
        <name slugifiedName="name-ipv4-literals-and-non-ipv6-">IPv4 Literals and Non-IPv6-Compliant APIs</name>
        <t pn="section-4.6-1">A host or application using literal IPv4 addresses or older APIs, 
			which aren't IPv6 compliant, behind a network with IPv6-only access 
			will not work unless any of the following alternatives are provided:</t>
        <ul spacing="normal" bare="false" empty="false" pn="section-4.6-2">
          <li pn="section-4.6-2.1">CLAT (or an equivalent function).</li>
          <li pn="section-4.6-2.2">Happy Eyeballs v2 (Section 7.1 of <xref target="RFC8305" format="default" sectionFormat="of" derivedContent="RFC8305"/>).</li>
          <li pn="section-4.6-2.3">Bump-in-the-Host <xref target="RFC6535" format="default" sectionFormat="of" derivedContent="RFC6535"/> with a DNS64 function.</li>
        </ul>
        <t pn="section-4.6-3">Those alternatives will solve the problem for an end host. 
			However, if the end host is providing "tethering" or an equivalent 
			service to other hosts, that needs to be considered as well.
                        In other 
			words, in a cellular network, these alternatives resolve the issue for 
			the UE itself, but this may not be the case for hosts connected via the tethering.</t>
        <t pn="section-4.6-4">Otherwise, the support of 464XLAT is the only valid and complete 
			approach to resolve this issue.</t>
      </section>
      <section anchor="ipv4-only" numbered="true" toc="include" removeInRFC="false" pn="section-4.7">
        <name slugifiedName="name-ipv4-only-hosts-or-applicat">IPv4-Only Hosts or Applications</name>
        <t pn="section-4.7-1">IPv4-only hosts or an application behind a network with IPv6-only access 
			will not work unless a CLAT function is present.</t>
        <t pn="section-4.7-2">464XLAT is the only valid approach to resolve this issue.</t>
      </section>
      <section anchor="CLAT" numbered="true" toc="include" removeInRFC="false" pn="section-4.8">
        <name slugifiedName="name-clat-translation-considerat">CLAT Translation Considerations</name>
        <t pn="section-4.8-1">As described in "IPv6 Prefix 
			Handling" (see <xref target="RFC6877" sectionFormat="of" section="6.3" format="default" derivedLink="https://rfc-editor.org/rfc/rfc6877#section-6.3" derivedContent="RFC6877"/>), if the CLAT function 
                        can be configured with a dedicated /64 prefix 
			for the NAT46 translation, then it will be possible to do a more  
			efficient stateless translation.</t>
        <t pn="section-4.8-2">Otherwise, if this dedicated prefix is not available, the CLAT function will 
			need to do a stateful translation, for example, perform stateful NAT44 
			for all the IPv4 LAN packets so they appear as coming from a single 
			IPv4 address; in turn, the CLAT function will perform a stateless translation to a single IPv6 
			address.</t>
        <t pn="section-4.8-3">A possible setup, in order to maximize the CLAT 
			performance, is to configure the dedicated translation prefix. This 
			can be easily achieved automatically, if the broadband CE or 
			end-user device is able to obtain a shorter prefix by means 
			of DHCPv6-PD <xref target="RFC8415" format="default" sectionFormat="of" derivedContent="RFC8415"/> or other alternatives. 
			The CE can then use a specific /64 for the translation. This is also 
			possible when broadband is provided by a cellular access.</t>
        <t pn="section-4.8-4">The above recommendation is often not possible for cellular networks, 
			when connecting smartphones (as UEs): generally they don't use DHCPv6-PD 
			<xref target="RFC8415" format="default" sectionFormat="of" derivedContent="RFC8415"/>. Instead, a single /64 is provided for 
			each Packet Data Protocol (PDP) context, and prefix sharing <xref target="RFC6877" format="default" sectionFormat="of" derivedContent="RFC6877"/> is used. 
			In this case, the UEs typically have a build-in CLAT function that 
			is performing a stateful NAT44 translation before the stateless NAT46.</t>
      </section>
      <section anchor="EAM" numbered="true" toc="include" removeInRFC="false" pn="section-4.9">
        <name slugifiedName="name-eam-considerations">EAM Considerations</name>
        <t pn="section-4.9-1">"Explicit Address Mappings for Stateless IP/ICMP Translation" 
			<xref target="RFC7757" format="default" sectionFormat="of" derivedContent="RFC7757"/> provides a way to configure explicit 
			mappings between IPv4 and IPv6 prefixes of any length. 
			When this is used, for example, in a CLAT function, it may provide a 
			simple mechanism in order to avoid traffic flows between 
			IPv4-only nodes or applications and dual-stack destinations 
			to be translated twice (NAT46 and NAT64), by creating mapping 
			entries with the Global Unicast Address (GUA) of the IPv6-reachable destination. 
			This optimization of NAT64 usage is very useful in 
			many scenarios, including Content Delivery Networks (CDNs) and caches, as described in 
			<xref target="I-D.palet-v6ops-464xlat-opt-cdn-caches" format="default" sectionFormat="of" derivedContent="OPT-464XLAT"/>.</t>
        <t pn="section-4.9-2">In addition, it may also provide a way for IPv4-only 
			nodes or applications to communicate with IPv6-only destinations.</t>
      </section>
      <section anchor="incoming" numbered="true" toc="include" removeInRFC="false" pn="section-4.10">
        <name slugifiedName="name-incoming-connections">Incoming Connections</name>
        <t pn="section-4.10-1">The use of NAT64, in principle, disallows IPv4 incoming connections, 
			which may still be needed for IPv4-only peer-to-peer applications. 
			However, there are several alternatives that resolve this issue:</t>
        <ol spacing="normal" type="a" start="1" pn="section-4.10-2">
          <li pn="section-4.10-2.1" derivedCounter="a.">Session Traversal Utilities for NAT (STUN) <xref target="RFC5389" format="default" sectionFormat="of" derivedContent="RFC5389"/>, Traversal Using Relays around NAT (TURN) <xref target="RFC5766" format="default" sectionFormat="of" derivedContent="RFC5766"/>, and 
			Interactive Connectivity Establishment (ICE) <xref target="RFC8445" format="default" sectionFormat="of" derivedContent="RFC8445"/> are commonly used by peer-to-peer 
			applications in order to allow incoming connections with IPv4 NAT. In the case of NAT64, they
                        work as well.

          </li>
          <li pn="section-4.10-2.2" derivedCounter="b.">The Port Control Protocol (PCP) <xref target="RFC6887" format="default" sectionFormat="of" derivedContent="RFC6887"/> allows a host to control how incoming 
			IPv4 and IPv6 packets are translated and forwarded. A NAT64 may implement 
			PCP to allow this service.</li>
          <li pn="section-4.10-2.3" derivedCounter="c.">EAM <xref target="RFC7757" format="default" sectionFormat="of" derivedContent="RFC7757"/> may also be used in order to configure 
			explicit mappings for customers that require them. This is used, for example, 
			by Stateless IP/ICMP Translation for IPv6 Data Center Environments (SIIT-DC) <xref target="RFC7755" format="default" sectionFormat="of" derivedContent="RFC7755"/> and SIIT-DC Dual Translation Mode (SIIT-DC-DTM) <xref target="RFC7756" format="default" sectionFormat="of" derivedContent="RFC7756"/>.</li>
        </ol>
      </section>
    </section>
    <section numbered="true" toc="include" removeInRFC="false" pn="section-5">
      <name slugifiedName="name-summary-of-deployment-recom">Summary of Deployment Recommendations for NAT64/464XLAT</name>
      <t pn="section-5-1">It has been demonstrated that NAT64/464XLAT is a valid choice in several 
			scenarios (IPv6-IPv4 and IPv4-IPv6-IPv4), being the predominant mechanism 
			in the majority of the cellular networks, which account for hundreds 
			of millions of users <xref target="ISOC" format="default" sectionFormat="of" derivedContent="ISOC"/>. 
			NAT64/464XLAT offer different choices of deployment, 
			depending on each network case, needs, and requirements. Despite that, 
			this document is not an explicit recommendation for using this choice 
			versus other IPv4aaS transition mechanisms. Instead, this document 
			is a guide that facilitates evaluating a possible implementation 
			of NAT64/464XLAT and key decision points about specific design 
			considerations for its deployment.</t>
      <t pn="section-5-2">Depending on the specific requirements of each deployment case, 
			DNS64 may be a required function, while in other cases, the 
			adverse effects may be counterproductive. 
			Similarly, in some cases, a NAT64 function, together with a DNS64 function, 
			may be a valid solution when there is a certainty that IPv4-only hosts 
			or applications do not need to be supported
			(see Sections <xref target="literals" format="counter" sectionFormat="of" derivedContent="4.6"/> and
        <xref target="ipv4-only" format="counter" sectionFormat="of" derivedContent="4.7"/>). However, in other cases (i.e., IPv4-only devices 
			or applications that need to be supported), the limitations of NAT64/DNS64
			may indicate that the operator needs to look into 464XLAT as a more complete solution.</t>
      <t pn="section-5-3">For broadband-managed networks (where the CE is provided or 
			suggested/supported by the operator), in order to fully support 
			the actual user's needs (i.e., IPv4-only devices and applications and the 
			usage of IPv4 literals and non-IPv6-compliant APIs), the 464XLAT scenario 
			should be considered. In that case, it must support a CLAT function.</t>
      <t pn="section-5-4">If the operator provides DNS services, they may support a DNS64 function to avoid, as much as possible, breaking DNSSEC.  This will also increase performance, 
			by reducing the double translation for all the IPv4 traffic.  In this case, if the DNS service 
			is offering DNSSEC validation, then it must be in such a way that it is 
			aware of the DNS64. This is considered the simpler and safer approach, 
			and it may be combined with other recommendations described 
			in this document:</t>
      <ul spacing="normal" bare="false" empty="false" pn="section-5-5">
        <li pn="section-5-5.1">DNS infrastructure <bcp14>MUST</bcp14> be aware of DNS64 (<xref target="dns64-aware" format="default" sectionFormat="of" derivedContent="Section 4.1.2"/>).</li>
        <li pn="section-5-5.2">Devices running CLAT <bcp14>SHOULD</bcp14> follow the indications in "Stub Validator"
			(see <xref target="stub" format="default" sectionFormat="of" derivedContent="Section 4.1.3"/>). However, this may be out of the 
			control of the operator.</li>
        <li pn="section-5-5.3">CEs <bcp14>SHOULD</bcp14> include a DNS proxy and validator (<xref target="dns-proxy" format="default" sectionFormat="of" derivedContent="Section 4.1.4"/>).</li>
        <li pn="section-5-5.4">"ACL of Clients" (see <xref target="acl-client" format="default" sectionFormat="of" derivedContent="Section 4.1.5"/>) and "Mapping Out IPv4 Addresses"
			(see <xref target="mapping-out" format="default" sectionFormat="of" derivedContent="Section 4.1.6"/>) <bcp14>MAY</bcp14> be considered by 
			operators, depending on their own infrastructure.</li>
      </ul>
      <t pn="section-5-6">This "increased performance" approach has the disadvantage of 
			potentially breaking DNSSEC for a small percentage of validating 
			end hosts versus the small impact of a double translation taking place 
			in the CE. If CE performance is not an issue, which is the most frequent 
			case, then a much safer approach is to not use DNS64 at all, 
			and consequently, ensure that all the IPv4 traffic 
			is translated at the CLAT (<xref target="xlatwwdns64" format="default" sectionFormat="of" derivedContent="Section 4.3"/>).</t>
      <t pn="section-5-7">If DNS64 is not used, at least one of the alternatives 
			described in <xref target="nodns64" format="default" sectionFormat="of" derivedContent="Section 4.1.1"/> must be followed in order 
			to learn the NAT64 prefix.</t>
      <t pn="section-5-8">The operator needs to consider that if the DNS configuration is
			modified (see Sections <xref target="foreignDNS" format="counter" sectionFormat="of" derivedContent="4.4"/>, <xref target="dnspriv" format="counter" sectionFormat="of" derivedContent="4.4.2"/>, and
			<xref target="SplitDNS" format="counter" sectionFormat="of" derivedContent="4.4.3"/>), which most likely 
			cannot be avoided, a foreign non-DNS64 could be used instead of configuring a DNS64. In a scenario with only a 
			NAT64 function, an IPv4-only remote host will no longer be accessible. 
			Instead, it will continue to work in the case of 464XLAT.</t>
      <t pn="section-5-9">Similar considerations need to be made regarding the usage of 
   a NAT64 WKP vs. NSP (<xref target="WKP-NSP" format="default" sectionFormat="of" derivedContent="Section 4.5"/>), as they must match 
			the configuration of DNS64. When using foreign DNS, 
			they may not match. 
			If there is a CLAT and the configured foreign DNS is not a DNS64, the 
			network will keep working only if other means of learning the NAT64 
			prefix are available.</t>
      <t pn="section-5-10">For broadband networks, as described in <xref target="CLAT" format="default" sectionFormat="of" derivedContent="Section 4.8"/>,  
			the CEs supporting a CLAT function <bcp14>SHOULD</bcp14>
			support DHCPv6-PD <xref target="RFC8415" format="default" sectionFormat="of" derivedContent="RFC8415"/> or alternative means for 
			configuring a shorter prefix. The CE <bcp14>SHOULD</bcp14> internally reserve 
			one /64 for the stateless NAT46 translation. The operator must ensure 
			that the customers are allocated prefixes shorter than /64 in order 
			to support this optimization. One way or another, this is not 
			impacting the performance of the operator network.</t>
      <t pn="section-5-11">Operators may follow "Deployment Considerations" (Section 7 of <xref target="RFC6877" format="default" sectionFormat="of" derivedContent="RFC6877"/>) for suggestions on how to 
			take advantage of traffic-engineering requirements.</t>
      <t pn="section-5-12">For cellular networks, the considerations regarding DNSSEC 
			may appear to be out of scope because UEs' Operating Systems 
			commonly don't support DNSSEC. However, applications running on them 
			may, or it may be an Operating System "built-in" support in the 
			future. Moreover, if those devices offer tethering, 
			other client devices behind the UE may be doing the validation; 
			hence, proper DNSSEC support by the operator network is relevant.</t>
      <t pn="section-5-13">Furthermore, cellular networks supporting 464XLAT 
			<xref target="RFC6877" format="default" sectionFormat="of" derivedContent="RFC6877"/> and "Discovery of the IPv6 Prefix Used for 
			IPv6 Address Synthesis" <xref target="RFC7050" format="default" sectionFormat="of" derivedContent="RFC7050"/> allow a progressive 
			IPv6 deployment, with a single Access Point Name (APN) supporting all types of PDP context 
			(IPv4, IPv6, and IPv4v6). This approach allows the network to 
			automatically serve every possible combination of UEs.</t>
      <t pn="section-5-14">If the operator chooses to provide validation for the DNS64 
			prefix discovery, it must follow the advice from "Validation of Discovered Pref64::/n" (see
			<xref target="RFC7050" sectionFormat="of" section="3.1" format="default" derivedLink="https://rfc-editor.org/rfc/rfc7050#section-3.1" derivedContent="RFC7050"/>).</t>
      <t pn="section-5-15">One last consideration is that many networks may have a mix of different 
			complex scenarios at the same time; for example, customers that require 464XLAT
                        and those that don't, 
			customers that require DNS64 and those that don't, etc. In 
			general, the different issues and the approaches described in this document 
			can be implemented at the same time for different customers or parts of 
			the network. That mix of approaches doesn't present any problem or 
			incompatibility; they work well together as a matter of 
			appropriate and differentiated provisioning. In fact, the NAT64/464XLAT 
			approach facilitates an operator offering both cellular and broadband 
			services to have a single IPv4aaS for both networks while differentiating 
			the deployment key decisions to optimize each case. It's even possible to
			use hybrid CEs that have a main broadband access link and a backup via 
			the cellular network.</t>
      <t pn="section-5-16">In an ideal world, we could safely use DNS64 if the approach 
			proposed in <xref target="I-D.bp-v6ops-ipv6-ready-dns-dnssec" format="default" sectionFormat="of" derivedContent="DNS-DNSSEC"/> 
			were followed, avoiding the cases where DNSSEC may be broken. 
			However, this will not solve the issues related to DNS privacy 
			and split DNS.</t>
      <t pn="section-5-17">The only 100% safe solution that also resolves all the issues
			is, in addition to having a CLAT function, not using a DNS64 but 
			instead making sure that the hosts have a built-in address 
			synthesis feature. Operators could manage to provide CEs with 
			the CLAT function; however, the built-in address 
			synthesis feature is out of their control. If the synthesis is 
			provided by either the Operating System (via its DNS resolver API) 
			or the application (via its own DNS resolver) in such way that 
			the prefix used for the NAT64 function is reachable for the host, 
			the problem goes away.</t>
      <t pn="section-5-18">Whenever feasible, using EAM <xref target="RFC7757" format="default" sectionFormat="of" derivedContent="RFC7757"/> 
			as indicated in <xref target="EAM" format="default" sectionFormat="of" derivedContent="Section 4.9"/> provides a very relevant 
			optimization, avoiding double translations.</t>
      <t pn="section-5-19">Applications that require incoming connections typically 
			provide a means for that already. However, PCP and EAM, as indicated in 
			<xref target="incoming" format="default" sectionFormat="of" derivedContent="Section 4.10"/>, are valid alternatives, even for 
			creating explicit mappings for customers that require them.</t>
    </section>
    <section numbered="true" toc="include" removeInRFC="false" pn="section-6">
      <name slugifiedName="name-deployment-of-464xlat-nat64">Deployment of 464XLAT/NAT64 in Enterprise Networks</name>
      <t pn="section-6-1">The recommendations in this document can also be used in 
			enterprise networks, campuses, and other similar scenarios (including 
			managed end-user networks).</t>
      <t pn="section-6-2">This includes scenarios where the NAT64 function 
			(and DNS64 function, if available) are under 
			the control of that network (or can be configured manually according 
			to that network's specific requirements), and there is a need  
			to provide IPv6-only access to any part of that 
			network, or it is IPv6 only connected to third-party networks.</t>
      <t pn="section-6-3">An example is the IETF meeting network itself, 
			where both NAT64 and DNS64 functions are provided, presenting in this case 
			the same issues as per <xref target="spnatdns64" format="default" sectionFormat="of" derivedContent="Section 3.1.1"/>. If there 
			is a CLAT function in the IETF network, then there is no 
			need to use DNS64, and it falls under the considerations of 
			<xref target="xlat-dns64" format="default" sectionFormat="of" derivedContent="Section 3.1.3"/>. Both scenarios have been tested and 
			verified already in the IETF network.</t>
      <t pn="section-6-4">The following figures represent a few of the possible 
			scenarios.</t>
      <t pn="section-6-5"><xref target="enterprise-nat64-dns64" format="default" sectionFormat="of" derivedContent="Figure 13"/> provides an example of an 
			IPv6-only enterprise network connected with a dual stack to 
			the Internet using local NAT64 and DNS64 functions.</t>
      <figure anchor="enterprise-nat64-dns64" align="left" suppress-title="false" pn="figure-13">
        <name slugifiedName="name-ipv6-only-enterprise-with-n">IPv6-Only Enterprise with NAT64 and DNS64</name>
        <artwork align="center" name="" type="" alt="" pn="section-6-6.1">
+----------------------------------+
|       Enterprise Network         |
| +----------+        +----------+ |       +----------+
| |   IPv6-  |        |  NAT64   | |       |   IPv4   |
| |   only   +--------+    +     | +-------+     +    |
| |   LANs   |        |  DNS64   | |       |   IPv6   |
| +----------+        +----------+ |       +----------+
+----------------------------------+</artwork>
      </figure>
      <t pn="section-6-7"><xref target="enterprise-464xlat" format="default" sectionFormat="of" derivedContent="Figure 14"/> provides an example of a 
			DS enterprise network connected with DS 
			to the Internet using a CLAT function, without a DNS64 function.</t>
      <figure anchor="enterprise-464xlat" align="left" suppress-title="false" pn="figure-14">
        <name slugifiedName="name-ds-enterprise-with-clat-ds-">DS Enterprise with CLAT, DS Internet, without DNS64</name>
        <artwork align="center" name="" type="" alt="" pn="section-6-8.1">
+----------------------------------+
|       Enterprise Network         |
| +----------+        +----------+ |       +----------+
| |   IPv6   |        |          | |       |   IPv4   |
| |     +    +--------+  NAT64   | +-------+     +    |
| |   CLAT   |        |          | |       |   IPv6   |
| +----------+        +----------+ |       +----------+
+----------------------------------+</artwork>
      </figure>
      <t pn="section-6-9">Finally, <xref target="enterprise-own-clat" format="default" sectionFormat="of" derivedContent="Figure 15"/> provides an example of an 
			IPv6-only provider with a NAT64 function, and a DS enterprise 
			network by means of their own CLAT function, without a DNS64 function.</t>
      <figure anchor="enterprise-own-clat" align="left" suppress-title="false" pn="figure-15">
        <name slugifiedName="name-ds-enterprise-with-clat-and">DS Enterprise with CLAT and IPv6-Only Access, without DNS64</name>
        <artwork align="center" name="" type="" alt="" pn="section-6-10.1">
+----------------------------------+
|       Enterprise Network         |
| +----------+        +----------+ |        +----------+
| |   IPv6   |        |          | |  IPv6  |          |
| |     +    +--------+   CLAT   | +--------+   NAT64  |
| |   IPv4   |        |          | |  only  |          |
| +----------+        +----------+ |        +----------+
+----------------------------------+</artwork>
      </figure>
    </section>
    <section numbered="true" toc="include" removeInRFC="false" pn="section-7">
      <name slugifiedName="name-security-considerations">Security Considerations</name>
      <t pn="section-7-1">This document does not have new specific security considerations beyond 
			those already reported by each of the documents cited. For example, DNS64 
			<xref target="RFC6147" format="default" sectionFormat="of" derivedContent="RFC6147"/> already describes the DNSSEC issues.</t>
      <t pn="section-7-2">As already described in <xref target="foreignDNS" format="default" sectionFormat="of" derivedContent="Section 4.4"/>, note that there 
			may be undesirable interactions, especially if using VPNs or DNS privacy, 
			which may impact the correct performance of DNS64/NAT64.</t>
      <t pn="section-7-3">Note that the use of a DNS64 function has
			privacy considerations that are equivalent to regular DNS, and they are located 
			in either the service provider or an external service provider.</t>
    </section>
    <section numbered="true" toc="include" removeInRFC="false" pn="section-8">
      <name slugifiedName="name-iana-considerations">IANA Considerations</name>
      <t pn="section-8-1"> This document has no IANA actions.</t>
    </section>
  </middle>
  <back>
    <displayreference target="I-D.ietf-6man-ra-pref64" to="PREF64"/>
    <displayreference target="I-D.huitema-quic-dnsoquic" to="QUIC-CONNECTIONS"/>
    <displayreference target="I-D.lmhp-v6ops-transition-comparison" to="IPv6-TRANSITION"/>
    <displayreference target="I-D.bp-v6ops-ipv6-ready-dns-dnssec" to="DNS-DNSSEC"/>
    <displayreference target="I-D.palet-v6ops-464xlat-opt-cdn-caches" to="OPT-464XLAT"/>
    <displayreference target="I-D.vixie-dnsop-dns-rpz" to="DNS-RPZ"/>
    <displayreference target="I-D.li-intarea-nat64-prefix-dhcp-option" to="DHCPv6-OPTIONS"/>
    <displayreference target="I-D.cheshire-sudn-ipv4only-dot-arpa" to="IPV4ONLY-ARPA"/>
    <references pn="section-9">
      <name slugifiedName="name-references">References</name>
      <references pn="section-9.1">
        <name slugifiedName="name-normative-references">Normative References</name>
        <reference anchor="RFC1918" target="https://www.rfc-editor.org/info/rfc1918" quoteTitle="true" derivedAnchor="RFC1918">
          <front>
            <title>Address Allocation for Private Internets</title>
            <author initials="Y." surname="Rekhter" fullname="Y. Rekhter">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="B." surname="Moskowitz" fullname="B. Moskowitz">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="D." surname="Karrenberg" fullname="D. Karrenberg">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="G. J." surname="de Groot" fullname="G. J. de Groot">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="E." surname="Lear" fullname="E. Lear">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="1996" month="February"/>
            <abstract>
              <t>This document describes address allocation for private internets.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t>
            </abstract>
          </front>
          <seriesInfo name="BCP" value="5"/>
          <seriesInfo name="RFC" value="1918"/>
          <seriesInfo name="DOI" value="10.17487/RFC1918"/>
        </reference>
        <reference anchor="RFC2119" target="https://www.rfc-editor.org/info/rfc2119" quoteTitle="true" derivedAnchor="RFC2119">
          <front>
            <title>Key words for use in RFCs to Indicate Requirement Levels</title>
            <author initials="S." surname="Bradner" fullname="S. Bradner">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="1997" month="March"/>
            <abstract>
              <t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t>
            </abstract>
          </front>
          <seriesInfo name="BCP" value="14"/>
          <seriesInfo name="RFC" value="2119"/>
          <seriesInfo name="DOI" value="10.17487/RFC2119"/>
        </reference>
        <reference anchor="RFC5389" target="https://www.rfc-editor.org/info/rfc5389" quoteTitle="true" derivedAnchor="RFC5389">
          <front>
            <title>Session Traversal Utilities for NAT (STUN)</title>
            <author initials="J." surname="Rosenberg" fullname="J. Rosenberg">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="R." surname="Mahy" fullname="R. Mahy">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="P." surname="Matthews" fullname="P. Matthews">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="D." surname="Wing" fullname="D. Wing">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2008" month="October"/>
            <abstract>
              <t>Session Traversal Utilities for NAT (STUN) is a protocol that serves as a tool for other protocols in dealing with Network Address Translator (NAT) traversal.  It can be used by an endpoint to determine the IP address and port allocated to it by a NAT.  It can also be used to check connectivity between two endpoints, and as a keep-alive protocol to maintain NAT bindings.  STUN works with many existing NATs, and does not require any special behavior from them.</t>
              <t>STUN is not a NAT traversal solution by itself.  Rather, it is a tool to be used in the context of a NAT traversal solution.  This is an important change from the previous version of this specification (RFC 3489), which presented STUN as a complete solution.</t>
              <t>This document obsoletes RFC 3489.  [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="5389"/>
          <seriesInfo name="DOI" value="10.17487/RFC5389"/>
        </reference>
        <reference anchor="RFC5625" target="https://www.rfc-editor.org/info/rfc5625" quoteTitle="true" derivedAnchor="RFC5625">
          <front>
            <title>DNS Proxy Implementation Guidelines</title>
            <author initials="R." surname="Bellis" fullname="R. Bellis">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2009" month="August"/>
            <abstract>
              <t>This document provides guidelines for the implementation of DNS proxies, as found in broadband gateways and other similar network devices.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t>
            </abstract>
          </front>
          <seriesInfo name="BCP" value="152"/>
          <seriesInfo name="RFC" value="5625"/>
          <seriesInfo name="DOI" value="10.17487/RFC5625"/>
        </reference>
        <reference anchor="RFC5766" target="https://www.rfc-editor.org/info/rfc5766" quoteTitle="true" derivedAnchor="RFC5766">
          <front>
            <title>Traversal Using Relays around NAT (TURN): Relay Extensions to Session Traversal Utilities for NAT (STUN)</title>
            <author initials="R." surname="Mahy" fullname="R. Mahy">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="P." surname="Matthews" fullname="P. Matthews">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="J." surname="Rosenberg" fullname="J. Rosenberg">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2010" month="April"/>
            <abstract>
              <t>If a host is located behind a NAT, then in certain situations it can be impossible for that host to communicate directly with other hosts (peers).  In these situations, it is necessary for the host to use the services of an intermediate node that acts as a communication relay.  This specification defines a protocol, called TURN (Traversal Using Relays around NAT), that allows the host to control the operation of the relay and to exchange packets with its peers using the relay.  TURN differs from some other relay control protocols in that it allows a client to communicate with multiple peers using a single relay address.  [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="5766"/>
          <seriesInfo name="DOI" value="10.17487/RFC5766"/>
        </reference>
        <reference anchor="RFC6052" target="https://www.rfc-editor.org/info/rfc6052" quoteTitle="true" derivedAnchor="RFC6052">
          <front>
            <title>IPv6 Addressing of IPv4/IPv6 Translators</title>
            <author initials="C." surname="Bao" fullname="C. Bao">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="C." surname="Huitema" fullname="C. Huitema">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="M." surname="Bagnulo" fullname="M. Bagnulo">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="M." surname="Boucadair" fullname="M. Boucadair">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="X." surname="Li" fullname="X. Li">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2010" month="October"/>
            <abstract>
              <t>This document discusses the algorithmic translation of an IPv6 address to a corresponding IPv4 address, and vice versa, using only statically configured information.  It defines a well-known prefix for use in algorithmic translations, while allowing organizations to also use network-specific prefixes when appropriate.  Algorithmic translation is used in IPv4/IPv6 translators, as well as other types of proxies and gateways (e.g., for DNS) used in IPv4/IPv6 scenarios. [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="6052"/>
          <seriesInfo name="DOI" value="10.17487/RFC6052"/>
        </reference>
        <reference anchor="RFC6144" target="https://www.rfc-editor.org/info/rfc6144" quoteTitle="true" derivedAnchor="RFC6144">
          <front>
            <title>Framework for IPv4/IPv6 Translation</title>
            <author initials="F." surname="Baker" fullname="F. Baker">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="X." surname="Li" fullname="X. Li">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="C." surname="Bao" fullname="C. Bao">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="K." surname="Yin" fullname="K. Yin">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2011" month="April"/>
            <abstract>
              <t>This note describes a framework for IPv4/IPv6 translation.  This is in the context of replacing Network Address Translation - Protocol Translation (NAT-PT), which was deprecated by RFC 4966, and to enable networks to have IPv4 and IPv6 coexist in a somewhat rational manner while transitioning to an IPv6 network.  This document is not an Internet Standards Track specification; it is published for informational purposes.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="6144"/>
          <seriesInfo name="DOI" value="10.17487/RFC6144"/>
        </reference>
        <reference anchor="RFC6146" target="https://www.rfc-editor.org/info/rfc6146" quoteTitle="true" derivedAnchor="RFC6146">
          <front>
            <title>Stateful NAT64: Network Address and Protocol Translation from IPv6 Clients to IPv4 Servers</title>
            <author initials="M." surname="Bagnulo" fullname="M. Bagnulo">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="P." surname="Matthews" fullname="P. Matthews">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="I." surname="van Beijnum" fullname="I. van Beijnum">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2011" month="April"/>
          </front>
          <seriesInfo name="RFC" value="6146"/>
          <seriesInfo name="DOI" value="10.17487/RFC6146"/>
        </reference>
        <reference anchor="RFC6147" target="https://www.rfc-editor.org/info/rfc6147" quoteTitle="true" derivedAnchor="RFC6147">
          <front>
            <title>DNS64: DNS Extensions for Network Address Translation from IPv6 Clients to IPv4 Servers</title>
            <author initials="M." surname="Bagnulo" fullname="M. Bagnulo">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="A." surname="Sullivan" fullname="A. Sullivan">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="P." surname="Matthews" fullname="P. Matthews">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="I." surname="van Beijnum" fullname="I. van Beijnum">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2011" month="April"/>
            <abstract>
              <t>DNS64 is a mechanism for synthesizing AAAA records from A records. DNS64 is used with an IPv6/IPv4 translator to enable client-server communication between an IPv6-only client and an IPv4-only server, without requiring any changes to either the IPv6 or the IPv4 node, for the class of applications that work through NATs.  This document specifies DNS64, and provides suggestions on how it should be deployed in conjunction with IPv6/IPv4 translators.  [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="6147"/>
          <seriesInfo name="DOI" value="10.17487/RFC6147"/>
        </reference>
        <reference anchor="RFC6535" target="https://www.rfc-editor.org/info/rfc6535" quoteTitle="true" derivedAnchor="RFC6535">
          <front>
            <title>Dual-Stack Hosts Using "Bump-in-the-Host" (BIH)</title>
            <author initials="B." surname="Huang" fullname="B. Huang">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="H." surname="Deng" fullname="H. Deng">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="T." surname="Savolainen" fullname="T. Savolainen">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2012" month="February"/>
            <abstract>
              <t>Bump-in-the-Host (BIH) is a host-based IPv4 to IPv6 protocol translation mechanism that allows a class of IPv4-only applications that work through NATs to communicate with IPv6-only peers.  The host on which applications are running may be connected to IPv6-only or dual-stack access networks.  BIH hides IPv6 and makes the IPv4-only applications think they are talking with IPv4 peers by local synthesis of IPv4 addresses.  This document obsoletes RFC 2767 and RFC 3338.  [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="6535"/>
          <seriesInfo name="DOI" value="10.17487/RFC6535"/>
        </reference>
        <reference anchor="RFC6877" target="https://www.rfc-editor.org/info/rfc6877" quoteTitle="true" derivedAnchor="RFC6877">
          <front>
            <title>464XLAT: Combination of Stateful and Stateless Translation</title>
            <author initials="M." surname="Mawatari" fullname="M. Mawatari">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="M." surname="Kawashima" fullname="M. Kawashima">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="C." surname="Byrne" fullname="C. Byrne">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2013" month="April"/>
            <abstract>
              <t>This document describes an architecture (464XLAT) for providing limited IPv4 connectivity across an IPv6-only network by combining existing and well-known stateful protocol translation (as described in RFC 6146) in the core and stateless protocol translation (as described in RFC 6145) at the edge. 464XLAT is a simple and scalable technique to quickly deploy limited IPv4 access service to IPv6-only edge networks without encapsulation.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="6877"/>
          <seriesInfo name="DOI" value="10.17487/RFC6877"/>
        </reference>
        <reference anchor="RFC6887" target="https://www.rfc-editor.org/info/rfc6887" quoteTitle="true" derivedAnchor="RFC6887">
          <front>
            <title>Port Control Protocol (PCP)</title>
            <author initials="D." surname="Wing" fullname="D. Wing" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="S." surname="Cheshire" fullname="S. Cheshire">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="M." surname="Boucadair" fullname="M. Boucadair">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="R." surname="Penno" fullname="R. Penno">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="P." surname="Selkirk" fullname="P. Selkirk">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2013" month="April"/>
            <abstract>
              <t>The Port Control Protocol allows an IPv6 or IPv4 host to control how incoming IPv6 or IPv4 packets are translated and forwarded by a Network Address Translator (NAT) or simple firewall, and also allows a host to optimize its outgoing NAT keepalive messages.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="6887"/>
          <seriesInfo name="DOI" value="10.17487/RFC6887"/>
        </reference>
        <reference anchor="RFC7050" target="https://www.rfc-editor.org/info/rfc7050" quoteTitle="true" derivedAnchor="RFC7050">
          <front>
            <title>Discovery of the IPv6 Prefix Used for IPv6 Address Synthesis</title>
            <author initials="T." surname="Savolainen" fullname="T. Savolainen">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="J." surname="Korhonen" fullname="J. Korhonen">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="D." surname="Wing" fullname="D. Wing">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2013" month="November"/>
            <abstract>
              <t>This document describes a method for detecting the presence of DNS64 and for learning the IPv6 prefix used for protocol translation on an access network.  The method depends on the existence of a well-known IPv4-only fully qualified domain name "ipv4only.arpa.".  The information learned enables nodes to perform local IPv6 address synthesis and to potentially avoid NAT64 on dual-stack and multi-interface deployments.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="7050"/>
          <seriesInfo name="DOI" value="10.17487/RFC7050"/>
        </reference>
        <reference anchor="RFC7225" target="https://www.rfc-editor.org/info/rfc7225" quoteTitle="true" derivedAnchor="RFC7225">
          <front>
            <title>Discovering NAT64 IPv6 Prefixes Using the Port Control Protocol (PCP)</title>
            <author initials="M." surname="Boucadair" fullname="M. Boucadair">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2014" month="May"/>
            <abstract>
              <t>This document defines a new Port Control Protocol (PCP) option to learn the IPv6 prefix(es) used by a PCP-controlled NAT64 device to build IPv4-converted IPv6 addresses.  This option is needed for successful communications when IPv4 addresses are used in referrals.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="7225"/>
          <seriesInfo name="DOI" value="10.17487/RFC7225"/>
        </reference>
        <reference anchor="RFC7757" target="https://www.rfc-editor.org/info/rfc7757" quoteTitle="true" derivedAnchor="RFC7757">
          <front>
            <title>Explicit Address Mappings for Stateless IP/ICMP Translation</title>
            <author initials="T." surname="Anderson" fullname="T. Anderson">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="A." surname="Leiva Popper" fullname="A. Leiva Popper">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2016" month="February"/>
            <abstract>
              <t>This document extends the Stateless IP/ICMP Translation Algorithm (SIIT) with an Explicit Address Mapping (EAM) algorithm and formally updates RFC 6145.  The EAM algorithm facilitates stateless IP/ICMP translation between arbitrary (non-IPv4-translatable) IPv6 endpoints and IPv4.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="7757"/>
          <seriesInfo name="DOI" value="10.17487/RFC7757"/>
        </reference>
        <reference anchor="RFC7915" target="https://www.rfc-editor.org/info/rfc7915" quoteTitle="true" derivedAnchor="RFC7915">
          <front>
            <title>IP/ICMP Translation Algorithm</title>
            <author initials="C." surname="Bao" fullname="C. Bao">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="X." surname="Li" fullname="X. Li">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="F." surname="Baker" fullname="F. Baker">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="T." surname="Anderson" fullname="T. Anderson">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="F." surname="Gont" fullname="F. Gont">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2016" month="June"/>
            <abstract>
              <t>This document describes the Stateless IP/ICMP Translation Algorithm (SIIT), which translates between IPv4 and IPv6 packet headers (including ICMP headers).  This document obsoletes RFC 6145.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="7915"/>
          <seriesInfo name="DOI" value="10.17487/RFC7915"/>
        </reference>
        <reference anchor="RFC8174" target="https://www.rfc-editor.org/info/rfc8174" quoteTitle="true" derivedAnchor="RFC8174">
          <front>
            <title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
            <author initials="B." surname="Leiba" fullname="B. Leiba">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2017" month="May"/>
            <abstract>
              <t>RFC 2119 specifies common key words that may be used in protocol  specifications.  This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the  defined special meanings.</t>
            </abstract>
          </front>
          <seriesInfo name="BCP" value="14"/>
          <seriesInfo name="RFC" value="8174"/>
          <seriesInfo name="DOI" value="10.17487/RFC8174"/>
        </reference>
        <reference anchor="RFC8273" target="https://www.rfc-editor.org/info/rfc8273" quoteTitle="true" derivedAnchor="RFC8273">
          <front>
            <title>Unique IPv6 Prefix per Host</title>
            <author initials="J." surname="Brzozowski" fullname="J. Brzozowski">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="G." surname="Van de Velde" fullname="G. Van de Velde">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2017" month="December"/>
            <abstract>
              <t>This document outlines an approach utilizing existing IPv6 protocols to allow hosts to be assigned a unique IPv6 prefix (instead of a unique IPv6 address from a shared IPv6 prefix).  Benefits of using a unique IPv6 prefix over a unique service-provider IPv6 address include improved host isolation and enhanced subscriber management on shared network segments.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8273"/>
          <seriesInfo name="DOI" value="10.17487/RFC8273"/>
        </reference>
        <reference anchor="RFC8305" target="https://www.rfc-editor.org/info/rfc8305" quoteTitle="true" derivedAnchor="RFC8305">
          <front>
            <title>Happy Eyeballs Version 2: Better Connectivity Using Concurrency</title>
            <author initials="D." surname="Schinazi" fullname="D. Schinazi">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="T." surname="Pauly" fullname="T. Pauly">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2017" month="December"/>
            <abstract>
              <t>Many communication protocols operating over the modern Internet use hostnames.  These often resolve to multiple IP addresses, each of which may have different performance and connectivity characteristics.  Since specific addresses or address families (IPv4 or IPv6) may be blocked, broken, or sub-optimal on a network, clients that attempt multiple connections in parallel have a chance of establishing a connection more quickly.  This document specifies requirements for algorithms that reduce this user-visible delay and provides an example algorithm, referred to as "Happy Eyeballs".  This document obsoletes the original algorithm description in RFC 6555.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8305"/>
          <seriesInfo name="DOI" value="10.17487/RFC8305"/>
        </reference>
        <reference anchor="RFC8375" target="https://www.rfc-editor.org/info/rfc8375" quoteTitle="true" derivedAnchor="RFC8375">
          <front>
            <title>Special-Use Domain 'home.arpa.'</title>
            <author initials="P." surname="Pfister" fullname="P. Pfister">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="T." surname="Lemon" fullname="T. Lemon">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2018" month="May"/>
            <abstract>
              <t>This document specifies the behavior that is expected from the Domain Name System with regard to DNS queries for names ending with '.home.arpa.' and designates this domain as a special-use domain name. 'home.arpa.' is designated for non-unique use in residential home networks.  The Home Networking Control Protocol (HNCP) is updated to use the 'home.arpa.' domain instead of '.home'.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8375"/>
          <seriesInfo name="DOI" value="10.17487/RFC8375"/>
        </reference>
        <reference anchor="RFC8415" target="https://www.rfc-editor.org/info/rfc8415" quoteTitle="true" derivedAnchor="RFC8415">
          <front>
            <title>Dynamic Host Configuration Protocol for IPv6 (DHCPv6)</title>
            <author initials="T." surname="Mrugalski" fullname="T. Mrugalski">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="M." surname="Siodelski" fullname="M. Siodelski">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="B." surname="Volz" fullname="B. Volz">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="A." surname="Yourtchenko" fullname="A. Yourtchenko">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="M." surname="Richardson" fullname="M. Richardson">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="S." surname="Jiang" fullname="S. Jiang">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="T." surname="Lemon" fullname="T. Lemon">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="T." surname="Winters" fullname="T. Winters">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2018" month="November"/>
            <abstract>
              <t>This document describes the Dynamic Host Configuration Protocol for IPv6 (DHCPv6): an extensible mechanism for configuring nodes with network configuration parameters, IP addresses, and prefixes. Parameters can be provided statelessly, or in combination with stateful assignment of one or more IPv6 addresses and/or IPv6 prefixes.  DHCPv6 can operate either in place of or in addition to stateless address autoconfiguration (SLAAC).</t>
              <t>This document updates the text from RFC 3315 (the original DHCPv6 specification) and incorporates prefix delegation (RFC 3633), stateless DHCPv6 (RFC 3736), an option to specify an upper bound for how long a client should wait before refreshing information (RFC 4242), a mechanism for throttling DHCPv6 clients when DHCPv6 service is not available (RFC 7083), and relay agent handling of unknown messages (RFC 7283).  In addition, this document clarifies the interactions between models of operation (RFC 7550).  As such, this document obsoletes RFC 3315, RFC 3633, RFC 3736, RFC 4242, RFC 7083, RFC 7283, and RFC 7550.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8415"/>
          <seriesInfo name="DOI" value="10.17487/RFC8415"/>
        </reference>
        <reference anchor="RFC8445" target="https://www.rfc-editor.org/info/rfc8445" quoteTitle="true" derivedAnchor="RFC8445">
          <front>
            <title>Interactive Connectivity Establishment (ICE): A Protocol for Network Address Translator (NAT) Traversal</title>
            <author initials="A." surname="Keranen" fullname="A. Keranen">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="C." surname="Holmberg" fullname="C. Holmberg">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="J." surname="Rosenberg" fullname="J. Rosenberg">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2018" month="July"/>
            <abstract>
              <t>This document describes a protocol for Network Address Translator (NAT) traversal for UDP-based communication.  This protocol is called Interactive Connectivity Establishment (ICE).  ICE makes use of the Session Traversal Utilities for NAT (STUN) protocol and its extension, Traversal Using Relay NAT (TURN).</t>
              <t>This document obsoletes RFC 5245.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8445"/>
          <seriesInfo name="DOI" value="10.17487/RFC8445"/>
        </reference>
        <reference anchor="RFC8484" target="https://www.rfc-editor.org/info/rfc8484" quoteTitle="true" derivedAnchor="RFC8484">
          <front>
            <title>DNS Queries over HTTPS (DoH)</title>
            <author initials="P." surname="Hoffman" fullname="P. Hoffman">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="P." surname="McManus" fullname="P. McManus">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2018" month="October"/>
            <abstract>
              <t>This document defines a protocol for sending DNS queries and getting DNS responses over HTTPS.  Each DNS query-response pair is mapped into an HTTP exchange.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8484"/>
          <seriesInfo name="DOI" value="10.17487/RFC8484"/>
        </reference>
      </references>
      <references pn="section-9.2">
        <name slugifiedName="name-informative-references">Informative References</name>
        <reference anchor="About-DNS64" target="https://blog.apnic.net/2016/06/09/lets-talk-ipv6-dns64-dnssec/" quoteTitle="true" derivedAnchor="About-DNS64">
          <front>
            <title>Let's talk about IPv6 DNS64 &amp; DNSSEC</title>
            <author initials="J" surname="Linkova">
              <organization showOnFrontPage="true">APNIC Blog</organization>
            </author>
            <date month="June" year="2016"/>
          </front>
        </reference>
        <reference anchor="ARCEP" target="https://www.arcep.fr/cartes-et-donnees/nos-publications-chiffrees/service-client-des-operateurs-mesures-de-la-qualite-de-service/service-client-des-operateurs-les-mesures-de-qualite-de-service.html" quoteTitle="true" derivedAnchor="ARCEP">
          <front>
            <title>Service client des operateurs : les mesures de qualite de service</title>
            <author>
              <organization showOnFrontPage="true">ARCEP</organization>
            </author>
            <date month="April" year="2018"/>
          </front>
        </reference>
        <reference anchor="I-D.li-intarea-nat64-prefix-dhcp-option" quoteTitle="true" target="https://tools.ietf.org/html/draft-li-intarea-nat64-prefix-dhcp-option-02" derivedAnchor="DHCPv6-OPTIONS">
          <front>
            <title>DHCPv6 Options for Discovery NAT64 Prefixes</title>
            <author initials="L" surname="Li" fullname="Lishan Li">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="Y" surname="Cui" fullname="Yong Cui">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="C" surname="Liu" fullname="Cong Liu">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="J" surname="Wu" fullname="Jianping Wu">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="F" surname="Baker" fullname="Fred Baker">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="J" surname="Palet" fullname="Jordi Palet">
              <organization showOnFrontPage="true"/>
            </author>
            <date month="April" day="20" year="2019"/>
            <abstract>
              <t>Several IPv6 transition mechanisms require the usage of stateless or stateful translators (commonly named as NAT64) able to allow IP/ICMP communication between IPv4 and IPv6 networks.  Those translators are using either a default Well-Known Prefix (WKP), and/or one or several additional Network Specific Prefixes (NSP), which need to be configured into the nodes willing to use the translator.  Different translators will likely have different IPv6 prefixes, to attract traffic to the correct translator.  Thus, an automatic translator prefix discovery method is necessary.  This document defines a DHCPv6-based method to inform DHCPv6 clients the set of IPv6 and IPv4 prefixes it serves.  This DHCPv6 option can be used by several transition mechanisms such as SIIT, 464XLAT, EAM.</t>
            </abstract>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-li-intarea-nat64-prefix-dhcp-option-02"/>
          <format type="TXT" target="http://www.ietf.org/internet-drafts/draft-li-intarea-nat64-prefix-dhcp-option-02.txt"/>
          <refcontent>Work in Progress</refcontent>
        </reference>
        <reference anchor="I-D.bp-v6ops-ipv6-ready-dns-dnssec" quoteTitle="true" target="https://tools.ietf.org/html/draft-bp-v6ops-ipv6-ready-dns-dnssec-00" derivedAnchor="DNS-DNSSEC">
          <front>
            <title>IPv6-Ready DNS/DNSSSEC Infrastructure</title>
            <author initials="C" surname="Byrne" fullname="Cameron Byrne">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="J" surname="Palet" fullname="Jordi Palet">
              <organization showOnFrontPage="true"/>
            </author>
            <date month="October" day="10" year="2018"/>
            <abstract>
              <t>This document defines the timing for implementing a worldwide IPv6-Ready DNS and DNSSEC infrastructure, in order to facilitate the global IPv6-only deployment.  A key issue for this, is the need for a global support of DNSSEC and DNS64, which in some scenarios do not work well together.  This document states that any DNSSEC signed resources records should include a native IPv6 resource record as the most complete and expedient path to solve any deployment conflict with DNS64 and DNSSEC</t>
            </abstract>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-bp-v6ops-ipv6-ready-dns-dnssec-00"/>
          <format type="TXT" target="http://www.ietf.org/internet-drafts/draft-bp-v6ops-ipv6-ready-dns-dnssec-00.txt"/>
          <refcontent>Work in Progress</refcontent>
        </reference>
        <reference anchor="I-D.vixie-dnsop-dns-rpz" quoteTitle="true" target="https://tools.ietf.org/html/draft-vixie-dnsop-dns-rpz-00" derivedAnchor="DNS-RPZ">
          <front>
            <title>DNS Response Policy Zones (RPZ)</title>
            <author initials="P" surname="Vixie" fullname="Paul Vixie">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="V" surname="Schryver" fullname="Vernon Schryver">
              <organization showOnFrontPage="true"/>
            </author>
            <date month="June" day="23" year="2018"/>
            <abstract>
              <t>This document describes a method for expressing DNS response policy inside a specially constructed DNS zone, and for recursive name servers to use such policy to return modified results to DNS clients. The modified DNS results can stop access to selected HTTP servers, redirect users to "walled gardens", block objectionable email, and otherwise defend against attack.  These "DNS Firewalls" are widely used in fighting Internet crime and abuse.</t>
            </abstract>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-vixie-dnsop-dns-rpz-00"/>
          <format type="TXT" target="http://www.ietf.org/internet-drafts/draft-vixie-dnsop-dns-rpz-00.txt"/>
          <refcontent>Work in Progress</refcontent>
        </reference>
        <reference anchor="DNS64-Benchm" target="https://www.sciencedirect.com/science/article/pii/S0140366418302184?via%3Dihub" quoteTitle="true" derivedAnchor="DNS64-Benchm">
          <front>
            <title>Benchmarking DNS64 Implementations: Theory and Practice</title>
            <seriesInfo name="DOI" value="10.1016/j.comcom.2018.05.005"/>
            <author initials="G" surname="Lencse"/>
            <author initials="Y" surname="Kadobayashi"/>
            <date month="September" year="2018"/>
          </front>
          <refcontent>pp. 61-74, no. 1, vol. 127, Computer Communications</refcontent>
        </reference>
        <reference anchor="DNS64-BM-Meth" target="https://www.sciencedirect.com/science/article/pii/S0140366416305904?via%3Dihub" quoteTitle="true" derivedAnchor="DNS64-BM-Meth">
          <front>
            <title>Benchmarking Methodology for DNS64 Servers</title>
            <seriesInfo name="DOI" value="10.1016/j.comcom.2017.06.004"/>
            <author initials="G" surname="Lencse"/>
            <author initials="M" surname="Georgescu"/>
            <author initials="Y" surname="Kadobayashi"/>
            <date month="September" year="2017"/>
          </front>
          <refcontent>pp. 162-175, no. 1, vol. 109, Computer Communications</refcontent>
        </reference>
        <reference anchor="FCC" target="https://www.fcc.gov/reports-research/reports/measuring-broadband-america/measuring-broadband-america-mobile-2013-2018" quoteTitle="true" derivedAnchor="FCC">
          <front>
            <title>Measuring Broadband America Mobile 2013-2018 Coarsened Data</title>
            <author>
              <organization showOnFrontPage="true">FCC</organization>
            </author>
            <date month="December" year="2018"/>
          </front>
        </reference>
        <reference anchor="I-D.cheshire-sudn-ipv4only-dot-arpa" quoteTitle="true" target="https://tools.ietf.org/html/draft-cheshire-sudn-ipv4only-dot-arpa-14" derivedAnchor="IPV4ONLY-ARPA">
          <front>
            <title>Special Use Domain Name 'ipv4only.arpa'</title>
            <author initials="S" surname="Cheshire" fullname="Stuart Cheshire">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="D" surname="Schinazi" fullname="David Schinazi">
              <organization showOnFrontPage="true"/>
            </author>
            <date month="November" day="3" year="2018"/>
            <abstract>
              <t>The specification for how a client discovers its local network's NAT64 prefix [RFC7050] defines the special name 'ipv4only.arpa' for this purpose, but in its Domain Name Reservation Considerations section that specification indicates that the name actually has no particularly special properties would require special handling, and does not request IANA to record the name in the Special-Use Domain Names registry.  Consequently, despite the well articulated special purpose of the name, 'ipv4only.arpa' was not recorded in the Special-Use Domain Names registry as a name with special properties.  As a result of this omission, in cases where software needs to give this name special treatment in order for it to work correctly, there was no clear mandate authorizing software authors to implement that special treatment.  Software implementers were left with the choice between not implementing the special behavior necessary for the name queries to work correctly, or implementing the special behavior and being accused of being noncompliant with some RFC.  This document describes the special treatment required, formally declares the special properties of the name, and adds similar declarations for the corresponding reverse mapping names.</t>
            </abstract>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-cheshire-sudn-ipv4only-dot-arpa-14"/>
          <format type="TXT" target="http://www.ietf.org/internet-drafts/draft-cheshire-sudn-ipv4only-dot-arpa-14.txt"/>
          <refcontent>Work in Progress</refcontent>
        </reference>
        <reference anchor="I-D.lmhp-v6ops-transition-comparison" quoteTitle="true" target="https://tools.ietf.org/html/draft-lmhp-v6ops-transition-comparison-03" derivedAnchor="IPv6-TRANSITION">
          <front>
            <title>Pros and Cons of IPv6 Transition Technologies for IPv4aaS</title>
            <author initials="G" surname="Lencse" fullname="Gabor Lencse">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="J" surname="Palet" fullname="Jordi Palet">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="L" surname="Howard" fullname="Lee Howard">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="R" surname="Patterson" fullname="Richard Patterson">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="I" surname="Farrer" fullname="Ian Farrer">
              <organization showOnFrontPage="true"/>
            </author>
            <date month="July" day="6" year="2019"/>
            <abstract>
              <t>Several IPv6 transition technologies have been developed to provide customers with IPv4-as-a-Service (IPv4aaS) for ISPs with an IPv6-only access and/or core network.  All these technologies have their advantages and disadvantages, and depending on existing topology, skills, strategy and other preferences, one of these technologies may be the most appropriate solution for a network operator.  This document examines the five most prominent IPv4aaS technologies considering a number of different aspects to provide network operators with an easy to use reference to assist in selecting the technology that best suits their needs.</t>
            </abstract>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-lmhp-v6ops-transition-comparison-03"/>
          <format type="TXT" target="http://www.ietf.org/internet-drafts/draft-lmhp-v6ops-transition-comparison-03.txt"/>
          <refcontent>Work in Progress</refcontent>
        </reference>
        <reference anchor="ISOC" target="https://www.internetsociety.org/resources/2018/state-of-ipv6-deployment-2018/" quoteTitle="true" derivedAnchor="ISOC">
          <front>
            <title>State of IPv6 Deployment 2018</title>
            <author>
              <organization showOnFrontPage="true">ISOC</organization>
            </author>
            <date month="June" year="2018"/>
          </front>
        </reference>
        <reference anchor="I-D.palet-v6ops-464xlat-opt-cdn-caches" quoteTitle="true" target="https://tools.ietf.org/html/draft-palet-v6ops-464xlat-opt-cdn-caches-03" derivedAnchor="OPT-464XLAT">
          <front>
            <title>464XLAT Optimization</title>
            <author initials="J" surname="Palet" fullname="Jordi Palet">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="A" surname="D'Egidio" fullname="Alejandro D'Egidio">
              <organization showOnFrontPage="true"/>
            </author>
            <date month="July" day="8" year="2019"/>
            <abstract>
              <t>This document proposes possible solutions to avoid certain drawbacks of IP/ICMP Translation Algorithm (SIIT) when the destinations are available with IPv6.  When SIIT is used as a NAT46 and IPv4-only devices or applications initiate traffic flows to dual-stack CDNs (Content Delivery Networks), Caches or other network resources (in the operator network or Internet), those flows will be translated back to IPv4 by a NAT64.  This is the case for 464XLAT and MAP-T.</t>
            </abstract>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-palet-v6ops-464xlat-opt-cdn-caches-03"/>
          <format type="TXT" target="http://www.ietf.org/internet-drafts/draft-palet-v6ops-464xlat-opt-cdn-caches-03.txt"/>
          <refcontent>Work in Progress</refcontent>
        </reference>
        <reference anchor="I-D.ietf-6man-ra-pref64" quoteTitle="true" target="https://tools.ietf.org/html/draft-ietf-6man-ra-pref64-06" derivedAnchor="PREF64">
          <front>
            <title>Discovering PREF64 in Router Advertisements</title>
            <author initials="L" surname="Colitti" fullname="Lorenzo Colitti">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="J" surname="Linkova" fullname="Jen Linkova">
              <organization showOnFrontPage="true"/>
            </author>
            <date month="October" day="3" year="2019"/>
            <abstract>
              <t>This document specifies a Router Advertisement option to communicate NAT64 prefixes to hosts.</t>
            </abstract>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-ietf-6man-ra-pref64-06"/>
          <format type="TXT" target="http://www.ietf.org/internet-drafts/draft-ietf-6man-ra-pref64-06.txt"/>
          <refcontent>Work in Progress</refcontent>
        </reference>
        <reference anchor="I-D.huitema-quic-dnsoquic" quoteTitle="true" target="https://tools.ietf.org/html/draft-huitema-quic-dnsoquic-07" derivedAnchor="QUIC-CONNECTIONS">
          <front>
            <title>Specification of DNS over Dedicated QUIC Connections</title>
            <author initials="C" surname="Huitema" fullname="Christian Huitema">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="M" surname="Shore" fullname="Melinda Shore">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="A" surname="Mankin" fullname="Allison Mankin">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="S" surname="Dickinson" fullname="Sara Dickinson">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="J" surname="Iyengar" fullname="Jana Iyengar">
              <organization showOnFrontPage="true"/>
            </author>
            <date month="September" day="7" year="2019"/>
            <abstract>
              <t>This document describes the use of QUIC to provide transport privacy for DNS.  The encryption provided by QUIC has similar properties to that provided by TLS, while QUIC transport eliminates the head-of- line blocking issues inherent with TCP and provides more efficient error corrections than UDP.  DNS over QUIC (DNS/QUIC) has privacy properties similar to DNS over TLS specified in RFC7858, and performance similar to classic DNS over UDP.</t>
            </abstract>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-huitema-quic-dnsoquic-07"/>
          <format type="TXT" target="http://www.ietf.org/internet-drafts/draft-huitema-quic-dnsoquic-07.txt"/>
          <refcontent>Work in Progress</refcontent>
        </reference>
        <reference anchor="RFC6889" target="https://www.rfc-editor.org/info/rfc6889" quoteTitle="true" derivedAnchor="RFC6889">
          <front>
            <title>Analysis of Stateful 64 Translation</title>
            <author initials="R." surname="Penno" fullname="R. Penno">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="T." surname="Saxena" fullname="T. Saxena">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="M." surname="Boucadair" fullname="M. Boucadair">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="S." surname="Sivakumar" fullname="S. Sivakumar">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2013" month="April"/>
            <abstract>
              <t>Due to specific problems, Network Address Translation - Protocol Translation (NAT-PT) was deprecated by the IETF as a mechanism to perform IPv6-IPv4 translation.  Since then, new efforts have been undertaken within IETF to standardize alternative mechanisms to perform IPv6-IPv4 translation.  This document analyzes to what extent the new stateful translation mechanisms avoid the problems that caused the IETF to deprecate NAT-PT.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="6889"/>
          <seriesInfo name="DOI" value="10.17487/RFC6889"/>
        </reference>
        <reference anchor="RFC6950" target="https://www.rfc-editor.org/info/rfc6950" quoteTitle="true" derivedAnchor="RFC6950">
          <front>
            <title>Architectural Considerations on Application Features in the DNS</title>
            <author initials="J." surname="Peterson" fullname="J. Peterson">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="O." surname="Kolkman" fullname="O. Kolkman">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="H." surname="Tschofenig" fullname="H. Tschofenig">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="B." surname="Aboba" fullname="B. Aboba">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2013" month="October"/>
            <abstract>
              <t>A number of Internet applications rely on the Domain Name System (DNS) to support their operations.  Many applications use the DNS to locate services for a domain; some, for example, transform identifiers other than domain names into formats that the DNS can process, and then fetch application data or service location data from the DNS. Proposals incorporating sophisticated application behavior using DNS as a substrate have raised questions about the role of the DNS as an application platform.  This document explores the architectural consequences of using the DNS to implement certain application features, and it provides guidance to future application designers as to the limitations of the DNS as a substrate and the situations in which alternative designs should be considered.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="6950"/>
          <seriesInfo name="DOI" value="10.17487/RFC6950"/>
        </reference>
        <reference anchor="RFC7051" target="https://www.rfc-editor.org/info/rfc7051" quoteTitle="true" derivedAnchor="RFC7051">
          <front>
            <title>Analysis of Solution Proposals for Hosts to Learn NAT64 Prefix</title>
            <author initials="J." surname="Korhonen" fullname="J. Korhonen" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="T." surname="Savolainen" fullname="T. Savolainen" role="editor">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2013" month="November"/>
            <abstract>
              <t>Hosts and applications may benefit from learning if an IPv6 address is synthesized and if NAT64 and DNS64 are present in a network.  This document analyzes all proposed solutions (known at the time of writing) for communicating whether the synthesis is taking place, what address format was used, and what IPv6 prefix was used by the NAT64 and DNS64.  These solutions enable both NAT64 avoidance and local IPv6 address synthesis.  The document concludes by recommending the standardization of the approach based on heuristic discovery.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="7051"/>
          <seriesInfo name="DOI" value="10.17487/RFC7051"/>
        </reference>
        <reference anchor="RFC7269" target="https://www.rfc-editor.org/info/rfc7269" quoteTitle="true" derivedAnchor="RFC7269">
          <front>
            <title>NAT64 Deployment Options and Experience</title>
            <author initials="G." surname="Chen" fullname="G. Chen">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="Z." surname="Cao" fullname="Z. Cao">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="C." surname="Xie" fullname="C. Xie">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="D." surname="Binet" fullname="D. Binet">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2014" month="June"/>
            <abstract>
              <t>This document summarizes NAT64 function deployment scenarios and operational experience.  Both NAT64 Carrier-Grade NAT (NAT64-CGN) and NAT64 server Front End (NAT64-FE) are considered in this document.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="7269"/>
          <seriesInfo name="DOI" value="10.17487/RFC7269"/>
        </reference>
        <reference anchor="RFC7755" target="https://www.rfc-editor.org/info/rfc7755" quoteTitle="true" derivedAnchor="RFC7755">
          <front>
            <title>SIIT-DC: Stateless IP/ICMP Translation for IPv6 Data Center Environments</title>
            <author initials="T." surname="Anderson" fullname="T. Anderson">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2016" month="February"/>
            <abstract>
              <t>This document describes the use of the Stateless IP/ICMP Translation Algorithm (SIIT) in an IPv6 Internet Data Center (IDC).  In this deployment model, traffic from legacy IPv4-only clients on the Internet is translated to IPv6 upon reaching the IDC operator's network infrastructure.  From that point on, it may be treated the same as traffic from native IPv6 end users.  The IPv6 endpoints may be numbered using arbitrary (non-IPv4-translatable) IPv6 addresses. This facilitates a single-stack IPv6-only network infrastructure, as well as efficient utilization of public IPv4 addresses.</t>
              <t>The primary audience is IDC operators who are deploying IPv6, running out of available IPv4 addresses, and/or feeling that dual stack causes undesirable operational complexity.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="7755"/>
          <seriesInfo name="DOI" value="10.17487/RFC7755"/>
        </reference>
        <reference anchor="RFC7756" target="https://www.rfc-editor.org/info/rfc7756" quoteTitle="true" derivedAnchor="RFC7756">
          <front>
            <title>Stateless IP/ICMP Translation for IPv6 Internet Data Center Environments (SIIT-DC): Dual Translation Mode</title>
            <author initials="T." surname="Anderson" fullname="T. Anderson">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="S." surname="Steffann" fullname="S. Steffann">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2016" month="February"/>
            <abstract>
              <t>This document describes an extension of the Stateless IP/ICMP Translation for IPv6 Internet Data Center Environments (SIIT-DC) architecture, which allows applications, protocols, or nodes that are incompatible with IPv6 and/or Network Address Translation to operate correctly with SIIT-DC.  This is accomplished by introducing a new component called an SIIT-DC Edge Relay, which reverses the translations made by an SIIT-DC Border Relay.  The application and/or node is thus provided with seemingly native IPv4 connectivity that provides end-to-end address transparency.</t>
              <t>The reader is expected to be familiar with the SIIT-DC architecture described in RFC 7755.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="7756"/>
          <seriesInfo name="DOI" value="10.17487/RFC7756"/>
        </reference>
        <reference anchor="RFC7849" target="https://www.rfc-editor.org/info/rfc7849" quoteTitle="true" derivedAnchor="RFC7849">
          <front>
            <title>An IPv6 Profile for 3GPP Mobile Devices</title>
            <author initials="D." surname="Binet" fullname="D. Binet">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="M." surname="Boucadair" fullname="M. Boucadair">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="A." surname="Vizdal" fullname="A. Vizdal">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="G." surname="Chen" fullname="G. Chen">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="N." surname="Heatley" fullname="N. Heatley">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="R." surname="Chandler" fullname="R. Chandler">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="D." surname="Michaud" fullname="D. Michaud">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="D." surname="Lopez" fullname="D. Lopez">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="W." surname="Haeffner" fullname="W. Haeffner">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2016" month="May"/>
            <abstract>
              <t>This document defines a profile that is a superset of the connection to IPv6 cellular networks defined in the IPv6 for Third Generation Partnership Project (3GPP) Cellular Hosts document.  This document defines a profile that is a superset of the connections to IPv6 cellular networks defined in "IPv6 for Third Generation Partnership Project (3GPP) Cellular Hosts" (RFC 7066).</t>
              <t>Both mobile hosts and mobile devices with the capability to share their 3GPP mobile connectivity are in scope.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="7849"/>
          <seriesInfo name="DOI" value="10.17487/RFC7849"/>
        </reference>
        <reference anchor="RFC7858" target="https://www.rfc-editor.org/info/rfc7858" quoteTitle="true" derivedAnchor="RFC7858">
          <front>
            <title>Specification for DNS over Transport Layer Security (TLS)</title>
            <author initials="Z." surname="Hu" fullname="Z. Hu">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="L." surname="Zhu" fullname="L. Zhu">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="J." surname="Heidemann" fullname="J. Heidemann">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="A." surname="Mankin" fullname="A. Mankin">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="D." surname="Wessels" fullname="D. Wessels">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="P." surname="Hoffman" fullname="P. Hoffman">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2016" month="May"/>
            <abstract>
              <t>This document describes the use of Transport Layer Security (TLS) to provide privacy for DNS.  Encryption provided by TLS eliminates opportunities for eavesdropping and on-path tampering with DNS queries in the network, such as discussed in RFC 7626.  In addition, this document specifies two usage profiles for DNS over TLS and provides advice on performance considerations to minimize overhead from using TCP and TLS with DNS.</t>
              <t>This document focuses on securing stub-to-recursive traffic, as per the charter of the DPRIVE Working Group.  It does not prevent future applications of the protocol to recursive-to-authoritative traffic.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="7858"/>
          <seriesInfo name="DOI" value="10.17487/RFC7858"/>
        </reference>
        <reference anchor="RFC8094" target="https://www.rfc-editor.org/info/rfc8094" quoteTitle="true" derivedAnchor="RFC8094">
          <front>
            <title>DNS over Datagram Transport Layer Security (DTLS)</title>
            <author initials="T." surname="Reddy" fullname="T. Reddy">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="D." surname="Wing" fullname="D. Wing">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="P." surname="Patil" fullname="P. Patil">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2017" month="February"/>
            <abstract>
              <t>DNS queries and responses are visible to network elements on the path between the DNS client and its server.  These queries and responses can contain privacy-sensitive information, which is valuable to protect.</t>
              <t>This document proposes the use of Datagram Transport Layer Security (DTLS) for DNS, to protect against passive listeners and certain active attacks.  As latency is critical for DNS, this proposal also discusses mechanisms to reduce DTLS round trips and reduce the DTLS handshake size.  The proposed mechanism runs over port 853.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8094"/>
          <seriesInfo name="DOI" value="10.17487/RFC8094"/>
        </reference>
        <reference anchor="RFC8219" target="https://www.rfc-editor.org/info/rfc8219" quoteTitle="true" derivedAnchor="RFC8219">
          <front>
            <title>Benchmarking Methodology for IPv6 Transition Technologies</title>
            <author initials="M." surname="Georgescu" fullname="M. Georgescu">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="L." surname="Pislaru" fullname="L. Pislaru">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="G." surname="Lencse" fullname="G. Lencse">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2017" month="August"/>
            <abstract>
              <t>Benchmarking methodologies that address the performance of network interconnect devices that are IPv4- or IPv6-capable exist, but the IPv6 transition technologies are outside of their scope. This document provides complementary guidelines for evaluating the performance of IPv6 transition technologies.  More specifically, this document targets IPv6 transition technologies that employ encapsulation or translation mechanisms, as dual-stack nodes can be tested using the recommendations of RFCs 2544 and 5180. The methodology also includes a metric for benchmarking load scalability.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8219"/>
          <seriesInfo name="DOI" value="10.17487/RFC8219"/>
        </reference>
        <reference anchor="RFC8585" target="https://www.rfc-editor.org/info/rfc8585" quoteTitle="true" derivedAnchor="RFC8585">
          <front>
            <title>Requirements for IPv6 Customer Edge Routers to Support IPv4-as-a-Service</title>
            <author initials="J." surname="Palet Martinez" fullname="J. Palet Martinez">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="H. M.-H." surname="Liu" fullname="H. M.-H. Liu">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="M." surname="Kawashima" fullname="M. Kawashima">
              <organization showOnFrontPage="true"/>
            </author>
            <date year="2019" month="May"/>
            <abstract>
              <t>This document specifies the IPv4 service continuity requirements for IPv6 Customer Edge (CE) routers that are provided either by the service provider or by vendors who sell through the retail market.</t>
              <t>Specifically, this document extends the basic requirements for IPv6 CE routers as described in RFC 7084 to allow the provisioning of IPv6 transition services for the support of IPv4-as-a-Service (IPv4aaS) by means of new transition mechanisms.  The document only covers IPv4aaS, i.e., transition technologies for delivering IPv4 in IPv6-only access networks.  IPv4aaS is necessary because there aren't sufficient IPv4 addresses available for every possible customer/ device.  However, devices or applications in the customer Local Area Networks (LANs) may be IPv4-only or IPv6-only and still need to communicate with IPv4-only services on the Internet.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8585"/>
          <seriesInfo name="DOI" value="10.17487/RFC8585"/>
        </reference>
        <reference anchor="RIPE-690" target="https://www.ripe.net/publications/docs/ripe-690" quoteTitle="true" derivedAnchor="RIPE-690">
          <front>
            <title>Best Current Operational Practice for Operators: IPv6 prefix assignment for end-users - persistent vs non-persistent, and what size to choose</title>
            <author surname="RIPE">
              <organization showOnFrontPage="true">RIPE</organization>
            </author>
            <date month="October" year="2017"/>
          </front>
        </reference>
        <reference anchor="Threat-DNS64" target="https://www.sciencedirect.com/science/article/pii/S0167404818303663?via%3Dihub" quoteTitle="true" derivedAnchor="Threat-DNS64">
          <front>
            <title>Methodology for the identification of potential security issues of different IPv6 transition technologies: Threat analysis of DNS64 and stateful NAT64</title>
            <seriesInfo name="DOI" value="10.1016/j.cose.2018.04.012"/>
            <author initials="G" surname="Lencse"/>
            <author initials="Y" surname="Kadobayashi"/>
            <date month="August" year="2018"/>
          </front>
          <refcontent>pp. 397-411, no. 1, vol. 77, Computers &amp; Security</refcontent>
        </reference>
      </references>
    </references>
    <section numbered="true" toc="include" anchor="AppendixA" removeInRFC="false" pn="section-appendix.a">
      <name slugifiedName="name-example-of-broadband-deploy">Example of Broadband Deployment with 464XLAT</name>
      <t pn="section-appendix.a-1">This section summarizes how an operator may deploy an IPv6-only 
      network for residential/SOHO customers, supporting IPv6 inbound 
      connections, and IPv4-as-a-Service (IPv4aaS) by using 464XLAT.</t>
      <t pn="section-appendix.a-2">Note that an equivalent setup could also be provided for enterprise 
      customers. If they need to support IPv4 inbound connections, several 
      mechanisms, depending on specific customer needs, allow it; see 
      <xref target="RFC7757" format="default" sectionFormat="of" derivedContent="RFC7757"/>.</t>
      <t pn="section-appendix.a-3">Conceptually, most of the operator network could be IPv6 only 
	  (represented in the next figures as "IPv6-only flow"), or even if 
	  part of the network is actually dual stack, only IPv6 access 
	  is available for some customers (i.e., residential customers). 
	  This part of the network connects the IPv6-only subscribers 
	  (by means of IPv6-only access links) to the IPv6 upstream providers 
	  and to the IPv4-Internet by means of NAT64 (PLAT 
	  in the 464XLAT terminology).</t>
      <t pn="section-appendix.a-4">The traffic flow from and back to the CE to services available in the 
	  IPv6 Internet (or even dual-stack remote services, when IPv6 is being used) 
	  is purely native IPv6 traffic, so there are no special considerations about it.</t>
      <t pn="section-appendix.a-5">From the DNS perspective, there are remote 
	  networks with IPv4 only that will typically have only IPv4 DNS 
	  (DNS/IPv4) or will at least be seen as IPv4 DNS from the CE perspective. 
	  On the operator side, the DNS, as seen from the CE, is 
	  only IPv6 (DNS/IPv6), and it also has a DNS64 function. </t>
      <t pn="section-appendix.a-6">On the customer LANs side, there is actually one network, which of course 
	  could be split into different segments. The most common setup will be 
	  dual-stack segments, using global IPv6 addresses and <xref target="RFC1918" format="default" sectionFormat="of" derivedContent="RFC1918"/> 
	  for IPv4, in any regular residential / Small Office, Home Office (SOHO) IPv4 network. 
	  In the figure below, it is represented as tree segments to show that the 
	  three possible setups are valid (IPv6 only, IPv4 only, and dual stack).</t>
      <figure anchor="clat-CE-DNS64" align="left" suppress-title="false" pn="figure-16">
        <name slugifiedName="name-ce-setup-with-built-in-clat">CE Setup with Built-In CLAT, with DNS64</name>
        <artwork align="center" name="" type="" alt="" pn="section-appendix.a-7.1">
    .-----.    +-------+     .-----.                   .-----.
   / IPv6- \   |       |    /       \                 /       \
  (  only   )--+ Res./ |   /  IPv6-  \    .-----.    /  IPv4-  \
   \ LANs  /   | SOHO  +--(   only    )--( NAT64 )--(   only    )
    `-----'    |       |   \  flow   /    `-----'    \  flow   /
    .-----.    | IPv6  |    \       /                 \       /
   / IPv4- \   |  CE   |     `--+--'                   `--+--'
  (  only   )--+ with  |        |                         |
   \ LANs  /   | CLAT  |    +---+----+                +---+----+
    `-----'    |       |    |DNS/IPv6|                |DNS/IPv4|
    .-----.    +---+---+    |  with  |                +--------+
   / Dual- \       |        | DNS64  |
  (  Stack  )------|        +--------+
   \ LANs  /
    `-----' </artwork>
      </figure>
      <t pn="section-appendix.a-8">In addition to the regular CE setup, which typically will be
	  access-technology dependent, the steps for the CLAT function 
	  configuration can be summarized as follows:</t>
      <ol spacing="normal" type="1" start="1" pn="section-appendix.a-9">
        <li pn="section-appendix.a-9.1" derivedCounter="1.">Discovery of the PLAT (NAT64) prefix: It may be done 
				using <xref target="RFC7050" format="default" sectionFormat="of" derivedContent="RFC7050"/>, <xref target="RFC7225" format="default" sectionFormat="of" derivedContent="RFC7225"/> in those networks where PCP 
				is supported, or other 
				alternatives that may be available in the future, such as Router 
				Advertising <xref target="I-D.ietf-6man-ra-pref64" format="default" sectionFormat="of" derivedContent="PREF64"/> or 
				DHCPv6 options <xref target="I-D.li-intarea-nat64-prefix-dhcp-option" format="default" sectionFormat="of" derivedContent="DHCPv6-OPTIONS"/>.</li>
        <li pn="section-appendix.a-9.2" derivedCounter="2.">If the CLAT function allows stateless NAT46 translation, a /64 from 
				the pool typically provided to the CE by means of DHCPv6-PD 
				<xref target="RFC8415" format="default" sectionFormat="of" derivedContent="RFC8415"/> needs to be set aside for that translation. 
				Otherwise, the CLAT is forced to perform an intermediate stateful 
				NAT44 before the stateless NAT46, as described in <xref target="CLAT" format="default" sectionFormat="of" derivedContent="Section 4.8"/>.</li>
      </ol>
      <t pn="section-appendix.a-10">A more detailed configuration approach is described in 
	  <xref target="RFC8585" format="default" sectionFormat="of" derivedContent="RFC8585"/>.</t>
      <t pn="section-appendix.a-11">The operator network needs to ensure that the correct responses are provided 
	  for the discovery of the PLAT prefix. It is highly recommended 
	  that <xref target="RIPE-690" format="default" sectionFormat="of" derivedContent="RIPE-690"/> be followed in order to ensure that multiple /64s 
	  are available, including the one needed for the NAT46 stateless translation.</t>
      <t pn="section-appendix.a-12">The operator needs to understand other issues, as described throughout this document, 
	  in order to make relevant decisions. For example, if several NAT64 functions 
	  are needed in the context of scalability / high availability, an NSP should be 
	  considered (see <xref target="WKP-NSP" format="default" sectionFormat="of" derivedContent="Section 4.5"/>).</t>
      <t pn="section-appendix.a-13">More complex scenarios are possible, for example, if a network offers 
	  multiple NAT64 prefixes, destination-based NAT64 prefixes, etc.</t>
      <t pn="section-appendix.a-14">If the operator decides not to provide a DNS64 function, then this 
	  setup will be the same as the following figure. This will also be
	  the setup that will be seen from the perspective 
	  of the CE, if a foreign DNS is used and consequently is 
	  not the operator-provided DNS64 function.</t>
      <figure anchor="clat-CE" align="left" suppress-title="false" pn="figure-17">
        <name slugifiedName="name-ce-setup-with-built-in-clat-">CE Setup with Built-In CLAT, without DNS64</name>
        <artwork align="center" name="" type="" alt="" pn="section-appendix.a-15.1">
    .-----.    +-------+     .-----.                   .-----.
   / IPv6- \   |       |    /       \                 /       \
  (  only   )--+ Res./ |   /  IPv6-  \    .-----.    /  IPv4-  \
   \ LANs  /   | SOHO  +--(   only    )--( NAT64 )--(   only    )
    `-----'    |       |   \  flow   /    `-----'    \  flow   /
    .-----.    | IPv6  |    \       /                 \       /
   / IPv4- \   |  CE   |     `--+--'                   `--+--'
  (  only   )--+ with  |        |                         |
   \ LANs  /   | CLAT  |    +---+----+                +---+----+
    `-----'    |       |    |DNS/IPv6|                |DNS/IPv4|
    .-----.    +---+---+    +--------+                +--------+
   / Dual- \       |
  (  Stack  )------|
   \ LANs  /
    `-----'</artwork>
      </figure>
      <t pn="section-appendix.a-16">In this case, the discovery of the PLAT prefix needs to be arranged as 
	  indicated in <xref target="nodns64" format="default" sectionFormat="of" derivedContent="Section 4.1.1"/>.</t>
      <t pn="section-appendix.a-17">In addition, if the CE doesn't have a built-in CLAT function, the customer can 
	  choose to set up the IPv6 operator-managed CE in bridge mode (and optionally 
	  use an external router).  Or, for example, if there is an access technology 
	  that requires some kind of media converter (Optical Network Termination (ONT) for 
          fiber to the home (FTTH), Cable Modem 
	  for Data-Over-Cable Service Interface Specification (DOCSIS), etc.), the complete 
          setup will look like <xref target="clat-bridge" format="default" sectionFormat="of" derivedContent="Figure 18"/>. 

	  Obviously, there will be some intermediate configuration steps for the 
	  bridge, depending on the specific access technology/protocols, which 
	  should not modify the steps already described in the previous cases 
	  for the CLAT function configuration.</t>
      <figure anchor="clat-bridge" align="left" suppress-title="false" pn="figure-18">
        <name slugifiedName="name-ce-setup-with-bridged-clat-">CE Setup with Bridged CLAT, without DNS64</name>
        <artwork align="center" name="" type="" alt="" pn="section-appendix.a-18.1">
               +-------+     .-----.                   .-----.
               |       |    /       \                 /       \
               | Res./ |   /  IPv6-  \    .-----.    /  IPv4-  \
               | SOHO  +--(   only    )--( NAT64 )--(   only    )
               |       |   \  flow   /    `-----'    \  flow   /
               | IPv6  |    \       /                 \       /
               |  CE   |     `--+--'                   `--+--'
               | Bridge|        |                         |
               |       |    +---+----+                +---+----+
               |       |    |DNS/IPv6|                |DNS/IPv4|
               +---+---+    +--------+                +--------+
                   |
    .-----.    +---+---+
   / IPv6- \   |       |
  (  only   )--+ IPv6  |
   \ LANs  /   | Router|
    `-----'    |       |
    .-----.    | with  |
   / IPv4- \   | CLAT  |
  (  only   )--+       |
   \ LANs  /   |       |
    `-----'    |       |
    .-----.    +---+---+
   / Dual- \       |
  (  Stack  )------|
   \ LANs  /
    `-----'</artwork>
      </figure>
      <t pn="section-appendix.a-19">Several routers (i.e., the operator-provided
                 CE and the downstream user-provided router) that enable
                 simultaneous routing and/or CLAT should be avoided to ensure that  multiple NAT44
                 and NAT46 levels are not used and that the operation of
                 multiple IPv6 subnets is correct.  In those cases, 
		 the use of the Home Networking Control Protocol (HNCP) <xref target="RFC8375" format="default" sectionFormat="of" derivedContent="RFC8375"/> is suggested.</t>
      <t pn="section-appendix.a-20">Note that the procedure described here for the CE setup can be simplified 
		if the CE follows <xref target="RFC8585" format="default" sectionFormat="of" derivedContent="RFC8585"/>.</t>
    </section>
    <section numbered="true" toc="include" removeInRFC="false" pn="section-appendix.b">
      <name slugifiedName="name-clat-implementation">CLAT Implementation</name>
      <t pn="section-appendix.b-1">In addition to the regular set of features for a CE, a CLAT CE 
		implementation requires support for:</t>
      <ul spacing="normal" bare="false" empty="false" pn="section-appendix.b-2">
        <li pn="section-appendix.b-2.1">
          <xref target="RFC7915" format="default" sectionFormat="of" derivedContent="RFC7915"/> for the NAT46 function.</li>
        <li pn="section-appendix.b-2.2">
          <xref target="RFC7050" format="default" sectionFormat="of" derivedContent="RFC7050"/> for the PLAT prefix discovery.</li>
        <li pn="section-appendix.b-2.3">
          <xref target="RFC7225" format="default" sectionFormat="of" derivedContent="RFC7225"/> for the PLAT prefix discovery if PCP is supported.</li>
        <li pn="section-appendix.b-2.4">
          <xref target="I-D.ietf-6man-ra-pref64" format="default" sectionFormat="of" derivedContent="PREF64"/> for the PLAT prefix 
		 		discovery by means of Router Advertising.</li>
        <li pn="section-appendix.b-2.5">
          <xref target="I-D.li-intarea-nat64-prefix-dhcp-option" format="default" sectionFormat="of" derivedContent="DHCPv6-OPTIONS"/> for the PLAT prefix 
		 		discovery by means of DHCP.</li>
        <li pn="section-appendix.b-2.6">If stateless NAT46 is supported, a mechanism to ensure that 
		 		multiple /64 are available, such as DHCPv6-PD <xref target="RFC8415" format="default" sectionFormat="of" derivedContent="RFC8415"/>, must be used.</li>
      </ul>
      <t pn="section-appendix.b-3">There are several Open Source implementations of CLAT, such as:</t>
      <ul spacing="normal" bare="false" empty="false" pn="section-appendix.b-4">
        <li pn="section-appendix.b-4.1">Android: <eref target="https://github.com/ddrown/android_external_android-clat" brackets="none"/></li>
        <li pn="section-appendix.b-4.2">Jool: <eref target="https://www.jool.mx" brackets="none"/></li>
        <li pn="section-appendix.b-4.3">Linux: <eref target="https://github.com/toreanderson/clatd" brackets="none"/></li>
        <li pn="section-appendix.b-4.4">OpenWRT: <eref target="https://git.openwrt.org/?p=openwrt%2Fopenwrt.git&amp;a=search&amp;h=refs%2Ftags%2Fv19.07.0-rc1&amp;st=commit&amp;s=464xlat" brackets="none"/></li>
        <li pn="section-appendix.b-4.5">VPP: <eref target="https://git.fd.io/vpp/tree/src/plugins/nat" brackets="none"/></li>
      </ul>
    </section>
    <section numbered="true" toc="include" removeInRFC="false" pn="section-appendix.c">
      <name slugifiedName="name-benchmarking">Benchmarking</name>
      <t pn="section-appendix.c-1">A benchmarking methodology for IPv6 
		transition technologies has been defined in <xref target="RFC8219" format="default" sectionFormat="of" derivedContent="RFC8219"/>. NAT64 and 464XLAT are addressed 
                among the single- and 
		double-translation technologies, respectively. DNS64 is addressed in 
		Section <xref target="RFC8219" sectionFormat="bare" section="9" format="default" derivedLink="https://rfc-editor.org/rfc/rfc8219#section-9" derivedContent="RFC8219"/>, and the methodology is elaborated in
      <xref target="DNS64-BM-Meth" format="default" sectionFormat="of" derivedContent="DNS64-BM-Meth"/> of that document.</t>
      <t pn="section-appendix.c-2">Several documents provide references to benchmarking results, for example, 
		for DNS64 <xref target="DNS64-Benchm" format="default" sectionFormat="of" derivedContent="DNS64-Benchm"/>.</t>
    </section>
    <section numbered="false" toc="include" removeInRFC="false" pn="section-appendix.d">
      <name slugifiedName="name-acknowledgements">Acknowledgements</name>
      <t pn="section-appendix.d-1">The author would like to acknowledge the inputs of Gabor Lencse, 
			Andrew Sullivan, Lee Howard, Barbara Stark, Fred Baker, 
			Mohamed Boucadair, Alejandro D'Egidio, Dan Wing, Mikael Abrahamsson, 
			and Eric Vyncke.</t>
      <t pn="section-appendix.d-2">Conversations with Marcelo Bagnulo, one of the coauthors of NAT64 and 
			DNS64, and email correspondence via the IETF mailing lists with Mark Andrews
			have been very useful for this work.</t>
      <t pn="section-appendix.d-3">Work on this document was inspired by Christian Huitema, who suggested 
			that DNS64 should never be used when deploying CLAT
			in the IETF network.</t>
    </section>
    <section anchor="authors-addresses" numbered="false" removeInRFC="false" toc="include" pn="section-appendix.e">
      <name slugifiedName="name-authors-address">Author's Address</name>
      <author fullname="Jordi Palet Martinez" initials="J" surname="Palet Martinez">
        <organization showOnFrontPage="true">The IPv6 Company</organization>
        <address>
          <postal>
            <street>Molino de la Navata, 75</street>
            <city>La Navata - Galapagar</city>
            <region>Madrid</region>
            <code>28420</code>
            <country>Spain</country>
          </postal>
          <email>jordi.palet@theipv6company.com</email>
          <uri>http://www.theipv6company.com/</uri>
        </address>
      </author>
    </section>
  </back>
</rfc>
