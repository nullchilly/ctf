<?xml version='1.0' encoding='utf-8'?>
<rfc xmlns:xi="http://www.w3.org/2001/XInclude" version="3" category="std" consensus="true" docName="draft-ietf-pim-yang-17" indexInclude="true" ipr="trust200902" number="9128" prepTime="2022-10-19T16:17:15" scripts="Common,Latin" sortRefs="true" submissionType="IETF" symRefs="true" tocDepth="3" tocInclude="true" xml:lang="en">
  <link href="https://datatracker.ietf.org/doc/draft-ietf-pim-yang-17" rel="prev"/>
  <link href="https://dx.doi.org/10.17487/rfc9128" rel="alternate"/>
  <link href="urn:issn:2070-1721" rel="alternate"/>
  <front>
    <title abbrev="PIM YANG">YANG Data Model for Protocol Independent Multicast (PIM)</title>
    <seriesInfo name="RFC" value="9128" stream="IETF"/>
    <author fullname="Xufeng Liu" initials="X." surname="Liu">
      <organization showOnFrontPage="true">IBM Corporation</organization>
      <address>
        <postal>
          <street>2300 Dulles Station Blvd.</street>
          <city>Herndon</city>
          <region>VA</region>
          <code>20171</code>
          <country>United States of America</country>
        </postal>
        <email>xufeng.liu.ietf@gmail.com</email>
      </address>
    </author>
    <author fullname="Pete McAllister" initials="P." surname="McAllister">
      <organization showOnFrontPage="true">Metaswitch Networks</organization>
      <address>
        <postal>
          <street>100 Church Street</street>
          <city>Enfield</city>
          <code>EN2 6BQ</code>
          <country>United Kingdom</country>
        </postal>
        <email>pete.mcallister@metaswitch.com</email>
      </address>
    </author>
    <author fullname="Anish Peter" initials="A." surname="Peter">
      <organization showOnFrontPage="true">Individual</organization>
      <address>
        <email>anish.ietf@gmail.com</email>
      </address>
    </author>
    <author fullname="Mahesh Sivakumar" initials="M." surname="Sivakumar">
      <organization showOnFrontPage="true">Juniper Networks</organization>
      <address>
        <postal>
          <street>1133 Innovation Way</street>
          <city>Sunnyvale</city>
          <region>California</region>
          <country>United States of America</country>
        </postal>
        <email>sivakumar.mahesh@gmail.com</email>
      </address>
    </author>
    <author fullname="Yisong Liu" initials="Y." surname="Liu">
      <organization showOnFrontPage="true">China Mobile</organization>
      <address>
        <postal>
          <street>China Mobile Innovation Building</street>
          <street>32 Xuanwumen West Street</street>
          <city>Beijing</city>
          <code>100053</code>
          <country>China</country>
        </postal>
        <email>liuyisong@chinamobile.com</email>
      </address>
    </author>
    <author fullname="Fangwei Hu" initials="F." surname="Hu">
      <organization showOnFrontPage="true">Individual Contributor</organization>
      <address>
        <postal>
          <street>86 Bohang Road</street>
          <city>Shanghai</city>
          <region>Shanghai</region>
          <code>200126</code>
          <country>China</country>
        </postal>
        <email>hufwei@gmail.com</email>
      </address>
    </author>
    <date month="10" year="2022"/>
    <area>rtg</area>
    <workgroup>pim</workgroup>
    <keyword>Network Management</keyword>
    <keyword>PIM</keyword>
    <keyword>YANG</keyword>
    <abstract pn="section-abstract">
      <t indent="0" pn="section-abstract-1">
        This document defines a YANG data model that can be used to configure
        and manage devices supporting Protocol Independent Multicast (PIM). 
        The model covers the PIM protocol configuration,
        operational state, and event notifications data.
      </t>
    </abstract>
    <boilerplate>
      <section anchor="status-of-memo" numbered="false" removeInRFC="false" toc="exclude" pn="section-boilerplate.1">
        <name slugifiedName="name-status-of-this-memo">Status of This Memo</name>
        <t indent="0" pn="section-boilerplate.1-1">
            This is an Internet Standards Track document.
        </t>
        <t indent="0" pn="section-boilerplate.1-2">
            This document is a product of the Internet Engineering Task Force
            (IETF).  It represents the consensus of the IETF community.  It has
            received public review and has been approved for publication by
            the Internet Engineering Steering Group (IESG).  Further
            information on Internet Standards is available in Section 2 of 
            RFC 7841.
        </t>
        <t indent="0" pn="section-boilerplate.1-3">
            Information about the current status of this document, any
            errata, and how to provide feedback on it may be obtained at
            <eref target="https://www.rfc-editor.org/info/rfc9128" brackets="none"/>.
        </t>
      </section>
      <section anchor="copyright" numbered="false" removeInRFC="false" toc="exclude" pn="section-boilerplate.2">
        <name slugifiedName="name-copyright-notice">Copyright Notice</name>
        <t indent="0" pn="section-boilerplate.2-1">
            Copyright (c) 2022 IETF Trust and the persons identified as the
            document authors. All rights reserved.
        </t>
        <t indent="0" pn="section-boilerplate.2-2">
            This document is subject to BCP 78 and the IETF Trust's Legal
            Provisions Relating to IETF Documents
            (<eref target="https://trustee.ietf.org/license-info" brackets="none"/>) in effect on the date of
            publication of this document. Please review these documents
            carefully, as they describe your rights and restrictions with
            respect to this document. Code Components extracted from this
            document must include Revised BSD License text as described in
            Section 4.e of the Trust Legal Provisions and are provided without
            warranty as described in the Revised BSD License.
        </t>
      </section>
    </boilerplate>
    <toc>
      <section anchor="toc" numbered="false" removeInRFC="false" toc="exclude" pn="section-toc.1">
        <name slugifiedName="name-table-of-contents">Table of Contents</name>
        <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1">
          <li pn="section-toc.1-1.1">
            <t indent="0" pn="section-toc.1-1.1.1"><xref derivedContent="1" format="counter" sectionFormat="of" target="section-1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-introduction">Introduction</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.1.2">
              <li pn="section-toc.1-1.1.2.1">
                <t indent="0" keepWithNext="true" pn="section-toc.1-1.1.2.1.1"><xref derivedContent="1.1" format="counter" sectionFormat="of" target="section-1.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-terminology">Terminology</xref></t>
              </li>
              <li pn="section-toc.1-1.1.2.2">
                <t indent="0" keepWithNext="true" pn="section-toc.1-1.1.2.2.1"><xref derivedContent="1.2" format="counter" sectionFormat="of" target="section-1.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-tree-diagrams">Tree Diagrams</xref></t>
              </li>
              <li pn="section-toc.1-1.1.2.3">
                <t indent="0" keepWithNext="true" pn="section-toc.1-1.1.2.3.1"><xref derivedContent="1.3" format="counter" sectionFormat="of" target="section-1.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-prefixes-in-data-node-names">Prefixes in Data Node Names</xref></t>
              </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.2">
            <t indent="0" pn="section-toc.1-1.2.1"><xref derivedContent="2" format="counter" sectionFormat="of" target="section-2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-design-of-data-model">Design of Data Model</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.2.2">
              <li pn="section-toc.1-1.2.2.1">
                <t indent="0" pn="section-toc.1-1.2.2.1.1"><xref derivedContent="2.1" format="counter" sectionFormat="of" target="section-2.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-scope-of-model">Scope of Model</xref></t>
              </li>
              <li pn="section-toc.1-1.2.2.2">
                <t indent="0" pn="section-toc.1-1.2.2.2.1"><xref derivedContent="2.2" format="counter" sectionFormat="of" target="section-2.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-optional-capabilities">Optional Capabilities</xref></t>
              </li>
              <li pn="section-toc.1-1.2.2.3">
                <t indent="0" pn="section-toc.1-1.2.2.3.1"><xref derivedContent="2.3" format="counter" sectionFormat="of" target="section-2.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-datastore-applicability">Datastore Applicability</xref></t>
              </li>
              <li pn="section-toc.1-1.2.2.4">
                <t indent="0" pn="section-toc.1-1.2.2.4.1"><xref derivedContent="2.4" format="counter" sectionFormat="of" target="section-2.4"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-module-and-hierarchy-organi">Module and Hierarchy Organization</xref></t>
              </li>
              <li pn="section-toc.1-1.2.2.5">
                <t indent="0" pn="section-toc.1-1.2.2.5.1"><xref derivedContent="2.5" format="counter" sectionFormat="of" target="section-2.5"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-position-of-address-family-">Position of Address Family in Hierarchy</xref></t>
              </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.3">
            <t indent="0" pn="section-toc.1-1.3.1"><xref derivedContent="3" format="counter" sectionFormat="of" target="section-3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-module-structure">Module Structure</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.3.2">
              <li pn="section-toc.1-1.3.2.1">
                <t indent="0" pn="section-toc.1-1.3.2.1.1"><xref derivedContent="3.1" format="counter" sectionFormat="of" target="section-3.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-pim-base-module">PIM Base Module</xref></t>
                <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.3.2.1.2">
                  <li pn="section-toc.1-1.3.2.1.2.1">
                    <t indent="0" pn="section-toc.1-1.3.2.1.2.1.1"><xref derivedContent="3.1.1" format="counter" sectionFormat="of" target="section-3.1.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-high-level-structure">High-Level Structure</xref></t>
                  </li>
                  <li pn="section-toc.1-1.3.2.1.2.2">
                    <t indent="0" pn="section-toc.1-1.3.2.1.2.2.1"><xref derivedContent="3.1.2" format="counter" sectionFormat="of" target="section-3.1.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-global-data">Global Data</xref></t>
                  </li>
                  <li pn="section-toc.1-1.3.2.1.2.3">
                    <t indent="0" pn="section-toc.1-1.3.2.1.2.3.1"><xref derivedContent="3.1.3" format="counter" sectionFormat="of" target="section-3.1.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-per-address-family-data">Per-Address-Family Data</xref></t>
                  </li>
                  <li pn="section-toc.1-1.3.2.1.2.4">
                    <t indent="0" pn="section-toc.1-1.3.2.1.2.4.1"><xref derivedContent="3.1.4" format="counter" sectionFormat="of" target="section-3.1.4"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-pim-interface-modeling">PIM Interface Modeling</xref></t>
                  </li>
                  <li pn="section-toc.1-1.3.2.1.2.5">
                    <t indent="0" pn="section-toc.1-1.3.2.1.2.5.1"><xref derivedContent="3.1.5" format="counter" sectionFormat="of" target="section-3.1.5"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-neighbor-modeling">Neighbor Modeling</xref></t>
                  </li>
                  <li pn="section-toc.1-1.3.2.1.2.6">
                    <t indent="0" pn="section-toc.1-1.3.2.1.2.6.1"><xref derivedContent="3.1.6" format="counter" sectionFormat="of" target="section-3.1.6"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-notifications">Notifications</xref></t>
                  </li>
                </ul>
              </li>
              <li pn="section-toc.1-1.3.2.2">
                <t indent="0" pn="section-toc.1-1.3.2.2.1"><xref derivedContent="3.2" format="counter" sectionFormat="of" target="section-3.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-pim-rp-module">PIM RP Module</xref></t>
                <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.3.2.2.2">
                  <li pn="section-toc.1-1.3.2.2.2.1">
                    <t indent="0" pn="section-toc.1-1.3.2.2.2.1.1"><xref derivedContent="3.2.1" format="counter" sectionFormat="of" target="section-3.2.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-static-rps">Static RPs</xref></t>
                  </li>
                  <li pn="section-toc.1-1.3.2.2.2.2">
                    <t indent="0" pn="section-toc.1-1.3.2.2.2.2.1"><xref derivedContent="3.2.2" format="counter" sectionFormat="of" target="section-3.2.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-bsrs">BSRs</xref></t>
                  </li>
                  <li pn="section-toc.1-1.3.2.2.2.3">
                    <t indent="0" pn="section-toc.1-1.3.2.2.2.3.1"><xref derivedContent="3.2.3" format="counter" sectionFormat="of" target="section-3.2.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-rp-state-data">RP State Data</xref></t>
                  </li>
                  <li pn="section-toc.1-1.3.2.2.2.4">
                    <t indent="0" pn="section-toc.1-1.3.2.2.2.4.1"><xref derivedContent="3.2.4" format="counter" sectionFormat="of" target="section-3.2.4"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-rp-to-group-mappings">RP-to-Group Mappings</xref></t>
                  </li>
                  <li pn="section-toc.1-1.3.2.2.2.5">
                    <t indent="0" pn="section-toc.1-1.3.2.2.2.5.1"><xref derivedContent="3.2.5" format="counter" sectionFormat="of" target="section-3.2.5"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-notifications-2">Notifications</xref></t>
                  </li>
                </ul>
              </li>
              <li pn="section-toc.1-1.3.2.3">
                <t indent="0" pn="section-toc.1-1.3.2.3.1"><xref derivedContent="3.3" format="counter" sectionFormat="of" target="section-3.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-pim-sm-module">PIM-SM Module</xref></t>
              </li>
              <li pn="section-toc.1-1.3.2.4">
                <t indent="0" pn="section-toc.1-1.3.2.4.1"><xref derivedContent="3.4" format="counter" sectionFormat="of" target="section-3.4"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-pim-dm-module">PIM-DM Module</xref></t>
              </li>
              <li pn="section-toc.1-1.3.2.5">
                <t indent="0" pn="section-toc.1-1.3.2.5.1"><xref derivedContent="3.5" format="counter" sectionFormat="of" target="section-3.5"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-bidir-pim-module">BIDIR-PIM Module</xref></t>
              </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.4">
            <t indent="0" pn="section-toc.1-1.4.1"><xref derivedContent="4" format="counter" sectionFormat="of" target="section-4"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-complete-tree-structure">Complete Tree Structure</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.4.2">
              <li pn="section-toc.1-1.4.2.1">
                <t indent="0" pn="section-toc.1-1.4.2.1.1"><xref derivedContent="4.1" format="counter" sectionFormat="of" target="section-4.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-pim-base-module-2">PIM Base Module</xref></t>
              </li>
              <li pn="section-toc.1-1.4.2.2">
                <t indent="0" pn="section-toc.1-1.4.2.2.1"><xref derivedContent="4.2" format="counter" sectionFormat="of" target="section-4.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-pim-rp-module-2">PIM RP Module</xref></t>
              </li>
              <li pn="section-toc.1-1.4.2.3">
                <t indent="0" pn="section-toc.1-1.4.2.3.1"><xref derivedContent="4.3" format="counter" sectionFormat="of" target="section-4.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-pim-sm-module-2">PIM-SM Module</xref></t>
              </li>
              <li pn="section-toc.1-1.4.2.4">
                <t indent="0" pn="section-toc.1-1.4.2.4.1"><xref derivedContent="4.4" format="counter" sectionFormat="of" target="section-4.4"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-pim-dm-module-2">PIM-DM Module</xref></t>
              </li>
              <li pn="section-toc.1-1.4.2.5">
                <t indent="0" pn="section-toc.1-1.4.2.5.1"><xref derivedContent="4.5" format="counter" sectionFormat="of" target="section-4.5"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-bidir-pim-module-2">BIDIR-PIM Module</xref></t>
              </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.5">
            <t indent="0" pn="section-toc.1-1.5.1"><xref derivedContent="5" format="counter" sectionFormat="of" target="section-5"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-relationship-to-the-pim-std">Relationship to the PIM-STD-MIB</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.5.2">
              <li pn="section-toc.1-1.5.2.1">
                <t indent="0" pn="section-toc.1-1.5.2.1.1"><xref derivedContent="5.1" format="counter" sectionFormat="of" target="section-5.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-piminterfacetable">pimInterfaceTable</xref></t>
              </li>
              <li pn="section-toc.1-1.5.2.2">
                <t indent="0" pn="section-toc.1-1.5.2.2.1"><xref derivedContent="5.2" format="counter" sectionFormat="of" target="section-5.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-pimneighbortable">pimNeighborTable</xref></t>
              </li>
              <li pn="section-toc.1-1.5.2.3">
                <t indent="0" pn="section-toc.1-1.5.2.3.1"><xref derivedContent="5.3" format="counter" sectionFormat="of" target="section-5.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-pimstargtable">pimStarGTable</xref></t>
              </li>
              <li pn="section-toc.1-1.5.2.4">
                <t indent="0" pn="section-toc.1-1.5.2.4.1"><xref derivedContent="5.4" format="counter" sectionFormat="of" target="section-5.4"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-pimsgtable">pimSGTable</xref></t>
              </li>
              <li pn="section-toc.1-1.5.2.5">
                <t indent="0" pn="section-toc.1-1.5.2.5.1"><xref derivedContent="5.5" format="counter" sectionFormat="of" target="section-5.5"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-pimsgrpttable">pimSGRptTable</xref></t>
              </li>
              <li pn="section-toc.1-1.5.2.6">
                <t indent="0" pn="section-toc.1-1.5.2.6.1"><xref derivedContent="5.6" format="counter" sectionFormat="of" target="section-5.6"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-pimbidirdfelectiontable">pimBidirDFElectionTable</xref></t>
              </li>
              <li pn="section-toc.1-1.5.2.7">
                <t indent="0" pn="section-toc.1-1.5.2.7.1"><xref derivedContent="5.7" format="counter" sectionFormat="of" target="section-5.7"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-pimstaticrptable">pimStaticRPTable</xref></t>
              </li>
              <li pn="section-toc.1-1.5.2.8">
                <t indent="0" pn="section-toc.1-1.5.2.8.1"><xref derivedContent="5.8" format="counter" sectionFormat="of" target="section-5.8"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-pimanycastrpsettable">pimAnycastRPSetTable</xref></t>
              </li>
              <li pn="section-toc.1-1.5.2.9">
                <t indent="0" pn="section-toc.1-1.5.2.9.1"><xref derivedContent="5.9" format="counter" sectionFormat="of" target="section-5.9"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-pimgroupmappingtable">pimGroupMappingTable</xref></t>
              </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.6">
            <t indent="0" pn="section-toc.1-1.6.1"><xref derivedContent="6" format="counter" sectionFormat="of" target="section-6"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-pim-yang-modules">PIM YANG Modules</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.6.2">
              <li pn="section-toc.1-1.6.2.1">
                <t indent="0" pn="section-toc.1-1.6.2.1.1"><xref derivedContent="6.1" format="counter" sectionFormat="of" target="section-6.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-pim-base-module-3">PIM Base Module</xref></t>
              </li>
              <li pn="section-toc.1-1.6.2.2">
                <t indent="0" pn="section-toc.1-1.6.2.2.1"><xref derivedContent="6.2" format="counter" sectionFormat="of" target="section-6.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-pim-rp-module-3">PIM RP Module</xref></t>
              </li>
              <li pn="section-toc.1-1.6.2.3">
                <t indent="0" pn="section-toc.1-1.6.2.3.1"><xref derivedContent="6.3" format="counter" sectionFormat="of" target="section-6.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-pim-sm-module-3">PIM-SM Module</xref></t>
              </li>
              <li pn="section-toc.1-1.6.2.4">
                <t indent="0" pn="section-toc.1-1.6.2.4.1"><xref derivedContent="6.4" format="counter" sectionFormat="of" target="section-6.4"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-pim-dm-module-3">PIM-DM Module</xref></t>
              </li>
              <li pn="section-toc.1-1.6.2.5">
                <t indent="0" pn="section-toc.1-1.6.2.5.1"><xref derivedContent="6.5" format="counter" sectionFormat="of" target="section-6.5"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-bidir-pim-module-3">BIDIR-PIM Module</xref></t>
              </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.7">
            <t indent="0" pn="section-toc.1-1.7.1"><xref derivedContent="7" format="counter" sectionFormat="of" target="section-7"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-security-considerations">Security Considerations</xref></t>
          </li>
          <li pn="section-toc.1-1.8">
            <t indent="0" pn="section-toc.1-1.8.1"><xref derivedContent="8" format="counter" sectionFormat="of" target="section-8"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-iana-considerations">IANA Considerations</xref></t>
          </li>
          <li pn="section-toc.1-1.9">
            <t indent="0" pn="section-toc.1-1.9.1"><xref derivedContent="9" format="counter" sectionFormat="of" target="section-9"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-references">References</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.9.2">
              <li pn="section-toc.1-1.9.2.1">
                <t indent="0" pn="section-toc.1-1.9.2.1.1"><xref derivedContent="9.1" format="counter" sectionFormat="of" target="section-9.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-normative-references">Normative References</xref></t>
              </li>
              <li pn="section-toc.1-1.9.2.2">
                <t indent="0" pn="section-toc.1-1.9.2.2.1"><xref derivedContent="9.2" format="counter" sectionFormat="of" target="section-9.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-informative-references">Informative References</xref></t>
              </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.10">
            <t indent="0" pn="section-toc.1-1.10.1"><xref derivedContent="Appendix A" format="default" sectionFormat="of" target="section-appendix.a"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-data-tree-example">Data Tree Example</xref></t>
          </li>
          <li pn="section-toc.1-1.11">
            <t indent="0" pn="section-toc.1-1.11.1"><xref derivedContent="" format="none" sectionFormat="of" target="section-appendix.b"/><xref derivedContent="" format="title" sectionFormat="of" target="name-acknowledgments">Acknowledgments</xref></t>
          </li>
          <li pn="section-toc.1-1.12">
            <t indent="0" pn="section-toc.1-1.12.1"><xref derivedContent="" format="none" sectionFormat="of" target="section-appendix.c"/><xref derivedContent="" format="title" sectionFormat="of" target="name-authors-addresses">Authors' Addresses</xref></t>
          </li>
        </ul>
      </section>
    </toc>
  </front>
  <middle>
    <section numbered="true" toc="include" removeInRFC="false" pn="section-1">
      <name slugifiedName="name-introduction">Introduction</name>
      <t indent="0" pn="section-1-1">
    YANG <xref target="RFC7950" format="default" sectionFormat="of" derivedContent="RFC7950"/> is a data
    modeling language that was introduced to model the configuration
    and operational state of a device managed using network management
    protocols such as the Network Configuration Protocol (NETCONF) <xref target="RFC6241" format="default" sectionFormat="of" derivedContent="RFC6241"/> or RESTCONF 
    <xref target="RFC8040" format="default" sectionFormat="of" derivedContent="RFC8040"/>.
    YANG is now also being used as a component of other management
    interfaces, such as command-line interfaces (CLIs).</t>
      <t indent="0" pn="section-1-2">
    This document defines a YANG data model that can be used to
    configure and manage devices supporting Protocol Independent
    Multicast (PIM).
    This model supports the core PIM
    protocol, as well as many other features; see <xref target="scope" format="default" sectionFormat="of" derivedContent="Section 2.1"/>.
   Non-core features are defined as optional in the provided data model.
      </t>
      <section numbered="true" toc="include" removeInRFC="false" pn="section-1.1">
        <name slugifiedName="name-terminology">Terminology</name>
        <t indent="0" pn="section-1.1-1">
      The terminology for describing YANG data models is found in
      <xref target="RFC7950" format="default" sectionFormat="of" derivedContent="RFC7950"/>.
        </t>
        <t indent="0" pn="section-1.1-2">
      The following abbreviations are used in this document and
      the defined model:
        </t>
        <dl newline="false" spacing="normal" indent="13" pn="section-1.1-3">
          <dt pn="section-1.1-3.1">ASM:</dt>
          <dd pn="section-1.1-3.2">Any-Source Multicast service model
        <xref target="RFC3569" format="default" sectionFormat="of" derivedContent="RFC3569"/> <xref target="RFC4607" format="default" sectionFormat="of" derivedContent="RFC4607"/>
          </dd>
          <dt pn="section-1.1-3.3">BFD:</dt>
          <dd pn="section-1.1-3.4">Bidirectional Forwarding Detection <xref target="RFC5880" format="default" sectionFormat="of" derivedContent="RFC5880"/>
          </dd>
          <dt pn="section-1.1-3.5">BIDIR-PIM:</dt>
          <dd pn="section-1.1-3.6">Protocol Independent Multicast - Bidirectional Mode
        <xref target="RFC5015" format="default" sectionFormat="of" derivedContent="RFC5015"/>
          </dd>
          <dt pn="section-1.1-3.7">BSR:</dt>
          <dd pn="section-1.1-3.8">Bootstrap Router <xref target="RFC5059" format="default" sectionFormat="of" derivedContent="RFC5059"/>
          </dd>
          <dt pn="section-1.1-3.9">DF:</dt>
          <dd pn="section-1.1-3.10">Designated Forwarder <xref target="RFC5015" format="default" sectionFormat="of" derivedContent="RFC5015"/>
          </dd>
          <dt pn="section-1.1-3.11">DR:</dt>
          <dd pn="section-1.1-3.12">Designated Router <xref target="RFC7761" format="default" sectionFormat="of" derivedContent="RFC7761"/>
          </dd>
          <dt pn="section-1.1-3.13">IGMP:</dt>
          <dd pn="section-1.1-3.14">Internet Group Management Protocol <xref target="RFC3376" format="default" sectionFormat="of" derivedContent="RFC3376"/>
          </dd>
          <dt pn="section-1.1-3.15">MLD:</dt>
          <dd pn="section-1.1-3.16">Multicast Listener Discovery <xref target="RFC3810" format="default" sectionFormat="of" derivedContent="RFC3810"/>
          </dd>
          <dt pn="section-1.1-3.17">mLDP:</dt>
          <dd pn="section-1.1-3.18">Multipoint extensions for LDP <xref target="RFC6388" format="default" sectionFormat="of" derivedContent="RFC6388"/>
          </dd>
          <dt pn="section-1.1-3.19">MRIB:</dt>
          <dd pn="section-1.1-3.20">Multicast Routing Information Base <xref target="RFC3973" format="default" sectionFormat="of" derivedContent="RFC3973"/>
            <xref target="RFC5015" format="default" sectionFormat="of" derivedContent="RFC5015"/> <xref target="RFC7761" format="default" sectionFormat="of" derivedContent="RFC7761"/>
          </dd>
          <dt pn="section-1.1-3.21">MSDP:</dt>
          <dd pn="section-1.1-3.22">Multicast Source Discovery Protocol <xref target="RFC3618" format="default" sectionFormat="of" derivedContent="RFC3618"/>
          </dd>
          <dt pn="section-1.1-3.23">mVPN:</dt>
          <dd pn="section-1.1-3.24">Multicast VPN
        </dd>
          <dt pn="section-1.1-3.25">PIM:</dt>
          <dd pn="section-1.1-3.26">Protocol Independent Multicast <xref target="RFC3973" format="default" sectionFormat="of" derivedContent="RFC3973"/>
            <xref target="RFC5015" format="default" sectionFormat="of" derivedContent="RFC5015"/> <xref target="RFC7761" format="default" sectionFormat="of" derivedContent="RFC7761"/>
          </dd>
          <dt pn="section-1.1-3.27">PIM-DM:</dt>
          <dd pn="section-1.1-3.28">Protocol Independent Multicast - Dense Mode
        <xref target="RFC3973" format="default" sectionFormat="of" derivedContent="RFC3973"/>
          </dd>
          <dt pn="section-1.1-3.29">PIM-SM:</dt>
          <dd pn="section-1.1-3.30">Protocol Independent Multicast - Sparse Mode
        <xref target="RFC7761" format="default" sectionFormat="of" derivedContent="RFC7761"/>
          </dd>
          <dt pn="section-1.1-3.31">RP:</dt>
          <dd pn="section-1.1-3.32">Rendezvous Point <xref target="RFC7761" format="default" sectionFormat="of" derivedContent="RFC7761"/>
          </dd>
          <dt pn="section-1.1-3.33">RPA:</dt>
          <dd pn="section-1.1-3.34">Rendezvous Point Address <xref target="RFC5015" format="default" sectionFormat="of" derivedContent="RFC5015"/>
          </dd>
          <dt pn="section-1.1-3.35">RPF:</dt>
          <dd pn="section-1.1-3.36">Reverse Path Forwarding <xref target="RFC3973" format="default" sectionFormat="of" derivedContent="RFC3973"/>
            <xref target="RFC5015" format="default" sectionFormat="of" derivedContent="RFC5015"/> <xref target="RFC7761" format="default" sectionFormat="of" derivedContent="RFC7761"/>
          </dd>
          <dt pn="section-1.1-3.37">RPT:</dt>
          <dd pn="section-1.1-3.38">Rendezvous Point Tree <xref target="RFC7761" format="default" sectionFormat="of" derivedContent="RFC7761"/>
          </dd>
          <dt pn="section-1.1-3.39">SPT:</dt>
          <dd pn="section-1.1-3.40">Shortest Path Tree <xref target="RFC7761" format="default" sectionFormat="of" derivedContent="RFC7761"/>
          </dd>
          <dt pn="section-1.1-3.41">SSM:</dt>
          <dd pn="section-1.1-3.42">Source-Specific Multicast service model
        <xref target="RFC3569" format="default" sectionFormat="of" derivedContent="RFC3569"/> <xref target="RFC4607" format="default" sectionFormat="of" derivedContent="RFC4607"/>
          </dd>
          <dt pn="section-1.1-3.43">VRF:</dt>
          <dd pn="section-1.1-3.44">Virtual Routing and Forwarding
        </dd>
        </dl>
      </section>
      <section numbered="true" toc="include" removeInRFC="false" pn="section-1.2">
        <name slugifiedName="name-tree-diagrams">Tree Diagrams</name>
        <t indent="0" pn="section-1.2-1">
      Tree diagrams used in this document follow the notation defined in
      <xref target="RFC8340" format="default" sectionFormat="of" derivedContent="RFC8340"/>.
        </t>
        <t indent="0" pn="section-1.2-2">
      In addition, the following notation is used as a placeholder at
      the location of the name of a tree node, to represent a section
      of nodes:
        </t>
        <t indent="0" pn="section-1.2-3">
      &lt;summary description of a section of nodes&gt;
        </t>
      </section>
      <section numbered="true" toc="include" removeInRFC="false" pn="section-1.3">
        <name slugifiedName="name-prefixes-in-data-node-names">Prefixes in Data Node Names</name>
        <t indent="0" pn="section-1.3-1">
      In this document, names of data nodes, actions, and other data model
      objects are often used without a prefix, as long as the context clearly
      indicates the YANG module in which each name is defined.  Otherwise,
      names are prefixed using the standard prefix associated with the
      corresponding YANG module, as shown in <xref target="table_prefixes" format="default" sectionFormat="of" derivedContent="Table 1"/>.
        </t>
        <table anchor="table_prefixes" align="center" pn="table-1">
          <name slugifiedName="name-prefixes-and-corresponding-">Prefixes and Corresponding YANG Modules</name>
          <thead>
            <tr>
              <th align="left" colspan="1" rowspan="1">Prefix</th>
              <th align="left" colspan="1" rowspan="1">YANG Module</th>
              <th align="left" colspan="1" rowspan="1">Reference</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left" colspan="1" rowspan="1">yang</td>
              <td align="left" colspan="1" rowspan="1">ietf-yang-types</td>
              <td align="left" colspan="1" rowspan="1">
                <xref target="RFC6991" format="default" sectionFormat="of" derivedContent="RFC6991"/></td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">inet</td>
              <td align="left" colspan="1" rowspan="1">ietf-inet-types</td>
              <td align="left" colspan="1" rowspan="1">
                <xref target="RFC6991" format="default" sectionFormat="of" derivedContent="RFC6991"/></td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">if</td>
              <td align="left" colspan="1" rowspan="1">ietf-interfaces</td>
              <td align="left" colspan="1" rowspan="1">
                <xref target="RFC8343" format="default" sectionFormat="of" derivedContent="RFC8343"/></td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">rt</td>
              <td align="left" colspan="1" rowspan="1">ietf-routing</td>
              <td align="left" colspan="1" rowspan="1">
                <xref target="RFC8349" format="default" sectionFormat="of" derivedContent="RFC8349"/></td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">rt-types</td>
              <td align="left" colspan="1" rowspan="1">ietf-routing-types</td>
              <td align="left" colspan="1" rowspan="1">
                <xref target="RFC8294" format="default" sectionFormat="of" derivedContent="RFC8294"/></td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">bfd-types</td>
              <td align="left" colspan="1" rowspan="1">ietf-bfd-types</td>
              <td align="left" colspan="1" rowspan="1">
                <xref target="RFC9314" format="default" sectionFormat="of" derivedContent="RFC9314"/></td>
            </tr>
          </tbody>
        </table>
      </section>
    </section>
    <section numbered="true" toc="include" removeInRFC="false" pn="section-2">
      <name slugifiedName="name-design-of-data-model">Design of Data Model</name>
      <section anchor="scope" numbered="true" toc="include" removeInRFC="false" pn="section-2.1">
        <name slugifiedName="name-scope-of-model">Scope of Model</name>
        <t indent="0" pn="section-2.1-1">
      The model covers PIM Sparse Mode <xref target="RFC7761" format="default" sectionFormat="of" derivedContent="RFC7761"/> (including the
      Source-Specific subset <xref target="RFC3569" format="default" sectionFormat="of" derivedContent="RFC3569"/>
          <xref target="RFC4607" format="default" sectionFormat="of" derivedContent="RFC4607"/>), Dense Mode
      <xref target="RFC3973" format="default" sectionFormat="of" derivedContent="RFC3973"/>, and Bidirectional PIM <xref target="RFC5015" format="default" sectionFormat="of" derivedContent="RFC5015"/>.
        </t>
        <t indent="0" pn="section-2.1-2">
      The PIM extensions represented in the model include BSRs
      <xref target="RFC5059" format="default" sectionFormat="of" derivedContent="RFC5059"/> and Anycast-RPs <xref target="RFC4610" format="default" sectionFormat="of" derivedContent="RFC4610"/>.
        </t>
        <t indent="0" pn="section-2.1-3">
      The data model can be used to configure and manage these
      protocol features. The operational state data and statistics
      can be retrieved by this model. The protocol-specific
      notifications are also defined in the model.
        </t>
        <t indent="0" pn="section-2.1-4">
      This model does not cover other multicast protocols such as IGMP/MLD,
      MSDP, mVPN, or mLDP in-band signaling. It does not cover
      any configuration required to generate the MRIB. These will
      be specified in separate documents.
        </t>
      </section>
      <section numbered="true" toc="include" removeInRFC="false" pn="section-2.2">
        <name slugifiedName="name-optional-capabilities">Optional Capabilities</name>
        <t indent="0" pn="section-2.2-1">
      This model is designed to represent the capabilities of
      devices supporting PIM 
      with various specifications, including some with basic subsets of the
      PIM protocol. The main design goals of this document are that any major
      currently existing implementation may be said to support the base model
      and that the configuration of all implementations meeting the 
      specification is easy to express through some combination of the
      features in the base model and simple vendor augmentations.
        </t>
        <t indent="0" pn="section-2.2-2">
      There is also value in widely supported features being standardized, to
      save work for individual vendors, and so that mapping between different
      vendors' configurations is not needlessly complicated. Therefore, these
      modules declare a number of features representing capabilities that
      not all deployed devices support.
        </t>
        <t indent="0" pn="section-2.2-3">
      The extensive use of feature declarations should also substantially
      simplify the capability negotiation process for a vendor's PIM
      implementation.
        </t>
        <t indent="0" pn="section-2.2-4">
      On the other hand, operational state parameters are not so widely
      designated as features, as there are many cases where the defaulting
      of an operational state parameter would not cause any harm to the
      system, and it is much more likely that an implementation without
      intrinsic support for a piece of operational state would be able to
      derive a suitable value for a state variable that is not intrinsically
      supported.
        </t>
        <t indent="0" pn="section-2.2-5">
      For the same reason, wide constant ranges (for example, timer maxima
      and minima) are used in the model. It is expected that
      vendors will augment the model with any specific extensions
      and restrictions needed to adapt it to their vendor-specific
      implementations.  
        </t>
      </section>
      <section numbered="true" toc="include" removeInRFC="false" pn="section-2.3">
        <name slugifiedName="name-datastore-applicability">Datastore Applicability</name>
        <t indent="0" pn="section-2.3-1">
      This model conforms to the Network Management Datastore
      Architecture (NMDA) 
      <xref target="RFC8342" format="default" sectionFormat="of" derivedContent="RFC8342"/>.
      The operational state data is combined with the associated
      configuration data in the same hierarchy
      <xref target="RFC8407" format="default" sectionFormat="of" derivedContent="RFC8407"/>.
        </t>
      </section>
      <section numbered="true" toc="include" removeInRFC="false" pn="section-2.4">
        <name slugifiedName="name-module-and-hierarchy-organi">Module and Hierarchy Organization</name>
        <t indent="0" pn="section-2.4-1">
      This model defines several separate modules for modeling PIM
      configuration. Again, this separation makes it
      easier to express the specific capabilities of a PIM device. 
      The module organization, along with the usage of the YANG
      extensible features such as identity, allows the model to be
      easily augmented for new capabilities.  
        </t>
        <t indent="0" pn="section-2.4-2">
      The hierarchy of PIM configuration is designed so that objects that
      are only relevant for one situation or feature are collected in a
      container for that feature. For example, a configuration for PIM-SM
      that is not relevant for an SSM-only implementation is collected in an
      ASM container.
        </t>
        <t indent="0" pn="section-2.4-3">
      Where fields are not genuinely essential to protocol operation, they
      are marked as optional. Some fields are essential but have a
      default specified, so they need not be explicitly configured.
        </t>
        <t indent="0" pn="section-2.4-4">
      This module structure also applies, where applicable, to the operational
      state and notifications of the model.
        </t>
      </section>
      <section numbered="true" toc="include" removeInRFC="false" pn="section-2.5">
        <name slugifiedName="name-position-of-address-family-">Position of Address Family in Hierarchy</name>
        <t indent="0" pn="section-2.5-1">
      This document contains "address-family" as a node in the hierarchy
      multiple times: under both the interface list and the PIM instance.
        </t>
        <t indent="0" pn="section-2.5-2">
      The reasoning for this is to make it easier for implementations in which
      configuration options are not supported for specific address families.
        </t>
        <t indent="0" pn="section-2.5-3">
      For these implementations, the restriction that interface configuration
      must be address-family independent may be expressed either (1) as
      a vendor augmentation of an address-family-independent parameter above
      the address-family level or (2) by a constraint on the base model
      objects of a form similar to the following:
        </t>
        <sourcecode type="yang" markers="false" pn="section-2.5-4">
deviation "/rt:routing/rt:control-plane-protocols/"
  + "pim-base:pim/pim-base:interfaces/pim-base:interface/"
  + "pim-base:address-family" {

  deviate add {
    must "(address-family = 'rt:ipv4' and dr-priority = "
      + "../address-family[address-family = 'rt:ipv6']/"
      + "dr-priority) or "
      + "(address-family = 'rt:ipv6' and dr-priority = "
      + "../address-family[address-family = 'rt:ipv4']/"
      + "dr-priority)" {
      error-message
        "Error: The IPv6 DR priority must match the "
      + "IPv4 DR priority.";
      error-app-tag "dr-priority-mismatch";
    }
  }
}
</sourcecode>
      </section>
    </section>
    <section numbered="true" toc="include" removeInRFC="false" pn="section-3">
      <name slugifiedName="name-module-structure">Module Structure</name>
      <section numbered="true" toc="include" removeInRFC="false" pn="section-3.1">
        <name slugifiedName="name-pim-base-module">PIM Base Module</name>
        <t indent="0" pn="section-3.1-1">
      The PIM base module defines the base framework not
      specific to any PIM mode and is imported by the other
      modules. The base module by itself does not provide
      sufficient data for any PIM mode to operate. Other mode-specific
      and feature-specific modules need to be implemented
      in addition to this module, depending on the feature set
      required by the implementation.
        </t>
        <t indent="0" pn="section-3.1-2">
      This model augments the core routing data model "ietf-routing"
      specified in <xref target="RFC8349" format="default" sectionFormat="of" derivedContent="RFC8349"/>.
      The PIM base model augments 
      "/rt:routing/rt:control-plane-protocols" as opposed to
      augmenting 
      "/rt:routing/rt:control-plane-protocols/rt:control-plane-protocol",
      as the 
      latter would allow multiple protocol instances,
      while the PIM protocol is designed to be enabled or
      disabled as a single protocol instance on a network instance or
      a logical network element. 
        </t>
        <section numbered="true" toc="include" removeInRFC="false" pn="section-3.1.1">
          <name slugifiedName="name-high-level-structure">High-Level Structure</name>
          <t indent="0" pn="section-3.1.1-1">
        The high-level structure of the model is shown below:
          </t>
          <sourcecode type="yangtree" markers="false" pn="section-3.1.1-2">
module: ietf-pim-base
  augment /rt:routing/rt:control-plane-protocols:
    +--rw pim!
       +--rw &lt;global configuration&gt;
       +--ro &lt;global operational state&gt;
       +--rw address-family* [address-family]
       |  +--rw address-family        identityref
       |  +--rw &lt;per-address-family configuration&gt;
       |  +--ro &lt;per-address-family operational state&gt;
       +--rw interfaces
          +--rw interface* [name]
             +--rw name              if:interface-ref
             +--rw address-family* [address-family]
                +--rw address-family       identityref
                +--rw &lt;per interface configuration&gt;
                +--ro &lt;per interface operational state&gt;
                +--ro neighbors
                   +--ro ipv4-neighbor* [address]
                   |  +--ro address            inet:ipv4-address
                   |  +--ro &lt;IPv4 per-neighbor operational state&gt;
                   +--ro ipv6-neighbor* [address]
                      +--ro address            inet:ipv6-address
                      +--ro &lt;IPv4 per-neighbor operational state&gt;
</sourcecode>
          <t indent="0" pn="section-3.1.1-3">
        The presence of the top-level container "pim" enables the PIM
        protocols.
          </t>
        </section>
        <section numbered="true" toc="include" removeInRFC="false" pn="section-3.1.2">
          <name slugifiedName="name-global-data">Global Data</name>
          <t indent="0" pn="section-3.1.2-1">
        The global configuration data and operational state data cover
        support for graceful restart in the PIM base model. Additional
        features can be added by augmentation if required by an
        implementation.
          </t>
        </section>
        <section numbered="true" toc="include" removeInRFC="false" pn="section-3.1.3">
          <name slugifiedName="name-per-address-family-data">Per-Address-Family Data</name>
          <t indent="0" pn="section-3.1.3-1">
        Support for per-address-family data is shown below:
          </t>
          <sourcecode type="yangtree" markers="false" pn="section-3.1.3-2">
+--rw pim!
   +--rw address-family* [address-family]
   |  +--rw address-family        identityref
   |  +--rw graceful-restart
            ...
   |  +--ro statistics
   |  |  +--ro discontinuity-time?   yang:date-and-time
   |  |  +--ro error
   |  |  |  +--ro assert?                       yang:counter32
                  ...
   |  |  +--ro queue
   |  |  |  +--ro size?       uint32
   |  |  |  +--ro overflow?   yang:counter32
   |  |  +--ro received
   |  |  |  +--ro assert?                       yang:counter32
                  ...
   |  |  +--ro sent
   |  |     +--ro assert?                       yang:counter32
                  ...
   |  +--ro topology-tree-info
   |  |  +--ro ipv4-route* [group source-address is-rpt]
   |  |  |  +--ro group
   |  |  |  |       rt-types:ipv4-multicast-group-address
   |  |  |  +--ro source-address
   |  |  |  |       rt-types:ipv4-multicast-source-address
   |  |  |  +--ro is-rpt                boolean
   |  |  +--ro ipv6-route* [group source-address is-rpt]

   |  |     +--ro group
   |  |     |       rt-types:ipv6-multicast-group-address
   |  |     +--ro source-address
   |  |     |       rt-types:ipv6-multicast-source-address
   |  |     +--ro is-rpt                boolean
                  ...
   |  |     +--ro incoming-interface?   if:interface-ref
                  ...
   |  |     +--ro outgoing-interface* [name]
   |  |        +--ro name          if:interface-ref
   |  |        +--ro expiration?   rt-types:timer-value-seconds16
   |  |        +--ro up-time?      rt-types:timeticks64
   |  |        +--ro jp-state?     enumeration
</sourcecode>
          <t indent="0" pn="section-3.1.3-3">
        This is the location that most of the PIM RP module
        (ietf-pim-rp) augments. Each of the mode-specific modules also
        augments this schema tree.
          </t>
        </section>
        <section numbered="true" toc="include" removeInRFC="false" pn="section-3.1.4">
          <name slugifiedName="name-pim-interface-modeling">PIM Interface Modeling</name>
          <t indent="0" pn="section-3.1.4-1">
        The configuration data and operational state data of PIM interfaces
        are modeled as shown below:
          </t>
          <sourcecode type="yangtree" markers="false" pn="section-3.1.4-2">
+--rw pim!
   +--rw interfaces
      +--rw interface* [name]
         +--rw name              if:interface-ref
         +--rw address-family* [address-family]
            +--rw address-family       identityref
            +--rw bfd {bfd}?
                  ...
            +--rw dr-priority?         uint32 {intf-dr-priority}?
            +--rw hello-interval?      rt-types:timer-value-seconds16
            |       {intf-hello-interval}?
            +--rw (hello-holdtime-or-multiplier)?
            |  +--:(holdtime) {intf-hello-holdtime}?
            |  |  +--rw hello-holdtime?
            |  |          rt-types:timer-value-seconds16
            |  +--:(multiplier) {intf-hello-multiplier}?
            |     +--rw hello-multiplier?
            |             rt-types:timer-multiplier
            +--rw jp-interval?         rt-types:timer-value-seconds16
            |       {intf-jp-interval}?
            +--rw (jp-holdtime-or-multiplier)?
            |  +--:(holdtime) {intf-jp-holdtime}?
            |  |  +--rw jp-holdtime?
            |  |          rt-types:timer-value-seconds16
            |  +--:(multiplier) {intf-jp-multiplier}?
            |     +--rw jp-multiplier?
            |             rt-types:timer-multiplier
            +--rw override-interval?   uint16
            |       {intf-override-interval}?
            +--rw propagation-delay?   uint16
            |       {intf-propagation-delay}?
            +--ro oper-status?         enumeration
            +--ro gen-id?              uint32
            +--ro hello-expiration?    rt-types:timer-value-seconds16
            +--ro ipv4
            |  +--ro address*      inet:ipv4-address
            |  +--ro dr-address?   inet:ipv4-address
            +--ro ipv6
            |  +--ro address*      inet:ipv6-address
            |  +--ro dr-address?   inet:ipv6-address
</sourcecode>
          <t indent="0" pn="section-3.1.4-3">
        Support for BFD client configuration is achieved by using a grouping provided
        by an external module, "ietf-bfd-types", as defined in 
        <xref target="RFC9314" format="default" sectionFormat="of" derivedContent="RFC9314"/>.
          </t>
        </section>
        <section numbered="true" toc="include" removeInRFC="false" pn="section-3.1.5">
          <name slugifiedName="name-neighbor-modeling">Neighbor Modeling</name>
          <t indent="0" pn="section-3.1.5-1">
        For each PIM interface, there can be a list of neighbors
        that contains operational state data for each neighbor.
 To model such data, the
        following structure is specified:
          </t>
          <sourcecode type="yangtree" markers="false" pn="section-3.1.5-2">
+--rw pim!
   +--rw interfaces
      +--rw interface* [name]
         +--rw address-family* [address-family]
            +--ro neighbors
               +--ro ipv4-neighbor* [address]
               |  +--ro address            inet:ipv4-address
               |  +--ro bfd-status?        enumeration
               |  +--ro expiration?
               |  |       rt-types:timer-value-seconds16
               |  +--ro dr-priority?       uint32
               |  +--ro gen-id?            uint32
               |  +--ro lan-prune-delay
               |  |  +--ro present?             boolean
               |  |  +--ro override-interval?   uint16
               |  |  +--ro propagation-delay?   uint16
               |  |  +--ro t-bit?               boolean
               |  +--ro up-time?           rt-types:timeticks64
               +--ro ipv6-neighbor* [address]
                  +--ro address            inet:ipv6-address
                  +--ro bfd-status?        enumeration
                  +--ro expiration?
                  |       rt-types:timer-value-seconds16
                  +--ro dr-priority?       uint32
                  +--ro gen-id?            uint32
                  +--ro lan-prune-delay
                  |  +--ro present?             boolean
                  |  +--ro override-interval?   uint16
                  |  +--ro propagation-delay?   uint16
                  |  +--ro t-bit?               boolean
                  +--ro up-time?           rt-types:timeticks64
</sourcecode>
        </section>
        <section numbered="true" toc="include" removeInRFC="false" pn="section-3.1.6">
          <name slugifiedName="name-notifications">Notifications</name>
          <t indent="0" pn="section-3.1.6-1">
        The PIM base module also defines the notifications for PIM
        interface and neighbor events, as shown below:
          </t>
          <sourcecode type="yangtree" markers="false" pn="section-3.1.6-2">
  notifications:
    +---n pim-neighbor-event
    |  +--ro event-type?          neighbor-event-type
    |  +--ro interface-ref?       leafref
    |  +--ro interface-af-ref?    leafref
    |  +--ro neighbor-ipv4-ref?   leafref
    |  +--ro neighbor-ipv6-ref?   leafref
    |  +--ro up-time?             rt-types:timeticks64
    +---n pim-interface-event
       +--ro event-type?      interface-event-type
       +--ro interface-ref?   leafref
       +--ro ipv4
       |  +--ro address*      inet:ipv4-address
       |  +--ro dr-address?   inet:ipv4-address
       +--ro ipv6
          +--ro address*      inet:ipv6-address
          +--ro dr-address?   inet:ipv6-address
</sourcecode>
        </section>
      </section>
      <section numbered="true" toc="include" removeInRFC="false" pn="section-3.2">
        <name slugifiedName="name-pim-rp-module">PIM RP Module</name>
        <t indent="0" pn="section-3.2-1">
      The PIM RP module augments the PIM base module to define
      the configuration and operational state information scoped to
      RP-related features:
        </t>
        <sourcecode type="yangtree" markers="false" pn="section-3.2-2">
module: ietf-pim-rp
  augment /rt:routing/rt:control-plane-protocols/pim-base:pim
/pim-base:address-family:
    +--rw rp
       +--rw static-rp
             ...
       +--rw bsr {bsr}?
             ...
       +--ro rp-list
             ...
       +--ro rp-mappings
             ...
</sourcecode>
        <t indent="0" pn="section-3.2-3">
      This module is shared by PIM-SM and BIDIR-PIM mode but is not shared
      by PIM-DM.  The PIM-SM module and the BIDIR-PIM module augment
      this module to cover mode-specific data.
        </t>
        <t indent="0" pn="section-3.2-4">
      The following sections describe the features and capabilities
      covered in this module.
        </t>
        <section numbered="true" toc="include" removeInRFC="false" pn="section-3.2.1">
          <name slugifiedName="name-static-rps">Static RPs</name>
          <t indent="0" pn="section-3.2.1-1">
        Static RPs can be configured by using the following portion of
        the module:
          </t>
          <sourcecode type="yangtree" markers="false" pn="section-3.2.1-2">
+--rw rp
   +--rw static-rp
   |  +--rw ipv4-rp* [rp-address]
   |  |  +--rw rp-address    inet:ipv4-address
   |  +--rw ipv6-rp* [rp-address]
   |     +--rw rp-address    inet:ipv6-address
</sourcecode>
        </section>
        <section numbered="true" toc="include" removeInRFC="false" pn="section-3.2.2">
          <name slugifiedName="name-bsrs">BSRs</name>
          <t indent="0" pn="section-3.2.2-1">
        Support for BSRs includes both configuration data and
        operational state data, as shown below:
          </t>
          <sourcecode type="yangtree" markers="false" pn="section-3.2.2-2">
+--rw rp
   +--rw bsr {bsr}?
   |  +--rw bsr-candidate!
   |  |  +--rw (interface-or-address)?
   |  |  |  +--:(interface) {candidate-interface}?
   |  |  |  |  +--rw interface           if:interface-ref
   |  |  |  +--:(ipv4-address) {candidate-ipv4}?
   |  |  |  |  +--rw ipv4-address        inet:ipv4-address
   |  |  |  +--:(ipv6-address) {candidate-ipv6}?
   |  |  |     +--rw ipv6-address        inet:ipv6-address
   |  |  +--rw hash-mask-length    uint8
   |  |  +--rw priority?           uint8
   |  +--rw rp-candidate
   |  |  +--rw interface* [name] {candidate-interface}?
   |  |  |  +--rw name           if:interface-ref
   |  |  |  +--rw policy-name?   string
   |  |  |  +--rw mode?          identityref
   |  |  +--rw ipv4-address* [address] {candidate-ipv4}?
   |  |  |  +--rw address        inet:ipv4-address
   |  |  |  +--rw policy-name?   string
   |  |  |  +--rw mode?          identityref
   |  |  +--rw ipv6-address* [address] {candidate-ipv6}?
   |  |     +--rw address        inet:ipv6-address
   |  |     +--rw policy-name?   string
   |  |     +--rw mode?          identityref
   |  +--ro bsr
   |  |  +--ro address?            inet:ip-address
   |  |  +--ro hash-mask-length?   uint8
   |  |  +--ro priority?           uint8
   |  |  +--ro up-time?            rt-types:timeticks64
   |  +--ro (election-state)? {bsr-election-state}?
   |  |  +--:(candidate)
   |  |  |  +--ro candidate-bsr-state?               enumeration
   |  |  +--:(non-candidate)
   |  |     +--ro non-candidate-bsr-state?           enumeration
   |  +--ro bsr-next-bootstrap?                uint16
   |  +--ro rp
   |  |  +--ro rp-address?    inet:ip-address
   |  |  +--ro policy-name?   string
   |  |  +--ro up-time?       rt-types:timeticks64
   |  +--ro rp-candidate-next-advertisement?   uint16
</sourcecode>
        </section>
        <section numbered="true" toc="include" removeInRFC="false" pn="section-3.2.3">
          <name slugifiedName="name-rp-state-data">RP State Data</name>
          <t indent="0" pn="section-3.2.3-1">
        This portion of the model provides the operational state
        information for all RPs on the router, including the statically
        configured RPs and the BSR-elected RPs.
          </t>
          <sourcecode type="yangtree" markers="false" pn="section-3.2.3-2">
+--rw rp
   +--ro rp-list
   |  +--ro ipv4-rp* [rp-address mode]
   |  |  +--ro rp-address             inet:ipv4-address
   |  |  +--ro mode                   identityref
   |  |  +--ro info-source-address?   inet:ipv4-address
   |  |  +--ro info-source-type?      identityref
   |  |  +--ro up-time?               rt-types:timeticks64
   |  |  +--ro expiration?            rt-types:timer-value-seconds16
   |  +--ro ipv6-rp* [rp-address mode]
   |     +--ro rp-address             inet:ipv6-address
   |     +--ro mode                   identityref
   |     +--ro info-source-address?   inet:ipv6-address
   |     +--ro info-source-type?      identityref
   |     +--ro up-time?               rt-types:timeticks64
   |     +--ro expiration?            rt-types:timer-value-seconds16
</sourcecode>
        </section>
        <section numbered="true" toc="include" removeInRFC="false" pn="section-3.2.4">
          <name slugifiedName="name-rp-to-group-mappings">RP-to-Group Mappings</name>
          <t indent="0" pn="section-3.2.4-1">
        The operational state data of the mappings between RPs and
        multicast groups is modeled as follows:
          </t>
          <sourcecode type="yangtree" markers="false" pn="section-3.2.4-2">
+--rw rp
   +--ro rp-mappings
      +--ro ipv4-rp* [group rp-address]
      |  +--ro group         inet:ipv4-prefix
      |  +--ro rp-address    inet:ipv4-address
      |  +--ro up-time?      rt-types:timeticks64
      |  +--ro expiration?   rt-types:timer-value-seconds16
      +--ro ipv6-rp* [group rp-address]
         +--ro group         inet:ipv6-prefix
         +--ro rp-address    inet:ipv6-address
         +--ro up-time?      rt-types:timeticks64
         +--ro expiration?   rt-types:timer-value-seconds16
</sourcecode>
        </section>
        <section numbered="true" toc="include" removeInRFC="false" pn="section-3.2.5">
          <name slugifiedName="name-notifications-2">Notifications</name>
          <t indent="0" pn="section-3.2.5-1">
        The PIM RP module also defines the notifications for RP-related
        events, as shown below:
          </t>
          <sourcecode type="yangtree" markers="false" pn="section-3.2.5-2">
  notifications:
    +---n pim-rp-event
       +--ro event-type?        rp-event-type
       +--ro instance-af-ref?   leafref
       +--ro group?             rt-types:ip-multicast-group-address
       +--ro rp-address?        inet:ip-address
       +--ro is-rpt?            boolean
       +--ro mode?              pim-base:pim-mode
       +--ro message-origin?    inet:ip-address
</sourcecode>
        </section>
      </section>
      <section numbered="true" toc="include" removeInRFC="false" pn="section-3.3">
        <name slugifiedName="name-pim-sm-module">PIM-SM Module</name>
        <t indent="0" pn="section-3.3-1">
      The PIM-SM module covers Sparse Mode modeling, including 
      PIM Any-Source Multicast (PIM-ASM) and PIM Source-Specific Multicast
      (PIM-SSM). This module has dependencies on the PIM base module and the
      PIM RP module, both of which are augmented by this module.
        </t>
        <t indent="0" pn="section-3.3-2">
      The augmentation to the "address-family" branch of the PIM base
      module is shown below:
        </t>
        <sourcecode type="yangtree" markers="false" pn="section-3.3-3">
module: ietf-pim-sm
  augment /rt:routing/rt:control-plane-protocols/pim-base:pim
/pim-base:address-family:
    +--rw sm
       +--rw asm
       |  +--rw anycast-rp!
       |  |  +--rw ipv4-anycast-rp* [anycast-address rp-address]
       |  |  |  +--rw anycast-address    inet:ipv4-address
       |  |  |  +--rw rp-address         inet:ipv4-address
       |  |  +--rw ipv6-anycast-rp* [anycast-address rp-address]
       |  |     +--rw anycast-address    inet:ipv6-address
       |  |     +--rw rp-address         inet:ipv6-address
       |  +--rw spt-switch
       |     +--rw infinity! {spt-switch-infinity}?
       |        +--rw policy-name?   string {spt-switch-policy}?
       +--rw ssm!
          +--rw range-policy?   string
</sourcecode>
        <t indent="0" pn="section-3.3-4">
      To support PIM-SM on an interface, this module augments the 
      "interface" branch of the PIM base module, as follows:
        </t>
        <sourcecode type="yangtree" markers="false" pn="section-3.3-5">
module: ietf-pim-sm
  augment /rt:routing/rt:control-plane-protocols/pim-base:pim
/pim-base:interfaces/pim-base:interface/pim-base:address-family:
    +--rw sm!
       +--rw passive?   empty
</sourcecode>
        <t indent="0" pn="section-3.3-6">
      This module also augments the PIM RP module to allow an RP to be
      configured in PIM-SM:
        </t>
        <sourcecode type="yangtree" markers="false" pn="section-3.3-7">
module: ietf-pim-sm
  augment /rt:routing/rt:control-plane-protocols/pim-base:pim
/pim-base:address-family/pim-rp:rp/pim-rp:static-rp/pim-rp:ipv4-rp:
    +--rw sm!
       +--rw policy-name?   string
       +--rw override?      boolean {static-rp-override}?
  augment /rt:routing/rt:control-plane-protocols/pim-base:pim
/pim-base:address-family/pim-rp:rp/pim-rp:static-rp/pim-rp:ipv6-rp:
    +--rw sm!
       +--rw policy-name?   string
       +--rw override?      boolean {static-rp-override}?
</sourcecode>
      </section>
      <section numbered="true" toc="include" removeInRFC="false" pn="section-3.4">
        <name slugifiedName="name-pim-dm-module">PIM-DM Module</name>
        <t indent="0" pn="section-3.4-1">
      The PIM-DM module covers Dense Mode modeling. This module
      augments the PIM base module, but it has no dependency on the
      PIM RP module.
        </t>
        <sourcecode type="yangtree" markers="false" pn="section-3.4-2">
module: ietf-pim-dm
  augment /rt:routing/rt:control-plane-protocols/pim-base:pim
            /pim-base:address-family:
    +--rw dm!
  augment /rt:routing/rt:control-plane-protocols/pim-base:pim
            /pim-base:interfaces/pim-base:interface
            /pim-base:address-family:
    +--rw dm!
</sourcecode>
      </section>
      <section numbered="true" toc="include" removeInRFC="false" pn="section-3.5">
        <name slugifiedName="name-bidir-pim-module">BIDIR-PIM Module</name>
        <t indent="0" pn="section-3.5-1">
      The BIDIR-PIM module covers Bidirectional PIM modeling.
      Like PIM-SM, this module augments both the PIM base module and
      the PIM RP module.
        </t>
        <t indent="0" pn="section-3.5-2">
      The augmentations to the PIM base module, on
      the "address-family", "interface", and "neighbor" branches,
      are as follows:
        </t>
        <sourcecode type="yangtree" markers="false" pn="section-3.5-3">
module: ietf-pim-bidir
  augment /rt:routing/rt:control-plane-protocols/pim-base:pim
/pim-base:address-family:
    +--rw bidir!

  augment /rt:routing/rt:control-plane-protocols/pim-base:pim
/pim-base:interfaces/pim-base:interface/pim-base:address-family:
    +--rw bidir!
       +--rw df-election {intf-df-election}?
          +--rw offer-interval?     uint16
          +--rw backoff-interval?   uint16
          +--rw offer-multiplier?   uint8

  augment /rt:routing/rt:control-plane-protocols/pim-base:pim
/pim-base:interfaces/pim-base:interface/pim-base:address-family
/pim-base:neighbors/pim-base:ipv4-neighbor:
    +--ro bidir-capable?   boolean

  augment /rt:routing/rt:control-plane-protocols/pim-base:pim
/pim-base:interfaces/pim-base:interface/pim-base:address-family
/pim-base:neighbors/pim-base:ipv6-neighbor:
    +--ro bidir-capable?   boolean
</sourcecode>
        <t indent="0" pn="section-3.5-4">
      This module also augments the PIM RP module to extend the
      capabilities of RPs for BIDIR-PIM mode:
        </t>
        <sourcecode type="yangtree" markers="false" pn="section-3.5-5">
module: ietf-pim-bidir
  augment /rt:routing/rt:control-plane-protocols/pim-base:pim
/pim-base:address-family/pim-rp:rp/pim-rp:static-rp/pim-rp:ipv4-rp:
    +--rw bidir!
       +--rw policy-name?   string
       +--rw override?      boolean {static-rp-override}?

  augment /rt:routing/rt:control-plane-protocols/pim-base:pim
/pim-base:address-family/pim-rp:rp/pim-rp:static-rp/pim-rp:ipv6-rp:
    +--rw bidir!
       +--rw policy-name?   string
       +--rw override?      boolean {static-rp-override}?

  augment /rt:routing/rt:control-plane-protocols/pim-base:pim
/pim-base:address-family/pim-rp:rp:
    +--ro bidir
       +--ro df-election
       |  +--ro ipv4-rp* [rp-address]
       |  |  +--ro rp-address    inet:ipv4-address
       |  +--ro ipv6-rp* [rp-address]
       |     +--ro rp-address    inet:ipv6-address
       +--ro interface-df-election
          +--ro ipv4-rp* [rp-address interface-name]
          |  +--ro rp-address                  inet:ipv4-address
          |  +--ro interface-name              if:interface-ref
          |  +--ro df-address?                 inet:ipv4-address
          |  +--ro interface-state?            identityref
          |  +--ro up-time?                    rt-types:timeticks64
          |  +--ro winner-metric?              uint32
          |  +--ro winner-metric-preference?   uint32
          +--ro ipv6-rp* [rp-address interface-name]
             +--ro rp-address                  inet:ipv6-address
             +--ro interface-name              if:interface-ref
             +--ro df-address?                 inet:ipv6-address
             +--ro interface-state?            identityref
             +--ro up-time?                    rt-types:timeticks64
             +--ro winner-metric?              uint32
             +--ro winner-metric-preference?   uint32
</sourcecode>
      </section>
    </section>
    <section numbered="true" toc="include" removeInRFC="false" pn="section-4">
      <name slugifiedName="name-complete-tree-structure">Complete Tree Structure</name>
      <section numbered="true" toc="include" removeInRFC="false" pn="section-4.1">
        <name slugifiedName="name-pim-base-module-2">PIM Base Module</name>
        <sourcecode type="yangtree" markers="false" pn="section-4.1-1">
module: ietf-pim-base
  augment /rt:routing/rt:control-plane-protocols:
    +--rw pim!
       +--rw graceful-restart
       |  +--rw enabled?    boolean
       |  +--rw duration?   uint16
       +--rw address-family* [address-family]
       |  +--rw address-family        identityref
       |  +--rw graceful-restart
       |  |  +--rw enabled?    boolean
       |  |  +--rw duration?   uint16
       |  +--ro statistics
       |  |  +--ro discontinuity-time?   yang:date-and-time
       |  |  +--ro error
       |  |  |  +--ro assert?                       yang:counter64
       |  |  |  +--ro bsr?                          yang:counter64
       |  |  |  +--ro candidate-rp-advertisement?   yang:counter64
       |  |  |  +--ro df-election?                  yang:counter64
       |  |  |  +--ro graft?                        yang:counter64
       |  |  |  +--ro graft-ack?                    yang:counter64
       |  |  |  +--ro hello?                        yang:counter64
       |  |  |  +--ro join-prune?                   yang:counter64
       |  |  |  +--ro register?                     yang:counter64
       |  |  |  +--ro register-stop?                yang:counter64
       |  |  |  +--ro state-refresh?                yang:counter64
       |  |  |  +--ro checksum?                     yang:counter64
       |  |  |  +--ro format?                       yang:counter64
       |  |  +--ro queue
       |  |  |  +--ro size?       uint32
       |  |  |  +--ro overflow?   yang:counter32
       |  |  +--ro received
       |  |  |  +--ro assert?                       yang:counter64
       |  |  |  +--ro bsr?                          yang:counter64
       |  |  |  +--ro candidate-rp-advertisement?   yang:counter64
       |  |  |  +--ro df-election?                  yang:counter64
       |  |  |  +--ro graft?                        yang:counter64
       |  |  |  +--ro graft-ack?                    yang:counter64
       |  |  |  +--ro hello?                        yang:counter64
       |  |  |  +--ro join-prune?                   yang:counter64
       |  |  |  +--ro register?                     yang:counter64
       |  |  |  +--ro register-stop?                yang:counter64
       |  |  |  +--ro state-refresh?                yang:counter64
       |  |  +--ro sent
       |  |     +--ro assert?                       yang:counter64
       |  |     +--ro bsr?                          yang:counter64
       |  |     +--ro candidate-rp-advertisement?   yang:counter64
       |  |     +--ro df-election?                  yang:counter64
       |  |     +--ro graft?                        yang:counter64
       |  |     +--ro graft-ack?                    yang:counter64
       |  |     +--ro hello?                        yang:counter64
       |  |     +--ro join-prune?                   yang:counter64
       |  |     +--ro register?                     yang:counter64
       |  |     +--ro register-stop?                yang:counter64
       |  |     +--ro state-refresh?                yang:counter64
       |  +--ro topology-tree-info
       |     +--ro ipv4-route* [group source-address is-rpt]
       |     |  +--ro group
       |     |  |       rt-types:ipv4-multicast-group-address
       |     |  +--ro source-address
       |     |  |       rt-types:ipv4-multicast-source-address
       |     |  +--ro is-rpt                boolean
       |     |  +--ro expiration?
       |     |  |       rt-types:timer-value-seconds16
       |     |  +--ro incoming-interface?   if:interface-ref
       |     |  +--ro is-spt?               boolean
       |     |  +--ro mode?                 identityref
       |     |  +--ro msdp-learned?         boolean
       |     |  +--ro rp-address?           inet:ip-address
       |     |  +--ro rpf-neighbor?         inet:ip-address
       |     |  +--ro up-time?              rt-types:timeticks64
       |     |  +--ro outgoing-interface* [name]
       |     |     +--ro name          if:interface-ref
       |     |     +--ro expiration?   rt-types:timer-value-seconds16
       |     |     +--ro up-time?      rt-types:timeticks64
       |     |     +--ro jp-state?     enumeration
       |     +--ro ipv6-route* [group source-address is-rpt]
       |        +--ro group
       |        |       rt-types:ipv6-multicast-group-address
       |        +--ro source-address
       |        |       rt-types:ipv6-multicast-source-address
       |        +--ro is-rpt                boolean
       |        +--ro expiration?
       |        |       rt-types:timer-value-seconds16
       |        +--ro incoming-interface?   if:interface-ref
       |        +--ro is-spt?               boolean
       |        +--ro mode?                 identityref
       |        +--ro msdp-learned?         boolean
       |        +--ro rp-address?           inet:ip-address
       |        +--ro rpf-neighbor?         inet:ip-address
       |        +--ro up-time?              rt-types:timeticks64
       |        +--ro outgoing-interface* [name]
       |           +--ro name          if:interface-ref
       |           +--ro expiration?   rt-types:timer-value-seconds16
       |           +--ro up-time?      rt-types:timeticks64
       |           +--ro jp-state?     enumeration
       +--rw interfaces
          +--rw interface* [name]
             +--rw name              if:interface-ref
             +--rw address-family* [address-family]
                +--rw address-family            identityref
                +--rw bfd {bfd}?
                |  +--rw enabled?                          boolean
                |  +--rw local-multiplier?                 multiplier
                |  +--rw (interval-config-type)?
                |     +--:(tx-rx-intervals)
                |     |  +--rw desired-min-tx-interval?    uint32
                |     |  +--rw required-min-rx-interval?   uint32
                |     +--:(single-interval)
                |              {single-minimum-interval}?
                |        +--rw min-interval?               uint32
                +--rw dr-priority?              uint32
                |       {intf-dr-priority}?
                +--rw hello-interval?
                |       rt-types:timer-value-seconds16
                |       {intf-hello-interval}?
                +--rw (hello-holdtime-or-multiplier)?
                |  +--:(holdtime) {intf-hello-holdtime}?
                |  |  +--rw hello-holdtime?
                |  |          rt-types:timer-value-seconds16
                |  +--:(multiplier) {intf-hello-multiplier}?
                |     +--rw hello-multiplier?
                |             rt-types:timer-multiplier
                +--rw jp-interval?
                |       rt-types:timer-value-seconds16
                |       {intf-jp-interval}?
                +--rw (jp-holdtime-or-multiplier)?
                |  +--:(holdtime) {intf-jp-holdtime}?
                |  |  +--rw jp-holdtime?
                |  |          rt-types:timer-value-seconds16
                |  +--:(multiplier) {intf-jp-multiplier}?
                |     +--rw jp-multiplier?
                |             rt-types:timer-multiplier
                +--rw override-interval?        uint16
                |       {intf-override-interval}?
                +--rw propagation-delay?        uint16
                |       {intf-propagation-delay}?
                +--ro oper-status?              enumeration
                +--ro gen-id?                   uint32
                +--ro hello-expiration?
                |       rt-types:timer-value-seconds16
                +--ro ipv4
                |  +--ro address*      inet:ipv4-address
                |  +--ro dr-address?   inet:ipv4-address
                +--ro ipv6
                |  +--ro address*      inet:ipv6-address
                |  +--ro dr-address?   inet:ipv6-address
                +--ro neighbors
                   +--ro ipv4-neighbor* [address]
                   |  +--ro address            inet:ipv4-address
                   |  +--ro bfd-state?         bfd-types:state
                   |  +--ro expiration?
                   |  |       rt-types:timer-value-seconds16
                   |  +--ro dr-priority?       uint32
                   |  +--ro gen-id?            uint32
                   |  +--ro lan-prune-delay
                   |  |  +--ro present?             boolean
                   |  |  +--ro override-interval?   uint16
                   |  |  +--ro propagation-delay?   uint16
                   |  |  +--ro t-bit?               boolean
                   |  +--ro up-time?           rt-types:timeticks64
                   +--ro ipv6-neighbor* [address]
                      +--ro address            inet:ipv6-address
                      +--ro bfd-state?         bfd-types:state
                      +--ro expiration?
                      |       rt-types:timer-value-seconds16
                      +--ro dr-priority?       uint32
                      +--ro gen-id?            uint32
                      +--ro lan-prune-delay
                      |  +--ro present?             boolean
                      |  +--ro override-interval?   uint16
                      |  +--ro propagation-delay?   uint16
                      |  +--ro t-bit?               boolean
                      +--ro up-time?           rt-types:timeticks64

  notifications:
    +---n pim-neighbor-event
    |  +--ro event-type?          neighbor-event-type
    |  +--ro interface-ref?       leafref
    |  +--ro interface-af-ref?    leafref
    |  +--ro neighbor-ipv4-ref?   leafref
    |  +--ro neighbor-ipv6-ref?   leafref
    |  +--ro up-time?             rt-types:timeticks64
    +---n pim-interface-event
       +--ro event-type?      interface-event-type
       +--ro interface-ref?   leafref
       +--ro ipv4
       |  +--ro address*      inet:ipv4-address
       |  +--ro dr-address?   inet:ipv4-address
       +--ro ipv6
          +--ro address*      inet:ipv6-address
          +--ro dr-address?   inet:ipv6-address
</sourcecode>
      </section>
      <section numbered="true" toc="include" removeInRFC="false" pn="section-4.2">
        <name slugifiedName="name-pim-rp-module-2">PIM RP Module</name>
        <sourcecode type="yangtree" markers="false" pn="section-4.2-1">
module: ietf-pim-rp
  augment /rt:routing/rt:control-plane-protocols/pim-base:pim
            /pim-base:address-family:
    +--rw rp
       +--rw static-rp
       |  +--rw ipv4-rp* [rp-address]
       |  |  +--rw rp-address    inet:ipv4-address
       |  +--rw ipv6-rp* [rp-address]
       |     +--rw rp-address    inet:ipv6-address
       +--rw bsr {bsr}?
       |  +--rw bsr-candidate!
       |  |  +--rw (interface-or-address)?
       |  |  |  +--:(interface) {candidate-interface}?
       |  |  |  |  +--rw interface       if:interface-ref
       |  |  |  +--:(ipv4-address) {candidate-ipv4}?
       |  |  |  |  +--rw ipv4-address    inet:ipv4-address
       |  |  |  +--:(ipv6-address) {candidate-ipv6}?
       |  |  |     +--rw ipv6-address    inet:ipv6-address
       |  |  +--rw hash-mask-length      uint8
       |  |  +--rw priority?             uint8
       |  +--rw rp-candidate
       |  |  +--rw interface* [name] {candidate-interface}?
       |  |  |  +--rw name           if:interface-ref
       |  |  |  +--rw policy-name?   string
       |  |  |  +--rw mode?          identityref
       |  |  +--rw ipv4-address* [address] {candidate-ipv4}?
       |  |  |  +--rw address        inet:ipv4-address
       |  |  |  +--rw policy-name?   string
       |  |  |  +--rw mode?          identityref
       |  |  +--rw ipv6-address* [address] {candidate-ipv6}?
       |  |     +--rw address        inet:ipv6-address
       |  |     +--rw policy-name?   string
       |  |     +--rw mode?          identityref
       |  +--ro bsr
       |  |  +--ro address?            inet:ip-address
       |  |  +--ro hash-mask-length?   uint8
       |  |  +--ro priority?           uint8
       |  |  +--ro up-time?            rt-types:timeticks64
       |  +--ro (election-state)? {bsr-election-state}?
       |  |  +--:(candidate)
       |  |  |  +--ro candidate-bsr-state?         enumeration
       |  |  +--:(non-candidate)
       |  |     +--ro non-candidate-bsr-state?     enumeration
       |  +--ro bsr-next-bootstrap?                uint16
       |  +--ro rp
       |  |  +--ro rp-address?    inet:ip-address
       |  |  +--ro policy-name?   string
       |  |  +--ro up-time?       rt-types:timeticks64
       |  +--ro rp-candidate-next-advertisement?   uint16
       +--ro rp-list
       |  +--ro ipv4-rp* [rp-address mode]
       |  |  +--ro rp-address             inet:ipv4-address
       |  |  +--ro mode                   identityref
       |  |  +--ro info-source-address?   inet:ipv4-address
       |  |  +--ro info-source-type?      identityref
       |  |  +--ro up-time?               rt-types:timeticks64
       |  |  +--ro expiration?
       |  |          rt-types:timer-value-seconds16
       |  +--ro ipv6-rp* [rp-address mode]
       |     +--ro rp-address             inet:ipv6-address
       |     +--ro mode                   identityref
       |     +--ro info-source-address?   inet:ipv6-address
       |     +--ro info-source-type?      identityref
       |     +--ro up-time?               rt-types:timeticks64
       |     +--ro expiration?
       |             rt-types:timer-value-seconds16
       +--ro rp-mappings
          +--ro ipv4-rp* [group-range rp-address]
          |  +--ro group-range    inet:ipv4-prefix
          |  +--ro rp-address     inet:ipv4-address
          |  +--ro up-time?       rt-types:timeticks64
          |  +--ro expiration?    rt-types:timer-value-seconds16
          +--ro ipv6-rp* [group-range rp-address]
             +--ro group-range    inet:ipv6-prefix
             +--ro rp-address     inet:ipv6-address
             +--ro up-time?       rt-types:timeticks64
             +--ro expiration?    rt-types:timer-value-seconds16

  notifications:
    +---n pim-rp-event
       +--ro event-type?        rp-event-type
       +--ro instance-af-ref?   leafref
       +--ro group?             rt-types:ip-multicast-group-address
       +--ro rp-address?        inet:ip-address
       +--ro is-rpt?            boolean
       +--ro mode?              identityref
       +--ro message-origin?    inet:ip-address
</sourcecode>
      </section>
      <section numbered="true" toc="include" removeInRFC="false" pn="section-4.3">
        <name slugifiedName="name-pim-sm-module-2">PIM-SM Module</name>
        <sourcecode type="yangtree" markers="false" pn="section-4.3-1">
module: ietf-pim-sm
  augment /rt:routing/rt:control-plane-protocols/pim-base:pim
            /pim-base:address-family:
    +--rw sm
       +--rw asm
       |  +--rw anycast-rp!
       |  |  +--rw ipv4-anycast-rp* [anycast-address rp-address]
       |  |  |  +--rw anycast-address    inet:ipv4-address
       |  |  |  +--rw rp-address         inet:ipv4-address
       |  |  +--rw ipv6-anycast-rp* [anycast-address rp-address]
       |  |     +--rw anycast-address    inet:ipv6-address
       |  |     +--rw rp-address         inet:ipv6-address
       |  +--rw spt-switch
       |     +--rw infinity! {spt-switch-infinity}?
       |        +--rw policy-name?   string {spt-switch-policy}?
       +--rw ssm!
          +--rw range-policy?   string
  augment /rt:routing/rt:control-plane-protocols/pim-base:pim
            /pim-base:interfaces/pim-base:interface
            /pim-base:address-family:
    +--rw sm!
       +--rw passive?   empty
  augment /rt:routing/rt:control-plane-protocols/pim-base:pim
            /pim-base:address-family/pim-rp:rp/pim-rp:static-rp
            /pim-rp:ipv4-rp:
    +--rw sm!
       +--rw policy-name?   string
       +--rw override?      boolean {static-rp-override}?
  augment /rt:routing/rt:control-plane-protocols/pim-base:pim
            /pim-base:address-family/pim-rp:rp/pim-rp:static-rp
            /pim-rp:ipv6-rp:
    +--rw sm!
       +--rw policy-name?   string
       +--rw override?      boolean {static-rp-override}?
</sourcecode>
      </section>
      <section numbered="true" toc="include" removeInRFC="false" pn="section-4.4">
        <name slugifiedName="name-pim-dm-module-2">PIM-DM Module</name>
        <sourcecode type="yangtree" markers="false" pn="section-4.4-1">
module: ietf-pim-dm
  augment /rt:routing/rt:control-plane-protocols/pim-base:pim
            /pim-base:address-family:
    +--rw dm!
  augment /rt:routing/rt:control-plane-protocols/pim-base:pim
            /pim-base:interfaces/pim-base:interface
            /pim-base:address-family:
    +--rw dm!
</sourcecode>
      </section>
      <section numbered="true" toc="include" removeInRFC="false" pn="section-4.5">
        <name slugifiedName="name-bidir-pim-module-2">BIDIR-PIM Module</name>
        <sourcecode type="yangtree" markers="false" pn="section-4.5-1">
module: ietf-pim-bidir
  augment /rt:routing/rt:control-plane-protocols/pim-base:pim
            /pim-base:address-family:
    +--rw bidir!
  augment /rt:routing/rt:control-plane-protocols/pim-base:pim
            /pim-base:interfaces/pim-base:interface
            /pim-base:address-family:
    +--rw bidir!
       +--rw df-election {intf-df-election}?
          +--rw offer-interval?     uint16
          +--rw backoff-interval?   uint16
          +--rw offer-multiplier?   uint8
  augment /rt:routing/rt:control-plane-protocols/pim-base:pim
            /pim-base:address-family/pim-rp:rp/pim-rp:static-rp
            /pim-rp:ipv4-rp:
    +--rw bidir!
       +--rw policy-name?   string
       +--rw override?      boolean {static-rp-override}?
  augment /rt:routing/rt:control-plane-protocols/pim-base:pim
            /pim-base:address-family/pim-rp:rp/pim-rp:static-rp
            /pim-rp:ipv6-rp:
    +--rw bidir!
       +--rw policy-name?   string
       +--rw override?      boolean {static-rp-override}?
  augment /rt:routing/rt:control-plane-protocols/pim-base:pim
            /pim-base:address-family/pim-rp:rp:
    +--ro bidir
       +--ro df-election
       |  +--ro ipv4-rp* [rp-address]
       |  |  +--ro rp-address    inet:ipv4-address
       |  +--ro ipv6-rp* [rp-address]
       |     +--ro rp-address    inet:ipv6-address
       +--ro interface-df-election
          +--ro ipv4-rp* [rp-address interface-name]
          |  +--ro rp-address                  inet:ipv4-address
          |  +--ro interface-name              if:interface-ref
          |  +--ro df-address?                 inet:ipv4-address
          |  +--ro interface-state?            identityref
          |  +--ro up-time?                    rt-types:timeticks64
          |  +--ro winner-metric?              uint32
          |  +--ro winner-metric-preference?   uint32
          +--ro ipv6-rp* [rp-address interface-name]
             +--ro rp-address                  inet:ipv6-address
             +--ro interface-name              if:interface-ref
             +--ro df-address?                 inet:ipv6-address
             +--ro interface-state?            identityref
             +--ro up-time?                    rt-types:timeticks64
             +--ro winner-metric?              uint32
             +--ro winner-metric-preference?   uint32
  augment /rt:routing/rt:control-plane-protocols/pim-base:pim
            /pim-base:interfaces/pim-base:interface
            /pim-base:address-family/pim-base:neighbors
            /pim-base:ipv4-neighbor:
    +--ro bidir-capable?   boolean
  augment /rt:routing/rt:control-plane-protocols/pim-base:pim
            /pim-base:interfaces/pim-base:interface
            /pim-base:address-family/pim-base:neighbors
            /pim-base:ipv6-neighbor:
    +--ro bidir-capable?   boolean
</sourcecode>
      </section>
    </section>
    <section numbered="true" toc="include" removeInRFC="false" pn="section-5">
      <name slugifiedName="name-relationship-to-the-pim-std">Relationship to the PIM-STD-MIB</name>
      <t indent="0" pn="section-5-1">
        The following sections describe the mappings between the
        objects in the PIM-STD-MIB defined in
        <xref target="RFC5060" format="default" sectionFormat="of" derivedContent="RFC5060"/> and the YANG data nodes defined in
        this document.
      </t>
      <section numbered="true" toc="include" removeInRFC="false" pn="section-5.1">
        <name slugifiedName="name-piminterfacetable">pimInterfaceTable</name>
        <t indent="0" pn="section-5.1-1">
          pimInterfaceTable is mapped to pim/interfaces/interface.
          The key of pimInterfaceTable is pimInterfaceIfIndex and
          pimInterfaceIPVersion, while the key of the "interface"
          list in YANG is the node "name". For each value of
          pimInterfaceIPVersion, the "interface" list contains a
          corresponding sublist whose key is the node "address-family".
        </t>
        <t indent="0" pn="section-5.1-2">
          <xref target="table_yang_and_mib" format="default" sectionFormat="of" derivedContent="Table 2"/> lists the YANG data nodes with
          corresponding objects of pimInterfaceTable in the PIM-STD-MIB. 
        </t>
        <table anchor="table_yang_and_mib" align="center" pn="table-2">
          <name slugifiedName="name-yang-nodes-and-piminterface">YANG Nodes and pimInterfaceTable Objects</name>
          <thead>
            <tr>
              <th align="left" colspan="1" rowspan="1">YANG Node</th>
              <th align="left" colspan="1" rowspan="1">PIM-STD-MIB Object</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left" colspan="1" rowspan="1">address-family</td>
              <td align="left" colspan="1" rowspan="1">pimInterfaceAddressType</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">ipv4/address</td>
              <td rowspan="2" align="left" colspan="1">pimInterfaceAddress</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">ipv6/address</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">gen-id</td>
              <td align="left" colspan="1" rowspan="1">pimInterfaceGenerationIDValue</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">ipv4/dr-address</td>
              <td rowspan="2" align="left" colspan="1">pimInterfaceDR</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">ipv6/dr-address</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">dr-priority</td>
              <td align="left" colspan="1" rowspan="1">pimInterfaceDRPriority</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">hello-interval</td>
              <td align="left" colspan="1" rowspan="1">pimInterfaceHelloInterval</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">hello-holdtime</td>
              <td align="left" colspan="1" rowspan="1">pimInterfaceHelloHoldtime</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">jp-interval</td>
              <td align="left" colspan="1" rowspan="1">pimInterfaceJoinPruneInterval</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">jp-holdtime</td>
              <td align="left" colspan="1" rowspan="1">pimInterfaceJoinPruneHoldtime</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">bidir/offer-multiplier</td>
              <td align="left" colspan="1" rowspan="1">pimInterfaceDFElectionRobustness</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">propagation-delay</td>
              <td align="left" colspan="1" rowspan="1">pimInterfacePropagationDelay</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">override-interval</td>
              <td align="left" colspan="1" rowspan="1">pimInterfaceOverrideInterval</td>
            </tr>
          </tbody>
        </table>
      </section>
      <section numbered="true" toc="include" removeInRFC="false" pn="section-5.2">
        <name slugifiedName="name-pimneighbortable">pimNeighborTable</name>
        <t indent="0" pn="section-5.2-1">
          pimNeighborTable is mapped to 
          pim/interfaces/interface/neighbors/ipv4-neighbor and
          pim/interfaces/interface/neighbors/ipv6-neighbor.
        </t>
        <t indent="0" pn="section-5.2-2">
          <xref target="table_mib_pimNeighborTable" format="default" sectionFormat="of" derivedContent="Table 3"/> lists the YANG data nodes with
          corresponding objects of pimNeighborTable in the PIM-STD-MIB. 
        </t>
        <table anchor="table_mib_pimNeighborTable" align="center" pn="table-3">
          <name slugifiedName="name-yang-nodes-and-pimneighbort">YANG Nodes and pimNeighborTable Objects</name>
          <thead>
            <tr>
              <th align="left" colspan="1" rowspan="1">YANG Node</th>
              <th align="left" colspan="1" rowspan="1">PIM-STD-MIB Object</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left" colspan="1" rowspan="1">ipv4-neighbor</td>
              <td rowspan="2" align="left" colspan="1">pimNeighborAddressType</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">ipv6-neighbor</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">address</td>
              <td align="left" colspan="1" rowspan="1">pimNeighborAddress</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">gen-id</td>
              <td align="left" colspan="1" rowspan="1">pimNeighborGenerationIDValue</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">up-time</td>
              <td align="left" colspan="1" rowspan="1">pimNeighborUpTime</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">expiration</td>
              <td align="left" colspan="1" rowspan="1">pimNeighborExpiryTime</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">dr-priority</td>
              <td align="left" colspan="1" rowspan="1">pimNeighborDRPriority</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">lan-prune-delay/present</td>
              <td align="left" colspan="1" rowspan="1">pimNeighborLanPruneDelayPresent</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">lan-prune-delay/t-bit</td>
              <td align="left" colspan="1" rowspan="1">pimNeighborTBit</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">lan-prune-delay/propagation-delay</td>
              <td align="left" colspan="1" rowspan="1">pimNeighborPropagationDelay</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">lan-prune-delay/override-interval</td>
              <td align="left" colspan="1" rowspan="1">pimNeighborOverrideInterval</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">ietf-pim-bidir:bidir-capable</td>
              <td align="left" colspan="1" rowspan="1">pimNeighborBidirCapable</td>
            </tr>
          </tbody>
        </table>
      </section>
      <section numbered="true" toc="include" removeInRFC="false" pn="section-5.3">
        <name slugifiedName="name-pimstargtable">pimStarGTable</name>
        <t indent="0" pn="section-5.3-1">
          pimStarGTable is mapped to 
          pim/address-family/topology-tree-info/ipv4-route and
          pim/address-family/topology-tree-info/ipv6-route, when the
          value of the "source-address" leaf is "ietf-routing-types:*" and
          the value of the "is-rpt" leaf is "false".
        </t>
        <t indent="0" pn="section-5.3-2">
          <xref target="table_mib_pimStarGTable" format="default" sectionFormat="of" derivedContent="Table 4"/> lists the YANG data nodes with
          corresponding objects of pimStarGTable in the PIM-STD-MIB. 
        </t>
        <table anchor="table_mib_pimStarGTable" align="center" pn="table-4">
          <name slugifiedName="name-yang-nodes-and-pimstargtabl">YANG Nodes and pimStarGTable Objects</name>
          <thead>
            <tr>
              <th align="left" colspan="1" rowspan="1">YANG Node</th>
              <th align="left" colspan="1" rowspan="1">PIM-STD-MIB Object</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left" colspan="1" rowspan="1">ipv4-route</td>
              <td rowspan="2" align="left" colspan="1">pimStarGAddressType</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">ipv6-route</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">group</td>
              <td align="left" colspan="1" rowspan="1">pimStarGGrpAddress</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">up-time</td>
              <td align="left" colspan="1" rowspan="1">pimStarGUpTime</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">mode</td>
              <td align="left" colspan="1" rowspan="1">pimStarGPimMode</td>
            </tr>
            <tr>
              <td rowspan="2" align="left" colspan="1">rp-address</td>
              <td align="left" colspan="1" rowspan="1">pimStarGRPAddressType</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">pimStarGRPAddress</td>
            </tr>
            <tr>
              <td rowspan="2" align="left" colspan="1">rpf-neighbor</td>
              <td align="left" colspan="1" rowspan="1">pimStarGUpstreamNeighborType</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">pimStarGUpstreamNeighbor</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">incoming-interface</td>
              <td align="left" colspan="1" rowspan="1">pimStarGRPFIfIndex</td>
            </tr>
          </tbody>
        </table>
        <t indent="0" pn="section-5.3-4">
          In addition, the object "pimStarGPimModeOrigin" in
          pimStarGTable is mapped 
          to the node "rp/rp-list/ipv4-rp/info-source-type"
          or the node "rp/rp-list/ipv6-rp/info-source-type" in the YANG
          module "ietf‑pim‑rp".
        </t>
      </section>
      <section numbered="true" toc="include" removeInRFC="false" pn="section-5.4">
        <name slugifiedName="name-pimsgtable">pimSGTable</name>
        <t indent="0" pn="section-5.4-1">
          pimSGTable is mapped to 
          pim/address-family/topology-tree-info/ipv4-route and
          pim/address-family/topology-tree-info/ipv6-route, when the
          value of the "source-address" leaf is not "ietf-routing-types:*"
          and the value of the "is-rpt" leaf is "false".
        </t>
        <t indent="0" pn="section-5.4-2">
          <xref target="table_mib_pimSGTable" format="default" sectionFormat="of" derivedContent="Table 5"/> lists the YANG data nodes with
          corresponding objects of pimSGTable in the PIM-STD-MIB. 
        </t>
        <table anchor="table_mib_pimSGTable" align="center" pn="table-5">
          <name slugifiedName="name-yang-nodes-and-pimsgtable-o">YANG Nodes and pimSGTable Objects</name>
          <thead>
            <tr>
              <th align="left" colspan="1" rowspan="1">YANG Node</th>
              <th align="left" colspan="1" rowspan="1">PIM-STD-MIB Object</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left" colspan="1" rowspan="1">ipv4-route</td>
              <td rowspan="2" align="left" colspan="1">pimSGAddressType</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">ipv6-route</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">group</td>
              <td align="left" colspan="1" rowspan="1">pimSGGrpAddress</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">source-address</td>
              <td align="left" colspan="1" rowspan="1">pimSGSrcAddress</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">up-time</td>
              <td align="left" colspan="1" rowspan="1">pimSGUpTime</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">mode</td>
              <td align="left" colspan="1" rowspan="1">pimSGPimMode</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">rpf-neighbor</td>
              <td align="left" colspan="1" rowspan="1">pimStarGUpstreamNeighbor</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">incoming-interface</td>
              <td align="left" colspan="1" rowspan="1">pimStarGRPFIfIndex</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">is-spt</td>
              <td align="left" colspan="1" rowspan="1">pimSGSPTBit</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">expiration</td>
              <td align="left" colspan="1" rowspan="1">pimSGKeepaliveTimer</td>
            </tr>
          </tbody>
        </table>
      </section>
      <section numbered="true" toc="include" removeInRFC="false" pn="section-5.5">
        <name slugifiedName="name-pimsgrpttable">pimSGRptTable</name>
        <t indent="0" pn="section-5.5-1">
          pimSGRptTable is mapped to 
          pim/address-family/topology-tree-info/ipv4-route and
          pim/address-family/topology-tree-info/ipv6-route, when the
          value of the "is-rpt" leaf is "true".
        </t>
        <t indent="0" pn="section-5.5-2">
          <xref target="table_mib_pimSGRptTable" format="default" sectionFormat="of" derivedContent="Table 6"/> lists the YANG data nodes with
          corresponding objects of pimSGRptTable in the PIM-STD-MIB. 
        </t>
        <table anchor="table_mib_pimSGRptTable" align="center" pn="table-6">
          <name slugifiedName="name-yang-nodes-and-pimsgrpttabl">YANG Nodes and pimSGRptTable Objects</name>
          <thead>
            <tr>
              <th align="left" colspan="1" rowspan="1">YANG Node</th>
              <th align="left" colspan="1" rowspan="1">PIM-STD-MIB Object</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left" colspan="1" rowspan="1">ipv4-route</td>
              <td rowspan="2" align="left" colspan="1">pimStarGAddressType</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">ipv6-route</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">group</td>
              <td align="left" colspan="1" rowspan="1">pimStarGGrpAddress</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">source-address</td>
              <td align="left" colspan="1" rowspan="1">pimSGRptSrcAddress</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">up-time</td>
              <td align="left" colspan="1" rowspan="1">pimSGRptUpTime</td>
            </tr>
          </tbody>
        </table>
      </section>
      <section numbered="true" toc="include" removeInRFC="false" pn="section-5.6">
        <name slugifiedName="name-pimbidirdfelectiontable">pimBidirDFElectionTable</name>
        <t indent="0" pn="section-5.6-1">
          pimBidirDFElectionTable is mapped to 
          pim/address-family/rp/bidir/interface-df-election/ipv4-rp
          and
          pim/address-family/rp/bidir/interface-df-election/ipv6-rp.
          The key of pimBidirDFElectionTable includes
          pimBidirDFElectionIfIndex, whose type is InterfaceIndex,
          while the YANG lists use a node "name" with the type string
          instead.
        </t>
        <t indent="0" pn="section-5.6-2">
          <xref target="table_mib_pimBidirDFElectionTable" format="default" sectionFormat="of" derivedContent="Table 7"/> lists the YANG data nodes with
          corresponding objects of pimBidirDFElectionTable in the PIM-STD-MIB. 
        </t>
        <table anchor="table_mib_pimBidirDFElectionTable" align="center" pn="table-7">
          <name slugifiedName="name-yang-nodes-and-pimbidirdfel">YANG Nodes and pimBidirDFElectionTable Objects</name>
          <thead>
            <tr>
              <th align="left" colspan="1" rowspan="1">YANG Node</th>
              <th align="left" colspan="1" rowspan="1">PIM-STD-MIB Object</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left" colspan="1" rowspan="1">ipv4-rp</td>
              <td rowspan="2" align="left" colspan="1">pimBidirDFElectionAddressType</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">ipv6-rp</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">rp-address</td>
              <td align="left" colspan="1" rowspan="1">pimBidirDFElectionRPAddress</td>
            </tr>
            <tr>
              <td rowspan="2" align="left" colspan="1">df-address</td>
              <td align="left" colspan="1" rowspan="1">pimBidirDFElectionWinnerAddressType</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">pimBidirDFElectionWinnerAddress</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">up-time</td>
              <td align="left" colspan="1" rowspan="1">pimBidirDFElectionWinnerUpTime</td>
            </tr>
            <tr>
              <td rowspan="2" align="left" colspan="1">winner-metric-preference</td>
              <td align="left" colspan="1" rowspan="1">pimBidirDFElectionWinnerMetricPref</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">pimBidirDFElectionWinnerMetric</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">interface-state</td>
              <td align="left" colspan="1" rowspan="1">pimBidirDFElectionState</td>
            </tr>
          </tbody>
        </table>
      </section>
      <section numbered="true" toc="include" removeInRFC="false" pn="section-5.7">
        <name slugifiedName="name-pimstaticrptable">pimStaticRPTable</name>
        <t indent="0" pn="section-5.7-1">
          pimStaticRPTable is mapped to 
          pim/address-family/rp/static-rp/ipv4-rp and  
          pim/address-family/rp/static-rp/ipv6-rp.
        </t>
        <t indent="0" pn="section-5.7-2">
          <xref target="table_mib_pimStaticRPTable" format="default" sectionFormat="of" derivedContent="Table 8"/> lists the YANG data nodes with
          corresponding objects of pimStaticRPTable in the PIM-STD-MIB. 
        </t>
        <table anchor="table_mib_pimStaticRPTable" align="center" pn="table-8">
          <name slugifiedName="name-yang-nodes-and-pimstaticrpt">YANG Nodes and pimStaticRPTable Objects</name>
          <thead>
            <tr>
              <th align="left" colspan="1" rowspan="1">YANG Node</th>
              <th align="left" colspan="1" rowspan="1">PIM-STD-MIB Object</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left" colspan="1" rowspan="1">ipv4-rp</td>
              <td rowspan="2" align="left" colspan="1">pimStaticRPAddressType</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">ipv6-rp</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">rp-address</td>
              <td align="left" colspan="1" rowspan="1">pimStaticRPRPAddress</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">bidir</td>
              <td rowspan="2" align="left" colspan="1">pimStaticRPPimMode</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">sm</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">bidir/override</td>
              <td rowspan="2" align="left" colspan="1">pimStaticRPOverrideDynamic</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">sm/override</td>
            </tr>
          </tbody>
        </table>
      </section>
      <section numbered="true" toc="include" removeInRFC="false" pn="section-5.8">
        <name slugifiedName="name-pimanycastrpsettable">pimAnycastRPSetTable</name>
        <t indent="0" pn="section-5.8-1">
          pimAnycastRPSetTable is mapped to 
          pim/address-family/sm/asm/anycast-rp/ipv4-anycast-rp and 
          pim/address-family/sm/asm/anycast-rp/ipv6-anycast-rp.
        </t>
        <t indent="0" pn="section-5.8-2">
          <xref target="table_mib_pimAnycastRPSetTable" format="default" sectionFormat="of" derivedContent="Table 9"/> lists the YANG data nodes with
          corresponding objects of pimAnycastRPSetTable in the PIM-STD-MIB. 
        </t>
        <table anchor="table_mib_pimAnycastRPSetTable" align="center" pn="table-9">
          <name slugifiedName="name-yang-nodes-and-pimanycastrp">YANG Nodes and pimAnycastRPSetTable Objects</name>
          <thead>
            <tr>
              <th align="left" colspan="1" rowspan="1">YANG Node</th>
              <th align="left" colspan="1" rowspan="1">PIM-STD-MIB Object</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left" colspan="1" rowspan="1">ipv4-anycast-rp</td>
              <td rowspan="2" align="left" colspan="1">pimAnycastRPSetAddressType</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">ipv6-anycast-rp</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">anycast-address</td>
              <td align="left" colspan="1" rowspan="1">pimAnycastRPSetAnycastAddress</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">rp-address</td>
              <td align="left" colspan="1" rowspan="1">pimAnycastRPSetRouterAddress</td>
            </tr>
          </tbody>
        </table>
      </section>
      <section numbered="true" toc="include" removeInRFC="false" pn="section-5.9">
        <name slugifiedName="name-pimgroupmappingtable">pimGroupMappingTable</name>
        <t indent="0" pn="section-5.9-1">
          pimGroupMappingTable is mapped to 
          pim/address-family/rp/rp-mappings/ipv4-rp and 
          pim/address-family/rp/rp-mappings/ipv6-rp.
        </t>
        <t indent="0" pn="section-5.9-2">
          <xref target="table_mib_pimGroupMappingTable" format="default" sectionFormat="of" derivedContent="Table 10"/> lists the YANG data nodes with
          corresponding objects of pimGroupMappingTable in the PIM-STD-MIB. 
        </t>
        <table anchor="table_mib_pimGroupMappingTable" align="center" pn="table-10">
          <name slugifiedName="name-yang-nodes-and-pimgroupmapp">YANG Nodes and pimGroupMappingTable Objects</name>
          <thead>
            <tr>
              <th align="left" colspan="1" rowspan="1">YANG Node</th>
              <th align="left" colspan="1" rowspan="1">PIM-STD-MIB Object</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left" colspan="1" rowspan="1">ipv4-rp</td>
              <td rowspan="2" align="left" colspan="1">pimGroupMappingAddressType</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">ipv6-rp</td>
            </tr>
            <tr>
              <td rowspan="2" align="left" colspan="1">group</td>
              <td align="left" colspan="1" rowspan="1">pimGroupMappingGrpAddress</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">pimGroupMappingGrpPrefixLength</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">ipv4-rp</td>
              <td rowspan="2" align="left" colspan="1">pimGroupMappingRPAddressType</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">ipv6-rp</td>
            </tr>
            <tr>
              <td rowspan="2" align="left" colspan="1">rp-address</td>
              <td align="left" colspan="1" rowspan="1">pimGroupMappingRPAddress</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">pimGroupMappingPimMode</td>
            </tr>
          </tbody>
        </table>
        <t indent="0" pn="section-5.9-4">
          In addition, the object "pimGroupMappingPimMode" in
          pimGroupMappingTable is mapped 
          to the node "rp/rp-list/ipv4-rp/mode"
          or the node "rp/rp-list/ipv6-rp/mode" in the YANG
          module "ietf‑pim‑rp".
        </t>
      </section>
    </section>
    <section numbered="true" toc="include" removeInRFC="false" pn="section-6">
      <name slugifiedName="name-pim-yang-modules">PIM YANG Modules</name>
      <section numbered="true" toc="include" removeInRFC="false" pn="section-6.1">
        <name slugifiedName="name-pim-base-module-3">PIM Base Module</name>
        <t indent="0" pn="section-6.1-1">
          This module references
          <xref target="RFC3973" format="default" sectionFormat="of" derivedContent="RFC3973"/>,
          <xref target="RFC5015" format="default" sectionFormat="of" derivedContent="RFC5015"/>,
          <xref target="RFC5880" format="default" sectionFormat="of" derivedContent="RFC5880"/>,
          <xref target="RFC6991" format="default" sectionFormat="of" derivedContent="RFC6991"/>,
          <xref target="RFC7761" format="default" sectionFormat="of" derivedContent="RFC7761"/>,
          <xref target="RFC8294" format="default" sectionFormat="of" derivedContent="RFC8294"/>,
          <xref target="RFC8343" format="default" sectionFormat="of" derivedContent="RFC8343"/>,
          <xref target="RFC8349" format="default" sectionFormat="of" derivedContent="RFC8349"/>,
          <xref target="RFC8706" format="default" sectionFormat="of" derivedContent="RFC8706"/>, and
          <xref target="RFC9314" format="default" sectionFormat="of" derivedContent="RFC9314"/>.

        </t>
        <sourcecode name="ietf-pim-base@2022-10-19.yang" type="yang" markers="true" pn="section-6.1-2">
module ietf-pim-base {
  yang-version 1.1;
  namespace "urn:ietf:params:xml:ns:yang:ietf-pim-base";
  prefix pim-base;

  import ietf-inet-types {
    prefix inet;
    reference
      "RFC 6991: Common YANG Data Types";
  }
  import ietf-yang-types {
    prefix yang;
    reference
      "RFC 6991: Common YANG Data Types";
  }
  import ietf-routing-types {
    prefix rt-types;
    reference
      "RFC 8294: Common YANG Data Types for the Routing Area";
  }
  import ietf-interfaces {
    prefix if;
    reference
      "RFC 8343: A YANG Data Model for Interface Management";
  }
  import ietf-routing {
    prefix rt;
    reference
      "RFC 8349: A YANG Data Model for Routing Management (NMDA
       Version)";
  }
  import ietf-bfd-types {
    prefix bfd-types;
    reference
      "RFC 9314: YANG Data Model for Bidirectional Forwarding
       Detection (BFD)";
  }

  organization
    "IETF PIM Working Group";
  contact
    "WG Web:   &lt;https://datatracker.ietf.org/wg/pim/&gt;
     WG List:  &lt;mailto:pim@ietf.org&gt;

     Editor:   Xufeng Liu
               &lt;mailto:xufeng.liu.ietf@gmail.com&gt;

     Editor:   Pete McAllister
               &lt;mailto:pete.mcallister@metaswitch.com&gt;

     Editor:   Anish Peter
               &lt;mailto:anish.ietf@gmail.com&gt;

     Editor:   Mahesh Sivakumar
               &lt;mailto:sivakumar.mahesh@gmail.com&gt;

     Editor:   Yisong Liu
               &lt;mailto:liuyisong@chinamobile.com&gt;

     Editor:   Fangwei Hu
               &lt;mailto:hufwei@gmail.com&gt;";
  description
    "This module defines a collection of YANG definitions common for
     all PIM (Protocol Independent Multicast) modes.

     Copyright (c) 2022 IETF Trust and the persons identified as
     authors of the code.  All rights reserved.

     Redistribution and use in source and binary forms, with or
     without modification, is permitted pursuant to, and subject to
     the license terms contained in, the Revised BSD License set
     forth in Section 4.c of the IETF Trust's Legal Provisions
     Relating to IETF Documents
     (https://trustee.ietf.org/license-info).

     This version of this YANG module is part of RFC 9128; see the
     RFC itself for full legal notices.";

  revision 2022-10-19 {
    description
      "Initial revision.";
    reference
      "RFC 9128: A YANG Data Model for Protocol Independent
       Multicast (PIM)";
  }

  /*
   * Features
   */

  feature bfd {
    description
      "Supports BFD (Bidirectional Forwarding Detection).";
    reference
      "RFC 5880: Bidirectional Forwarding Detection (BFD)";
  }

  feature global-graceful-restart {
    description
      "Global configuration for graceful restart support as per
       RFC 8706.";
    reference
      "RFC 8706: Restart Signaling for IS-IS";
  }

  feature intf-dr-priority {
    description
      "Supports configuration of an interface DR (Designated Router)
       priority.";
    reference
      "RFC 7761: Protocol Independent Multicast - Sparse Mode
       (PIM-SM): Protocol Specification (Revised), Section 4.3.2";
  }

  feature intf-hello-holdtime {
    description
      "Supports configuration of the interface Hello Holdtime.";
    reference
      "RFC 3973: Protocol Independent Multicast - Dense Mode
       (PIM-DM): Protocol Specification (Revised), Section 4.3.3
       RFC 7761: Protocol Independent Multicast - Sparse Mode
       (PIM-SM): Protocol Specification (Revised), Section 4.11";
  }

  feature intf-hello-interval {
    description
      "Supports configuration of the interface Hello interval.";
    reference
      "RFC 3973: Protocol Independent Multicast - Dense Mode
       (PIM-DM): Protocol Specification (Revised), Section 4.8
       RFC 7761: Protocol Independent Multicast - Sparse Mode
       (PIM-SM): Protocol Specification (Revised), Section 4.11";
  }

  feature intf-hello-multiplier {
    description
      "Supports configuration of the interface Hello multiplier
       (the number by which the Hello interval is multiplied to
       obtain the Hello Holdtime).";
    reference
      "RFC 3973: Protocol Independent Multicast - Dense Mode
       (PIM-DM): Protocol Specification (Revised), Section 4.8
       RFC 7761: Protocol Independent Multicast - Sparse Mode
       (PIM-SM): Protocol Specification (Revised), Section 4.11";
  }

  feature intf-jp-interval {
    description
      "Supports configuration of the interface Join/Prune interval.";
    reference
      "RFC 3973: Protocol Independent Multicast - Dense Mode
       (PIM-DM): Protocol Specification (Revised), Section 4.8
       RFC 7761: Protocol Independent Multicast - Sparse Mode
       (PIM-SM): Protocol Specification (Revised), Section 4.11";
  }

  feature intf-jp-holdtime {
    description
      "Supports configuration of the interface Join/Prune Holdtime.";
    reference
      "RFC 3973: Protocol Independent Multicast - Dense Mode
       (PIM-DM): Protocol Specification (Revised), Section 4.8
       RFC 7761: Protocol Independent Multicast - Sparse Mode
       (PIM-SM): Protocol Specification (Revised), Section 4.11";
  }

  feature intf-jp-multiplier {
    description
      "Supports configuration of the interface Join/Prune
       multiplier (the number by which the Join/Prune interval is
       multiplied to obtain the Join/Prune Holdtime).";
    reference
      "RFC 3973: Protocol Independent Multicast - Dense Mode
       (PIM-DM): Protocol Specification (Revised), Section 4.8
       RFC 7761: Protocol Independent Multicast - Sparse Mode
       (PIM-SM): Protocol Specification (Revised), Section 4.11";
  }

  feature intf-propagation-delay {
    description
      "Supports configuration of interface propagation delay.";
    reference
      "RFC 3973: Protocol Independent Multicast - Dense Mode
       (PIM-DM): Protocol Specification (Revised), Section 4.3.5
       RFC 7761: Protocol Independent Multicast - Sparse Mode
       (PIM-SM): Protocol Specification (Revised), Section 4.3.3";
  }

  feature intf-override-interval {
    description
      "Supports configuration of the interface override interval.";
    reference
      "RFC 3973: Protocol Independent Multicast - Dense Mode
       (PIM-DM): Protocol Specification (Revised),
       Sections 4.1.1 and 4.8
       RFC 5015: Bidirectional Protocol Independent Multicast
       (BIDIR-PIM), Section 3.6
       RFC 7761: Protocol Independent Multicast - Sparse Mode
       (PIM-SM): Protocol Specification (Revised), Section 4.11";
  }

  feature per-af-graceful-restart {
    description
      "Per address family configuration for graceful restart support
       as per RFC 8706.";
    reference
      "RFC 8706: Restart Signaling for IS-IS";
  }

  /*
   * Typedefs
   */

  typedef interface-event-type {
    type enumeration {
      enum up {
        description
          "Neighbor status changed to 'up'.";
      }
      enum down {
        description
          "Neighbor status changed to 'down'.";
      }
      enum new-dr {
        description
          "A new DR (Designated Router) was elected on the connected
           network.";
      }
      enum new-df {
        description
          "A new DF (Designated Forwarder) was elected on the
           connected network.";
      }
    }
    description
      "Operational status event type for notifications.";
  }

  typedef neighbor-event-type {
    type enumeration {
      enum up {
        description
          "Neighbor status changed to 'up'.";
      }
      enum down {
        description
          "Neighbor status changed to 'down'.";
      }
    }
    description
      "Operational status event type for notifications.";
  }

  /*
   * Identities
   */

  identity pim-mode {
    description
      "The PIM mode in which a group is operating.";
  }

  identity pim-none {
    base pim-mode;
    description
      "PIM is not operating.";
  }

  identity pim-bidir {
    base pim-mode;
    description
      "PIM is operating in Bidirectional Mode.";
  }

  identity pim-dm {
    base pim-mode;
    description
      "PIM is operating in Dense Mode (DM).";
  }

  identity pim-sm {
    base pim-mode;
    description
      "PIM is operating in Sparse Mode (SM).";
  }

  identity pim-asm {
    base pim-sm;
    description
      "PIM is operating in Sparse Mode with Any-Source Multicast
       (ASM).";
  }

  identity pim-ssm {
    base pim-sm;
    description
      "PIM is operating in Sparse Mode with Source-Specific
       Multicast (SSM).";
  }

  /*
   * Groupings
   */

  grouping graceful-restart-container {
    description
      "A grouping defining a container of graceful restart
       attributes.";
    container graceful-restart {
      leaf enabled {
        type boolean;
        default "false";
        description
          "Enables or disables graceful restart.";
      }
      leaf duration {
        type uint16;
        units "seconds";
        default "60";
        description
          "Maximum time for graceful restart to finish.";
      }
      description
        "Container of graceful restart attributes.";
    }
  } // graceful-restart-container

  grouping multicast-route-attributes {
    description
      "A grouping defining multicast route attributes.";
    leaf expiration {
      type rt-types:timer-value-seconds16;
      description
        "When the route will expire.";
    }
    leaf incoming-interface {
      type if:interface-ref;
      description
        "Reference to an entry in the global interface list.";
    }
    leaf is-spt {
      type boolean;
      description
        "'true' if the SPTbit (Shortest Path Tree bit) is set to
         indicate that forwarding is taking place on the
         (S,G) SPT.";
      reference
        "RFC 7761: Protocol Independent Multicast - Sparse Mode
         (PIM-SM): Protocol Specification (Revised), Section 4.1.3";
    }
    leaf mode {
      type identityref {
        base pim-mode;
      }
      description
        "PIM mode.";
    }
    leaf msdp-learned {
      type boolean;
      description
        "'true' if the route is learned from MSDP (the Multicast
         Source Discovery Protocol).";
    }
    leaf rp-address {
      type inet:ip-address;
      description
        "RP (Rendezvous Point) address.";
    }
    leaf rpf-neighbor {
      type inet:ip-address;
      description
        "RPF (Reverse Path Forwarding) neighbor address.";
    }
    leaf up-time {
      type rt-types:timeticks64;
      description
        "The number of time ticks (hundredths of a second) since the
         route last transitioned into the active state.";
    }
    list outgoing-interface {
      key "name";
      description
        "A list of outgoing interfaces.";
      leaf name {
        type if:interface-ref;
        description
          "Interface name.";
      }
      leaf expiration {
        type rt-types:timer-value-seconds16;
        description
          "Expiration time.";
      }
      leaf up-time {
        type rt-types:timeticks64;
        description
          "The number of time ticks (hundredths of a second) since
           the 'oper-status' setting of the interface was last
           changed to 'up'.";
      }
      leaf jp-state {
        type enumeration {
          enum no-info {
            description
              "The interface has no (*,G) Join state and no timers
               running.";
          }
          enum join {
            description
              "The interface has Join state.";
          }
          enum prune-pending {
            description
              "The router has received a Prune on this interface from
               a downstream neighbor and is waiting to see whether
               the Prune will be overridden by another downstream
               router.  For forwarding purposes, the Prune-Pending
               state functions exactly like the Join state.";
          }
        }
        description
          "Join/Prune state.";
      }
    }
  } // multicast-route-attributes

  grouping neighbor-state-af-attributes {
    description
      "A grouping defining neighbor per address family attributes.";
    leaf bfd-state {
      type bfd-types:state;
      description
        "BFD (Bidirectional Forwarding Detection) status.";
    }
    leaf expiration {
      type rt-types:timer-value-seconds16;
      description
        "Neighbor expiration time.";
    }
    leaf dr-priority {
      type uint32;
      description
        "DR (Designated Router) priority as the preference in the DR
         election process.";
    }
    leaf gen-id {
      type uint32;
      description
        "The value of the Generation ID in the last Hello message
         from the neighbor.";
    }
    container lan-prune-delay {
      description
        "The information of the LAN Prune Delay option in the Hello
         message from the neighbor.";
      leaf present {
        type boolean;
        description
          "'true' if the LAN Prune Delay option is present in the
           last Hello message from the neighbor.";
      }
      leaf override-interval {
        when "../present = 'true'" {
          description
            "Available only when 'leaf present' is 'true'.";
        }
        type uint16;
        units "milliseconds";
        description
          "The value of the Override_Interval field of the LAN Prune
           Delay option in the last Hello message from the neighbor.
           The neighbor uses this value to indicate a short period
           after a Join or Prune to allow other routers on the LAN
           to override the Join or Prune.";
      }
      leaf propagation-delay {
        when "../present = 'true'" {
          description
            "Available only when 'leaf present' is 'true'.";
        }
        type uint16;
        units "milliseconds";
        description
          "The value of the Propagation_Delay field of the LAN Prune
           Delay option in the last Hello message from the neighbor.
           The value is the propagation delay over the local link
           expected by the neighbor.";
      }
      leaf t-bit {
        when "../present = 'true'" {
          description
            "Available only when 'leaf present' is 'true'.";
        }
        type boolean;
        description
          "'true' if the T bit is set in the LAN Prune Delay option
           in the last Hello message from the neighbor.  This flag
           indicates the neighbor's ability to disable Join
           message suppression.";
      }
    }
    leaf up-time {
      type rt-types:timeticks64;
      description
        "The number of time ticks (hundredths of a second) since
         the neighbor relationship has been formed as reachable
         without being timed out.";
    }
  } // neighbor-state-af-attributes

  grouping pim-instance-af-state-ref {
    description
      "An absolute reference to a PIM instance address family.";
    leaf instance-af-ref {
      type leafref {
        path "/rt:routing/rt:control-plane-protocols/"
           + "pim-base:pim/pim-base:address-family/"
           + "pim-base:address-family";
      }
      description
        "Reference to a PIM instance address family.";
    }
  } // pim-instance-af-state-ref

  grouping pim-interface-state-ref {
    description
      "An absolute reference to a PIM interface state.";
    leaf interface-ref {
      type leafref {
        path "/rt:routing/rt:control-plane-protocols/"
           + "pim-base:pim/pim-base:interfaces/pim-base:interface/"
           + "pim-base:name";
      }
      description
        "Reference to a PIM interface.";
    }
  } // pim-interface-state-ref

  grouping statistics-sent-received {
    description
      "A grouping defining sent and received statistics
       on PIM messages.";
    reference
      "RFC 3973: Protocol Independent Multicast - Dense Mode
       (PIM-DM): Protocol Specification (Revised), Section 4.7.1
       RFC 5015: Bidirectional Protocol Independent Multicast
       (BIDIR-PIM), Section 3.7
       RFC 7761: Protocol Independent Multicast - Sparse Mode
       (PIM-SM): Protocol Specification (Revised), Section 4.9";
    leaf assert {
      type yang:counter64;
      description
        "The number of Assert messages, with the message Type
         of 5 (RFCs 3973 and 7761).";
      reference
        "RFC 3973: Protocol Independent Multicast - Dense Mode
         (PIM-DM): Protocol Specification (Revised)
         RFC 7761: Protocol Independent Multicast - Sparse Mode
         (PIM-SM): Protocol Specification (Revised)";
    }
    leaf bsr {
      type yang:counter64;
      description
        "The number of Bootstrap messages, with the message Type
         of 4 (RFCs 3973 and 7761).";
    }
    leaf candidate-rp-advertisement {
      type yang:counter64;
      description
        "The number of Candidate RP Advertisement messages, with the
         message Type of 8 (RFCs 3973 and 7761).";
    }
    leaf df-election {
      type yang:counter64;
      description
        "The number of DF (Designated Forwarder) election messages,
         with the message Type of 10 (RFC 5015).";
      reference
        "RFC 5015: Bidirectional Protocol Independent Multicast
         (BIDIR-PIM)";
    }
    leaf graft {
      type yang:counter64;
      description
        "The number of Graft messages, with the message Type
         of 6 (RFCs 3973 and 7761).";
    }
    leaf graft-ack {
      type yang:counter64;
      description
        "The number of Graft-Ack messages, with the message Type
         of 7 (RFCs 3973 and 7761).";
    }
    leaf hello {
      type yang:counter64;
      description
        "The number of Hello messages, with the message Type
         of 0 (RFCs 3973 and 7761).";
    }
    leaf join-prune {
      type yang:counter64;
      description
        "The number of Join/Prune messages, with the message Type
         of 3 (RFCs 3973 and 7761).";
    }
    leaf register {
      type yang:counter64;
      description
        "The number of Register messages, with the message Type
         of 1 (RFCs 3973 and 7761).";
    }
    leaf register-stop {
      type yang:counter64;
      description
        "The number of Register-Stop messages, with the message Type
         of 2 (RFCs 3973 and 7761).";
    }
    leaf state-refresh {
      type yang:counter64;
      description
        "The number of State Refresh messages, with the message Type
         of 9 (RFC 3973).";
    }
  } // statistics-sent-received

  /*
   * Data nodes
   */

  augment "/rt:routing/rt:control-plane-protocols" {
    description
      "PIM augmentation to the routing instance model.";
    container pim {
      presence "Enables the PIM protocol.";
      description
        "PIM configuration data and operational state data.";
      uses graceful-restart-container {
        if-feature "global-graceful-restart";
      }
      list address-family {
        key "address-family";
        description
          "Each list entry for one address family.";
        uses rt:address-family;
        uses graceful-restart-container {
          if-feature "per-af-graceful-restart";
        }
        container statistics {
          config false;
          description
            "A container defining statistics attributes.";
          leaf discontinuity-time {
            type yang:date-and-time;
            description
              "The time of the most recent occasion at which any one
               or more of the statistics counters suffered a
               discontinuity.  If no such discontinuities have
               occurred since the last reinitialization of the local
               management subsystem, then this node contains the time
               the local management subsystem reinitialized
               itself.";
          }
          container error {
            description
              "Contains error statistics.";
            uses statistics-sent-received {
              description
                "Statistics counters on the PIM messages per PIM
                 message Type.  Each leaf attribute counts the number
                 of PIM messages that were of a particular Type (such
                 as Hello) and contained errors preventing them from
                 being processed by PIM.

                 Such messages are also counted by the corresponding
                 counter of the same Type (such as Hello) in the
                 'received' container.";
            }
            leaf checksum {
              type yang:counter64;
              description
                "The number of PIM messages that were passed to PIM
                 and contained checksum errors.";
            }
            leaf format {
              type yang:counter64;
              description
                "The number of PIM messages that passed checksum
                 validation but contained format errors, including
                 errors related to PIM Version, Type, and message
                 length.";
            }
          }
          container queue {
            description
              "Contains queue statistics.";
            leaf size {
              type uint32;
              description
                "The size of the input queue.";
            }
            leaf overflow {
              type yang:counter32;
              description
                "The number of input queue overflows.";
            }
          }
          container received {
            description
              "Contains statistics of received messages.";
            uses statistics-sent-received;
          }
          container sent {
            description
              "Contains statistics of sent messages.";
            uses statistics-sent-received;
          }
        }
        container topology-tree-info {
          config false;
          description
            "Contains topology tree information.";
          list ipv4-route {
            when "../../address-family = 'rt:ipv4'" {
              description
                "Only applicable to an IPv4 address family.";
            }
            key "group source-address is-rpt";
            description
              "A list of IPv4 routes.";
            leaf group {
              type rt-types:ipv4-multicast-group-address;
              description
                "Group address.";
            }
            leaf source-address {
              type rt-types:ipv4-multicast-source-address;
              description
                "Source address.";
            }
            leaf is-rpt {
              type boolean;
              description
                "'true' if the tree is an RPT
                 (Rendezvous Point Tree).";
            }
            uses multicast-route-attributes;
          } // ipv4-route
          list ipv6-route {
            when "../../address-family = 'rt:ipv6'" {
              description
                "Only applicable to an IPv6 address family.";
            }
            key "group source-address is-rpt";
            description
              "A list of IPv6 routes.";
            leaf group {
              type rt-types:ipv6-multicast-group-address;
              description
                "Group address.";
            }
            leaf source-address {
              type rt-types:ipv6-multicast-source-address;
              description
                "Source address.";
            }
            leaf is-rpt {
              type boolean;
              description
                "'true' if the tree is an RPT.";
            }
            uses multicast-route-attributes;
          } // ipv6-route
        } // topology-tree-info
      } // address-family
      container interfaces {
        description
          "Contains a list of interfaces.";
        list interface {
          key "name";
          description
            "List of PIM interfaces.";
          leaf name {
            type if:interface-ref;
            description
              "Reference to an entry in the global interface list.";
          }
          list address-family {
            key "address-family";
            description
              "Each list entry for one address family.";
            uses rt:address-family;
            container bfd {
              if-feature "bfd";
              description
                "BFD (Bidirectional Forwarding Detection)
                 operation.";
              uses bfd-types:client-cfg-parms;
            }
            leaf dr-priority {
              if-feature "intf-dr-priority";
              type uint32;
              default "1";
              description
                "DR (Designated Router) priority as the preference in
                 the DR election process.";
            }
            leaf hello-interval {
              if-feature "intf-hello-interval";
              type rt-types:timer-value-seconds16;
              default "30";
              description
                "Periodic interval for Hello messages.
                 If 'infinity' or 'not-set' is used, no periodic
                 Hello messages are sent.";
              reference
                "RFC 3973: Protocol Independent Multicast -
                 Dense Mode (PIM-DM): Protocol Specification
                 (Revised), Section 4.8
                 RFC 7761: Protocol Independent Multicast - Sparse
                 Mode (PIM-SM): Protocol Specification (Revised),
                 Section 4.11";
            }
            choice hello-holdtime-or-multiplier {
              description
                "The Holdtime is the timer value to time out the
                 neighbor state when the timer expires.
                 The Holdtime value can be specified by either
                 (1) the given Holdtime value or (2) the calculation
                 of the Hello interval multiplied by the given value
                 of the multiplier.";
              case holdtime {
                if-feature "intf-hello-holdtime";
                leaf hello-holdtime {
                  type rt-types:timer-value-seconds16;
                  default "105";
                  description
                    "The Hello Holdtime is the amount of time to
                     keep the neighbor reachable until a new
                     Hello message is received.";
                }
              }
              case multiplier {
                if-feature "intf-hello-multiplier";
                leaf hello-multiplier {
                  type rt-types:timer-multiplier;
                  default "3";
                  description
                    "The Hello multiplier is the number by which the
                     Hello interval is multiplied to obtain the
                     Hello Holdtime.
                     The value of the Hello Holdtime is calculated
                     as:
                     hello-holdtime =
                     (multiplier + 0.5) * (hello-interval).";
                }
              }
            }
            leaf jp-interval {
              if-feature "intf-jp-interval";
              type rt-types:timer-value-seconds16;
              default "60";
              description
                "Periodic interval between Join/Prune messages.
                 If 'infinity' or 'not-set' is used, no periodic
                 Join/Prune messages are sent.";
            }
            choice jp-holdtime-or-multiplier {
              description
                "The Join/Prune Holdtime is the amount of time a
                 receiver must keep the Join/Prune state alive.
                 The Holdtime value can be specified by either
                 (1) the given Holdtime value or (2) the calculation
                 of 'jp-interval' multiplied by the given value of
                 the multiplier.";
              case holdtime {
                if-feature "intf-jp-holdtime";
                leaf jp-holdtime {
                  type rt-types:timer-value-seconds16;
                  default "210";
                  description
                    "The Join/Prune Holdtime is the amount of time a
                     receiver must keep the Join/Prune state alive.";
                }
              }
              case multiplier {
                if-feature "intf-jp-multiplier";
                leaf jp-multiplier {
                  type rt-types:timer-multiplier;
                  default "3";
                  description
                    "The Join/Prune multiplier is the number
                     by which the Join/Prune interval is multiplied
                     to obtain the Join/Prune Holdtime.
                     The value of the Join/Prune Holdtime is
                     calculated as:
                     jp-holdtime =
                     (multiplier + 0.5) * (jp-interval).";
                }
              }
            }
            leaf override-interval {
              if-feature "intf-override-interval";
              type uint16;
              units "milliseconds";
              default "2500";
              description
                "A short period after a Join or Prune to allow other
                 routers on the LAN to override the Join or Prune.";
            }
            leaf propagation-delay {
              if-feature "intf-propagation-delay";
              type uint16;
              units "milliseconds";
              default "500";
              description
                "Expected propagation delay over the local link.";
            }
            // Interface state attributes
            leaf oper-status {
              type enumeration {
                enum up {
                  description
                    "The interface is ready to pass PIM messages.";
                }
                enum down {
                  description
                    "The interface does not pass PIM messages.";
                }
              }
              config false;
              description
                "PIM operational status on the interface.
                 This status is PIM specific and separate from the
                 operational status of the underlying interface.";
            }
            leaf gen-id {
              type uint32;
              config false;
              description
                "The value of the Generation ID this router uses to
                 insert into the PIM Hello message sent on this
                 interface.";
            }
            leaf hello-expiration {
              type rt-types:timer-value-seconds16;
              config false;
              description
                "Hello interval expiration time.";
            }
            container ipv4 {
              when "../address-family = 'rt:ipv4'" {
                description
                  "Only applicable to an IPv4 address family.";
              }
              config false;
              description
                "Interface state attributes for IPv4.";
              leaf-list address {
                type inet:ipv4-address;
                description
                  "List of addresses on which PIM is operating.";
              }
              leaf dr-address {
                type inet:ipv4-address;
                description
                  "DR (Designated Router) address.";
              }
            }
            container ipv6 {
              when "../address-family = 'rt:ipv6'" {
                description
                  "Only applicable to an IPv6 address family.";
              }
              config false;
              description
                "Interface state attributes for IPv6.";
              leaf-list address {
                type inet:ipv6-address;
                description
                  "List of addresses on which PIM is operating.";
              }
              leaf dr-address {
                type inet:ipv6-address;
                description
                  "DR address.";
              }
            }
            container neighbors {
              config false;
              description
                "Information learned from neighbors through this
                 interface.";
              list ipv4-neighbor {
                when "../../address-family = 'rt:ipv4'" {
                  description
                    "Only applicable to an IPv4 address family.";
                }
                key "address";
                description
                  "Neighbor state information.";
                leaf address {
                  type inet:ipv4-address;
                  description
                    "Neighbor address.";
                }
                uses neighbor-state-af-attributes;
              } // list ipv4-neighbor
              list ipv6-neighbor {
                when "../../address-family = 'rt:ipv6'" {
                  description
                    "Only applicable to an IPv6 address family.";
                }
                key "address";
                description
                  "Neighbor state information.";
                leaf address {
                  type inet:ipv6-address;
                  description
                    "Neighbor address.";
                }
                uses neighbor-state-af-attributes;
              } // list ipv6-neighbor
            } // neighbors
          } // address-family
        } // interface
      } // interfaces
    } // pim
  } // augment

  /*
   * Notifications
   */

  notification pim-neighbor-event {
    description
      "Notification event for a neighbor.";
    leaf event-type {
      type neighbor-event-type;
      description
        "Event type.";
    }
    uses pim-interface-state-ref;
    leaf interface-af-ref {
      type leafref {
        path "/rt:routing/rt:control-plane-protocols/"
           + "pim-base:pim/pim-base:interfaces/pim-base:interface"
           + "[pim-base:name = current()/../interface-ref]/"
           + "pim-base:address-family/pim-base:address-family";
      }
      description
        "Reference to a PIM interface address family.";
    }
    leaf neighbor-ipv4-ref {
      when "../interface-af-ref = 'rt:ipv4'" {
        description
          "Only applicable to an IPv4 address family.";
      }
      type leafref {
        path "/rt:routing/rt:control-plane-protocols/"
           + "pim-base:pim/pim-base:interfaces/pim-base:interface"
           + "[pim-base:name = current()/../interface-ref]/"
           + "pim-base:address-family"
           + "[pim-base:address-family = "
           + "current()/../interface-af-ref]/"
           + "pim-base:neighbors/pim-base:ipv4-neighbor/"
           + "pim-base:address";
      }
      description
        "Reference to a PIM IPv4 neighbor.";
    }
    leaf neighbor-ipv6-ref {
      when "../interface-af-ref = 'rt:ipv6'" {
        description
          "Only applicable to an IPv6 address family.";
      }
      type leafref {
        path "/rt:routing/rt:control-plane-protocols/"
           + "pim-base:pim/pim-base:interfaces/pim-base:interface"
           + "[pim-base:name = current()/../interface-ref]/"
           + "pim-base:address-family"
           + "[pim-base:address-family = "
           + "current()/../interface-af-ref]/"
           + "pim-base:neighbors/pim-base:ipv6-neighbor/"
           + "pim-base:address";
      }
      description
        "Reference to a PIM IPv6 neighbor.";
    }
    leaf up-time {
      type rt-types:timeticks64;
      description
        "The number of time ticks (hundredths of a second) since
         the neighbor relationship has been formed as reachable
         without being timed out.";
    }
  }

  notification pim-interface-event {
    description
      "Notification event for an interface.";
    leaf event-type {
      type interface-event-type;
      description
        "Event type.";
    }
    uses pim-interface-state-ref;
    container ipv4 {
      description
        "Contains IPv4 information.";
      leaf-list address {
        type inet:ipv4-address;
        description
          "List of addresses.";
      }
      leaf dr-address {
        type inet:ipv4-address;
        description
          "DR (Designated Router) address.";
      }
    }
    container ipv6 {
      description
        "Contains IPv6 information.";
      leaf-list address {
        type inet:ipv6-address;
        description
          "List of addresses.";
      }
      leaf dr-address {
        type inet:ipv6-address;
        description
          "DR address.";
      }
    }
  }
}
</sourcecode>
      </section>
      <section numbered="true" toc="include" removeInRFC="false" pn="section-6.2">
        <name slugifiedName="name-pim-rp-module-3">PIM RP Module</name>
        <t indent="0" pn="section-6.2-1">
          This module references
          <xref target="RFC5059" format="default" sectionFormat="of" derivedContent="RFC5059"/>,
          <xref target="RFC6991" format="default" sectionFormat="of" derivedContent="RFC6991"/>, <xref target="RFC7761" format="default" sectionFormat="of" derivedContent="RFC7761"/>,
          <xref target="RFC8294" format="default" sectionFormat="of" derivedContent="RFC8294"/>, <xref target="RFC8343" format="default" sectionFormat="of" derivedContent="RFC8343"/>, and
          <xref target="RFC8349" format="default" sectionFormat="of" derivedContent="RFC8349"/>.
        </t>
        <sourcecode name="ietf-pim-rp@2022-10-19.yang" type="yang" markers="true" pn="section-6.2-2">
module ietf-pim-rp {
  yang-version 1.1;
  namespace "urn:ietf:params:xml:ns:yang:ietf-pim-rp";
  prefix pim-rp;

  import ietf-inet-types {
    prefix inet;
    reference
      "RFC 6991: Common YANG Data Types";
  }
  import ietf-routing-types {
    prefix rt-types;
    reference
      "RFC 8294: Common YANG Data Types for the Routing Area";
  }
  import ietf-interfaces {
    prefix if;
    reference
      "RFC 8343: A YANG Data Model for Interface Management";
  }
  import ietf-routing {
    prefix rt;
    reference
      "RFC 8349: A YANG Data Model for Routing Management (NMDA
       Version)";
  }
  import ietf-pim-base {
    prefix pim-base;
    reference
      "RFC 9128: A YANG Data Model for Protocol Independent
       Multicast (PIM)";
  }

  organization
    "IETF PIM Working Group";
  contact
    "WG Web:   &lt;https://datatracker.ietf.org/wg/pim/&gt;
     WG List:  &lt;mailto:pim@ietf.org&gt;

     Editor:   Xufeng Liu
               &lt;mailto:xufeng.liu.ietf@gmail.com&gt;

     Editor:   Pete McAllister
               &lt;mailto:pete.mcallister@metaswitch.com&gt;

     Editor:   Anish Peter
               &lt;mailto:anish.ietf@gmail.com&gt;

     Editor:   Mahesh Sivakumar
               &lt;mailto:sivakumar.mahesh@gmail.com&gt;

     Editor:   Yisong Liu
               &lt;mailto:liuyisong@chinamobile.com&gt;

     Editor:   Fangwei Hu
               &lt;mailto:hufwei@gmail.com&gt;";
  description
    "This YANG module defines a PIM (Protocol Independent Multicast)
     RP (Rendezvous Point) model.

     Copyright (c) 2022 IETF Trust and the persons identified as
     authors of the code.  All rights reserved.

     Redistribution and use in source and binary forms, with or
     without modification, is permitted pursuant to, and subject to
     the license terms contained in, the Revised BSD License set
     forth in Section 4.c of the IETF Trust's Legal Provisions
     Relating to IETF Documents
     (https://trustee.ietf.org/license-info).

     This version of this YANG module is part of RFC 9128; see the
     RFC itself for full legal notices.";

  revision 2022-10-19 {
    description
      "Initial revision.";
    reference
      "RFC 9128: A YANG Data Model for Protocol Independent
       Multicast (PIM)";
  }

  /*
   * Features
   */

  feature bsr {
    description
      "This feature indicates that the system supports BSRs
       (Bootstrap Routers).";
    reference
      "RFC 5059: Bootstrap Router (BSR) Mechanism for Protocol
       Independent Multicast (PIM)";
  }

  feature bsr-election-state {
    if-feature "bsr";
    description
      "This feature indicates that the system supports providing
       BSR election state.";
    reference
      "RFC 5059: Bootstrap Router (BSR) Mechanism for Protocol
       Independent Multicast (PIM)";
  }

  feature static-rp-override {
    description
      "This feature indicates that the system supports configuration
       of the static RP (Rendezvous Point) that overrides the RP
       discoveries from other mechanisms.";
    reference
      "RFC 7761: Protocol Independent Multicast - Sparse Mode
       (PIM-SM): Protocol Specification (Revised), Section 3.7";
  }

  feature candidate-interface {
    description
      "This feature indicates that the system supports using
       an interface to configure a BSR or RP candidate.";
  }

  feature candidate-ipv4 {
    description
      "This feature indicates that the system supports using
       an IPv4 address to configure a BSR or RP candidate.";
  }

  feature candidate-ipv6 {
    description
      "This feature indicates that the system supports using
       an IPv6 address to configure a BSR or RP candidate.";
  }

  /*
   * Typedefs
   */

  typedef rp-event-type {
    type enumeration {
      enum invalid-jp {
        description
          "An invalid Join/Prune message has been received.";
      }
      enum invalid-register {
        description
          "An invalid Register message has been received.";
      }
      enum mapping-created {
        description
          "A new mapping has been created.";
      }
      enum mapping-deleted {
        description
          "A mapping has been deleted.";
      }
    }
    description
      "Operational status event type for notifications.";
  }

  /*
   * Identities
   */

  identity rp-mode {
    description
      "The mode of an RP, which can be SM (Sparse Mode) or
       BIDIR (Bidirectional).";
  }

  identity rp-info-source-type {
    description
      "The information source of an RP.";
  }

  identity static {
    base rp-info-source-type;
    description
      "The RP is statically configured.";
  }

  identity bootstrap {
    base rp-info-source-type;
    description
      "The RP is learned from a Bootstrap.";
  }

  /*
   * Groupings
   */

  grouping rp-mapping-state-attributes {
    description
      "Grouping of RP mapping attributes.";
    leaf up-time {
      type rt-types:timeticks64;
      description
        "The number of time ticks (hundredths of a second) since
         the RP mapping or the RP became actively available.";
    }
    leaf expiration {
      type rt-types:timer-value-seconds16;
      description
        "Expiration time.";
    }
  } // rp-mapping-state-attributes

  grouping rp-state-attributes {
    description
      "Grouping of RP state attributes.";
    leaf info-source-type {
      type identityref {
        base rp-info-source-type;
      }
      description
        "The information source of an RP.";
    } // info-source-type
    leaf up-time {
      type rt-types:timeticks64;
      description
        "The number of time ticks (hundredths of a second) since
         the RP became actively available.";
    }
    leaf expiration {
      type rt-types:timer-value-seconds16;
      description
        "Expiration time.";
    }
  } // rp-state-attributes

  grouping static-rp-attributes {
    description
      "Grouping of static RP attributes, used in augmenting
       modules.";
    leaf policy-name {
      type string;
      description
        "The string value is the name to uniquely identify a
         policy that contains one or more policy rules used to
         determine which multicast group addresses are mapped
         to this statically configured RP address.
         If a policy is not specified, the entire multicast address
         space is mapped.
         The definition of such a policy is outside the scope
         of this document.";
    }
    leaf override {
      if-feature "static-rp-override";
      type boolean;
      default "false";
      description
        "When there is a conflict between static RPs and dynamic RPs,
         setting this attribute to 'true' will ask the system to use
         static RPs.";
    }
  } // static-rp-attributes

  grouping rp-candidate-attributes {
    description
      "Grouping of RP candidate attributes.";
    leaf policy-name {
      type string;
      description
        "The string value is the name to uniquely identify a
         policy that contains one or more policy rules used to
         accept or reject certain multicast groups.
         If a policy is not specified, the entire multicast address
         space is accepted.
         The definition of such a policy is outside the scope
         of this document.";
    }
    leaf mode {
      type identityref {
        base rp-mode;
      }
      description
        "The mode of an RP, which can be SM (Sparse Mode) or BIDIR
         (Bidirectional).  Each of these modes is defined in a
         separate YANG module.  If a system supports an RP mode,
         the corresponding YANG module is implemented.
         When the value of this leaf is not specified, the default
         value is the supported mode if only one mode is implemented,
         or the default value is SM if both SM and BIDIR are
         implemented.";
    }
  } // rp-candidate-attributes

  /*
   * Configuration data nodes
   */

  augment "/rt:routing/rt:control-plane-protocols/pim-base:pim/"
        + "pim-base:address-family" {
    description
      "PIM RP augmentation.";
    container rp {
      description
        "PIM RP configuration data.";
      container static-rp {
        description
          "Contains static RP attributes.";
        list ipv4-rp {
          when "../../../pim-base:address-family = 'rt:ipv4'" {
            description
              "Only applicable to an IPv4 address family.";
          }
          key "rp-address";
          description
            "A list of IPv4 RP addresses.";
          leaf rp-address {
            type inet:ipv4-address;
            description
              "Specifies a static RP address.";
          }
        }
        list ipv6-rp {
          when "../../../pim-base:address-family = 'rt:ipv6'" {
            description
              "Only applicable to an IPv6 address family.";
          }
          key "rp-address";
          description
            "A list of IPv6 RP addresses.";
          leaf rp-address {
            type inet:ipv6-address;
            description
              "Specifies a static RP address.";
          }
        }
      } // static-rp
      container bsr {
        if-feature "bsr";
        description
          "Contains BSR (Bootstrap Router) attributes.";
        container bsr-candidate {
          presence "Present to serve as a BSR candidate.";
          description
            "BSR candidate attributes.";
          choice interface-or-address {
            description
              "Use either an interface or an IP address.";
            case interface {
              if-feature "candidate-interface";
              leaf interface {
                type if:interface-ref;
                mandatory true;
                description
                  "Interface to be used by a BSR.";
              }
            }
            case ipv4-address {
              when "../../../pim-base:address-family = 'rt:ipv4'" {
                description
                  "Only applicable to an IPv4 address family.";
              }
              if-feature "candidate-ipv4";
              leaf ipv4-address {
                type inet:ipv4-address;
                mandatory true;
                description
                  "IP address to be used by a BSR.";
              }
            }
            case ipv6-address {
              when "../../../pim-base:address-family = 'rt:ipv6'" {
                description
                  "Only applicable to an IPv6 address family.";
              }
              if-feature "candidate-ipv6";
              leaf ipv6-address {
                type inet:ipv6-address;
                mandatory true;
                description
                  "IP address to be used by a BSR.";
              }
            }
          }
          leaf hash-mask-length {
            type uint8 {
              range "0..128";
            }
            mandatory true;
            description
              "Value contained in BSR messages used by all routers to
               hash (map) to an RP.";
          }
          leaf priority {
            type uint8 {
              range "0..255";
            }
            default "64";
            description
              "BSR election priority among different candidate BSRs.
               A larger value has a higher priority over a smaller
               value.";
          }
        } // bsr-candidate
        container rp-candidate {
          description
            "Contains RP candidate attributes.";
          list interface {
            if-feature "candidate-interface";
            key "name";
            description
              "A list of RP candidates.";
            leaf name {
              type if:interface-ref;
              description
                "Interface that the RP candidate uses.";
            }
            uses rp-candidate-attributes;
          }
          list ipv4-address {
            when "../../../../pim-base:address-family = 'rt:ipv4'" {
              description
                "Only applicable to an IPv4 address family.";
            }
            if-feature "candidate-ipv4";
            key "address";
            description
              "A list of RP candidate addresses.";
            leaf address {
              type inet:ipv4-address;
              description
                "IPv4 address that the RP candidate uses.";
            }
            uses rp-candidate-attributes;
          }
          list ipv6-address {
            when "../../../../pim-base:address-family = 'rt:ipv6'" {
              description
                "Only applicable to an IPv6 address family.";
            }
            if-feature "candidate-ipv6";
            key "address";
            description
              "A list of RP candidate addresses.";
            leaf address {
              type inet:ipv6-address;
              description
                "IPv6 address that the RP candidate uses.";
            }
            uses rp-candidate-attributes;
          }
        }
        // BSR state attributes
        container bsr {
          config false;
          description
            "BSR information.";
          leaf address {
            type inet:ip-address;
            description
              "BSR address.";
          }
          leaf hash-mask-length {
            type uint8 {
              range "0..128";
            }
            description
              "Hash mask length.";
          }
          leaf priority {
            type uint8 {
              range "0..255";
            }
            description
              "Priority.";
          }
          leaf up-time {
            type rt-types:timeticks64;
            description
              "The number of time ticks (hundredths of a second)
               since the BSR came up.";
          }
        }
        choice election-state {
          if-feature "bsr-election-state";
          config false;
          description
            "BSR election state.";
          case candidate {
            leaf candidate-bsr-state {
              type enumeration {
                enum candidate {
                  description
                    "The router is a candidate to be the BSR for the
                     scope zone, but currently another router is the
                     preferred BSR.";
                }
                enum pending {
                  description
                    "The router is a candidate to be the BSR for the
                     scope zone.  Currently, no other router is the
                     preferred BSR, but this router is not yet the
                     elected BSR.  This is a temporary state that
                     prevents rapid thrashing of the choice of BSR
                     during BSR election.";
                }
                enum elected {
                  description
                    "The router is the elected BSR for the
                     scope zone, and it must perform all of the
                     BSR functions.";
                }
              }
              description
                "Candidate-BSR (C-BSR) state.";
              reference
                "RFC 5059: Bootstrap Router (BSR) Mechanism for
                 Protocol Independent Multicast (PIM),
                 Section 3.1.1";
            }
          }
          case non-candidate {
            leaf non-candidate-bsr-state {
              type enumeration {
                enum no-info {
                  description
                    "The router has no information about this scope
                     zone.";
                }
                enum accept-any {
                  description
                    "The router does not know of an active BSR and
                     will accept the first Bootstrap message it sees
                     that provides the new BSR's identity and the
                     RP-Set.";
                }
                enum accept {
                  description
                    "The router knows the identity of the current
                     BSR and is using the RP-Set provided by that
                     BSR.  Only Bootstrap messages from that BSR or
                     from a Candidate-BSR (C-BSR) with higher weight
                     than the current BSR will be accepted.";
                }
              }
              description
                "Non-Candidate-BSR state.";
              reference
                "RFC 5059: Bootstrap Router (BSR) Mechanism for
                 Protocol Independent Multicast (PIM),
                 Section 3.1.2";
            }
          }
        } // election-state
        leaf bsr-next-bootstrap {
          type uint16;
          units "seconds";
          config false;
          description
            "The remaining time interval in seconds until the next
             Bootstrap will be sent.";
        }
        container rp {
          config false;
          description
            "State information of the RP.";
          leaf rp-address {
            type inet:ip-address;
            description
              "RP address.";
          }
          leaf policy-name {
            type string;
            description
              "The string value is the name to uniquely identify a
               policy that contains one or more policy rules used to
               accept or reject certain multicast groups.
               If a policy is not specified, the entire multicast
               address space is accepted.
               The definition of such a policy is outside the scope
               of this document.";
          }
          leaf up-time {
            type rt-types:timeticks64;
            description
              "The number of time ticks (hundredths of a second)
               since the RP became actively available.";
          }
        }
        leaf rp-candidate-next-advertisement {
          type uint16;
          units "seconds";
          config false;
          description
            "The remaining time interval in seconds until the next
             RP candidate advertisement will be sent.";
        }
      } // bsr
      container rp-list {
        config false;
        description
          "Contains a list of RPs.";
        list ipv4-rp {
          when "../../../pim-base:address-family = 'rt:ipv4'" {
            description
              "Only applicable to an IPv4 address family.";
          }
          key "rp-address mode";
          description
            "A list of IPv4 RP addresses.";
          leaf rp-address {
            type inet:ipv4-address;
            description
              "RP address.";
          }
          leaf mode {
            type identityref {
              base rp-mode;
            }
            description
              "RP mode.";
          }
          leaf info-source-address {
            type inet:ipv4-address;
            description
              "The address where RP information is learned.";
          }
          uses rp-state-attributes;
        }
        list ipv6-rp {
          when "../../../pim-base:address-family = 'rt:ipv6'" {
            description
              "Only applicable to an IPv6 address family.";
          }
          key "rp-address mode";
          description
            "A list of IPv6 RP addresses.";
          leaf rp-address {
            type inet:ipv6-address;
            description
              "RP address.";
          }
          leaf mode {
            type identityref {
              base rp-mode;
            }
            description
              "RP mode.";
          }
          leaf info-source-address {
            type inet:ipv6-address;
            description
              "The address where RP information is learned.";
          }
          uses rp-state-attributes;
        }
      } // rp-list
      container rp-mappings {
        config false;
        description
          "Contains a list of group-to-RP mappings.";
        list ipv4-rp {
          when "../../../pim-base:address-family = 'rt:ipv4'" {
            description
              "Only applicable to an IPv4 address family.";
          }
          key "group-range rp-address";
          description
            "A list of group-to-RP mappings.";
          leaf group-range {
            type inet:ipv4-prefix;
            description
              "Group range presented in the format of a prefix.";
          }
          leaf rp-address {
            type inet:ipv4-address;
            description
              "RP address.";
          }
          uses rp-mapping-state-attributes;
        }
        list ipv6-rp {
          when "../../../pim-base:address-family = 'rt:ipv6'" {
            description
              "Only applicable to an IPv6 address family.";
          }
          key "group-range rp-address";
          description
            "A list of IPv6 RP addresses.";
          leaf group-range {
            type inet:ipv6-prefix;
            description
              "Group range presented in the format of a prefix.";
          }
          leaf rp-address {
            type inet:ipv6-address;
            description
              "RP address.";
          }
          uses rp-mapping-state-attributes;
        }
      } // rp-mappings
    } // rp
  } // augment

  /*
   * Notifications
   */

  notification pim-rp-event {
    description
      "Notification event for an RP.";
    leaf event-type {
      type rp-event-type;
      description
        "Event type.";
    }
    uses pim-base:pim-instance-af-state-ref;
    leaf group {
      type rt-types:ip-multicast-group-address;
      description
        "Group address.";
    }
    leaf rp-address {
      type inet:ip-address;
      description
        "RP address.";
    }
    leaf is-rpt {
      type boolean;
      description
        "'true' if the tree is an RPT (Rendezvous Point Tree).";
    }
    leaf mode {
      type identityref {
        base pim-base:pim-mode;
      }
      description
        "PIM mode.";
    }
    leaf message-origin {
      type inet:ip-address;
      description
        "Where the message originated.";
    }
  }
}
</sourcecode>
      </section>
      <section numbered="true" toc="include" removeInRFC="false" pn="section-6.3">
        <name slugifiedName="name-pim-sm-module-3">PIM-SM Module</name>
        <t indent="0" pn="section-6.3-1">
          This module references
          <xref target="RFC4607" format="default" sectionFormat="of" derivedContent="RFC4607"/>,
          <xref target="RFC6991" format="default" sectionFormat="of" derivedContent="RFC6991"/>,
          <xref target="RFC7761" format="default" sectionFormat="of" derivedContent="RFC7761"/>, and
          <xref target="RFC8349" format="default" sectionFormat="of" derivedContent="RFC8349"/>.
        </t>
        <sourcecode name="ietf-pim-sm@2022-10-19.yang" type="yang" markers="true" pn="section-6.3-2">
module ietf-pim-sm {
  yang-version 1.1;
  namespace "urn:ietf:params:xml:ns:yang:ietf-pim-sm";
  prefix pim-sm;

  import ietf-inet-types {
    prefix inet;
    reference
      "RFC 6991: Common YANG Data Types";
  }
  import ietf-routing {
    prefix rt;
    reference
      "RFC 8349: A YANG Data Model for Routing Management (NMDA
       Version)";
  }
  import ietf-pim-base {
    prefix pim-base;
    reference
      "RFC 9128: A YANG Data Model for Protocol Independent
       Multicast (PIM)";
  }
  import ietf-pim-rp {
    prefix pim-rp;
    reference
      "RFC 9128: A YANG Data Model for Protocol Independent
       Multicast (PIM)";
  }

  organization
    "IETF PIM Working Group";
  contact
    "WG Web:   &lt;https://datatracker.ietf.org/wg/pim/&gt;
     WG List:  &lt;mailto:pim@ietf.org&gt;

     Editor:   Xufeng Liu
               &lt;mailto:xufeng.liu.ietf@gmail.com&gt;

     Editor:   Pete McAllister
               &lt;mailto:pete.mcallister@metaswitch.com&gt;

     Editor:   Anish Peter
               &lt;mailto:anish.ietf@gmail.com&gt;

     Editor:   Mahesh Sivakumar
               &lt;mailto:sivakumar.mahesh@gmail.com&gt;

     Editor:   Yisong Liu
               &lt;mailto:liuyisong@chinamobile.com&gt;

     Editor:   Fangwei Hu
               &lt;mailto:hufwei@gmail.com&gt;";
  description
    "This YANG module defines a PIM (Protocol Independent Multicast)
     SM (Sparse Mode) model.

     Copyright (c) 2022 IETF Trust and the persons identified as
     authors of the code.  All rights reserved.

     Redistribution and use in source and binary forms, with or
     without modification, is permitted pursuant to, and subject to
     the license terms contained in, the Revised BSD License set
     forth in Section 4.c of the IETF Trust's Legal Provisions
     Relating to IETF Documents
     (https://trustee.ietf.org/license-info).

     This version of this YANG module is part of RFC 9128; see the
     RFC itself for full legal notices.";

  revision 2022-10-19 {
    description
      "Initial revision.";
    reference
      "RFC 9128: A YANG Data Model for Protocol Independent
       Multicast (PIM)";
  }

  /*
   * Features
   */

  feature spt-switch-infinity {
    description
      "This feature indicates that the system supports the
       configuration choice of whether to trigger switchover from
       the RPT (Rendezvous Point Tree) to the SPT (Shortest Path
       Tree).";
    reference
      "RFC 7761: Protocol Independent Multicast - Sparse Mode
       (PIM-SM): Protocol Specification (Revised), Section 4.2";
  }

  feature spt-switch-policy {
    description
      "This feature indicates that the system supports configuring
       the policy for switchover from the RPT to the SPT.";
    reference
      "RFC 7761: Protocol Independent Multicast - Sparse Mode
       (PIM-SM): Protocol Specification (Revised), Section 4.2";
  }

  /*
   * Identities
   */

  identity rp-sm {
    base pim-rp:rp-mode;
    description
      "SM (Sparse Mode).";
  }

  /*
   * Groupings
   */

  grouping static-rp-sm-container {
    description
      "Grouping that contains SM attributes for static RPs.";
    container sm {
      presence "Indicates support for PIM-SM.";
      description
        "PIM-SM configuration data.";
      uses pim-rp:static-rp-attributes;
    } // sm
  } // static-rp-sm-container

  /*
   * Configuration data nodes
   */

  augment "/rt:routing/rt:control-plane-protocols/pim-base:pim/"
        + "pim-base:address-family" {
    description
      "PIM-SM augmentation.";
    container sm {
      description
        "PIM-SM configuration data.";
      container asm {
        description
          "ASM (Any-Source Multicast) attributes.";
        container anycast-rp {
          presence "Present to enable an Anycast-RP
                    (Rendezvous Point).";
          description
            "Anycast-RP attributes.";
          list ipv4-anycast-rp {
            when "../../../../pim-base:address-family = 'rt:ipv4'" {
              description
                "Only applicable to an IPv4 address family.";
            }
            key "anycast-address rp-address";
            description
              "A list of IPv4 Anycast-RP settings.  Only applicable
               when 'pim-base:address-family' is IPv4.";
            leaf anycast-address {
              type inet:ipv4-address;
              description
                "IP address of the Anycast-RP set.  This IP address
                 is used by the multicast groups or sources to join
                 or register.";
            }
            leaf rp-address {
              type inet:ipv4-address;
              description
                "IP address of the router configured with an
                 Anycast-RP.  This is the IP address where the
                 Register messages are forwarded.";
            }
          }
          list ipv6-anycast-rp {
            when "../../../../pim-base:address-family = 'rt:ipv6'" {
              description
                "Only applicable to an IPv6 address family.";
            }
            key "anycast-address rp-address";
            description
              "A list of IPv6 Anycast-RP settings.  Only applicable
               when 'pim-base:address-family' is IPv6.";
            leaf anycast-address {
              type inet:ipv6-address;
              description
                "IP address of the Anycast-RP set.  This IP address
                 is used by the multicast groups or sources to join
                 or register.";
            }
            leaf rp-address {
              type inet:ipv6-address;
              description
                "IP address of the router configured with an
                 Anycast-RP.  This is the IP address where the
                 Register messages are forwarded.";
            }
          }
        }
        container spt-switch {
          description
            "SPT (Shortest Path Tree) switching attributes.";
          container infinity {
            if-feature "spt-switch-infinity";
            presence "Present if the SPT switchover threshold is set
                      to infinity, according to the policy specified
                      below.";
            description
              "The receiver's DR (Designated Router) never triggers
               switchover from the RPT to the SPT.";
            leaf policy-name {
              if-feature "spt-switch-policy";
              type string;
              description
                "The string value is the name to uniquely identify a
                 policy that contains one or more policy rules used
                 to accept or reject certain multicast groups.
                 The groups accepted by this policy have the SPT
                 switchover threshold set to infinity, meaning that
                 they will stay on the shared tree forever.
                 If a policy is not specified, the entire multicast
                 address space is accepted.
                 The definition of such a policy is outside the scope
                 of this document.";
            }
          } // infinity
        }
      } // asm
      container ssm {
        presence "Present to enable SSM (Source-Specific
                  Multicast).";
        description
          "SSM attributes.";
        leaf range-policy {
          type string;
          description
            "The string value is the name to uniquely identify a
             policy that contains one or more policy rules used
             to accept or reject certain multicast groups.
             The groups accepted by this policy define the multicast
             group range used by SSM.
             If a policy is not specified, the default SSM multicast
             group range is used.
             The default SSM multicast group range is 232.0.0.0/8
             for IPv4 and ff3x::/96 for IPv6, where x represents any
             valid scope identifier.
             The definition of such a policy is outside the scope
             of this document.";
          reference
            "RFC 4607: Source-Specific Multicast for IP";
        }
      } // ssm
    } // sm
  } // augment

  augment "/rt:routing/rt:control-plane-protocols/pim-base:pim/"
        + "pim-base:interfaces/pim-base:interface/"
        + "pim-base:address-family" {
    description
      "PIM-SM augmentation.";
    container sm {
      presence "Present to enable PIM-SM.";
      description
        "PIM-SM configuration data.";
      leaf passive {
        type empty;
        description
          "Specifies that no PIM messages are sent or accepted on
           this PIM interface, but the interface can be included in a
           multicast forwarding entry.";
      }
    } // sm
  } // augment

  augment "/rt:routing/rt:control-plane-protocols/pim-base:pim/"
        + "pim-base:address-family/pim-rp:rp/"
        + "pim-rp:static-rp/pim-rp:ipv4-rp" {
    description
      "PIM-SM augmentation.";
    uses static-rp-sm-container;
  } // augment

  augment "/rt:routing/rt:control-plane-protocols/pim-base:pim/"
        + "pim-base:address-family/pim-rp:rp/"
        + "pim-rp:static-rp/pim-rp:ipv6-rp" {
    description
      "PIM-SM augmentation.";
    uses static-rp-sm-container;
  } // augment

}
</sourcecode>
      </section>
      <section numbered="true" toc="include" removeInRFC="false" pn="section-6.4">
        <name slugifiedName="name-pim-dm-module-3">PIM-DM Module</name>
        <t indent="0" pn="section-6.4-1">
          This module references
          <xref target="RFC3973" format="default" sectionFormat="of" derivedContent="RFC3973"/> and
          <xref target="RFC8349" format="default" sectionFormat="of" derivedContent="RFC8349"/>.
        </t>
        <sourcecode name="ietf-pim-dm@2022-10-19.yang" type="yang" markers="true" pn="section-6.4-2">
module ietf-pim-dm {
  yang-version 1.1;
  namespace "urn:ietf:params:xml:ns:yang:ietf-pim-dm";
  prefix pim-dm;

  import ietf-routing {
    prefix rt;
    reference
      "RFC 8349: A YANG Data Model for Routing Management (NMDA
       Version)";
  }
  import ietf-pim-base {
    prefix pim-base;
    reference
      "RFC 9128: A YANG Data Model for Protocol Independent
       Multicast (PIM)";
  }

  organization
    "IETF PIM Working Group";
  contact
    "WG Web:   &lt;https://datatracker.ietf.org/wg/pim/&gt;
     WG List:  &lt;mailto:pim@ietf.org&gt;

     Editor:   Xufeng Liu
               &lt;mailto:xufeng.liu.ietf@gmail.com&gt;

     Editor:   Pete McAllister
               &lt;mailto:pete.mcallister@metaswitch.com&gt;

     Editor:   Anish Peter
               &lt;mailto:anish.ietf@gmail.com&gt;

     Editor:   Mahesh Sivakumar
               &lt;mailto:sivakumar.mahesh@gmail.com&gt;

     Editor:   Yisong Liu
               &lt;mailto:liuyisong@chinamobile.com&gt;

     Editor:   Fangwei Hu
               &lt;mailto:hufwei@gmail.com&gt;";
  description
    "This YANG module defines a PIM (Protocol Independent Multicast)
     DM (Dense Mode) model.

     Copyright (c) 2022 IETF Trust and the persons identified as
     authors of the code.  All rights reserved.

     Redistribution and use in source and binary forms, with or
     without modification, is permitted pursuant to, and subject to
     the license terms contained in, the Revised BSD License set
     forth in Section 4.c of the IETF Trust's Legal Provisions
     Relating to IETF Documents
     (https://trustee.ietf.org/license-info).

     This version of this YANG module is part of RFC 9128; see the
     RFC itself for full legal notices.";

  revision 2022-10-19 {
    description
      "Initial revision.";
    reference
      "RFC 9128: A YANG Data Model for Protocol Independent
       Multicast (PIM)";
  }

  /*
   * Configuration data nodes
   */

  augment "/rt:routing/rt:control-plane-protocols/"
        + "pim-base:pim/pim-base:address-family" {
    description
      "PIM-DM augmentation.";
    container dm {
      presence "Present to enable PIM-DM.";
      description
        "PIM-DM configuration data.";
    } // dm
  } // augment

  augment "/rt:routing/rt:control-plane-protocols/"
        + "pim-base:pim/pim-base:interfaces/pim-base:interface/"
        + "pim-base:address-family" {
    description
      "PIM-DM augmentation to 'pim-base:interface'.";
    container dm {
      presence "Present to enable PIM-DM.";
      description
        "PIM-DM configuration data.";
    } // dm
  } // augment

}
</sourcecode>
      </section>
      <section numbered="true" toc="include" removeInRFC="false" pn="section-6.5">
        <name slugifiedName="name-bidir-pim-module-3">BIDIR-PIM Module</name>
        <t indent="0" pn="section-6.5-1">
          This module references
          <xref target="RFC5015" format="default" sectionFormat="of" derivedContent="RFC5015"/>,
          <xref target="RFC6991" format="default" sectionFormat="of" derivedContent="RFC6991"/>, <xref target="RFC8294" format="default" sectionFormat="of" derivedContent="RFC8294"/>,
          <xref target="RFC8343" format="default" sectionFormat="of" derivedContent="RFC8343"/>, and <xref target="RFC8349" format="default" sectionFormat="of" derivedContent="RFC8349"/>.
        </t>
        <sourcecode name="ietf-pim-bidir@2022-10-19.yang" type="yang" markers="true" pn="section-6.5-2">
module ietf-pim-bidir {
  yang-version 1.1;
  namespace "urn:ietf:params:xml:ns:yang:ietf-pim-bidir";
  prefix pim-bidir;

  import ietf-inet-types {
    prefix inet;
    reference
      "RFC 6991: Common YANG Data Types";
  }
  import ietf-routing-types {
    prefix rt-types;
    reference
      "RFC 8294: Common YANG Data Types for the Routing Area";
  }
  import ietf-interfaces {
    prefix if;
    reference
      "RFC 8343: A YANG Data Model for Interface Management";
  }
  import ietf-routing {
    prefix rt;
    reference
      "RFC 8349: A YANG Data Model for Routing Management (NMDA
       Version)";
  }
  import ietf-pim-base {
    prefix pim-base;
    reference
      "RFC 9128: A YANG Data Model for Protocol Independent
       Multicast (PIM)";
  }
  import ietf-pim-rp {
    prefix pim-rp;
    reference
      "RFC 9128: A YANG Data Model for Protocol Independent
       Multicast (PIM)";
  }

  organization
    "IETF PIM Working Group";
  contact
    "WG Web:   &lt;https://datatracker.ietf.org/wg/pim/&gt;
     WG List:  &lt;mailto:pim@ietf.org&gt;

     Editor:   Xufeng Liu
               &lt;mailto:xufeng.liu.ietf@gmail.com&gt;

     Editor:   Pete McAllister
               &lt;mailto:pete.mcallister@metaswitch.com&gt;

     Editor:   Anish Peter
               &lt;mailto:anish.ietf@gmail.com&gt;

     Editor:   Mahesh Sivakumar
               &lt;mailto:sivakumar.mahesh@gmail.com&gt;

     Editor:   Yisong Liu
               &lt;mailto:liuyisong@chinamobile.com&gt;

     Editor:   Fangwei Hu
               &lt;mailto:hufwei@gmail.com&gt;";
  description
    "This YANG module defines a PIM (Protocol Independent Multicast)
     BIDIR (Bidirectional) mode model.

     Copyright (c) 2022 IETF Trust and the persons identified as
     authors of the code.  All rights reserved.

     Redistribution and use in source and binary forms, with or
     without modification, is permitted pursuant to, and subject to
     the license terms contained in, the Revised BSD License set
     forth in Section 4.c of the IETF Trust's Legal Provisions
     Relating to IETF Documents
     (https://trustee.ietf.org/license-info).

     This version of this YANG module is part of RFC 9128; see the
     RFC itself for full legal notices.";

  revision 2022-10-19 {
    description
      "Initial revision.";
    reference
      "RFC 9128: A YANG Data Model for Protocol Independent
       Multicast (PIM)";
  }

  /*
   * Features
   */

  feature intf-df-election {
    description
      "Supports configuration of interface DF election.";
    reference
      "RFC 5015: Bidirectional Protocol Independent Multicast
       (BIDIR-PIM), Section 3.5";
  }

  /*
   * Identities
   */

  identity rp-bidir {
    base pim-rp:rp-mode;
    description
      "BIDIR mode.";
  }

  identity df-state {
    description
      "DF (Designated Forwarder) election state type.";
    reference
      "RFC 5015: Bidirectional Protocol Independent Multicast
       (BIDIR-PIM)";
  }

  identity df-state-offer {
    base df-state;
    description
      "Initial election state.  When in the Offer state, a router
       thinks it can eventually become the winner and periodically
       generates Offer messages.";
  }

  identity df-state-lose {
    base df-state;
    description
      "Either (1) there is a different election winner or
       (2) no router on the link has a path to the RPA
       (Rendezvous Point Address).";
  }

  identity df-state-win {
    base df-state;
    description
      "The router is the acting DF without any contest.";
  }

  identity df-state-backoff {
    base df-state;
    description
      "The router is the acting DF, but another router has made a
       bid to take over.";
  }

  /*
   * Groupings
   */

  grouping static-rp-bidir-container {
    description
      "Grouping that contains BIDIR attributes for a static RP
       (Rendezvous Point).";
    container bidir {
      presence "Indicates support for BIDIR mode.";
      description
        "PIM-BIDIR configuration data.";
      uses pim-rp:static-rp-attributes;
    } // bidir
  } // static-rp-bidir-container

  grouping interface-df-election-state-attributes {
    description
      "Grouping that contains the state attributes of a DF election
       on an interface.";
    leaf interface-state {
      type identityref {
        base df-state;
      }
      description
        "Interface state with respect to the DF election.";
    }
    leaf up-time {
      type rt-types:timeticks64;
      description
        "The number of time ticks (hundredths of a second) since the
         current DF has been elected as the winner.";
    }
    leaf winner-metric {
      type uint32;
      description
        "The unicast routing metric used by the DF to reach the RP.
         The value is announced by the DF.";
    }
    leaf winner-metric-preference {
      type uint32;
      description
        "The preference value assigned to the unicast routing
         protocol that the DF used to obtain the route to the RP.
         The value is announced by the DF.";
    }
  } // interface-df-election-state-attributes

  /*
   * Configuration data and operational state data nodes
   */

  augment "/rt:routing/rt:control-plane-protocols/"
        + "pim-base:pim/pim-base:address-family" {
    description
      "PIM-BIDIR augmentation.";
    container bidir {
      presence "Present to enable BIDIR mode.";
      description
        "PIM-BIDIR configuration data.";
    } // bidir
  } // augment

  augment "/rt:routing/rt:control-plane-protocols/"
        + "pim-base:pim/pim-base:interfaces/pim-base:interface/"
        + "pim-base:address-family" {
    description
      "PIM-BIDIR augmentation.";
    container bidir {
      presence "Present to enable BIDIR mode.";
      description
        "PIM-BIDIR configuration data.";
      container df-election {
        if-feature "intf-df-election";
        description
          "DF election attributes.";
        leaf offer-interval {
          type uint16;
          units "milliseconds";
          default "100";
          description
            "Offer interval.  Specifies the interval between
             repeated DF election messages.";
        }
        leaf backoff-interval {
          type uint16;
          units "milliseconds";
          default "1000";
          description
            "This is the interval that the acting DF waits between
             receiving a better DF Offer and sending the Pass message
             to transfer DF responsibility.";
        }
        leaf offer-multiplier {
          type uint8;
          default "3";
          description
            "This is the number of transmission attempts for
             DF election messages.
             When a DF election Offer or Winner message fails to be
             received, the message is retransmitted.
             'offer-multiplier' sets the minimum number of DF
             election messages that must fail to be received for DF
             election to fail.
             If a router receives from a neighbor a better offer than
             its own, the router stops participating in the election
             for a period of 'offer-multiplier' * 'offer-interval'.
             Eventually, all routers except the best candidate stop
             sending Offer messages.";
        }
      } // df-election
    } // bidir
  } // augment

  augment "/rt:routing/rt:control-plane-protocols/"
        + "pim-base:pim/pim-base:address-family/pim-rp:rp/"
        + "pim-rp:static-rp/pim-rp:ipv4-rp" {
    description
      "PIM-BIDIR augmentation.";
    uses static-rp-bidir-container;
  } // augment

  augment "/rt:routing/rt:control-plane-protocols/"
        + "pim-base:pim/pim-base:address-family/pim-rp:rp/"
        + "pim-rp:static-rp/pim-rp:ipv6-rp" {
    description
      "PIM-BIDIR augmentation.";
    uses static-rp-bidir-container;
  } // augment

  /*
   * Operational state data nodes
   */

  augment "/rt:routing/rt:control-plane-protocols/"
        + "pim-base:pim/pim-base:address-family/pim-rp:rp" {
    description
      "PIM-BIDIR augmentation to RP state data.";
    container bidir {
      config false;
      description
        "PIM-BIDIR state data.";
      container df-election {
        description
          "DF election data.";
        list ipv4-rp {
          when "../../../../pim-base:address-family = 'rt:ipv4'" {
            description
              "Only applicable to an IPv4 address family.";
          }
          key "rp-address";
          description
            "A list of IPv4 RP addresses.";
          leaf rp-address {
            type inet:ipv4-address;
            description
              "The address of the RP.";
          }
        } // ipv4-rp
        list ipv6-rp {
          when "../../../../pim-base:address-family = 'rt:ipv6'" {
            description
              "Only applicable to an IPv6 address family.";
          }
          key "rp-address";
          description
            "A list of IPv6 RP addresses.";
          leaf rp-address {
            type inet:ipv6-address;
            description
              "The address of the RP.";
          }
        } // ipv6-rp
      } // df-election
      container interface-df-election {
        description
          "Interface DF election data.";
        list ipv4-rp {
          when "../../../../pim-base:address-family = 'rt:ipv4'" {
            description
              "Only applicable to an IPv4 address family.";
          }
          key "rp-address interface-name";
          description
            "A list of IPv4 RP addresses.";
          leaf rp-address {
            type inet:ipv4-address;
            description
              "The address of the RP.";
          }
          leaf interface-name {
            type if:interface-ref;
            description
              "The name of the interface for which the DF state is
               being maintained.";
          }
          leaf df-address {
            type inet:ipv4-address;
            description
              "The address of the elected DF, which is the winner of
               the DF election process.";
          }
          uses interface-df-election-state-attributes;
        } // ipv4-rp
        list ipv6-rp {
          when "../../../../pim-base:address-family = 'rt:ipv6'" {
            description
              "Only applicable to an IPv6 address family.";
          }
          key "rp-address interface-name";
          description
            "A list of IPv6 RP addresses.";
          leaf rp-address {
            type inet:ipv6-address;
            description
              "The address of the RP.";
          }
          leaf interface-name {
            type if:interface-ref;
            description
              "The name of the interface for which the DF state is
               being maintained.";
          }
          leaf df-address {
            type inet:ipv6-address;
            description
              "DF address.";
          }
          uses interface-df-election-state-attributes;
        } // ipv6-rp
      } // interface-df-election
    }
  } // augment

  augment "/rt:routing/rt:control-plane-protocols/"
        + "pim-base:pim/pim-base:interfaces/pim-base:interface/"
        + "pim-base:address-family/pim-base:neighbors/"
        + "pim-base:ipv4-neighbor" {
    description
      "PIM-BIDIR augmentation to the IPv4 neighbor state data.";
    leaf bidir-capable {
      type boolean;
      description
        "'true' if the neighbor is using the Bidirectional Capable
         option in the last Hello message.";
    }
  } // augment

  augment "/rt:routing/rt:control-plane-protocols/"
        + "pim-base:pim/pim-base:interfaces/pim-base:interface/"
        + "pim-base:address-family/pim-base:neighbors/"
        + "pim-base:ipv6-neighbor" {
    description
      "PIM-BIDIR augmentation to the IPv6 neighbor state data.";
    leaf bidir-capable {
      type boolean;
      description
        "'true' if the neighbor is using the Bidirectional Capable
         option in the last Hello message.";
    }
  } // augment

}
</sourcecode>
      </section>
    </section>
    <section numbered="true" toc="include" removeInRFC="false" pn="section-7">
      <name slugifiedName="name-security-considerations">Security Considerations</name>
      <t indent="0" pn="section-7-1">
The YANG modules specified in this document define a schema for data
that is designed to be accessed via network management protocols such
as NETCONF <xref target="RFC6241" format="default" sectionFormat="of" derivedContent="RFC6241"/> or RESTCONF <xref target="RFC8040" format="default" sectionFormat="of" derivedContent="RFC8040"/>.
The lowest NETCONF layer is the secure transport layer, and the
mandatory-to-implement secure transport is Secure Shell (SSH)
<xref target="RFC6242" format="default" sectionFormat="of" derivedContent="RFC6242"/>. The lowest RESTCONF layer is HTTPS, and the
mandatory-to-implement secure transport is TLS <xref target="RFC8446" format="default" sectionFormat="of" derivedContent="RFC8446"/>.
</t>
      <t indent="0" pn="section-7-2">
The Network Configuration Access Control Model (NACM) <xref target="RFC8341" format="default" sectionFormat="of" derivedContent="RFC8341"/>
provides the means to restrict access for particular NETCONF or RESTCONF users
to a preconfigured subset of all available NETCONF or RESTCONF protocol
operations and content. 
</t>
      <t indent="0" pn="section-7-3">
There are a number of data nodes defined in these YANG modules that are
writable/creatable/deletable (i.e., config true, which is the default). These
data nodes may be considered sensitive or vulnerable in some network
environments. Write operations (e.g., edit-config) to these data nodes without
proper protection can have a negative effect on network operations. These are
the subtrees and data nodes and their sensitivity/vulnerability: 
</t>
      <dl newline="true" spacing="normal" indent="3" pn="section-7-4">
        <dt pn="section-7-4.1">pim-base:graceful-restart</dt>
        <dd pn="section-7-4.2">
   This subtree specifies the configuration for PIM graceful
   restart at the global level on a device. Modifying the
   configuration can cause temporary interruption to the multicast
   routing during restart. 
   </dd>
        <dt pn="section-7-4.3">pim-base:address-family/pim-base:graceful-restart</dt>
        <dd pn="section-7-4.4">
   This subtree specifies the per-address-family configuration for
   PIM graceful restart on a device. Modifying the configuration can
   cause temporary interruption to the multicast routing during restart.
   </dd>
        <dt pn="section-7-4.5">pim-base:address-family/pim-rp:pim-rp:rp</dt>
        <dd pn="section-7-4.6">
   This subtree specifies the configuration for the PIM Rendezvous Point (RP)
   on a device. Modifying the configuration can cause RP malfunctions.
   </dd>
        <dt pn="section-7-4.7">pim-base:address-family/pim-sm:sm</dt>
        <dd pn="section-7-4.8">
     This subtree specifies the configuration for PIM Sparse Mode (PIM‑SM)
     on a device. Modifying the configuration can cause multicast
     traffic to be disabled or rerouted in PIM-SM.
   </dd>
        <dt pn="section-7-4.9">pim-base:address-family/pim-dm:dm</dt>
        <dd pn="section-7-4.10">
    This subtree specifies the configuration for PIM Dense Mode (PIM‑DM)
    on a device. Modifying the configuration can cause multicast
    traffic to be disabled or rerouted in PIM-DM.
  </dd>
        <dt pn="section-7-4.11">pim-base:address-family/pim-bidir:bidir</dt>
        <dd pn="section-7-4.12">
    This subtree specifies the configuration for PIM Bidirectional Mode
    (BIDIR-PIM) on a device. Modifying the configuration can cause multicast
    traffic to be disabled or rerouted in BIDIR-PIM.
  </dd>
        <dt pn="section-7-4.13">pim-base:interfaces</dt>
        <dd pn="section-7-4.14">
    This subtree specifies the configuration for the PIM interfaces
    on a device. Modifying the configuration can cause the PIM protocol
    to get insufficient or incorrect information.
  </dd>
      </dl>
      <t indent="0" pn="section-7-5">
   These subtrees are all under
   "/rt:routing/rt:control-plane-protocols/pim-base:pim". 
      </t>
      <t indent="0" pn="section-7-6">
   Unauthorized access to any data node of these subtrees can
   adversely affect the multicast routing subsystem of both the local device and
   the network.  This may lead to network malfunctions, delivery of
   packets to inappropriate destinations, and other problems.
      </t>
      <t indent="0" pn="section-7-7">
Some of the readable data nodes in these YANG modules may be considered
sensitive or vulnerable in some network environments. It is thus important to
control read access (e.g., via get, get-config, or notification) to these data
nodes. These are the subtrees and data nodes and their
sensitivity/vulnerability: 
</t>
      <t indent="0" pn="section-7-8">
   /rt:routing/rt:control-plane-protocols/pim-base:pim
      </t>
      <t indent="0" pn="section-7-9">
   Unauthorized access to any data node of the above subtree can disclose the
   operational state information of PIM on this device.
      </t>
    </section>
    <section numbered="true" toc="include" removeInRFC="false" pn="section-8">
      <name slugifiedName="name-iana-considerations">IANA Considerations</name>
      <t indent="0" pn="section-8-1">
        IANA has registered the following namespace URIs in the "IETF XML
        Registry" <xref target="RFC3688" format="default" sectionFormat="of" derivedContent="RFC3688"/>:
      </t>
      <dl spacing="compact" indent="3" newline="false" pn="section-8-2">
        <dt pn="section-8-2.1">URI:</dt>
        <dd pn="section-8-2.2">urn:ietf:params:xml:ns:yang:ietf-pim-base</dd>
        <dt pn="section-8-2.3">Registrant Contact:</dt>
        <dd pn="section-8-2.4">The IESG.</dd>
        <dt pn="section-8-2.5">XML:</dt>
        <dd pn="section-8-2.6">N/A; the requested URI is an XML namespace.</dd>
      </dl>
      <dl spacing="compact" indent="3" newline="false" pn="section-8-3">
        <dt pn="section-8-3.1">URI:</dt>
        <dd pn="section-8-3.2">urn:ietf:params:xml:ns:yang:ietf-pim-bidir</dd>
        <dt pn="section-8-3.3">Registrant Contact:</dt>
        <dd pn="section-8-3.4">The IESG.</dd>
        <dt pn="section-8-3.5">XML:</dt>
        <dd pn="section-8-3.6">N/A; the requested URI is an XML namespace.</dd>
      </dl>
      <dl spacing="compact" indent="3" newline="false" pn="section-8-4">
        <dt pn="section-8-4.1">URI:</dt>
        <dd pn="section-8-4.2">urn:ietf:params:xml:ns:yang:ietf-pim-dm</dd>
        <dt pn="section-8-4.3">Registrant Contact:</dt>
        <dd pn="section-8-4.4">The IESG.</dd>
        <dt pn="section-8-4.5">XML:</dt>
        <dd pn="section-8-4.6">N/A; the requested URI is an XML namespace.</dd>
      </dl>
      <dl spacing="compact" indent="3" newline="false" pn="section-8-5">
        <dt pn="section-8-5.1">URI:</dt>
        <dd pn="section-8-5.2">urn:ietf:params:xml:ns:yang:ietf-pim-rp</dd>
        <dt pn="section-8-5.3">Registrant Contact:</dt>
        <dd pn="section-8-5.4">The IESG.</dd>
        <dt pn="section-8-5.5">XML:</dt>
        <dd pn="section-8-5.6">N/A; the requested URI is an XML namespace.</dd>
      </dl>
      <dl spacing="compact" indent="3" newline="false" pn="section-8-6">
        <dt pn="section-8-6.1">URI:</dt>
        <dd pn="section-8-6.2">urn:ietf:params:xml:ns:yang:ietf-pim-sm</dd>
        <dt pn="section-8-6.3">Registrant Contact:</dt>
        <dd pn="section-8-6.4">The IESG.</dd>
        <dt pn="section-8-6.5">XML:</dt>
        <dd pn="section-8-6.6">N/A; the requested URI is an XML namespace.</dd>
      </dl>
      <t indent="0" pn="section-8-7">
        IANA has registered the following YANG modules in the "YANG Module
        Names" registry <xref target="RFC6020" format="default" sectionFormat="of" derivedContent="RFC6020"/>:
      </t>
      <dl spacing="compact" indent="3" newline="false" pn="section-8-8">
        <dt pn="section-8-8.1">Name:</dt>
        <dd pn="section-8-8.2">ietf-pim-base</dd>
        <dt pn="section-8-8.3">Namespace:</dt>
        <dd pn="section-8-8.4">urn:ietf:params:xml:ns:yang:ietf-pim-base</dd>
        <dt pn="section-8-8.5">Prefix:</dt>
        <dd pn="section-8-8.6">pim-base</dd>
        <dt pn="section-8-8.7">Reference:</dt>
        <dd pn="section-8-8.8">RFC 9128</dd>
      </dl>
      <dl spacing="compact" indent="3" newline="false" pn="section-8-9">
        <dt pn="section-8-9.1">Name:</dt>
        <dd pn="section-8-9.2">ietf-pim-bidir</dd>
        <dt pn="section-8-9.3">Namespace:</dt>
        <dd pn="section-8-9.4">urn:ietf:params:xml:ns:yang:ietf-pim-bidir</dd>
        <dt pn="section-8-9.5">Prefix:</dt>
        <dd pn="section-8-9.6">pim-bidir</dd>
        <dt pn="section-8-9.7">Reference:</dt>
        <dd pn="section-8-9.8">RFC 9128</dd>
      </dl>
      <dl spacing="compact" indent="3" newline="false" pn="section-8-10">
        <dt pn="section-8-10.1">Name:</dt>
        <dd pn="section-8-10.2">ietf-pim-dm</dd>
        <dt pn="section-8-10.3">Namespace:</dt>
        <dd pn="section-8-10.4">urn:ietf:params:xml:ns:yang:ietf-pim-dm</dd>
        <dt pn="section-8-10.5">Prefix:</dt>
        <dd pn="section-8-10.6">pim-dm</dd>
        <dt pn="section-8-10.7">Reference:</dt>
        <dd pn="section-8-10.8">RFC 9128</dd>
      </dl>
      <dl spacing="compact" indent="3" newline="false" pn="section-8-11">
        <dt pn="section-8-11.1">Name:</dt>
        <dd pn="section-8-11.2">ietf-pim-rp</dd>
        <dt pn="section-8-11.3">Namespace:</dt>
        <dd pn="section-8-11.4">urn:ietf:params:xml:ns:yang:ietf-pim-rp</dd>
        <dt pn="section-8-11.5">Prefix:</dt>
        <dd pn="section-8-11.6">pim-rp</dd>
        <dt pn="section-8-11.7">Reference:</dt>
        <dd pn="section-8-11.8">RFC 9128</dd>
      </dl>
      <dl spacing="compact" indent="3" newline="false" pn="section-8-12">
        <dt pn="section-8-12.1">Name:</dt>
        <dd pn="section-8-12.2">ietf-pim-sm</dd>
        <dt pn="section-8-12.3">Namespace:</dt>
        <dd pn="section-8-12.4">urn:ietf:params:xml:ns:yang:ietf-pim-sm</dd>
        <dt pn="section-8-12.5">Prefix:</dt>
        <dd pn="section-8-12.6">pim-sm</dd>
        <dt pn="section-8-12.7">Reference:</dt>
        <dd pn="section-8-12.8">RFC 9128</dd>
      </dl>
    </section>
  </middle>
  <back>
    <references pn="section-9">
      <name slugifiedName="name-references">References</name>
      <references pn="section-9.1">
        <name slugifiedName="name-normative-references">Normative References</name>
        <reference anchor="RFC3569" target="https://www.rfc-editor.org/info/rfc3569" quoteTitle="true" derivedAnchor="RFC3569">
          <front>
            <title>An Overview of Source-Specific Multicast (SSM)</title>
            <author fullname="S. Bhattacharyya" initials="S." role="editor" surname="Bhattacharyya"/>
            <date month="July" year="2003"/>
            <abstract>
              <t indent="0">The purpose of this document is to provide an overview of Source-Specific Multicast (SSM) and issues related to its deployment.  It discusses how the SSM service model addresses the challenges faced in inter-domain multicast deployment, changes needed to routing protocols and applications to deploy SSM and interoperability issues with current multicast service models.  This memo provides information for the Internet community.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="3569"/>
          <seriesInfo name="DOI" value="10.17487/RFC3569"/>
        </reference>
        <reference anchor="RFC3688" target="https://www.rfc-editor.org/info/rfc3688" quoteTitle="true" derivedAnchor="RFC3688">
          <front>
            <title>The IETF XML Registry</title>
            <author fullname="M. Mealling" initials="M." surname="Mealling"/>
            <date month="January" year="2004"/>
            <abstract>
              <t indent="0">This document describes an IANA maintained registry for IETF standards which use Extensible Markup Language (XML) related items such as Namespaces, Document Type Declarations (DTDs), Schemas, and Resource Description Framework (RDF) Schemas.</t>
            </abstract>
          </front>
          <seriesInfo name="BCP" value="81"/>
          <seriesInfo name="RFC" value="3688"/>
          <seriesInfo name="DOI" value="10.17487/RFC3688"/>
        </reference>
        <reference anchor="RFC3973" target="https://www.rfc-editor.org/info/rfc3973" quoteTitle="true" derivedAnchor="RFC3973">
          <front>
            <title>Protocol Independent Multicast - Dense Mode (PIM-DM): Protocol Specification (Revised)</title>
            <author fullname="A. Adams" initials="A." surname="Adams"/>
            <author fullname="J. Nicholas" initials="J." surname="Nicholas"/>
            <author fullname="W. Siadak" initials="W." surname="Siadak"/>
            <date month="January" year="2005"/>
            <abstract>
              <t indent="0">This document specifies Protocol Independent Multicast - Dense Mode (PIM-DM).  PIM-DM is a multicast routing protocol that uses the underlying unicast routing information base to flood multicast datagrams to all multicast routers.  Prune messages are used to prevent future messages from propagating to routers without group membership information.  This memo defines an Experimental Protocol for the Internet community.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="3973"/>
          <seriesInfo name="DOI" value="10.17487/RFC3973"/>
        </reference>
        <reference anchor="RFC4607" target="https://www.rfc-editor.org/info/rfc4607" quoteTitle="true" derivedAnchor="RFC4607">
          <front>
            <title>Source-Specific Multicast for IP</title>
            <author fullname="H. Holbrook" initials="H." surname="Holbrook"/>
            <author fullname="B. Cain" initials="B." surname="Cain"/>
            <date month="August" year="2006"/>
            <abstract>
              <t indent="0">IP version 4 (IPv4) addresses in the 232/8 (232.0.0.0 to 232.255.255.255) range are designated as source-specific multicast (SSM) destination addresses and are reserved for use by source-specific applications and protocols.  For IP version 6 (IPv6), the address prefix FF3x::/32 is reserved for source-specific multicast use.  This document defines an extension to the Internet network service that applies to datagrams sent to SSM addresses and defines the host and router requirements to support this extension. [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="4607"/>
          <seriesInfo name="DOI" value="10.17487/RFC4607"/>
        </reference>
        <reference anchor="RFC4610" target="https://www.rfc-editor.org/info/rfc4610" quoteTitle="true" derivedAnchor="RFC4610">
          <front>
            <title>Anycast-RP Using Protocol Independent Multicast (PIM)</title>
            <author fullname="D. Farinacci" initials="D." surname="Farinacci"/>
            <author fullname="Y. Cai" initials="Y." surname="Cai"/>
            <date month="August" year="2006"/>
            <abstract>
              <t indent="0">This specification allows Anycast-RP (Rendezvous Point) to be used inside a domain that runs Protocol Independent Multicast (PIM) only.  Other multicast protocols (such as Multicast Source Discovery Protocol (MSDP), which has been used traditionally to solve this problem) are not required to support Anycast-RP. [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="4610"/>
          <seriesInfo name="DOI" value="10.17487/RFC4610"/>
        </reference>
        <reference anchor="RFC5015" target="https://www.rfc-editor.org/info/rfc5015" quoteTitle="true" derivedAnchor="RFC5015">
          <front>
            <title>Bidirectional Protocol Independent Multicast (BIDIR-PIM)</title>
            <author fullname="M. Handley" initials="M." surname="Handley"/>
            <author fullname="I. Kouvelas" initials="I." surname="Kouvelas"/>
            <author fullname="T. Speakman" initials="T." surname="Speakman"/>
            <author fullname="L. Vicisano" initials="L." surname="Vicisano"/>
            <date month="October" year="2007"/>
            <abstract>
              <t indent="0">This document discusses Bidirectional PIM (BIDIR-PIM), a variant of PIM Sparse-Mode that builds bidirectional shared trees connecting multicast sources and receivers.  Bidirectional trees are built using a fail-safe Designated Forwarder (DF) election mechanism operating on each link of a multicast topology.  With the assistance of the DF, multicast data is natively forwarded from sources to the Rendezvous-Point (RP) and hence along the shared tree to receivers without requiring source-specific state.  The DF election takes place at RP discovery time and provides the route to the RP, thus eliminating the requirement for data-driven protocol events. [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="5015"/>
          <seriesInfo name="DOI" value="10.17487/RFC5015"/>
        </reference>
        <reference anchor="RFC5059" target="https://www.rfc-editor.org/info/rfc5059" quoteTitle="true" derivedAnchor="RFC5059">
          <front>
            <title>Bootstrap Router (BSR) Mechanism for Protocol Independent Multicast (PIM)</title>
            <author fullname="N. Bhaskar" initials="N." surname="Bhaskar"/>
            <author fullname="A. Gall" initials="A." surname="Gall"/>
            <author fullname="J. Lingard" initials="J." surname="Lingard"/>
            <author fullname="S. Venaas" initials="S." surname="Venaas"/>
            <date month="January" year="2008"/>
            <abstract>
              <t indent="0">This document specifies the Bootstrap Router (BSR) mechanism for the class of multicast routing protocols in the PIM (Protocol Independent Multicast) family that use the concept of a Rendezvous Point as a means for receivers to discover the sources that send to a particular multicast group.  BSR is one way that a multicast router can learn the set of group-to-RP mappings required in order to function.  The mechanism is dynamic, largely self-configuring, and robust to router failure. [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="5059"/>
          <seriesInfo name="DOI" value="10.17487/RFC5059"/>
        </reference>
        <reference anchor="RFC5060" target="https://www.rfc-editor.org/info/rfc5060" quoteTitle="true" derivedAnchor="RFC5060">
          <front>
            <title>Protocol Independent Multicast MIB</title>
            <author fullname="R. Sivaramu" initials="R." surname="Sivaramu"/>
            <author fullname="J. Lingard" initials="J." surname="Lingard"/>
            <author fullname="D. McWalter" initials="D." surname="McWalter"/>
            <author fullname="B. Joshi" initials="B." surname="Joshi"/>
            <author fullname="A. Kessler" initials="A." surname="Kessler"/>
            <date month="January" year="2008"/>
            <abstract>
              <t indent="0">This memo defines a portion of the Management Information Base (MIB) for use with network management protocols in the Internet community.  In particular, it describes managed objects used for managing the Protocol Independent Multicast (PIM) protocols: PIM-SM (Sparse Mode), BIDIR-PIM (Bidirectional), and PIM-DM (Dense Mode).  This document is part of work in progress to obsolete RFC 2934, and is to be preferred where the two documents overlap.  This document does not obsolete RFC 2934. [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="5060"/>
          <seriesInfo name="DOI" value="10.17487/RFC5060"/>
        </reference>
        <reference anchor="RFC6020" target="https://www.rfc-editor.org/info/rfc6020" quoteTitle="true" derivedAnchor="RFC6020">
          <front>
            <title>YANG - A Data Modeling Language for the Network Configuration Protocol (NETCONF)</title>
            <author fullname="M. Bjorklund" initials="M." role="editor" surname="Bjorklund"/>
            <date month="October" year="2010"/>
            <abstract>
              <t indent="0">YANG is a data modeling language used to model configuration and state data manipulated by the Network Configuration Protocol (NETCONF), NETCONF remote procedure calls, and NETCONF notifications. [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="6020"/>
          <seriesInfo name="DOI" value="10.17487/RFC6020"/>
        </reference>
        <reference anchor="RFC6241" target="https://www.rfc-editor.org/info/rfc6241" quoteTitle="true" derivedAnchor="RFC6241">
          <front>
            <title>Network Configuration Protocol (NETCONF)</title>
            <author fullname="R. Enns" initials="R." role="editor" surname="Enns"/>
            <author fullname="M. Bjorklund" initials="M." role="editor" surname="Bjorklund"/>
            <author fullname="J. Schoenwaelder" initials="J." role="editor" surname="Schoenwaelder"/>
            <author fullname="A. Bierman" initials="A." role="editor" surname="Bierman"/>
            <date month="June" year="2011"/>
            <abstract>
              <t indent="0">The Network Configuration Protocol (NETCONF) defined in this document provides mechanisms to install, manipulate, and delete the configuration of network devices.  It uses an Extensible Markup Language (XML)-based data encoding for the configuration data as well as the protocol messages.  The NETCONF protocol operations are realized as remote procedure calls (RPCs).  This document obsoletes RFC 4741. [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="6241"/>
          <seriesInfo name="DOI" value="10.17487/RFC6241"/>
        </reference>
        <reference anchor="RFC6242" target="https://www.rfc-editor.org/info/rfc6242" quoteTitle="true" derivedAnchor="RFC6242">
          <front>
            <title>Using the NETCONF Protocol over Secure Shell (SSH)</title>
            <author fullname="M. Wasserman" initials="M." surname="Wasserman"/>
            <date month="June" year="2011"/>
            <abstract>
              <t indent="0">This document describes a method for invoking and running the Network Configuration Protocol (NETCONF) within a Secure Shell (SSH) session as an SSH subsystem.  This document obsoletes RFC 4742. [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="6242"/>
          <seriesInfo name="DOI" value="10.17487/RFC6242"/>
        </reference>
        <reference anchor="RFC6991" target="https://www.rfc-editor.org/info/rfc6991" quoteTitle="true" derivedAnchor="RFC6991">
          <front>
            <title>Common YANG Data Types</title>
            <author fullname="J. Schoenwaelder" initials="J." role="editor" surname="Schoenwaelder"/>
            <date month="July" year="2013"/>
            <abstract>
              <t indent="0">This document introduces a collection of common data types to be used with the YANG data modeling language.  This document obsoletes RFC 6021.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="6991"/>
          <seriesInfo name="DOI" value="10.17487/RFC6991"/>
        </reference>
        <reference anchor="RFC7761" target="https://www.rfc-editor.org/info/rfc7761" quoteTitle="true" derivedAnchor="RFC7761">
          <front>
            <title>Protocol Independent Multicast - Sparse Mode (PIM-SM): Protocol Specification (Revised)</title>
            <author fullname="B. Fenner" initials="B." surname="Fenner"/>
            <author fullname="M. Handley" initials="M." surname="Handley"/>
            <author fullname="H. Holbrook" initials="H." surname="Holbrook"/>
            <author fullname="I. Kouvelas" initials="I." surname="Kouvelas"/>
            <author fullname="R. Parekh" initials="R." surname="Parekh"/>
            <author fullname="Z. Zhang" initials="Z." surname="Zhang"/>
            <author fullname="L. Zheng" initials="L." surname="Zheng"/>
            <date month="March" year="2016"/>
            <abstract>
              <t indent="0">This document specifies Protocol Independent Multicast - Sparse Mode (PIM-SM). PIM-SM is a multicast routing protocol that can use the underlying unicast routing information base or a separate multicast-capable routing information base. It builds unidirectional shared trees rooted at a Rendezvous Point (RP) per group, and it optionally creates shortest-path trees per source.</t>
              <t indent="0">This document obsoletes RFC 4601 by replacing it, addresses the errata filed against it, removes the optional (*,*,RP), PIM Multicast Border Router features and authentication using IPsec that lack sufficient deployment experience (see Appendix A), and moves the PIM specification to Internet Standard.</t>
            </abstract>
          </front>
          <seriesInfo name="STD" value="83"/>
          <seriesInfo name="RFC" value="7761"/>
          <seriesInfo name="DOI" value="10.17487/RFC7761"/>
        </reference>
        <reference anchor="RFC7950" target="https://www.rfc-editor.org/info/rfc7950" quoteTitle="true" derivedAnchor="RFC7950">
          <front>
            <title>The YANG 1.1 Data Modeling Language</title>
            <author fullname="M. Bjorklund" initials="M." role="editor" surname="Bjorklund"/>
            <date month="August" year="2016"/>
            <abstract>
              <t indent="0">YANG is a data modeling language used to model configuration data, state data, Remote Procedure Calls, and notifications for network management protocols.  This document describes the syntax and semantics of version 1.1 of the YANG language.  YANG version 1.1 is a maintenance release of the YANG language, addressing ambiguities and defects in the original specification.  There are a small number of backward incompatibilities from YANG version 1.  This document also specifies the YANG mappings to the Network Configuration Protocol (NETCONF).</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="7950"/>
          <seriesInfo name="DOI" value="10.17487/RFC7950"/>
        </reference>
        <reference anchor="RFC8040" target="https://www.rfc-editor.org/info/rfc8040" quoteTitle="true" derivedAnchor="RFC8040">
          <front>
            <title>RESTCONF Protocol</title>
            <author fullname="A. Bierman" initials="A." surname="Bierman"/>
            <author fullname="M. Bjorklund" initials="M." surname="Bjorklund"/>
            <author fullname="K. Watsen" initials="K." surname="Watsen"/>
            <date month="January" year="2017"/>
            <abstract>
              <t indent="0">This document describes an HTTP-based protocol that provides a programmatic interface for accessing data defined in YANG, using the datastore concepts defined in the Network Configuration Protocol (NETCONF).</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8040"/>
          <seriesInfo name="DOI" value="10.17487/RFC8040"/>
        </reference>
        <reference anchor="RFC8294" target="https://www.rfc-editor.org/info/rfc8294" quoteTitle="true" derivedAnchor="RFC8294">
          <front>
            <title>Common YANG Data Types for the Routing Area</title>
            <author fullname="X. Liu" initials="X." surname="Liu"/>
            <author fullname="Y. Qu" initials="Y." surname="Qu"/>
            <author fullname="A. Lindem" initials="A." surname="Lindem"/>
            <author fullname="C. Hopps" initials="C." surname="Hopps"/>
            <author fullname="L. Berger" initials="L." surname="Berger"/>
            <date month="December" year="2017"/>
            <abstract>
              <t indent="0">This document defines a collection of common data types using the YANG data modeling language.  These derived common types are designed to be imported by other modules defined in the routing area.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8294"/>
          <seriesInfo name="DOI" value="10.17487/RFC8294"/>
        </reference>
        <reference anchor="RFC8341" target="https://www.rfc-editor.org/info/rfc8341" quoteTitle="true" derivedAnchor="RFC8341">
          <front>
            <title>Network Configuration Access Control Model</title>
            <author fullname="A. Bierman" initials="A." surname="Bierman"/>
            <author fullname="M. Bjorklund" initials="M." surname="Bjorklund"/>
            <date month="March" year="2018"/>
            <abstract>
              <t indent="0">The standardization of network configuration interfaces for use with the Network Configuration Protocol (NETCONF) or the RESTCONF protocol requires a structured and secure operating environment that promotes human usability and multi-vendor interoperability. There is a need for standard mechanisms to restrict NETCONF or RESTCONF protocol access for particular users to a preconfigured subset of all available NETCONF or RESTCONF protocol operations and content. This document defines such an access control model.</t>
              <t indent="0">This document obsoletes RFC 6536.</t>
            </abstract>
          </front>
          <seriesInfo name="STD" value="91"/>
          <seriesInfo name="RFC" value="8341"/>
          <seriesInfo name="DOI" value="10.17487/RFC8341"/>
        </reference>
        <reference anchor="RFC8342" target="https://www.rfc-editor.org/info/rfc8342" quoteTitle="true" derivedAnchor="RFC8342">
          <front>
            <title>Network Management Datastore Architecture (NMDA)</title>
            <author fullname="M. Bjorklund" initials="M." surname="Bjorklund"/>
            <author fullname="J. Schoenwaelder" initials="J." surname="Schoenwaelder"/>
            <author fullname="P. Shafer" initials="P." surname="Shafer"/>
            <author fullname="K. Watsen" initials="K." surname="Watsen"/>
            <author fullname="R. Wilton" initials="R." surname="Wilton"/>
            <date month="March" year="2018"/>
            <abstract>
              <t indent="0">Datastores are a fundamental concept binding the data models written in the YANG data modeling language to network management protocols such as the Network Configuration Protocol (NETCONF) and RESTCONF.  This document defines an architectural framework for datastores based on the experience gained with the initial simpler model, addressing requirements that were not well supported in the initial model.  This document updates RFC 7950.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8342"/>
          <seriesInfo name="DOI" value="10.17487/RFC8342"/>
        </reference>
        <reference anchor="RFC8343" target="https://www.rfc-editor.org/info/rfc8343" quoteTitle="true" derivedAnchor="RFC8343">
          <front>
            <title>A YANG Data Model for Interface Management</title>
            <author fullname="M. Bjorklund" initials="M." surname="Bjorklund"/>
            <date month="March" year="2018"/>
            <abstract>
              <t indent="0">This document defines a YANG data model for the management of network interfaces. It is expected that interface-type-specific data models augment the generic interfaces data model defined in this document. The data model includes definitions for configuration and system state (status information and counters for the collection of statistics).</t>
              <t indent="0">The YANG data model in this document conforms to the Network Management Datastore Architecture (NMDA) defined in RFC 8342.</t>
              <t indent="0">This document obsoletes RFC 7223.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8343"/>
          <seriesInfo name="DOI" value="10.17487/RFC8343"/>
        </reference>
        <reference anchor="RFC8349" target="https://www.rfc-editor.org/info/rfc8349" quoteTitle="true" derivedAnchor="RFC8349">
          <front>
            <title>A YANG Data Model for Routing Management (NMDA Version)</title>
            <author fullname="L. Lhotka" initials="L." surname="Lhotka"/>
            <author fullname="A. Lindem" initials="A." surname="Lindem"/>
            <author fullname="Y. Qu" initials="Y." surname="Qu"/>
            <date month="March" year="2018"/>
            <abstract>
              <t indent="0">This document specifies three YANG modules and one submodule. Together, they form the core routing data model that serves as a framework for configuring and managing a routing subsystem. It is expected that these modules will be augmented by additional YANG modules defining data models for control-plane protocols, route filters, and other functions. The core routing data model provides common building blocks for such extensions -- routes, Routing Information Bases (RIBs), and control-plane protocols.</t>
              <t indent="0">The YANG modules in this document conform to the Network Management Datastore Architecture (NMDA). This document obsoletes RFC 8022.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8349"/>
          <seriesInfo name="DOI" value="10.17487/RFC8349"/>
        </reference>
        <reference anchor="RFC8446" target="https://www.rfc-editor.org/info/rfc8446" quoteTitle="true" derivedAnchor="RFC8446">
          <front>
            <title>The Transport Layer Security (TLS) Protocol Version 1.3</title>
            <author fullname="E. Rescorla" initials="E." surname="Rescorla"/>
            <date month="August" year="2018"/>
            <abstract>
              <t indent="0">This document specifies version 1.3 of the Transport Layer Security (TLS) protocol. TLS allows client/server applications to communicate over the Internet in a way that is designed to prevent eavesdropping, tampering, and message forgery.</t>
              <t indent="0">This document updates RFCs 5705 and 6066, and obsoletes RFCs 5077, 5246, and 6961. This document also specifies new requirements for TLS 1.2 implementations.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8446"/>
          <seriesInfo name="DOI" value="10.17487/RFC8446"/>
        </reference>
        <reference anchor="RFC9314" target="https://www.rfc-editor.org/info/rfc9314" quoteTitle="true" derivedAnchor="RFC9314">
          <front>
            <title>YANG Data Model for Bidirectional Forwarding Detection (BFD)</title>
            <author fullname="M. Jethanandani" initials="M." role="editor" surname="Jethanandani"/>
            <author fullname="R. Rahman" initials="R." role="editor" surname="Rahman"/>
            <author fullname="L. Zheng" initials="L." role="editor" surname="Zheng"/>
            <author fullname="S. Pallagatti" initials="S." surname="Pallagatti"/>
            <author fullname="G. Mirsky" initials="G." surname="Mirsky"/>
            <date month="September" year="2022"/>
            <abstract>
              <t indent="0">This document defines a YANG data model that can be used to configure and manage Bidirectional Forwarding Detection (BFD).</t>
              <t indent="0">The YANG modules in this document conform to the Network Management Datastore Architecture (NMDA) (RFC 8342). This document updates "YANG Data Model for Bidirectional Forwarding Detection (BFD)" (RFC 9127).</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="9314"/>
          <seriesInfo name="DOI" value="10.17487/RFC9314"/>
        </reference>
      </references>
      <references pn="section-9.2">
        <name slugifiedName="name-informative-references">Informative References</name>
        <reference anchor="RFC3376" target="https://www.rfc-editor.org/info/rfc3376" quoteTitle="true" derivedAnchor="RFC3376">
          <front>
            <title>Internet Group Management Protocol, Version 3</title>
            <author fullname="B. Cain" initials="B." surname="Cain"/>
            <author fullname="S. Deering" initials="S." surname="Deering"/>
            <author fullname="I. Kouvelas" initials="I." surname="Kouvelas"/>
            <author fullname="B. Fenner" initials="B." surname="Fenner"/>
            <author fullname="A. Thyagarajan" initials="A." surname="Thyagarajan"/>
            <date month="October" year="2002"/>
          </front>
          <seriesInfo name="RFC" value="3376"/>
          <seriesInfo name="DOI" value="10.17487/RFC3376"/>
        </reference>
        <reference anchor="RFC3618" target="https://www.rfc-editor.org/info/rfc3618" quoteTitle="true" derivedAnchor="RFC3618">
          <front>
            <title>Multicast Source Discovery Protocol (MSDP)</title>
            <author fullname="B. Fenner" initials="B." role="editor" surname="Fenner"/>
            <author fullname="D. Meyer" initials="D." role="editor" surname="Meyer"/>
            <date month="October" year="2003"/>
            <abstract>
              <t indent="0">The Multicast Source Discovery Protocol (MSDP) describes a mechanism to connect multiple IP Version 4 Protocol Independent Multicast Sparse-Mode (PIM-SM) domains together.  Each PIM-SM domain uses its own independent Rendezvous Point (RP) and does not have to depend on RPs in other domains.  This document reflects existing MSDP implementations.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="3618"/>
          <seriesInfo name="DOI" value="10.17487/RFC3618"/>
        </reference>
        <reference anchor="RFC3810" target="https://www.rfc-editor.org/info/rfc3810" quoteTitle="true" derivedAnchor="RFC3810">
          <front>
            <title>Multicast Listener Discovery Version 2 (MLDv2) for IPv6</title>
            <author fullname="R. Vida" initials="R." role="editor" surname="Vida"/>
            <author fullname="L. Costa" initials="L." role="editor" surname="Costa"/>
            <date month="June" year="2004"/>
            <abstract>
              <t indent="0">This document updates RFC 2710, and it specifies Version 2 of the ulticast Listener Discovery Protocol (MLDv2).  MLD is used by an IPv6 router to discover the presence of multicast listeners on directly attached links, and to discover which multicast addresses are of interest to those neighboring nodes.  MLDv2 is designed to be interoperable with MLDv1.  MLDv2 adds the ability for a node to report interest in listening to packets with a particular multicast address only from specific source addresses or from all sources except for specific source addresses. [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="3810"/>
          <seriesInfo name="DOI" value="10.17487/RFC3810"/>
        </reference>
        <reference anchor="RFC5880" target="https://www.rfc-editor.org/info/rfc5880" quoteTitle="true" derivedAnchor="RFC5880">
          <front>
            <title>Bidirectional Forwarding Detection (BFD)</title>
            <author fullname="D. Katz" initials="D." surname="Katz"/>
            <author fullname="D. Ward" initials="D." surname="Ward"/>
            <date month="June" year="2010"/>
            <abstract>
              <t indent="0">This document describes a protocol intended to detect faults in the bidirectional path between two forwarding engines, including interfaces, data link(s), and to the extent possible the forwarding engines themselves, with potentially very low latency.  It operates independently of media, data protocols, and routing protocols. [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="5880"/>
          <seriesInfo name="DOI" value="10.17487/RFC5880"/>
        </reference>
        <reference anchor="RFC6388" target="https://www.rfc-editor.org/info/rfc6388" quoteTitle="true" derivedAnchor="RFC6388">
          <front>
            <title>Label Distribution Protocol Extensions for Point-to-Multipoint and Multipoint-to-Multipoint Label Switched Paths</title>
            <author fullname="IJ. Wijnands" initials="IJ." role="editor" surname="Wijnands"/>
            <author fullname="I. Minei" initials="I." role="editor" surname="Minei"/>
            <author fullname="K. Kompella" initials="K." surname="Kompella"/>
            <author fullname="B. Thomas" initials="B." surname="Thomas"/>
            <date month="November" year="2011"/>
            <abstract>
              <t indent="0">This document describes extensions to the Label Distribution Protocol (LDP) for the setup of point-to-multipoint (P2MP) and multipoint-to-multipoint (MP2MP) Label Switched Paths (LSPs) in MPLS networks.  These extensions are also referred to as multipoint LDP.  Multipoint LDP constructs the P2MP or MP2MP LSPs without interacting with or relying upon any other multicast tree construction protocol.  Protocol elements and procedures for this solution are described for building such LSPs in a receiver-initiated manner.  There can be various applications for multipoint LSPs, for example IP multicast or support for multicast in BGP/MPLS Layer 3 Virtual Private Networks (L3VPNs).  Specification of how such applications can use an LDP signaled multipoint LSP is outside the scope of this document. [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="6388"/>
          <seriesInfo name="DOI" value="10.17487/RFC6388"/>
        </reference>
        <reference anchor="RFC7951" target="https://www.rfc-editor.org/info/rfc7951" quoteTitle="true" derivedAnchor="RFC7951">
          <front>
            <title>JSON Encoding of Data Modeled with YANG</title>
            <author fullname="L. Lhotka" initials="L." surname="Lhotka"/>
            <date month="August" year="2016"/>
            <abstract>
              <t indent="0">This document defines encoding rules for representing configuration data, state data, parameters of Remote Procedure Call (RPC) operations or actions, and notifications defined using YANG as JavaScript Object Notation (JSON) text.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="7951"/>
          <seriesInfo name="DOI" value="10.17487/RFC7951"/>
        </reference>
        <reference anchor="RFC8340" target="https://www.rfc-editor.org/info/rfc8340" quoteTitle="true" derivedAnchor="RFC8340">
          <front>
            <title>YANG Tree Diagrams</title>
            <author fullname="M. Bjorklund" initials="M." surname="Bjorklund"/>
            <author fullname="L. Berger" initials="L." role="editor" surname="Berger"/>
            <date month="March" year="2018"/>
            <abstract>
              <t indent="0">This document captures the current syntax used in YANG module tree diagrams.  The purpose of this document is to provide a single location for this definition.  This syntax may be updated from time to time based on the evolution of the YANG language.</t>
            </abstract>
          </front>
          <seriesInfo name="BCP" value="215"/>
          <seriesInfo name="RFC" value="8340"/>
          <seriesInfo name="DOI" value="10.17487/RFC8340"/>
        </reference>
        <reference anchor="RFC8407" target="https://www.rfc-editor.org/info/rfc8407" quoteTitle="true" derivedAnchor="RFC8407">
          <front>
            <title>Guidelines for Authors and Reviewers of Documents Containing YANG Data Models</title>
            <author fullname="A. Bierman" initials="A." surname="Bierman"/>
            <date month="October" year="2018"/>
            <abstract>
              <t indent="0">This memo provides guidelines for authors and reviewers of specifications containing YANG modules.  Recommendations and procedures are defined, which are intended to increase interoperability and usability of Network Configuration Protocol (NETCONF) and RESTCONF protocol implementations that utilize YANG modules.  This document obsoletes RFC 6087.</t>
            </abstract>
          </front>
          <seriesInfo name="BCP" value="216"/>
          <seriesInfo name="RFC" value="8407"/>
          <seriesInfo name="DOI" value="10.17487/RFC8407"/>
        </reference>
        <reference anchor="RFC8706" target="https://www.rfc-editor.org/info/rfc8706" quoteTitle="true" derivedAnchor="RFC8706">
          <front>
            <title>Restart Signaling for IS-IS</title>
            <author fullname="L. Ginsberg" initials="L." surname="Ginsberg"/>
            <author fullname="P. Wells" initials="P." surname="Wells"/>
            <date month="February" year="2020"/>
            <abstract>
              <t indent="0">This document describes a mechanism for a restarting router to signal to its neighbors that it is restarting, allowing them to reestablish their adjacencies without cycling through the DOWN state while still correctly initiating database synchronization.</t>
              <t indent="0">This document additionally describes a mechanism for a router to signal its neighbors that it is preparing to initiate a restart while maintaining forwarding-plane state. This allows the neighbors to maintain their adjacencies until the router has restarted but also allows the neighbors to bring the adjacencies down in the event of other topology changes.</t>
              <t indent="0">This document additionally describes a mechanism for a restarting router to determine when it has achieved Link State Protocol Data Unit (LSP) database synchronization with its neighbors and a mechanism to optimize LSP database synchronization while minimizing transient routing disruption when a router starts.</t>
              <t indent="0">This document obsoletes RFC 5306.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8706"/>
          <seriesInfo name="DOI" value="10.17487/RFC8706"/>
        </reference>
      </references>
    </references>
    <section numbered="true" toc="include" removeInRFC="false" pn="section-appendix.a">
      <name slugifiedName="name-data-tree-example">Data Tree Example</name>
      <t indent="0" pn="section-appendix.a-1">
   This appendix contains an example of an instance data tree, in JSON
   encoding <xref target="RFC7951" format="default" sectionFormat="of" derivedContent="RFC7951"/>, containing both
   configuration data and
   state data. 
      </t>
      <artwork name="" type="" align="left" alt="" pn="section-appendix.a-2">
                    lo0: 2001:db8:0:200::1 (RP address)
                          |   +-------+   |                       
                          |   | Router|   |                       
                    eth21 +---+  R2   +---+ eth23                 
                          |   | (RP)  |   |                       
                          |   +-------+   | lo0: 2001:db8:0:300::1
           |  +-------+   |               |   +-------+  |
           |  | Router|   |               |   | Router|  |
     eth10 +--+  R1   +---+ eth12   eth32 +---+  R3   +--+ eth30
           |  |       |   |               |   |       |  |
           |  +-------+   |                   +-------+  |
+-------+  |              |   +-------+                  |  +-------+
|       |  |              |   | Router|   |              |  |       |
|       +--+              +---+  R4   +---+   +-------+  +--+       |
|       |  |              |   |       |   |   | Router|  |  |       |
+-------+  |              |   +-------+   +---+  R5   |  |  +-------+
 Source                                   |   |       |      Receiver
                                          |   +-------+
</artwork>
      <t indent="0" pn="section-appendix.a-3">
   The configuration instance data tree for Router R3 in the
   above figure could be as follows: 
      </t>
      <sourcecode type="json" markers="false" pn="section-appendix.a-4">
{
  "ietf-interfaces:interfaces": {
    "interface": [
      {
        "name": "lo0",
        "description": "R3 loopback interface.",
        "type": "iana-if-type:softwareLoopback",
        "ietf-ip:ipv6": {
          "address": [
            {
              "ip": "2001:db8:0:300::1",
              "prefix-length": 64
            }
          ]
        }
      },
      {
        "name": "eth30",
        "description": "An interface connected to the receiver.",
        "type": "iana-if-type:ethernetCsmacd",
        "ietf-ip:ipv6": {
          "forwarding": true
        }
      },
      {
        "name": "eth32",
        "description": "An interface connected to the RP (R2).",
        "type": "iana-if-type:ethernetCsmacd",
        "ietf-ip:ipv6": {
          "forwarding": true
        }
      }
    ]
  },
  "ietf-routing:routing": {
    "router-id": "203.0.113.3",
    "control-plane-protocols": {
      "ietf-pim-base:pim": {
        "address-family": [
          {
            "address-family": "ietf-routing:ipv6",
            "ietf-pim-rp:rp": {
              "static-rp": {
                "ipv6-rp": [
                  {
                    "rp-address": "2001:db8:0:200::1",
                    "ietf-pim-sm:sm": {
                    }
                  }
                ]
              }
            }
          }
        ],
        "interfaces": {
          "interface": [
            {
              "name": "lo0",
              "address-family": [
                {
                  "address-family": "ietf-routing:ipv6",
                  "hello-interval": "infinity",
                  "ietf-pim-sm:sm": {
                  }
                }
              ]
            },
            {
              "name": "eth30",
              "address-family": [
                {
                  "address-family": "ietf-routing:ipv6",
                  "ietf-pim-sm:sm": {
                  }
                }
              ]
            },
            {
              "name": "eth32",
              "address-family": [
                {
                  "address-family": "ietf-routing:ipv6",
                  "ietf-pim-sm:sm": {
                  }
                }
              ]
            }
          ]
        }
      }
    }
  }
}
</sourcecode>
      <t indent="0" pn="section-appendix.a-5">
   The corresponding operational state data for Router R3
   could be as follows: 
      </t>
      <sourcecode type="json" markers="false" pn="section-appendix.a-6">
{
  "ietf-interfaces:interfaces": {
    "interface": [
      {
        "name": "lo0",
        "description": "R3 loopback interface.",
        "type": "iana-if-type:softwareLoopback",
        "phys-address": "00:00:5e:00:53:03",
        "oper-status": "up",
        "statistics": {
          "discontinuity-time": "2018-01-23T12:34:56-05:00"
        },
        "ietf-ip:ipv6": {
          "mtu": 1500,
          "address": [
            {
              "ip": "2001:db8:0:300::1",
              "prefix-length": 64,
              "origin": "static",
              "status": "preferred"
            },
            {
              "ip": "fe80::200:5eff:fe00:5303",
              "prefix-length": 64,
              "origin": "link-layer",
              "status": "preferred"
            }
          ],
          "neighbor": [
          ]
        }
      },
      {
        "name": "eth30",
        "description": "An interface connected to the receiver.",
        "type": "iana-if-type:ethernetCsmacd",
        "phys-address": "00:00:5e:00:53:30",
        "oper-status": "up",
        "statistics": {
          "discontinuity-time": "2018-01-23T12:34:56-05:00"
        },
        "ietf-ip:ipv6": {
          "forwarding": true,
          "mtu": 1500,
          "address": [
            {
              "ip": "fe80::200:5eff:fe00:5330",
              "prefix-length": 64,
              "origin": "link-layer",
              "status": "preferred"
            }
          ],
          "neighbor": [
          ]
        }
      },
      {
        "name": "eth32",
        "description": "An interface connected to the RP (R2).",
        "type": "iana-if-type:ethernetCsmacd",
        "phys-address": "00:00:5e:00:53:32",
        "oper-status": "up",
        "statistics": {
          "discontinuity-time": "2018-01-23T12:34:56-05:00"
        },
        "ietf-ip:ipv6": {
          "forwarding": true,
          "mtu": 1500,
          "address": [
            {
              "ip": "fe80::200:5eff:fe00:5332",
              "prefix-length": 64,
              "origin": "link-layer",
              "status": "preferred"
            }
          ],
          "neighbor": [
            {
              "ip": "fe80::200:5eff:fe00:5323",
              "link-layer-address": "00:00:5e:00:53:23",
              "origin": "dynamic",
              "is-router": [null],
              "state": "reachable"
            }
          ]
        }
      }
    ]
  },
  "ietf-routing:routing": {
    "router-id": "203.0.113.1",
    "interfaces": {
      "interface": [
        "lo0",
        "eth30",
        "eth32"
      ]
    },
    "control-plane-protocols": {
      "ietf-pim-base:pim": {
        "address-family": [
          {
            "address-family": "ietf-routing:ipv6",
            "statistics": {
              "discontinuity-time": "2018-01-23T12:34:56-05:00"
            },
            "topology-tree-info": {
              "ipv6-route": [
                {
                  "group": "ff06::1",
                  "source-address": "*",
                  "is-rpt": true,
                  "expiration": 16,
                  "incoming-interface": "eth32",
                  "is-spt": false,
                  "mode": "pim-asm",
                  "msdp-learned": false,
                  "rp-address": "2001:db8:0:200::1",
                  "rpf-neighbor": "fe80::200:5eff:fe00:5323",
                  "up-time": 123400,
                  "outgoing-interface": [
                    {
                      "name": "eth30",
                      "expiration": 36,
                      "up-time": 223400,
                      "jp-state": "join"
                    }
                  ]
                },
                {
                  "group": "ff06::1",
                  "source-address": "2001:db8:1:1::100",
                  "is-rpt": false,
                  "expiration": 8,
                  "incoming-interface": "eth32",
                  "is-spt": true,
                  "mode": "pim-asm",
                  "msdp-learned": false,
                  "rp-address": "2001:db8:0:200::1",
                  "rpf-neighbor": "fe80::200:5eff:fe00:5323",
                  "up-time": 5200,
                  "outgoing-interface": [
                    {
                      "name": "eth30",
                      "expiration": 6,
                      "up-time": 5600,
                      "jp-state": "join"
                    }
                  ]
                }
              ]
            },
            "ietf-pim-rp:rp": {
              "static-rp": {
                "ipv6-rp": [
                  {
                    "rp-address": "2001:db8:0:200::1",
                    "ietf-pim-sm:sm": {
                    }
                  }
                ]
              },
              "rp-list": {
                "ipv6-rp": [
                  {
                    "rp-address": "2001:db8:0:200::1",
                    "mode": "ietf-pim-sm:rp-sm",
                    "info-source-type": "static",
                    "up-time": 323400,
                    "expiration": "not-set"
                  }
                ]
              },
              "rp-mappings": {
                "ipv6-rp": [
                  {
                    "group-range": "ff06::1/128",
                    "rp-address": "2001:db8:0:200::1",
                    "up-time": 123400,
                    "expiration": "36"
                  }
                ]
              }
            }
          }
        ],
        "interfaces": {
          "interface": [
            {
              "name": "lo0",
              "address-family": [
                {
                  "address-family": "ietf-routing:ipv6",
                  "hello-interval": "infinity",
                  "ietf-pim-sm:sm": {
                  },
                  "oper-status": "up",
                  "gen-id": 103689,
                  "hello-expiration": "infinity",
                  "ipv6": {
                    "address": [
                      "fe80::200:5eff:fe00:5303"
                    ],
                    "dr-address": "fe80::200:5eff:fe00:5303"
                  },
                  "neighbors": {
                    "ipv6-neighbor": [
                    ]
                  }
                }
              ]
            },
            {
              "name": "eth30",
              "address-family": [
                {
                  "address-family": "ietf-routing:ipv6",
                  "ietf-pim-sm:sm": {
                  },
                  "oper-status": "up",
                  "gen-id": 203689,
                  "hello-expiration": 18,
                  "ipv6": {
                    "address": [
                      "fe80::200:5eff:fe00:5330"
                    ],
                    "dr-address": "fe80::200:5eff:fe00:5330"
                  },
                  "neighbors": {
                    "ipv6-neighbor": [
                    ]
                  }
                }
              ]
            },
            {
              "name": "eth32",
              "address-family": [
                {
                  "address-family": "ietf-routing:ipv6",
                  "ietf-pim-sm:sm": {
                  },
                  "oper-status": "up",
                  "gen-id": 303689,
                  "hello-expiration": 21,
                  "ipv6": {
                    "address": [
                      "fe80::200:5eff:fe00:5332"
                    ],
                    "dr-address": "fe80::200:5eff:fe00:5332"
                  },
                  "neighbors": {
                    "ipv6-neighbor": [
                      {
                        "address": "fe80::200:5eff:fe00:5323",
                        "expiration": 28,
                        "dr-priority": 1,
                        "gen-id": 102,
                        "lan-prune-delay": {
                          "present": false
                        },
                        "up-time": 323500
                      }
                    ]
                  }
                }
              ]
            }
          ]
        }
      }
    }
  }
}
</sourcecode>
    </section>
    <section numbered="false" toc="include" removeInRFC="false" pn="section-appendix.b">
      <name slugifiedName="name-acknowledgments">Acknowledgments</name>
      <t indent="0" pn="section-appendix.b-1">
        The authors would like to thank <contact fullname="Steve Baillargeon"/>, <contact fullname="Feng Guo"/>,
        <contact fullname="Robert Kebler"/>, <contact fullname="Tanmoy Kundu"/>, 
        and <contact fullname="Stig Venaas"/> for their valuable contributions.
      </t>
    </section>
    <section anchor="authors-addresses" numbered="false" removeInRFC="false" toc="include" pn="section-appendix.c">
      <name slugifiedName="name-authors-addresses">Authors' Addresses</name>
      <author fullname="Xufeng Liu" initials="X." surname="Liu">
        <organization showOnFrontPage="true">IBM Corporation</organization>
        <address>
          <postal>
            <street>2300 Dulles Station Blvd.</street>
            <city>Herndon</city>
            <region>VA</region>
            <code>20171</code>
            <country>United States of America</country>
          </postal>
          <email>xufeng.liu.ietf@gmail.com</email>
        </address>
      </author>
      <author fullname="Pete McAllister" initials="P." surname="McAllister">
        <organization showOnFrontPage="true">Metaswitch Networks</organization>
        <address>
          <postal>
            <street>100 Church Street</street>
            <city>Enfield</city>
            <code>EN2 6BQ</code>
            <country>United Kingdom</country>
          </postal>
          <email>pete.mcallister@metaswitch.com</email>
        </address>
      </author>
      <author fullname="Anish Peter" initials="A." surname="Peter">
        <organization showOnFrontPage="true">Individual</organization>
        <address>
          <email>anish.ietf@gmail.com</email>
        </address>
      </author>
      <author fullname="Mahesh Sivakumar" initials="M." surname="Sivakumar">
        <organization showOnFrontPage="true">Juniper Networks</organization>
        <address>
          <postal>
            <street>1133 Innovation Way</street>
            <city>Sunnyvale</city>
            <region>California</region>
            <country>United States of America</country>
          </postal>
          <email>sivakumar.mahesh@gmail.com</email>
        </address>
      </author>
      <author fullname="Yisong Liu" initials="Y." surname="Liu">
        <organization showOnFrontPage="true">China Mobile</organization>
        <address>
          <postal>
            <street>China Mobile Innovation Building</street>
            <street>32 Xuanwumen West Street</street>
            <city>Beijing</city>
            <code>100053</code>
            <country>China</country>
          </postal>
          <email>liuyisong@chinamobile.com</email>
        </address>
      </author>
      <author fullname="Fangwei Hu" initials="F." surname="Hu">
        <organization showOnFrontPage="true">Individual Contributor</organization>
        <address>
          <postal>
            <street>86 Bohang Road</street>
            <city>Shanghai</city>
            <region>Shanghai</region>
            <code>200126</code>
            <country>China</country>
          </postal>
          <email>hufwei@gmail.com</email>
        </address>
      </author>
    </section>
  </back>
</rfc>
