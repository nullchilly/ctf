{"draft":"draft-contreras-layered-sdn-03","doc_id":"RFC8597","title":"Cooperating Layered Architecture for Software-Defined Networking (CLAS)","authors":["LM. Contreras","CJ. Bernardos","D. Lopez","M. Boucadair","P. Iovanna"],"format":["ASCII","HTML"],"page_count":"21","pub_status":"INFORMATIONAL","status":"INFORMATIONAL","source":"INDEPENDENT","abstract":"Software-Defined Networking (SDN) advocates for the separation of the\r\ncontrol plane from the data plane in the network nodes and its\r\nlogical centralization on one or a set of control entities.  Most of\r\nthe network and\/or service intelligence is moved to these control\r\nentities.  Typically, such an entity is seen as a compendium of\r\ninteracting control functions in a vertical, tightly integrated\r\nfashion.  The relocation of the control functions from a number of\r\ndistributed network nodes to a logical central entity conceptually\r\nplaces together a number of control capabilities with different\r\npurposes.  As a consequence, the existing solutions do not provide a\r\nclear separation between transport control and services that rely\r\nupon transport capabilities.\r\n\r\nThis document describes an approach called Cooperating Layered\r\nArchitecture for Software-Defined Networking (CLAS), wherein the\r\ncontrol functions associated with transport are differentiated from\r\nthose related to services in such a way that they can be provided and\r\nmaintained independently and can follow their own evolution path.","pub_date":"May 2019","keywords":["SDN","Control","Programmability","Intelligence","Transport","Service","Flexibility","Cooperation"],"obsoletes":[],"obsoleted_by":[],"updates":[],"updated_by":[],"see_also":[],"doi":"10.17487\/RFC8597","errata_url":null}